ARM GAS  C:\Users\g\AppData\Local\Temp\ccZUjAgS.s 			page 1


   1              		.cpu cortex-m0
   2              		.fpu softvfp
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 1
  10              		.eabi_attribute 34, 0
  11              		.eabi_attribute 18, 4
  12              		.code	16
  13              		.file	"ADC.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.ADC_Init,"ax",%progbits
  18              		.align	2
  19              		.global	ADC_Init
  20              		.code	16
  21              		.thumb_func
  22              		.type	ADC_Init, %function
  23              	ADC_Init:
  24              	.LFB1:
  25              		.file 1 ".\\Generated_Source\\PSoC4\\ADC.c"
   1:.\Generated_Source\PSoC4/ADC.c **** /*******************************************************************************
   2:.\Generated_Source\PSoC4/ADC.c **** * File Name: ADC.c
   3:.\Generated_Source\PSoC4/ADC.c **** * Version 2.40
   4:.\Generated_Source\PSoC4/ADC.c **** *
   5:.\Generated_Source\PSoC4/ADC.c **** * Description:
   6:.\Generated_Source\PSoC4/ADC.c **** *  This file provides the source code to the API for the Sequencing Successive
   7:.\Generated_Source\PSoC4/ADC.c **** *  Approximation ADC Component Component.
   8:.\Generated_Source\PSoC4/ADC.c **** *
   9:.\Generated_Source\PSoC4/ADC.c **** * Note:
  10:.\Generated_Source\PSoC4/ADC.c **** *
  11:.\Generated_Source\PSoC4/ADC.c **** ********************************************************************************
  12:.\Generated_Source\PSoC4/ADC.c **** * Copyright 2008-2015, Cypress Semiconductor Corporation.  All rights reserved.
  13:.\Generated_Source\PSoC4/ADC.c **** * You may use this file only in accordance with the license, terms, conditions,
  14:.\Generated_Source\PSoC4/ADC.c **** * disclaimers, and limitations in the end user license agreement accompanying
  15:.\Generated_Source\PSoC4/ADC.c **** * the software package with which this file was provided.
  16:.\Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
  17:.\Generated_Source\PSoC4/ADC.c **** 
  18:.\Generated_Source\PSoC4/ADC.c **** #include "ADC.h"
  19:.\Generated_Source\PSoC4/ADC.c **** 
  20:.\Generated_Source\PSoC4/ADC.c **** 
  21:.\Generated_Source\PSoC4/ADC.c **** /***************************************
  22:.\Generated_Source\PSoC4/ADC.c **** * Global data allocation
  23:.\Generated_Source\PSoC4/ADC.c **** ***************************************/
  24:.\Generated_Source\PSoC4/ADC.c **** uint8 ADC_initVar = 0u;
  25:.\Generated_Source\PSoC4/ADC.c **** volatile int16 ADC_offset[ADC_TOTAL_CHANNELS_NUM];
  26:.\Generated_Source\PSoC4/ADC.c **** volatile int32 ADC_countsPer10Volt[ADC_TOTAL_CHANNELS_NUM];   /* Gain compensation */
  27:.\Generated_Source\PSoC4/ADC.c **** 
  28:.\Generated_Source\PSoC4/ADC.c **** 
  29:.\Generated_Source\PSoC4/ADC.c **** /***************************************
  30:.\Generated_Source\PSoC4/ADC.c **** * Local data allocation
  31:.\Generated_Source\PSoC4/ADC.c **** ***************************************/
  32:.\Generated_Source\PSoC4/ADC.c **** /* Channels configuration generated by customiser */
ARM GAS  C:\Users\g\AppData\Local\Temp\ccZUjAgS.s 			page 2


  33:.\Generated_Source\PSoC4/ADC.c **** static const uint32 CYCODE ADC_channelsConfig[] = { 0x00000000u, 0x00000000u };
  34:.\Generated_Source\PSoC4/ADC.c **** 
  35:.\Generated_Source\PSoC4/ADC.c **** 
  36:.\Generated_Source\PSoC4/ADC.c **** /*******************************************************************************
  37:.\Generated_Source\PSoC4/ADC.c **** * Function Name: ADC_Start
  38:.\Generated_Source\PSoC4/ADC.c **** ********************************************************************************
  39:.\Generated_Source\PSoC4/ADC.c **** *
  40:.\Generated_Source\PSoC4/ADC.c **** * Summary:
  41:.\Generated_Source\PSoC4/ADC.c **** *  Performs all required initialization for this component
  42:.\Generated_Source\PSoC4/ADC.c **** *  and enables the power. The power will be set to the appropriate
  43:.\Generated_Source\PSoC4/ADC.c **** *  power based on the clock frequency.
  44:.\Generated_Source\PSoC4/ADC.c **** *
  45:.\Generated_Source\PSoC4/ADC.c **** * Parameters:
  46:.\Generated_Source\PSoC4/ADC.c **** *  None.
  47:.\Generated_Source\PSoC4/ADC.c **** *
  48:.\Generated_Source\PSoC4/ADC.c **** * Return:
  49:.\Generated_Source\PSoC4/ADC.c **** *  None.
  50:.\Generated_Source\PSoC4/ADC.c **** *
  51:.\Generated_Source\PSoC4/ADC.c **** * Global variables:
  52:.\Generated_Source\PSoC4/ADC.c **** *  The ADC_initVar variable is used to indicate when/if initial
  53:.\Generated_Source\PSoC4/ADC.c **** *  configuration of this component has happened. The variable is initialized to
  54:.\Generated_Source\PSoC4/ADC.c **** *  zero and set to 1 the first time ADC_Start() is called. This allows for
  55:.\Generated_Source\PSoC4/ADC.c **** *  component Re-Start without re-initialization in all subsequent calls to the
  56:.\Generated_Source\PSoC4/ADC.c **** *  ADC_Start() routine.
  57:.\Generated_Source\PSoC4/ADC.c **** *  If re-initialization of the component is required the variable should be set
  58:.\Generated_Source\PSoC4/ADC.c **** *  to zero before call of ADC_Start() routine, or the user may call
  59:.\Generated_Source\PSoC4/ADC.c **** *  ADC_Init() and ADC_Enable() as done in the
  60:.\Generated_Source\PSoC4/ADC.c **** *  ADC_Start() routine.
  61:.\Generated_Source\PSoC4/ADC.c **** *
  62:.\Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
  63:.\Generated_Source\PSoC4/ADC.c **** void ADC_Start(void)
  64:.\Generated_Source\PSoC4/ADC.c **** {
  65:.\Generated_Source\PSoC4/ADC.c ****     /* If not Initialized then initialize all required hardware and software */
  66:.\Generated_Source\PSoC4/ADC.c ****     if(ADC_initVar == 0u)
  67:.\Generated_Source\PSoC4/ADC.c ****     {
  68:.\Generated_Source\PSoC4/ADC.c ****         ADC_Init();
  69:.\Generated_Source\PSoC4/ADC.c ****         ADC_initVar = 1u;
  70:.\Generated_Source\PSoC4/ADC.c ****     }
  71:.\Generated_Source\PSoC4/ADC.c ****     ADC_Enable();
  72:.\Generated_Source\PSoC4/ADC.c **** }
  73:.\Generated_Source\PSoC4/ADC.c **** 
  74:.\Generated_Source\PSoC4/ADC.c **** 
  75:.\Generated_Source\PSoC4/ADC.c **** /*******************************************************************************
  76:.\Generated_Source\PSoC4/ADC.c **** * Function Name: ADC_Init
  77:.\Generated_Source\PSoC4/ADC.c **** ********************************************************************************
  78:.\Generated_Source\PSoC4/ADC.c **** *
  79:.\Generated_Source\PSoC4/ADC.c **** * Summary:
  80:.\Generated_Source\PSoC4/ADC.c **** *  Initialize component's parameters to the parameters set by user in the
  81:.\Generated_Source\PSoC4/ADC.c **** *  customizer of the component placed onto schematic. Usually called in
  82:.\Generated_Source\PSoC4/ADC.c **** *  ADC_Start().
  83:.\Generated_Source\PSoC4/ADC.c **** *
  84:.\Generated_Source\PSoC4/ADC.c **** * Parameters:
  85:.\Generated_Source\PSoC4/ADC.c **** *  None.
  86:.\Generated_Source\PSoC4/ADC.c **** *
  87:.\Generated_Source\PSoC4/ADC.c **** * Return:
  88:.\Generated_Source\PSoC4/ADC.c **** *  None.
  89:.\Generated_Source\PSoC4/ADC.c **** *
ARM GAS  C:\Users\g\AppData\Local\Temp\ccZUjAgS.s 			page 3


  90:.\Generated_Source\PSoC4/ADC.c **** * Global variables:
  91:.\Generated_Source\PSoC4/ADC.c **** *  The ADC_offset variable is initialized.
  92:.\Generated_Source\PSoC4/ADC.c **** *
  93:.\Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
  94:.\Generated_Source\PSoC4/ADC.c **** void ADC_Init(void)
  95:.\Generated_Source\PSoC4/ADC.c **** {
  26              		.loc 1 95 0
  27              		.cfi_startproc
  28 0000 10B5     		push	{r4, lr}
  29              		.cfi_def_cfa_offset 8
  30              		.cfi_offset 4, -8
  31              		.cfi_offset 14, -4
  96:.\Generated_Source\PSoC4/ADC.c ****     uint32 chNum;
  97:.\Generated_Source\PSoC4/ADC.c ****     uint32 tmpRegVal;
  98:.\Generated_Source\PSoC4/ADC.c ****     int32 counts;
  99:.\Generated_Source\PSoC4/ADC.c **** 
 100:.\Generated_Source\PSoC4/ADC.c ****     #if(ADC_TOTAL_CHANNELS_NUM > 1u)
 101:.\Generated_Source\PSoC4/ADC.c ****         static const uint8 CYCODE ADC_InputsPlacement[] =
 102:.\Generated_Source\PSoC4/ADC.c ****         {
 103:.\Generated_Source\PSoC4/ADC.c ****             (uint8)(ADC_cy_psoc4_sarmux_8__CH_0_PORT << 4u) |
 104:.\Generated_Source\PSoC4/ADC.c ****             (uint8)ADC_cy_psoc4_sarmux_8__CH_0_PIN
 105:.\Generated_Source\PSoC4/ADC.c ****             ,(uint8)(ADC_cy_psoc4_sarmux_8__CH_1_PORT << 4u) |
 106:.\Generated_Source\PSoC4/ADC.c ****              (uint8)ADC_cy_psoc4_sarmux_8__CH_1_PIN
 107:.\Generated_Source\PSoC4/ADC.c ****             #if(ADC_TOTAL_CHANNELS_NUM > 2u)
 108:.\Generated_Source\PSoC4/ADC.c ****                 ,(uint8)(ADC_cy_psoc4_sarmux_8__CH_2_PORT << 4u) |
 109:.\Generated_Source\PSoC4/ADC.c ****                  (uint8)ADC_cy_psoc4_sarmux_8__CH_2_PIN
 110:.\Generated_Source\PSoC4/ADC.c ****             #endif /* End ADC_TOTAL_CHANNELS_NUM > 2u */
 111:.\Generated_Source\PSoC4/ADC.c ****             #if(ADC_TOTAL_CHANNELS_NUM > 3u)
 112:.\Generated_Source\PSoC4/ADC.c ****                 ,(uint8)(ADC_cy_psoc4_sarmux_8__CH_3_PORT << 4u) |
 113:.\Generated_Source\PSoC4/ADC.c ****                  (uint8)ADC_cy_psoc4_sarmux_8__CH_3_PIN
 114:.\Generated_Source\PSoC4/ADC.c ****             #endif /* End ADC_TOTAL_CHANNELS_NUM > 3u */
 115:.\Generated_Source\PSoC4/ADC.c ****             #if(ADC_TOTAL_CHANNELS_NUM > 4u)
 116:.\Generated_Source\PSoC4/ADC.c ****                 ,(uint8)(ADC_cy_psoc4_sarmux_8__CH_4_PORT << 4u) |
 117:.\Generated_Source\PSoC4/ADC.c ****                  (uint8)ADC_cy_psoc4_sarmux_8__CH_4_PIN
 118:.\Generated_Source\PSoC4/ADC.c ****             #endif /* End ADC_TOTAL_CHANNELS_NUM > 4u */
 119:.\Generated_Source\PSoC4/ADC.c ****             #if(ADC_TOTAL_CHANNELS_NUM > 5u)
 120:.\Generated_Source\PSoC4/ADC.c ****                 ,(uint8)(ADC_cy_psoc4_sarmux_8__CH_5_PORT << 4u) |
 121:.\Generated_Source\PSoC4/ADC.c ****                  (uint8)ADC_cy_psoc4_sarmux_8__CH_5_PIN
 122:.\Generated_Source\PSoC4/ADC.c ****             #endif /* End ADC_TOTAL_CHANNELS_NUM > 5u */
 123:.\Generated_Source\PSoC4/ADC.c ****             #if(ADC_TOTAL_CHANNELS_NUM > 6u)
 124:.\Generated_Source\PSoC4/ADC.c ****                 ,(uint8)(ADC_cy_psoc4_sarmux_8__CH_6_PORT << 4u) |
 125:.\Generated_Source\PSoC4/ADC.c ****                  (uint8)ADC_cy_psoc4_sarmux_8__CH_6_PIN
 126:.\Generated_Source\PSoC4/ADC.c ****             #endif /* End ADC_TOTAL_CHANNELS_NUM > 6u */
 127:.\Generated_Source\PSoC4/ADC.c ****             #if(ADC_TOTAL_CHANNELS_NUM > 7u)
 128:.\Generated_Source\PSoC4/ADC.c ****                 ,(uint8)(ADC_cy_psoc4_sarmux_8__CH_7_PORT << 4u) |
 129:.\Generated_Source\PSoC4/ADC.c ****                  (uint8)ADC_cy_psoc4_sarmux_8__CH_7_PIN
 130:.\Generated_Source\PSoC4/ADC.c ****             #endif /* End ADC_TOTAL_CHANNELS_NUM > 7u */
 131:.\Generated_Source\PSoC4/ADC.c ****             #if(ADC_TOTAL_CHANNELS_NUM > 8u)
 132:.\Generated_Source\PSoC4/ADC.c ****                 ,(uint8)(ADC_cy_psoc4_sarmux_8__CH_8_PORT << 4u) |
 133:.\Generated_Source\PSoC4/ADC.c ****                  (uint8)ADC_cy_psoc4_sarmux_8__CH_8_PIN
 134:.\Generated_Source\PSoC4/ADC.c ****             #endif /* End ADC_TOTAL_CHANNELS_NUM > 8u */
 135:.\Generated_Source\PSoC4/ADC.c ****             #if(ADC_TOTAL_CHANNELS_NUM > 9u)
 136:.\Generated_Source\PSoC4/ADC.c ****                 ,(uint8)(ADC_cy_psoc4_sarmux_8__CH_9_PORT << 4u) |
 137:.\Generated_Source\PSoC4/ADC.c ****                  (uint8)ADC_cy_psoc4_sarmux_8__CH_9_PIN
 138:.\Generated_Source\PSoC4/ADC.c ****             #endif /* End ADC_TOTAL_CHANNELS_NUM > 9u */
 139:.\Generated_Source\PSoC4/ADC.c ****             #if(ADC_TOTAL_CHANNELS_NUM > 10u)
 140:.\Generated_Source\PSoC4/ADC.c ****                 ,(uint8)(ADC_cy_psoc4_sarmux_8__CH_10_PORT << 4u) |
ARM GAS  C:\Users\g\AppData\Local\Temp\ccZUjAgS.s 			page 4


 141:.\Generated_Source\PSoC4/ADC.c ****                  (uint8)ADC_cy_psoc4_sarmux_8__CH_10_PIN
 142:.\Generated_Source\PSoC4/ADC.c ****             #endif /* End ADC_TOTAL_CHANNELS_NUM > 10u */
 143:.\Generated_Source\PSoC4/ADC.c ****             #if(ADC_TOTAL_CHANNELS_NUM > 11u)
 144:.\Generated_Source\PSoC4/ADC.c ****                 ,(uint8)(ADC_cy_psoc4_sarmux_8__CH_11_PORT << 4u) |
 145:.\Generated_Source\PSoC4/ADC.c ****                  (uint8)ADC_cy_psoc4_sarmux_8__CH_11_PIN
 146:.\Generated_Source\PSoC4/ADC.c ****             #endif /* End ADC_TOTAL_CHANNELS_NUM > 11u */
 147:.\Generated_Source\PSoC4/ADC.c ****             #if(ADC_TOTAL_CHANNELS_NUM > 12u)
 148:.\Generated_Source\PSoC4/ADC.c ****                 ,(uint8)(ADC_cy_psoc4_sarmux_8__CH_12_PORT << 4u) |
 149:.\Generated_Source\PSoC4/ADC.c ****                  (uint8)ADC_cy_psoc4_sarmux_8__CH_12_PIN
 150:.\Generated_Source\PSoC4/ADC.c ****             #endif /* End ADC_TOTAL_CHANNELS_NUM > 12u */
 151:.\Generated_Source\PSoC4/ADC.c ****             #if(ADC_TOTAL_CHANNELS_NUM > 13u)
 152:.\Generated_Source\PSoC4/ADC.c ****                 ,(uint8)(ADC_cy_psoc4_sarmux_8__CH_13_PORT << 4u) |
 153:.\Generated_Source\PSoC4/ADC.c ****                  (uint8)ADC_cy_psoc4_sarmux_8__CH_13_PIN
 154:.\Generated_Source\PSoC4/ADC.c ****             #endif /* End ADC_TOTAL_CHANNELS_NUM > 13u */
 155:.\Generated_Source\PSoC4/ADC.c ****             #if(ADC_TOTAL_CHANNELS_NUM > 14u)
 156:.\Generated_Source\PSoC4/ADC.c ****                 ,(uint8)(ADC_cy_psoc4_sarmux_8__CH_14_PORT << 4u) |
 157:.\Generated_Source\PSoC4/ADC.c ****                  (uint8)ADC_cy_psoc4_sarmux_8__CH_14_PIN
 158:.\Generated_Source\PSoC4/ADC.c ****             #endif /* End ADC_TOTAL_CHANNELS_NUM > 14u */
 159:.\Generated_Source\PSoC4/ADC.c ****             #if(ADC_TOTAL_CHANNELS_NUM > 15u)
 160:.\Generated_Source\PSoC4/ADC.c ****                 ,(uint8)(ADC_cy_psoc4_sarmux_8__CH_15_PORT << 4u) |
 161:.\Generated_Source\PSoC4/ADC.c ****                  (uint8)ADC_cy_psoc4_sarmux_8__CH_15_PIN
 162:.\Generated_Source\PSoC4/ADC.c ****             #endif /* End ADC_TOTAL_CHANNELS_NUM > 15u */
 163:.\Generated_Source\PSoC4/ADC.c ****             #if(ADC_TOTAL_CHANNELS_NUM > 16u)
 164:.\Generated_Source\PSoC4/ADC.c ****                 ,(uint8)(ADC_cy_psoc4_sarmux_8__CH_16_PORT << 4u) |
 165:.\Generated_Source\PSoC4/ADC.c ****                  (uint8)ADC_cy_psoc4_sarmux_8__CH_16_PIN
 166:.\Generated_Source\PSoC4/ADC.c ****             #endif /* End ADC_TOTAL_CHANNELS_NUM > 16u */
 167:.\Generated_Source\PSoC4/ADC.c ****         };
 168:.\Generated_Source\PSoC4/ADC.c ****     #endif /* End ADC_TOTAL_CHANNELS_NUM > 1u */
 169:.\Generated_Source\PSoC4/ADC.c **** 
 170:.\Generated_Source\PSoC4/ADC.c ****     #if(ADC_IRQ_REMOVE == 0u)
 171:.\Generated_Source\PSoC4/ADC.c ****         /* Start and set interrupt vector */
 172:.\Generated_Source\PSoC4/ADC.c ****         CyIntSetPriority(ADC_INTC_NUMBER, ADC_INTC_PRIOR_NUMBER);
  32              		.loc 1 172 0
  33 0002 0E20     		mov	r0, #14
  34 0004 0321     		mov	r1, #3
  35 0006 FFF7FEFF 		bl	CyIntSetPriority
  36              	.LVL0:
 173:.\Generated_Source\PSoC4/ADC.c ****         (void)CyIntSetVector(ADC_INTC_NUMBER, &ADC_ISR);
  37              		.loc 1 173 0
  38 000a 0E20     		mov	r0, #14
  39 000c 4449     		ldr	r1, .L12
  40 000e FFF7FEFF 		bl	CyIntSetVector
  41              	.LVL1:
 174:.\Generated_Source\PSoC4/ADC.c ****     #endif   /* End ADC_IRQ_REMOVE */
 175:.\Generated_Source\PSoC4/ADC.c **** 
 176:.\Generated_Source\PSoC4/ADC.c ****     /* Init SAR and MUX registers */
 177:.\Generated_Source\PSoC4/ADC.c ****     ADC_SAR_CHAN_EN_REG = ADC_DEFAULT_EN_CHANNELS;
  42              		.loc 1 177 0
  43 0012 0322     		mov	r2, #3
  44 0014 434B     		ldr	r3, .L12+4
  45 0016 1A60     		str	r2, [r3]
 178:.\Generated_Source\PSoC4/ADC.c ****     ADC_SAR_CTRL_REG |= ADC_DEFAULT_CTRL_REG_CFG | 
 179:.\Generated_Source\PSoC4/ADC.c ****         /* Enable the SAR internal pump when global pump is enabled */
 180:.\Generated_Source\PSoC4/ADC.c ****         (((ADC_PUMP_CTRL_REG & ADC_PUMP_CTRL_ENABLED) != 0u) ? 
  46              		.loc 1 180 0
  47 0018 434B     		ldr	r3, .L12+8
  48 001a 1B68     		ldr	r3, [r3]
ARM GAS  C:\Users\g\AppData\Local\Temp\ccZUjAgS.s 			page 5


 178:.\Generated_Source\PSoC4/ADC.c ****     ADC_SAR_CTRL_REG |= ADC_DEFAULT_CTRL_REG_CFG | 
  49              		.loc 1 178 0
  50 001c 002B     		cmp	r3, #0
  51 001e 01DA     		bge	.L10
  52 0020 4249     		ldr	r1, .L12+12
  53 0022 00E0     		b	.L2
  54              	.L10:
  55 0024 4249     		ldr	r1, .L12+16
  56              	.L2:
 178:.\Generated_Source\PSoC4/ADC.c ****     ADC_SAR_CTRL_REG |= ADC_DEFAULT_CTRL_REG_CFG | 
  57              		.loc 1 178 0 is_stmt 0 discriminator 4
  58 0026 434A     		ldr	r2, .L12+20
  59 0028 1368     		ldr	r3, [r2]
  60 002a 0B43     		orr	r3, r1
  61 002c 1360     		str	r3, [r2]
 181:.\Generated_Source\PSoC4/ADC.c ****         ADC_BOOSTPUMP_EN : 0u);
 182:.\Generated_Source\PSoC4/ADC.c ****     ADC_SAR_SAMPLE_CTRL_REG = ADC_DEFAULT_SAMPLE_CTRL_REG_CFG;
  62              		.loc 1 182 0 is_stmt 1 discriminator 4
  63 002e 424A     		ldr	r2, .L12+24
  64 0030 424B     		ldr	r3, .L12+28
  65 0032 1A60     		str	r2, [r3]
 183:.\Generated_Source\PSoC4/ADC.c ****     ADC_SAR_RANGE_THRES_REG = ADC_DEFAULT_RANGE_THRES_REG_CFG;
  66              		.loc 1 183 0 discriminator 4
  67 0034 424A     		ldr	r2, .L12+32
  68 0036 434B     		ldr	r3, .L12+36
  69 0038 1A60     		str	r2, [r3]
 184:.\Generated_Source\PSoC4/ADC.c ****     ADC_SAR_RANGE_COND_REG  = ADC_COMPARE_MODE;
  70              		.loc 1 184 0 discriminator 4
  71 003a 0023     		mov	r3, #0
  72 003c 424A     		ldr	r2, .L12+40
  73 003e 1360     		str	r3, [r2]
 185:.\Generated_Source\PSoC4/ADC.c ****     ADC_SAR_SAMPLE_TIME01_REG = ADC_DEFAULT_SAMPLE_TIME01_REG_CFG;
  74              		.loc 1 185 0 discriminator 4
  75 0040 424A     		ldr	r2, .L12+44
  76 0042 4349     		ldr	r1, .L12+48
  77 0044 0A60     		str	r2, [r1]
 186:.\Generated_Source\PSoC4/ADC.c ****     ADC_SAR_SAMPLE_TIME23_REG = ADC_DEFAULT_SAMPLE_TIME23_REG_CFG;
  78              		.loc 1 186 0 discriminator 4
  79 0046 4349     		ldr	r1, .L12+52
  80 0048 0A60     		str	r2, [r1]
 187:.\Generated_Source\PSoC4/ADC.c ****     
 188:.\Generated_Source\PSoC4/ADC.c ****     /* Connect Vm to VSSA when even one channel is single-ended or multiple channels configured */
 189:.\Generated_Source\PSoC4/ADC.c ****     #if(ADC_DEFAULT_MUX_SWITCH0 != 0u)
 190:.\Generated_Source\PSoC4/ADC.c ****         ADC_MUX_SWITCH0_REG |= ADC_DEFAULT_MUX_SWITCH0;
  81              		.loc 1 190 0 discriminator 4
  82 004a 434A     		ldr	r2, .L12+56
  83 004c 1168     		ldr	r1, [r2]
  84 004e 8020     		mov	r0, #128
  85 0050 4002     		lsl	r0, r0, #9
  86 0052 0143     		orr	r1, r0
  87 0054 1160     		str	r1, [r2]
 191:.\Generated_Source\PSoC4/ADC.c ****         /* Set MUX_HW_CTRL_VSSA in MUX_SWITCH_HW_CTRL when multiple channels enabled */
 192:.\Generated_Source\PSoC4/ADC.c ****         #if(ADC_TOTAL_CHANNELS_NUM > 1u)
 193:.\Generated_Source\PSoC4/ADC.c ****             ADC_MUX_SWITCH_HW_CTRL_REG |= ADC_DEFAULT_MUX_SWITCH0;
  88              		.loc 1 193 0 discriminator 4
  89 0056 4149     		ldr	r1, .L12+60
  90 0058 0A68     		ldr	r2, [r1]
ARM GAS  C:\Users\g\AppData\Local\Temp\ccZUjAgS.s 			page 6


  91 005a 0243     		orr	r2, r0
  92 005c 0A60     		str	r2, [r1]
 194:.\Generated_Source\PSoC4/ADC.c ****         #endif /* ADC_TOTAL_CHANNELS_NUM > 1u */
 195:.\Generated_Source\PSoC4/ADC.c ****     #endif /*ADC_CHANNELS_MODE !=0 */
 196:.\Generated_Source\PSoC4/ADC.c **** 
 197:.\Generated_Source\PSoC4/ADC.c ****     ADC_SAR_SATURATE_INTR_MASK_REG = 0u;
  93              		.loc 1 197 0 discriminator 4
  94 005e 404A     		ldr	r2, .L12+64
  95 0060 1360     		str	r3, [r2]
 198:.\Generated_Source\PSoC4/ADC.c ****     ADC_SAR_RANGE_INTR_MASK_REG = 0u;
  96              		.loc 1 198 0 discriminator 4
  97 0062 404A     		ldr	r2, .L12+68
  98 0064 1360     		str	r3, [r2]
 199:.\Generated_Source\PSoC4/ADC.c ****     ADC_SAR_INTR_MASK_REG = ADC_SAR_INTR_MASK;
  99              		.loc 1 199 0 discriminator 4
 100 0066 0122     		mov	r2, #1
 101 0068 3F4B     		ldr	r3, .L12+72
 102 006a 1A60     		str	r2, [r3]
 200:.\Generated_Source\PSoC4/ADC.c **** 
 201:.\Generated_Source\PSoC4/ADC.c ****     #if(ADC_CY_SAR_IP_VER == ADC_CY_SAR_IP_VER0)
 202:.\Generated_Source\PSoC4/ADC.c ****         ADC_ANA_TRIM_REG = ADC_TRIM_COEF;
 103              		.loc 1 202 0 discriminator 4
 104 006c 0132     		add	r2, r2, #1
 105 006e 3F4B     		ldr	r3, .L12+76
 106 0070 1A60     		str	r2, [r3]
 203:.\Generated_Source\PSoC4/ADC.c ****     #endif /* (ADC_CY_SAR_IP_VER == ADC_CY_SAR_IP_VER0) */
 204:.\Generated_Source\PSoC4/ADC.c **** 
 205:.\Generated_Source\PSoC4/ADC.c ****     /* Read and modify default configuration based on characterization */
 206:.\Generated_Source\PSoC4/ADC.c ****     tmpRegVal = ADC_SAR_DFT_CTRL_REG;
 107              		.loc 1 206 0 discriminator 4
 108 0072 3F4A     		ldr	r2, .L12+80
 109 0074 1168     		ldr	r1, [r2]
 110              	.LVL2:
 207:.\Generated_Source\PSoC4/ADC.c ****     tmpRegVal &= (uint32)~ADC_DCEN;
 111              		.loc 1 207 0 discriminator 4
 112 0076 3F4B     		ldr	r3, .L12+84
 113 0078 0B40     		and	r3, r1
 114              	.LVL3:
 208:.\Generated_Source\PSoC4/ADC.c ****     
 209:.\Generated_Source\PSoC4/ADC.c ****     #if(ADC_CY_SAR_IP_VER == ADC_CY_SAR_IP_VER0)
 210:.\Generated_Source\PSoC4/ADC.c ****         #if(ADC_NOMINAL_CLOCK_FREQ > (ADC_MAX_FREQUENCY / 2))
 211:.\Generated_Source\PSoC4/ADC.c ****             tmpRegVal |= ADC_SEL_CSEL_DFT_CHAR;
 115              		.loc 1 211 0 discriminator 4
 116 007a C021     		mov	r1, #192
 117 007c 8904     		lsl	r1, r1, #18
 118 007e 0B43     		orr	r3, r1
 119              	.LVL4:
 212:.\Generated_Source\PSoC4/ADC.c ****         #else  /* clock speed < 9 Mhz */
 213:.\Generated_Source\PSoC4/ADC.c ****             tmpRegVal |= ADC_DLY_INC;
 214:.\Generated_Source\PSoC4/ADC.c ****         #endif /* clock speed > 9 Mhz */
 215:.\Generated_Source\PSoC4/ADC.c ****     #else
 216:.\Generated_Source\PSoC4/ADC.c ****         #if ((ADC_DEFAULT_VREF_SEL == ADC__INTERNAL1024) || \
 217:.\Generated_Source\PSoC4/ADC.c ****              (ADC_DEFAULT_VREF_SEL == ADC__INTERNALVREF))
 218:.\Generated_Source\PSoC4/ADC.c ****             tmpRegVal |= ADC_DLY_INC;
 219:.\Generated_Source\PSoC4/ADC.c ****         #else
 220:.\Generated_Source\PSoC4/ADC.c ****             tmpRegVal |= ADC_DCEN;
 221:.\Generated_Source\PSoC4/ADC.c ****             tmpRegVal &= (uint32)~ADC_DLY_INC;
ARM GAS  C:\Users\g\AppData\Local\Temp\ccZUjAgS.s 			page 7


 222:.\Generated_Source\PSoC4/ADC.c ****         #endif /* ((ADC_DEFAULT_VREF_SEL == ADC__INTERNAL1024) || \
 223:.\Generated_Source\PSoC4/ADC.c ****                    (ADC_DEFAULT_VREF_SEL == ADC__INTERNALVREF)) */
 224:.\Generated_Source\PSoC4/ADC.c ****     #endif /* (ADC_CY_SAR_IP_VER == ADC_CY_SAR_IP_VER0) */
 225:.\Generated_Source\PSoC4/ADC.c ****     
 226:.\Generated_Source\PSoC4/ADC.c ****     ADC_SAR_DFT_CTRL_REG = tmpRegVal;
 120              		.loc 1 226 0 discriminator 4
 121 0080 1360     		str	r3, [r2]
 122              	.LVL5:
 227:.\Generated_Source\PSoC4/ADC.c **** 
 228:.\Generated_Source\PSoC4/ADC.c ****     #if(ADC_MAX_RESOLUTION != ADC_RESOLUTION_12)
 229:.\Generated_Source\PSoC4/ADC.c ****         ADC_WOUNDING_REG = ADC_ALT_WOUNDING;
 230:.\Generated_Source\PSoC4/ADC.c ****     #endif /* ADC_MAX_RESOLUTION != ADC_RESOLUTION_12 */
 231:.\Generated_Source\PSoC4/ADC.c **** 
 232:.\Generated_Source\PSoC4/ADC.c ****     for(chNum = 0u; chNum < ADC_TOTAL_CHANNELS_NUM; chNum++)
 123              		.loc 1 232 0 discriminator 4
 124 0082 0022     		mov	r2, #0
 125 0084 49E0     		b	.L3
 126              	.LVL6:
 127              	.L9:
 233:.\Generated_Source\PSoC4/ADC.c ****     {
 234:.\Generated_Source\PSoC4/ADC.c ****         tmpRegVal = (ADC_channelsConfig[chNum] & ADC_CHANNEL_CONFIG_MASK);
 128              		.loc 1 234 0
 129 0086 3C48     		ldr	r0, .L12+88
 130 0088 9100     		lsl	r1, r2, #2
 131 008a 0C58     		ldr	r4, [r1, r0]
 132 008c DC23     		mov	r3, #220
 133 008e 9B01     		lsl	r3, r3, #6
 134 0090 2340     		and	r3, r4
 135              	.LVL7:
 235:.\Generated_Source\PSoC4/ADC.c ****         #if(ADC_TOTAL_CHANNELS_NUM > 1u)
 236:.\Generated_Source\PSoC4/ADC.c ****             tmpRegVal |= ADC_InputsPlacement[chNum];
 136              		.loc 1 236 0
 137 0092 8018     		add	r0, r0, r2
 138 0094 007A     		ldrb	r0, [r0, #8]
 139 0096 0343     		orr	r3, r0
 140              	.LVL8:
 237:.\Generated_Source\PSoC4/ADC.c ****         #endif /* End ADC_TOTAL_CHANNELS_NUM > 1u */
 238:.\Generated_Source\PSoC4/ADC.c ****         
 239:.\Generated_Source\PSoC4/ADC.c ****         
 240:.\Generated_Source\PSoC4/ADC.c ****         /* When the part is limited to 10-bit then the SUB_RESOLUTION bit
 241:.\Generated_Source\PSoC4/ADC.c ****         *  will be ignored and the RESOLUTION bit selects between 10-bit
 242:.\Generated_Source\PSoC4/ADC.c ****         *  (0) and 8-bit (1) resolution.
 243:.\Generated_Source\PSoC4/ADC.c ****         */
 244:.\Generated_Source\PSoC4/ADC.c ****         #if((ADC_MAX_RESOLUTION != ADC_RESOLUTION_12) && \
 245:.\Generated_Source\PSoC4/ADC.c ****             (ADC_ALT_WOUNDING == ADC_WOUNDING_10BIT))
 246:.\Generated_Source\PSoC4/ADC.c ****             tmpRegVal &= (uint32)(~ADC_ALT_RESOLUTION_ON);
 247:.\Generated_Source\PSoC4/ADC.c ****         #endif /* ADC_MAX_RESOLUTION != ADC_RESOLUTION_12 */
 248:.\Generated_Source\PSoC4/ADC.c **** 
 249:.\Generated_Source\PSoC4/ADC.c ****         #if(ADC_INJ_CHANNEL_ENABLED)
 250:.\Generated_Source\PSoC4/ADC.c ****         if(chNum < ADC_SEQUENCED_CHANNELS_NUM)
 251:.\Generated_Source\PSoC4/ADC.c ****         #endif /* ADC_INJ_CHANNEL_ENABLED */
 252:.\Generated_Source\PSoC4/ADC.c ****         {
 253:.\Generated_Source\PSoC4/ADC.c ****             CY_SET_REG32((reg32 *)(ADC_SAR_CHAN_CONFIG_IND + (uint32)(chNum << 2)), tmpRegVal);
 141              		.loc 1 253 0
 142 0098 3848     		ldr	r0, .L12+92
 143 009a 8446     		mov	ip, r0
 144 009c 6144     		add	r1, r1, ip
ARM GAS  C:\Users\g\AppData\Local\Temp\ccZUjAgS.s 			page 8


 145 009e 0B60     		str	r3, [r1]
 254:.\Generated_Source\PSoC4/ADC.c **** 
 255:.\Generated_Source\PSoC4/ADC.c ****             if((ADC_channelsConfig[chNum] & ADC_IS_SATURATE_EN_MASK) != 0u)
 146              		.loc 1 255 0
 147 00a0 E307     		lsl	r3, r4, #31
 148 00a2 08D5     		bpl	.L4
 149              	.LVL9:
 256:.\Generated_Source\PSoC4/ADC.c ****             {
 257:.\Generated_Source\PSoC4/ADC.c ****                 ADC_SAR_SATURATE_INTR_MASK_REG |= (uint16)((uint16)1 << chNum);
 150              		.loc 1 257 0
 151 00a4 2E48     		ldr	r0, .L12+64
 152 00a6 0468     		ldr	r4, [r0]
 153 00a8 8021     		mov	r1, #128
 154              	.LVL10:
 155 00aa 4902     		lsl	r1, r1, #9
 156 00ac 0B1C     		mov	r3, r1
 157 00ae 9340     		lsl	r3, r3, r2
 158 00b0 1B0C     		lsr	r3, r3, #16
 159 00b2 2343     		orr	r3, r4
 160 00b4 0360     		str	r3, [r0]
 161              	.LVL11:
 162              	.L4:
 258:.\Generated_Source\PSoC4/ADC.c ****             }
 259:.\Generated_Source\PSoC4/ADC.c **** 
 260:.\Generated_Source\PSoC4/ADC.c ****             if((ADC_channelsConfig[chNum] & ADC_IS_RANGE_CTRL_EN_MASK) != 0u)
 163              		.loc 1 260 0
 164 00b6 9300     		lsl	r3, r2, #2
 165 00b8 2F49     		ldr	r1, .L12+88
 166              	.LVL12:
 167 00ba 5B58     		ldr	r3, [r3, r1]
 168 00bc 9B07     		lsl	r3, r3, #30
 169 00be 08D5     		bpl	.L5
 261:.\Generated_Source\PSoC4/ADC.c ****             {
 262:.\Generated_Source\PSoC4/ADC.c ****                 ADC_SAR_RANGE_INTR_MASK_REG |= (uint16)((uint16)1 << chNum);
 170              		.loc 1 262 0
 171 00c0 2848     		ldr	r0, .L12+68
 172 00c2 0468     		ldr	r4, [r0]
 173 00c4 8021     		mov	r1, #128
 174              	.LVL13:
 175 00c6 4902     		lsl	r1, r1, #9
 176 00c8 0B1C     		mov	r3, r1
 177 00ca 9340     		lsl	r3, r3, r2
 178 00cc 1B0C     		lsr	r3, r3, #16
 179 00ce 2343     		orr	r3, r4
 180 00d0 0360     		str	r3, [r0]
 181              	.L5:
 263:.\Generated_Source\PSoC4/ADC.c ****             }
 264:.\Generated_Source\PSoC4/ADC.c ****         }
 265:.\Generated_Source\PSoC4/ADC.c ****         #if(ADC_INJ_CHANNEL_ENABLED)
 266:.\Generated_Source\PSoC4/ADC.c ****             else
 267:.\Generated_Source\PSoC4/ADC.c ****             {
 268:.\Generated_Source\PSoC4/ADC.c ****                 CY_SET_REG32(ADC_SAR_INJ_CHAN_CONFIG_PTR, tmpRegVal | ADC_INJ_TAILGATING);
 269:.\Generated_Source\PSoC4/ADC.c **** 
 270:.\Generated_Source\PSoC4/ADC.c ****                 if((ADC_channelsConfig[chNum] & ADC_IS_SATURATE_EN_MASK) != 0u)
 271:.\Generated_Source\PSoC4/ADC.c ****                 {
 272:.\Generated_Source\PSoC4/ADC.c ****                     ADC_SAR_INTR_MASK_REG |= ADC_INJ_SATURATE_MASK;
 273:.\Generated_Source\PSoC4/ADC.c ****                 }
ARM GAS  C:\Users\g\AppData\Local\Temp\ccZUjAgS.s 			page 9


 274:.\Generated_Source\PSoC4/ADC.c **** 
 275:.\Generated_Source\PSoC4/ADC.c ****                 if((ADC_channelsConfig[chNum] & ADC_IS_RANGE_CTRL_EN_MASK) != 0u)
 276:.\Generated_Source\PSoC4/ADC.c ****                 {
 277:.\Generated_Source\PSoC4/ADC.c ****                     ADC_SAR_INTR_MASK_REG |= ADC_INJ_RANGE_MASK;
 278:.\Generated_Source\PSoC4/ADC.c ****                 }
 279:.\Generated_Source\PSoC4/ADC.c ****             }
 280:.\Generated_Source\PSoC4/ADC.c ****         #endif /* ADC_INJ_CHANNEL_ENABLED */
 281:.\Generated_Source\PSoC4/ADC.c **** 
 282:.\Generated_Source\PSoC4/ADC.c ****         if((ADC_channelsConfig[chNum] & ADC_ALT_RESOLUTION_ON) != 0u)
 182              		.loc 1 282 0
 183 00d2 9300     		lsl	r3, r2, #2
 184 00d4 2849     		ldr	r1, .L12+88
 185              	.LVL14:
 186 00d6 5958     		ldr	r1, [r3, r1]
 187              	.LVL15:
 188 00d8 8B05     		lsl	r3, r1, #22
 189 00da 02D5     		bpl	.L11
 283:.\Generated_Source\PSoC4/ADC.c ****         {
 284:.\Generated_Source\PSoC4/ADC.c ****                counts = (int32)ADC_DEFAULT_MAX_WRK_ALT;
 190              		.loc 1 284 0
 191 00dc 8020     		mov	r0, #128
 192 00de 4000     		lsl	r0, r0, #1
 193 00e0 01E0     		b	.L6
 194              	.L11:
 285:.\Generated_Source\PSoC4/ADC.c ****         }
 286:.\Generated_Source\PSoC4/ADC.c ****         else
 287:.\Generated_Source\PSoC4/ADC.c ****         {
 288:.\Generated_Source\PSoC4/ADC.c ****                counts = (int32)ADC_SAR_WRK_MAX_12BIT;
 195              		.loc 1 288 0
 196 00e2 8020     		mov	r0, #128
 197 00e4 4001     		lsl	r0, r0, #5
 198              	.L6:
 199              	.LVL16:
 289:.\Generated_Source\PSoC4/ADC.c ****         }
 290:.\Generated_Source\PSoC4/ADC.c **** 
 291:.\Generated_Source\PSoC4/ADC.c ****         if((ADC_channelsConfig[chNum] & ADC_DIFFERENTIAL_EN) == 0u)
 200              		.loc 1 291 0
 201 00e6 CB05     		lsl	r3, r1, #23
 202 00e8 04D4     		bmi	.L7
 292:.\Generated_Source\PSoC4/ADC.c ****         {
 293:.\Generated_Source\PSoC4/ADC.c ****             #if((ADC_DEFAULT_SE_RESULT_FORMAT_SEL == ADC__FSIGNED) && \
 294:.\Generated_Source\PSoC4/ADC.c ****                 (ADC_DEFAULT_NEG_INPUT_SEL == ADC__VREF))
 295:.\Generated_Source\PSoC4/ADC.c ****                 /* Set offset to the minus half scale to convert results to unsigned format */
 296:.\Generated_Source\PSoC4/ADC.c ****                 ADC_offset[chNum] = (int16)(counts / -2);
 297:.\Generated_Source\PSoC4/ADC.c ****             #else
 298:.\Generated_Source\PSoC4/ADC.c ****                 ADC_offset[chNum] = 0;
 203              		.loc 1 298 0
 204 00ea 5300     		lsl	r3, r2, #1
 205 00ec 0024     		mov	r4, #0
 206 00ee 2449     		ldr	r1, .L12+96
 207 00f0 5C52     		strh	r4, [r3, r1]
 208 00f2 03E0     		b	.L8
 209              	.L7:
 299:.\Generated_Source\PSoC4/ADC.c ****             #endif /* end DEFAULT_SE_RESULT_FORMAT_SEL == ADC__FSIGNED */
 300:.\Generated_Source\PSoC4/ADC.c ****         }
 301:.\Generated_Source\PSoC4/ADC.c ****         else    /* Differential channel */
 302:.\Generated_Source\PSoC4/ADC.c ****         {
ARM GAS  C:\Users\g\AppData\Local\Temp\ccZUjAgS.s 			page 10


 303:.\Generated_Source\PSoC4/ADC.c ****             #if(ADC_DEFAULT_DIFF_RESULT_FORMAT_SEL == ADC__FUNSIGNED)
 304:.\Generated_Source\PSoC4/ADC.c ****                 /* Set offset to the half scale to convert results to signed format */
 305:.\Generated_Source\PSoC4/ADC.c ****                 ADC_offset[chNum] = (int16)(counts / 2);
 306:.\Generated_Source\PSoC4/ADC.c ****             #else
 307:.\Generated_Source\PSoC4/ADC.c ****                 ADC_offset[chNum] = 0;
 210              		.loc 1 307 0
 211 00f4 5300     		lsl	r3, r2, #1
 212 00f6 0024     		mov	r4, #0
 213 00f8 2149     		ldr	r1, .L12+96
 214 00fa 5C52     		strh	r4, [r3, r1]
 215              	.L8:
 308:.\Generated_Source\PSoC4/ADC.c ****             #endif /* end ADC_DEFAULT_DIFF_RESULT_FORMAT_SEL == ADC__FUNSIGNED */
 309:.\Generated_Source\PSoC4/ADC.c ****         }
 310:.\Generated_Source\PSoC4/ADC.c ****         /* Calculate gain in counts per 10 volts with rounding */
 311:.\Generated_Source\PSoC4/ADC.c ****         ADC_countsPer10Volt[chNum] = (int16)(((counts * ADC_10MV_COUNTS) +
 216              		.loc 1 311 0 discriminator 2
 217 00fc 214B     		ldr	r3, .L12+100
 218 00fe 4343     		mul	r3, r0
 219 0100 8021     		mov	r1, #128
 220 0102 C900     		lsl	r1, r1, #3
 221 0104 8C46     		mov	ip, r1
 222 0106 6344     		add	r3, r3, ip
 312:.\Generated_Source\PSoC4/ADC.c ****                             ADC_DEFAULT_VREF_MV_VALUE) / (ADC_DEFAULT_VREF_MV_VALUE * 2));
 223              		.loc 1 312 0 discriminator 2
 224 0108 D917     		asr	r1, r3, #31
 225 010a 490D     		lsr	r1, r1, #21
 226 010c CB18     		add	r3, r1, r3
 227 010e DB12     		asr	r3, r3, #11
 311:.\Generated_Source\PSoC4/ADC.c ****                             ADC_DEFAULT_VREF_MV_VALUE) / (ADC_DEFAULT_VREF_MV_VALUE * 2));
 228              		.loc 1 311 0 discriminator 2
 229 0110 1BB2     		sxth	r3, r3
 230 0112 9000     		lsl	r0, r2, #2
 231              	.LVL17:
 232 0114 1C49     		ldr	r1, .L12+104
 233 0116 4350     		str	r3, [r0, r1]
 232:.\Generated_Source\PSoC4/ADC.c ****     {
 234              		.loc 1 232 0 discriminator 2
 235 0118 0132     		add	r2, r2, #1
 236              	.LVL18:
 237              	.L3:
 232:.\Generated_Source\PSoC4/ADC.c ****     {
 238              		.loc 1 232 0 is_stmt 0 discriminator 1
 239 011a 012A     		cmp	r2, #1
 240 011c B3D9     		bls	.L9
 313:.\Generated_Source\PSoC4/ADC.c ****     }
 314:.\Generated_Source\PSoC4/ADC.c **** }
 241              		.loc 1 314 0 is_stmt 1
 242              		@ sp needed
 243 011e 10BD     		pop	{r4, pc}
 244              	.L13:
 245              		.align	2
 246              	.L12:
 247 0120 00000000 		.word	ADC_ISR
 248 0124 20001A40 		.word	1075445792
 249 0128 80031A40 		.word	1075446656
 250 012c C0201010 		.word	269492416
 251 0130 C0200010 		.word	268443840
ARM GAS  C:\Users\g\AppData\Local\Temp\ccZUjAgS.s 			page 11


 252 0134 00001A40 		.word	1075445760
 253 0138 AC000A80 		.word	-2146828116
 254 013c 04001A40 		.word	1075445764
 255 0140 0000FF07 		.word	134152192
 256 0144 18001A40 		.word	1075445784
 257 0148 1C001A40 		.word	1075445788
 258 014c 04000400 		.word	262148
 259 0150 10001A40 		.word	1075445776
 260 0154 14001A40 		.word	1075445780
 261 0158 00031A40 		.word	1075446528
 262 015c 40031A40 		.word	1075446592
 263 0160 28021A40 		.word	1075446312
 264 0164 38021A40 		.word	1075446328
 265 0168 18021A40 		.word	1075446296
 266 016c 000F1A40 		.word	1075449600
 267 0170 30001A40 		.word	1075445808
 268 0174 FFFFFFDF 		.word	-536870913
 269 0178 00000000 		.word	.LANCHOR0
 270 017c 80001A40 		.word	1075445888
 271 0180 00000000 		.word	ADC_offset
 272 0184 10270000 		.word	10000
 273 0188 00000000 		.word	ADC_countsPer10Volt
 274              		.cfi_endproc
 275              	.LFE1:
 276              		.size	ADC_Init, .-ADC_Init
 277              		.section	.text.ADC_Enable,"ax",%progbits
 278              		.align	2
 279              		.global	ADC_Enable
 280              		.code	16
 281              		.thumb_func
 282              		.type	ADC_Enable, %function
 283              	ADC_Enable:
 284              	.LFB2:
 315:.\Generated_Source\PSoC4/ADC.c **** 
 316:.\Generated_Source\PSoC4/ADC.c **** /*******************************************************************************
 317:.\Generated_Source\PSoC4/ADC.c **** * Function Name: ADC_SAR_1_Enable
 318:.\Generated_Source\PSoC4/ADC.c **** ********************************************************************************
 319:.\Generated_Source\PSoC4/ADC.c **** *
 320:.\Generated_Source\PSoC4/ADC.c **** * Summary:
 321:.\Generated_Source\PSoC4/ADC.c **** *  Enables the clock and analog power for SAR ADC.
 322:.\Generated_Source\PSoC4/ADC.c **** *
 323:.\Generated_Source\PSoC4/ADC.c **** * Parameters:
 324:.\Generated_Source\PSoC4/ADC.c **** *  None.
 325:.\Generated_Source\PSoC4/ADC.c **** *
 326:.\Generated_Source\PSoC4/ADC.c **** * Return:
 327:.\Generated_Source\PSoC4/ADC.c **** *  None.
 328:.\Generated_Source\PSoC4/ADC.c **** *
 329:.\Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
 330:.\Generated_Source\PSoC4/ADC.c **** void ADC_Enable(void)
 331:.\Generated_Source\PSoC4/ADC.c **** {
 285              		.loc 1 331 0
 286              		.cfi_startproc
 287 0000 08B5     		push	{r3, lr}
 288              		.cfi_def_cfa_offset 8
 289              		.cfi_offset 3, -8
 290              		.cfi_offset 14, -4
 332:.\Generated_Source\PSoC4/ADC.c ****     if (0u == (ADC_SAR_CTRL_REG & ADC_ENABLE))
ARM GAS  C:\Users\g\AppData\Local\Temp\ccZUjAgS.s 			page 12


 291              		.loc 1 332 0
 292 0002 074B     		ldr	r3, .L16
 293 0004 1B68     		ldr	r3, [r3]
 294 0006 002B     		cmp	r3, #0
 295 0008 08DB     		blt	.L14
 333:.\Generated_Source\PSoC4/ADC.c ****     {
 334:.\Generated_Source\PSoC4/ADC.c ****         #if(ADC_CY_SAR_IP_VER != ADC_CY_SAR_IP_VER0)
 335:.\Generated_Source\PSoC4/ADC.c **** 
 336:.\Generated_Source\PSoC4/ADC.c ****             while (0u != (ADC_SAR_STATUS_REG & ADC_STATUS_BUSY))
 337:.\Generated_Source\PSoC4/ADC.c ****             {
 338:.\Generated_Source\PSoC4/ADC.c ****                 /* wait for SAR to go idle to avoid deadlock */
 339:.\Generated_Source\PSoC4/ADC.c ****             }
 340:.\Generated_Source\PSoC4/ADC.c ****         #endif /* (ADC_CY_SAR_IP_VER != ADC_CY_SAR_IP_VER0) */
 341:.\Generated_Source\PSoC4/ADC.c ****         
 342:.\Generated_Source\PSoC4/ADC.c ****         ADC_SAR_CTRL_REG |= ADC_ENABLE;
 296              		.loc 1 342 0
 297 000a 054A     		ldr	r2, .L16
 298 000c 1368     		ldr	r3, [r2]
 299 000e 8021     		mov	r1, #128
 300 0010 0906     		lsl	r1, r1, #24
 301 0012 0B43     		orr	r3, r1
 302 0014 1360     		str	r3, [r2]
 343:.\Generated_Source\PSoC4/ADC.c ****         
 344:.\Generated_Source\PSoC4/ADC.c ****         /* The block is ready to use 10 us after the enable signal is set high. */
 345:.\Generated_Source\PSoC4/ADC.c ****         CyDelayUs(ADC_10US_DELAY);         
 303              		.loc 1 345 0
 304 0016 0A20     		mov	r0, #10
 305 0018 FFF7FEFF 		bl	CyDelayUs
 306              	.LVL19:
 307              	.L14:
 346:.\Generated_Source\PSoC4/ADC.c ****     }
 347:.\Generated_Source\PSoC4/ADC.c **** }
 308              		.loc 1 347 0
 309              		@ sp needed
 310 001c 08BD     		pop	{r3, pc}
 311              	.L17:
 312 001e C046     		.align	2
 313              	.L16:
 314 0020 00001A40 		.word	1075445760
 315              		.cfi_endproc
 316              	.LFE2:
 317              		.size	ADC_Enable, .-ADC_Enable
 318              		.section	.text.ADC_Start,"ax",%progbits
 319              		.align	2
 320              		.global	ADC_Start
 321              		.code	16
 322              		.thumb_func
 323              		.type	ADC_Start, %function
 324              	ADC_Start:
 325              	.LFB0:
  64:.\Generated_Source\PSoC4/ADC.c ****     /* If not Initialized then initialize all required hardware and software */
 326              		.loc 1 64 0
 327              		.cfi_startproc
 328 0000 08B5     		push	{r3, lr}
 329              		.cfi_def_cfa_offset 8
 330              		.cfi_offset 3, -8
 331              		.cfi_offset 14, -4
ARM GAS  C:\Users\g\AppData\Local\Temp\ccZUjAgS.s 			page 13


  66:.\Generated_Source\PSoC4/ADC.c ****     {
 332              		.loc 1 66 0
 333 0002 064B     		ldr	r3, .L20
 334 0004 1B78     		ldrb	r3, [r3]
 335 0006 002B     		cmp	r3, #0
 336 0008 04D1     		bne	.L19
  68:.\Generated_Source\PSoC4/ADC.c ****         ADC_initVar = 1u;
 337              		.loc 1 68 0
 338 000a FFF7FEFF 		bl	ADC_Init
 339              	.LVL20:
  69:.\Generated_Source\PSoC4/ADC.c ****     }
 340              		.loc 1 69 0
 341 000e 0122     		mov	r2, #1
 342 0010 024B     		ldr	r3, .L20
 343 0012 1A70     		strb	r2, [r3]
 344              	.L19:
  71:.\Generated_Source\PSoC4/ADC.c **** }
 345              		.loc 1 71 0
 346 0014 FFF7FEFF 		bl	ADC_Enable
 347              	.LVL21:
  72:.\Generated_Source\PSoC4/ADC.c **** 
 348              		.loc 1 72 0
 349              		@ sp needed
 350 0018 08BD     		pop	{r3, pc}
 351              	.L21:
 352 001a C046     		.align	2
 353              	.L20:
 354 001c 00000000 		.word	.LANCHOR1
 355              		.cfi_endproc
 356              	.LFE0:
 357              		.size	ADC_Start, .-ADC_Start
 358              		.section	.text.ADC_Stop,"ax",%progbits
 359              		.align	2
 360              		.global	ADC_Stop
 361              		.code	16
 362              		.thumb_func
 363              		.type	ADC_Stop, %function
 364              	ADC_Stop:
 365              	.LFB3:
 348:.\Generated_Source\PSoC4/ADC.c **** 
 349:.\Generated_Source\PSoC4/ADC.c **** 
 350:.\Generated_Source\PSoC4/ADC.c **** /*******************************************************************************
 351:.\Generated_Source\PSoC4/ADC.c **** * Function Name: ADC_Stop
 352:.\Generated_Source\PSoC4/ADC.c **** ********************************************************************************
 353:.\Generated_Source\PSoC4/ADC.c **** *
 354:.\Generated_Source\PSoC4/ADC.c **** * Summary:
 355:.\Generated_Source\PSoC4/ADC.c **** *  This function stops ADC conversions and puts the ADC into its lowest power
 356:.\Generated_Source\PSoC4/ADC.c **** *  mode.
 357:.\Generated_Source\PSoC4/ADC.c **** *
 358:.\Generated_Source\PSoC4/ADC.c **** * Parameters:
 359:.\Generated_Source\PSoC4/ADC.c **** *  None.
 360:.\Generated_Source\PSoC4/ADC.c **** *
 361:.\Generated_Source\PSoC4/ADC.c **** * Return:
 362:.\Generated_Source\PSoC4/ADC.c **** *  None.
 363:.\Generated_Source\PSoC4/ADC.c **** *
 364:.\Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
 365:.\Generated_Source\PSoC4/ADC.c **** void ADC_Stop(void)
ARM GAS  C:\Users\g\AppData\Local\Temp\ccZUjAgS.s 			page 14


 366:.\Generated_Source\PSoC4/ADC.c **** {
 366              		.loc 1 366 0
 367              		.cfi_startproc
 367:.\Generated_Source\PSoC4/ADC.c ****     ADC_SAR_CTRL_REG &= (uint32)~ADC_ENABLE;
 368              		.loc 1 367 0
 369 0000 024A     		ldr	r2, .L23
 370 0002 1368     		ldr	r3, [r2]
 371 0004 5B00     		lsl	r3, r3, #1
 372 0006 5B08     		lsr	r3, r3, #1
 373 0008 1360     		str	r3, [r2]
 368:.\Generated_Source\PSoC4/ADC.c **** }
 374              		.loc 1 368 0
 375              		@ sp needed
 376 000a 7047     		bx	lr
 377              	.L24:
 378              		.align	2
 379              	.L23:
 380 000c 00001A40 		.word	1075445760
 381              		.cfi_endproc
 382              	.LFE3:
 383              		.size	ADC_Stop, .-ADC_Stop
 384              		.section	.text.ADC_StartConvert,"ax",%progbits
 385              		.align	2
 386              		.global	ADC_StartConvert
 387              		.code	16
 388              		.thumb_func
 389              		.type	ADC_StartConvert, %function
 390              	ADC_StartConvert:
 391              	.LFB4:
 369:.\Generated_Source\PSoC4/ADC.c **** 
 370:.\Generated_Source\PSoC4/ADC.c **** 
 371:.\Generated_Source\PSoC4/ADC.c **** /*******************************************************************************
 372:.\Generated_Source\PSoC4/ADC.c **** * Function Name: ADC_StartConvert
 373:.\Generated_Source\PSoC4/ADC.c **** ********************************************************************************
 374:.\Generated_Source\PSoC4/ADC.c **** *
 375:.\Generated_Source\PSoC4/ADC.c **** * Summary:
 376:.\Generated_Source\PSoC4/ADC.c **** *  Description:
 377:.\Generated_Source\PSoC4/ADC.c **** *  For free running mode, this API starts the conversion process and it
 378:.\Generated_Source\PSoC4/ADC.c **** *  runs continuously.
 379:.\Generated_Source\PSoC4/ADC.c **** *
 380:.\Generated_Source\PSoC4/ADC.c **** *  In a triggered mode, this routine triggers every conversion by
 381:.\Generated_Source\PSoC4/ADC.c **** *  writing into the FW_TRIGGER bit in SAR_START_CTRL reg. In triggered mode,
 382:.\Generated_Source\PSoC4/ADC.c **** *  every conversion has to start by this API.
 383:.\Generated_Source\PSoC4/ADC.c **** *
 384:.\Generated_Source\PSoC4/ADC.c **** * Parameters:
 385:.\Generated_Source\PSoC4/ADC.c **** *  None.
 386:.\Generated_Source\PSoC4/ADC.c **** *
 387:.\Generated_Source\PSoC4/ADC.c **** * Return:
 388:.\Generated_Source\PSoC4/ADC.c **** *  None.
 389:.\Generated_Source\PSoC4/ADC.c **** *
 390:.\Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
 391:.\Generated_Source\PSoC4/ADC.c **** void ADC_StartConvert(void)
 392:.\Generated_Source\PSoC4/ADC.c **** {
 392              		.loc 1 392 0
 393              		.cfi_startproc
 393:.\Generated_Source\PSoC4/ADC.c ****     #if(ADC_DEFAULT_SAMPLE_MODE_SEL == ADC__FREERUNNING)
 394:.\Generated_Source\PSoC4/ADC.c ****         ADC_SAR_SAMPLE_CTRL_REG |= ADC_CONTINUOUS_EN;
ARM GAS  C:\Users\g\AppData\Local\Temp\ccZUjAgS.s 			page 15


 395:.\Generated_Source\PSoC4/ADC.c ****     #else /* Firmware trigger */
 396:.\Generated_Source\PSoC4/ADC.c ****         ADC_SAR_START_CTRL_REG = ADC_FW_TRIGGER;
 394              		.loc 1 396 0
 395 0000 0122     		mov	r2, #1
 396 0002 014B     		ldr	r3, .L26
 397 0004 1A60     		str	r2, [r3]
 397:.\Generated_Source\PSoC4/ADC.c ****     #endif /* End ADC_DEFAULT_SAMPLE_MODE == ADC__FREERUNNING */
 398:.\Generated_Source\PSoC4/ADC.c **** 
 399:.\Generated_Source\PSoC4/ADC.c **** }
 398              		.loc 1 399 0
 399              		@ sp needed
 400 0006 7047     		bx	lr
 401              	.L27:
 402              		.align	2
 403              	.L26:
 404 0008 24001A40 		.word	1075445796
 405              		.cfi_endproc
 406              	.LFE4:
 407              		.size	ADC_StartConvert, .-ADC_StartConvert
 408              		.section	.text.ADC_StopConvert,"ax",%progbits
 409              		.align	2
 410              		.global	ADC_StopConvert
 411              		.code	16
 412              		.thumb_func
 413              		.type	ADC_StopConvert, %function
 414              	ADC_StopConvert:
 415              	.LFB5:
 400:.\Generated_Source\PSoC4/ADC.c **** 
 401:.\Generated_Source\PSoC4/ADC.c **** 
 402:.\Generated_Source\PSoC4/ADC.c **** /*******************************************************************************
 403:.\Generated_Source\PSoC4/ADC.c **** * Function Name: ADC_StopConvert
 404:.\Generated_Source\PSoC4/ADC.c **** ********************************************************************************
 405:.\Generated_Source\PSoC4/ADC.c **** *
 406:.\Generated_Source\PSoC4/ADC.c **** * Summary:
 407:.\Generated_Source\PSoC4/ADC.c **** *  Forces the ADC to stop all conversions.
 408:.\Generated_Source\PSoC4/ADC.c **** *
 409:.\Generated_Source\PSoC4/ADC.c **** * Parameters:
 410:.\Generated_Source\PSoC4/ADC.c **** *  None.
 411:.\Generated_Source\PSoC4/ADC.c **** *
 412:.\Generated_Source\PSoC4/ADC.c **** * Return:
 413:.\Generated_Source\PSoC4/ADC.c **** *  None.
 414:.\Generated_Source\PSoC4/ADC.c **** *
 415:.\Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
 416:.\Generated_Source\PSoC4/ADC.c **** void ADC_StopConvert(void)
 417:.\Generated_Source\PSoC4/ADC.c **** {
 416              		.loc 1 417 0
 417              		.cfi_startproc
 418:.\Generated_Source\PSoC4/ADC.c ****     #if(ADC_DEFAULT_SAMPLE_MODE_SEL == ADC__FREERUNNING)
 419:.\Generated_Source\PSoC4/ADC.c ****         ADC_SAR_SAMPLE_CTRL_REG &= (uint32)(~ADC_CONTINUOUS_EN);
 420:.\Generated_Source\PSoC4/ADC.c ****     #endif /* ADC_DEFAULT_SAMPLE_MODE == ADC__FREERUNNING */
 421:.\Generated_Source\PSoC4/ADC.c **** }
 418              		.loc 1 421 0
 419              		@ sp needed
 420 0000 7047     		bx	lr
 421              		.cfi_endproc
 422              	.LFE5:
 423              		.size	ADC_StopConvert, .-ADC_StopConvert
ARM GAS  C:\Users\g\AppData\Local\Temp\ccZUjAgS.s 			page 16


 424 0002 C046     		.section	.text.ADC_IsEndConversion,"ax",%progbits
 425              		.align	2
 426              		.global	ADC_IsEndConversion
 427              		.code	16
 428              		.thumb_func
 429              		.type	ADC_IsEndConversion, %function
 430              	ADC_IsEndConversion:
 431              	.LFB6:
 422:.\Generated_Source\PSoC4/ADC.c **** 
 423:.\Generated_Source\PSoC4/ADC.c **** 
 424:.\Generated_Source\PSoC4/ADC.c **** /*******************************************************************************
 425:.\Generated_Source\PSoC4/ADC.c **** * Function Name: ADC_IsEndConversion
 426:.\Generated_Source\PSoC4/ADC.c **** ********************************************************************************
 427:.\Generated_Source\PSoC4/ADC.c **** *
 428:.\Generated_Source\PSoC4/ADC.c **** * Summary:
 429:.\Generated_Source\PSoC4/ADC.c **** *  Description: Checks for ADC end of conversion for the case one
 430:.\Generated_Source\PSoC4/ADC.c **** *  channel and end of scan for the case of multiple channels. It acts
 431:.\Generated_Source\PSoC4/ADC.c **** *  as a software version of the EOC. This function provides the
 432:.\Generated_Source\PSoC4/ADC.c **** *  programmer with two options. In one mode this function
 433:.\Generated_Source\PSoC4/ADC.c **** *  immediately returns with the conversion status. In the other mode,
 434:.\Generated_Source\PSoC4/ADC.c **** *  the function does not return (blocking) until the conversion has
 435:.\Generated_Source\PSoC4/ADC.c **** *  completed.
 436:.\Generated_Source\PSoC4/ADC.c **** *
 437:.\Generated_Source\PSoC4/ADC.c **** * Parameters:
 438:.\Generated_Source\PSoC4/ADC.c **** *  ADC_RETURN_STATUS        -> Immediately returns conversion result status
 439:.\Generated_Source\PSoC4/ADC.c **** *  ADC_WAIT_FOR_RESULT      -> Does not return until ADC complete
 440:.\Generated_Source\PSoC4/ADC.c **** *  ADC_RETURN_STATUS_INJ    -> Immediately returns conversion result status
 441:.\Generated_Source\PSoC4/ADC.c **** *                              for injection channel
 442:.\Generated_Source\PSoC4/ADC.c **** *  ADC_WAIT_FOR_RESULT_INJ  -> Does not return until ADC completes injection
 443:.\Generated_Source\PSoC4/ADC.c **** *                              channel conversion
 444:.\Generated_Source\PSoC4/ADC.c **** *
 445:.\Generated_Source\PSoC4/ADC.c **** * Return:
 446:.\Generated_Source\PSoC4/ADC.c **** *  If a non-zero value is returned, the last conversion or scan has completed.
 447:.\Generated_Source\PSoC4/ADC.c **** *  If the returned value is zero, the ADC is still in the process of a scan.
 448:.\Generated_Source\PSoC4/ADC.c **** *
 449:.\Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
 450:.\Generated_Source\PSoC4/ADC.c **** uint32 ADC_IsEndConversion(uint32 retMode)
 451:.\Generated_Source\PSoC4/ADC.c **** {
 432              		.loc 1 451 0
 433              		.cfi_startproc
 434              	.LVL22:
 435 0000 021C     		mov	r2, r0
 436              	.LVL23:
 452:.\Generated_Source\PSoC4/ADC.c ****     uint32 status = 0u;
 453:.\Generated_Source\PSoC4/ADC.c **** 
 454:.\Generated_Source\PSoC4/ADC.c ****     if((retMode & (ADC_RETURN_STATUS | ADC_WAIT_FOR_RESULT)) != 0u)
 437              		.loc 1 454 0
 438 0002 8307     		lsl	r3, r0, #30
 439 0004 0CD0     		beq	.L33
 440              	.LVL24:
 441              	.L32:
 455:.\Generated_Source\PSoC4/ADC.c ****     {
 456:.\Generated_Source\PSoC4/ADC.c ****         do
 457:.\Generated_Source\PSoC4/ADC.c ****         {
 458:.\Generated_Source\PSoC4/ADC.c ****             status = ADC_SAR_INTR_REG & ADC_EOS_MASK;
 442              		.loc 1 458 0 discriminator 2
 443 0006 074B     		ldr	r3, .L34
ARM GAS  C:\Users\g\AppData\Local\Temp\ccZUjAgS.s 			page 17


 444 0008 1B68     		ldr	r3, [r3]
 445 000a 0120     		mov	r0, #1
 446 000c 1840     		and	r0, r3
 447              	.LVL25:
 459:.\Generated_Source\PSoC4/ADC.c ****         }while((status == 0u) && ((retMode & ADC_WAIT_FOR_RESULT) != 0u));
 448              		.loc 1 459 0 discriminator 2
 449 000e 01D1     		bne	.L31
 450              		.loc 1 459 0 is_stmt 0 discriminator 1
 451 0010 9307     		lsl	r3, r2, #30
 452 0012 F8D4     		bmi	.L32
 453              	.L31:
 460:.\Generated_Source\PSoC4/ADC.c **** 
 461:.\Generated_Source\PSoC4/ADC.c ****         if(status != 0u)
 454              		.loc 1 461 0 is_stmt 1
 455 0014 0028     		cmp	r0, #0
 456 0016 04D0     		beq	.L30
 462:.\Generated_Source\PSoC4/ADC.c ****         {
 463:.\Generated_Source\PSoC4/ADC.c ****             /* Clear EOS bit */
 464:.\Generated_Source\PSoC4/ADC.c ****             ADC_SAR_INTR_REG = ADC_EOS_MASK;
 457              		.loc 1 464 0
 458 0018 0122     		mov	r2, #1
 459              	.LVL26:
 460 001a 024B     		ldr	r3, .L34
 461 001c 1A60     		str	r2, [r3]
 462 001e 00E0     		b	.L30
 463              	.LVL27:
 464              	.L33:
 452:.\Generated_Source\PSoC4/ADC.c **** 
 465              		.loc 1 452 0
 466 0020 0020     		mov	r0, #0
 467              	.LVL28:
 468              	.L30:
 465:.\Generated_Source\PSoC4/ADC.c ****         }
 466:.\Generated_Source\PSoC4/ADC.c ****     }
 467:.\Generated_Source\PSoC4/ADC.c **** 
 468:.\Generated_Source\PSoC4/ADC.c ****     #if(ADC_INJ_CHANNEL_ENABLED)
 469:.\Generated_Source\PSoC4/ADC.c ****         if((retMode & (ADC_RETURN_STATUS_INJ | ADC_WAIT_FOR_RESULT_INJ)) != 0u)
 470:.\Generated_Source\PSoC4/ADC.c ****         {
 471:.\Generated_Source\PSoC4/ADC.c ****             do
 472:.\Generated_Source\PSoC4/ADC.c ****             {
 473:.\Generated_Source\PSoC4/ADC.c ****                 status |= ADC_SAR_INTR_REG & ADC_INJ_EOC_MASK;
 474:.\Generated_Source\PSoC4/ADC.c ****             }while(((status & ADC_INJ_EOC_MASK) == 0u) &&
 475:.\Generated_Source\PSoC4/ADC.c ****                    ((retMode & ADC_WAIT_FOR_RESULT_INJ) != 0u));
 476:.\Generated_Source\PSoC4/ADC.c **** 
 477:.\Generated_Source\PSoC4/ADC.c ****             if((status & ADC_INJ_EOC_MASK) != 0u)
 478:.\Generated_Source\PSoC4/ADC.c ****             {
 479:.\Generated_Source\PSoC4/ADC.c ****                 /* Clear Injection EOS bit */
 480:.\Generated_Source\PSoC4/ADC.c ****                 ADC_SAR_INTR_REG = ADC_INJ_EOC_MASK;
 481:.\Generated_Source\PSoC4/ADC.c ****             }
 482:.\Generated_Source\PSoC4/ADC.c ****         }
 483:.\Generated_Source\PSoC4/ADC.c ****     #endif /* ADC_INJ_CHANNEL_ENABLED */
 484:.\Generated_Source\PSoC4/ADC.c **** 
 485:.\Generated_Source\PSoC4/ADC.c ****     return (status);
 486:.\Generated_Source\PSoC4/ADC.c **** }
 469              		.loc 1 486 0
 470              		@ sp needed
 471 0022 7047     		bx	lr
ARM GAS  C:\Users\g\AppData\Local\Temp\ccZUjAgS.s 			page 18


 472              	.L35:
 473              		.align	2
 474              	.L34:
 475 0024 10021A40 		.word	1075446288
 476              		.cfi_endproc
 477              	.LFE6:
 478              		.size	ADC_IsEndConversion, .-ADC_IsEndConversion
 479              		.section	.text.ADC_GetResult16,"ax",%progbits
 480              		.align	2
 481              		.global	ADC_GetResult16
 482              		.code	16
 483              		.thumb_func
 484              		.type	ADC_GetResult16, %function
 485              	ADC_GetResult16:
 486              	.LFB7:
 487:.\Generated_Source\PSoC4/ADC.c **** 
 488:.\Generated_Source\PSoC4/ADC.c **** 
 489:.\Generated_Source\PSoC4/ADC.c **** /*******************************************************************************
 490:.\Generated_Source\PSoC4/ADC.c **** * Function Name: ADC_GetResult16
 491:.\Generated_Source\PSoC4/ADC.c **** ********************************************************************************
 492:.\Generated_Source\PSoC4/ADC.c **** *
 493:.\Generated_Source\PSoC4/ADC.c **** * Summary:
 494:.\Generated_Source\PSoC4/ADC.c **** *  Gets the data available in the SAR DATA register.
 495:.\Generated_Source\PSoC4/ADC.c **** *
 496:.\Generated_Source\PSoC4/ADC.c **** * Parameters:
 497:.\Generated_Source\PSoC4/ADC.c **** *  chan: The ADC channel in which to return the result. The first channel
 498:.\Generated_Source\PSoC4/ADC.c **** *  is 0 and the injection channel if enabled is the number of valid channels.
 499:.\Generated_Source\PSoC4/ADC.c **** *
 500:.\Generated_Source\PSoC4/ADC.c **** * Return:
 501:.\Generated_Source\PSoC4/ADC.c **** *  Returns converted data as a signed 16-bit integer
 502:.\Generated_Source\PSoC4/ADC.c **** *
 503:.\Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
 504:.\Generated_Source\PSoC4/ADC.c **** int16 ADC_GetResult16(uint32 chan)
 505:.\Generated_Source\PSoC4/ADC.c **** {
 487              		.loc 1 505 0
 488              		.cfi_startproc
 489              	.LVL29:
 490 0000 10B5     		push	{r4, lr}
 491              		.cfi_def_cfa_offset 8
 492              		.cfi_offset 4, -8
 493              		.cfi_offset 14, -4
 494 0002 041E     		sub	r4, r0, #0
 506:.\Generated_Source\PSoC4/ADC.c ****     uint32 result;
 507:.\Generated_Source\PSoC4/ADC.c **** 
 508:.\Generated_Source\PSoC4/ADC.c ****     /* Halt CPU in debug mode if channel is out of valid range */
 509:.\Generated_Source\PSoC4/ADC.c ****     CYASSERT(chan < ADC_TOTAL_CHANNELS_NUM);
 495              		.loc 1 509 0
 496 0004 012C     		cmp	r4, #1
 497 0006 02D9     		bls	.L37
 498              		.loc 1 509 0 is_stmt 0 discriminator 1
 499 0008 0020     		mov	r0, #0
 500              	.LVL30:
 501 000a FFF7FEFF 		bl	CyHalt
 502              	.LVL31:
 503              	.L37:
 510:.\Generated_Source\PSoC4/ADC.c **** 
 511:.\Generated_Source\PSoC4/ADC.c ****     if(chan < ADC_SEQUENCED_CHANNELS_NUM)
ARM GAS  C:\Users\g\AppData\Local\Temp\ccZUjAgS.s 			page 19


 504              		.loc 1 511 0 is_stmt 1
 505 000e 012C     		cmp	r4, #1
 506 0010 07D8     		bhi	.L39
 512:.\Generated_Source\PSoC4/ADC.c ****     {
 513:.\Generated_Source\PSoC4/ADC.c ****         result = CY_GET_REG32((reg32 *)(ADC_SAR_CHAN_RESULT_IND + (uint32)(chan << 2u))) &
 507              		.loc 1 513 0
 508 0012 A400     		lsl	r4, r4, #2
 509              	.LVL32:
 510 0014 044B     		ldr	r3, .L40
 511 0016 9C46     		mov	ip, r3
 512 0018 6444     		add	r4, r4, ip
 513 001a 2068     		ldr	r0, [r4]
 514 001c 0004     		lsl	r0, r0, #16
 515 001e 000C     		lsr	r0, r0, #16
 516              	.LVL33:
 517 0020 00E0     		b	.L38
 518              	.LVL34:
 519              	.L39:
 514:.\Generated_Source\PSoC4/ADC.c ****                 ADC_RESULT_MASK;
 515:.\Generated_Source\PSoC4/ADC.c ****     }
 516:.\Generated_Source\PSoC4/ADC.c ****     else
 517:.\Generated_Source\PSoC4/ADC.c ****     {
 518:.\Generated_Source\PSoC4/ADC.c ****         #if(ADC_INJ_CHANNEL_ENABLED)
 519:.\Generated_Source\PSoC4/ADC.c ****             result = ADC_SAR_INJ_RESULT_REG & ADC_RESULT_MASK;
 520:.\Generated_Source\PSoC4/ADC.c ****         #else
 521:.\Generated_Source\PSoC4/ADC.c ****             result = 0u;
 520              		.loc 1 521 0
 521 0022 0020     		mov	r0, #0
 522              	.LVL35:
 523              	.L38:
 522:.\Generated_Source\PSoC4/ADC.c ****         #endif /* ADC_INJ_CHANNEL_ENABLED */
 523:.\Generated_Source\PSoC4/ADC.c ****     }
 524:.\Generated_Source\PSoC4/ADC.c **** 
 525:.\Generated_Source\PSoC4/ADC.c ****     return ( (int16)result );
 524              		.loc 1 525 0
 525 0024 00B2     		sxth	r0, r0
 526              	.LVL36:
 526:.\Generated_Source\PSoC4/ADC.c **** }
 527              		.loc 1 526 0
 528              		@ sp needed
 529 0026 10BD     		pop	{r4, pc}
 530              	.L41:
 531              		.align	2
 532              	.L40:
 533 0028 80011A40 		.word	1075446144
 534              		.cfi_endproc
 535              	.LFE7:
 536              		.size	ADC_GetResult16, .-ADC_GetResult16
 537              		.section	.text.ADC_SetChanMask,"ax",%progbits
 538              		.align	2
 539              		.global	ADC_SetChanMask
 540              		.code	16
 541              		.thumb_func
 542              		.type	ADC_SetChanMask, %function
 543              	ADC_SetChanMask:
 544              	.LFB8:
 527:.\Generated_Source\PSoC4/ADC.c **** 
ARM GAS  C:\Users\g\AppData\Local\Temp\ccZUjAgS.s 			page 20


 528:.\Generated_Source\PSoC4/ADC.c **** 
 529:.\Generated_Source\PSoC4/ADC.c **** /*******************************************************************************
 530:.\Generated_Source\PSoC4/ADC.c **** * Function Name: ADC_SetChanMask
 531:.\Generated_Source\PSoC4/ADC.c **** ********************************************************************************
 532:.\Generated_Source\PSoC4/ADC.c **** *
 533:.\Generated_Source\PSoC4/ADC.c **** * Summary:
 534:.\Generated_Source\PSoC4/ADC.c **** *  Sets the channel enable mask.
 535:.\Generated_Source\PSoC4/ADC.c **** *
 536:.\Generated_Source\PSoC4/ADC.c **** * Parameters:
 537:.\Generated_Source\PSoC4/ADC.c **** *  mask: Sets which channels that will be
 538:.\Generated_Source\PSoC4/ADC.c **** *  scanned. Setting bits for channels that do not exist will have no
 539:.\Generated_Source\PSoC4/ADC.c **** *  effect. For example, if only 6 channels were enabled, setting a
 540:.\Generated_Source\PSoC4/ADC.c **** *  mask of 0x0103 would only enable the last two channels (0 and 1).
 541:.\Generated_Source\PSoC4/ADC.c **** *  This API will not enable the injection channel.
 542:.\Generated_Source\PSoC4/ADC.c **** *  Examples: If the component is setup to sequence through 8
 543:.\Generated_Source\PSoC4/ADC.c **** *  channels, a mask of 0x000F would enable channels 0, 1, 2, and 3.
 544:.\Generated_Source\PSoC4/ADC.c **** *
 545:.\Generated_Source\PSoC4/ADC.c **** * Return:
 546:.\Generated_Source\PSoC4/ADC.c **** *  None.
 547:.\Generated_Source\PSoC4/ADC.c **** *
 548:.\Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
 549:.\Generated_Source\PSoC4/ADC.c **** void ADC_SetChanMask(uint32 mask)
 550:.\Generated_Source\PSoC4/ADC.c **** {
 545              		.loc 1 550 0
 546              		.cfi_startproc
 547              	.LVL37:
 551:.\Generated_Source\PSoC4/ADC.c ****     ADC_SAR_CHAN_EN_REG = mask & ADC_MAX_CHANNELS_EN_MASK;
 548              		.loc 1 551 0
 549 0000 0323     		mov	r3, #3
 550 0002 1840     		and	r0, r3
 551              	.LVL38:
 552 0004 014B     		ldr	r3, .L43
 553 0006 1860     		str	r0, [r3]
 552:.\Generated_Source\PSoC4/ADC.c **** }
 554              		.loc 1 552 0
 555              		@ sp needed
 556 0008 7047     		bx	lr
 557              	.L44:
 558 000a C046     		.align	2
 559              	.L43:
 560 000c 20001A40 		.word	1075445792
 561              		.cfi_endproc
 562              	.LFE8:
 563              		.size	ADC_SetChanMask, .-ADC_SetChanMask
 564              		.section	.text.ADC_SetLowLimit,"ax",%progbits
 565              		.align	2
 566              		.global	ADC_SetLowLimit
 567              		.code	16
 568              		.thumb_func
 569              		.type	ADC_SetLowLimit, %function
 570              	ADC_SetLowLimit:
 571              	.LFB9:
 553:.\Generated_Source\PSoC4/ADC.c **** 
 554:.\Generated_Source\PSoC4/ADC.c **** #if(ADC_INJ_CHANNEL_ENABLED)
 555:.\Generated_Source\PSoC4/ADC.c **** 
 556:.\Generated_Source\PSoC4/ADC.c **** 
 557:.\Generated_Source\PSoC4/ADC.c ****     /*******************************************************************************
ARM GAS  C:\Users\g\AppData\Local\Temp\ccZUjAgS.s 			page 21


 558:.\Generated_Source\PSoC4/ADC.c ****     * Function Name: ADC_EnableInjection
 559:.\Generated_Source\PSoC4/ADC.c ****     ********************************************************************************
 560:.\Generated_Source\PSoC4/ADC.c ****     *
 561:.\Generated_Source\PSoC4/ADC.c ****     * Summary:
 562:.\Generated_Source\PSoC4/ADC.c ****     *  Enables the injection channel for the next scan only.
 563:.\Generated_Source\PSoC4/ADC.c ****     *
 564:.\Generated_Source\PSoC4/ADC.c ****     * Parameters:
 565:.\Generated_Source\PSoC4/ADC.c ****     *  None.
 566:.\Generated_Source\PSoC4/ADC.c ****     *
 567:.\Generated_Source\PSoC4/ADC.c ****     * Return:
 568:.\Generated_Source\PSoC4/ADC.c ****     *  None.
 569:.\Generated_Source\PSoC4/ADC.c ****     *
 570:.\Generated_Source\PSoC4/ADC.c ****     *******************************************************************************/
 571:.\Generated_Source\PSoC4/ADC.c ****     void ADC_EnableInjection(void)
 572:.\Generated_Source\PSoC4/ADC.c ****     {
 573:.\Generated_Source\PSoC4/ADC.c ****         ADC_SAR_INJ_CHAN_CONFIG_REG |= ADC_INJ_CHAN_EN;
 574:.\Generated_Source\PSoC4/ADC.c ****     }
 575:.\Generated_Source\PSoC4/ADC.c **** 
 576:.\Generated_Source\PSoC4/ADC.c **** #endif /* ADC_INJ_CHANNEL_ENABLED */
 577:.\Generated_Source\PSoC4/ADC.c **** 
 578:.\Generated_Source\PSoC4/ADC.c **** 
 579:.\Generated_Source\PSoC4/ADC.c **** /*******************************************************************************
 580:.\Generated_Source\PSoC4/ADC.c **** * Function Name: ADC_SetLowLimit
 581:.\Generated_Source\PSoC4/ADC.c **** ********************************************************************************
 582:.\Generated_Source\PSoC4/ADC.c **** *
 583:.\Generated_Source\PSoC4/ADC.c **** * Summary:
 584:.\Generated_Source\PSoC4/ADC.c **** *  Sets the low limit parameter for a limit condition.
 585:.\Generated_Source\PSoC4/ADC.c **** *
 586:.\Generated_Source\PSoC4/ADC.c **** * Parameters:
 587:.\Generated_Source\PSoC4/ADC.c **** *  lowLimit: The low limit for a limit condition.
 588:.\Generated_Source\PSoC4/ADC.c **** *
 589:.\Generated_Source\PSoC4/ADC.c **** * Return:
 590:.\Generated_Source\PSoC4/ADC.c **** *  None.
 591:.\Generated_Source\PSoC4/ADC.c **** *
 592:.\Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
 593:.\Generated_Source\PSoC4/ADC.c **** void ADC_SetLowLimit(uint32 lowLimit)
 594:.\Generated_Source\PSoC4/ADC.c **** {
 572              		.loc 1 594 0
 573              		.cfi_startproc
 574              	.LVL39:
 595:.\Generated_Source\PSoC4/ADC.c ****     ADC_SAR_RANGE_THRES_REG &= (uint32)(~ADC_RANGE_LOW_MASK);
 575              		.loc 1 595 0
 576 0000 054A     		ldr	r2, .L46
 577 0002 1368     		ldr	r3, [r2]
 578 0004 1B0C     		lsr	r3, r3, #16
 579 0006 1B04     		lsl	r3, r3, #16
 580 0008 1360     		str	r3, [r2]
 596:.\Generated_Source\PSoC4/ADC.c ****     ADC_SAR_RANGE_THRES_REG |= lowLimit & ADC_RANGE_LOW_MASK;
 581              		.loc 1 596 0
 582 000a 1368     		ldr	r3, [r2]
 583 000c 0004     		lsl	r0, r0, #16
 584              	.LVL40:
 585 000e 000C     		lsr	r0, r0, #16
 586 0010 1843     		orr	r0, r3
 587 0012 1060     		str	r0, [r2]
 597:.\Generated_Source\PSoC4/ADC.c **** }
 588              		.loc 1 597 0
ARM GAS  C:\Users\g\AppData\Local\Temp\ccZUjAgS.s 			page 22


 589              		@ sp needed
 590 0014 7047     		bx	lr
 591              	.L47:
 592 0016 C046     		.align	2
 593              	.L46:
 594 0018 18001A40 		.word	1075445784
 595              		.cfi_endproc
 596              	.LFE9:
 597              		.size	ADC_SetLowLimit, .-ADC_SetLowLimit
 598              		.section	.text.ADC_SetHighLimit,"ax",%progbits
 599              		.align	2
 600              		.global	ADC_SetHighLimit
 601              		.code	16
 602              		.thumb_func
 603              		.type	ADC_SetHighLimit, %function
 604              	ADC_SetHighLimit:
 605              	.LFB10:
 598:.\Generated_Source\PSoC4/ADC.c **** 
 599:.\Generated_Source\PSoC4/ADC.c **** 
 600:.\Generated_Source\PSoC4/ADC.c **** /*******************************************************************************
 601:.\Generated_Source\PSoC4/ADC.c **** * Function Name: ADC_SetHighLimit
 602:.\Generated_Source\PSoC4/ADC.c **** ********************************************************************************
 603:.\Generated_Source\PSoC4/ADC.c **** *
 604:.\Generated_Source\PSoC4/ADC.c **** * Summary:
 605:.\Generated_Source\PSoC4/ADC.c **** *  Sets the low limit parameter for a limit condition.
 606:.\Generated_Source\PSoC4/ADC.c **** *
 607:.\Generated_Source\PSoC4/ADC.c **** * Parameters:
 608:.\Generated_Source\PSoC4/ADC.c **** *  highLimit: The high limit for a limit condition.
 609:.\Generated_Source\PSoC4/ADC.c **** *
 610:.\Generated_Source\PSoC4/ADC.c **** * Return:
 611:.\Generated_Source\PSoC4/ADC.c **** *  None.
 612:.\Generated_Source\PSoC4/ADC.c **** *
 613:.\Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
 614:.\Generated_Source\PSoC4/ADC.c **** void ADC_SetHighLimit(uint32 highLimit)
 615:.\Generated_Source\PSoC4/ADC.c **** {
 606              		.loc 1 615 0
 607              		.cfi_startproc
 608              	.LVL41:
 616:.\Generated_Source\PSoC4/ADC.c ****     ADC_SAR_RANGE_THRES_REG &= (uint32)(~ADC_RANGE_HIGH_MASK);
 609              		.loc 1 616 0
 610 0000 044A     		ldr	r2, .L49
 611 0002 1368     		ldr	r3, [r2]
 612 0004 1B04     		lsl	r3, r3, #16
 613 0006 1B0C     		lsr	r3, r3, #16
 614 0008 1360     		str	r3, [r2]
 617:.\Generated_Source\PSoC4/ADC.c ****     ADC_SAR_RANGE_THRES_REG |= (uint32)(highLimit << ADC_RANGE_HIGH_OFFSET);
 615              		.loc 1 617 0
 616 000a 1368     		ldr	r3, [r2]
 617 000c 0004     		lsl	r0, r0, #16
 618              	.LVL42:
 619 000e 1843     		orr	r0, r3
 620 0010 1060     		str	r0, [r2]
 618:.\Generated_Source\PSoC4/ADC.c **** }
 621              		.loc 1 618 0
 622              		@ sp needed
 623 0012 7047     		bx	lr
 624              	.L50:
ARM GAS  C:\Users\g\AppData\Local\Temp\ccZUjAgS.s 			page 23


 625              		.align	2
 626              	.L49:
 627 0014 18001A40 		.word	1075445784
 628              		.cfi_endproc
 629              	.LFE10:
 630              		.size	ADC_SetHighLimit, .-ADC_SetHighLimit
 631              		.section	.text.ADC_SetLimitMask,"ax",%progbits
 632              		.align	2
 633              		.global	ADC_SetLimitMask
 634              		.code	16
 635              		.thumb_func
 636              		.type	ADC_SetLimitMask, %function
 637              	ADC_SetLimitMask:
 638              	.LFB11:
 619:.\Generated_Source\PSoC4/ADC.c **** 
 620:.\Generated_Source\PSoC4/ADC.c **** 
 621:.\Generated_Source\PSoC4/ADC.c **** /*******************************************************************************
 622:.\Generated_Source\PSoC4/ADC.c **** * Function Name: ADC_SetLimitMask
 623:.\Generated_Source\PSoC4/ADC.c **** ********************************************************************************
 624:.\Generated_Source\PSoC4/ADC.c **** *
 625:.\Generated_Source\PSoC4/ADC.c **** * Summary:
 626:.\Generated_Source\PSoC4/ADC.c **** *  Sets the channel limit condition mask.
 627:.\Generated_Source\PSoC4/ADC.c **** *
 628:.\Generated_Source\PSoC4/ADC.c **** * Parameters:
 629:.\Generated_Source\PSoC4/ADC.c **** *  mask: Sets which channels that may cause a
 630:.\Generated_Source\PSoC4/ADC.c **** *  limit condition interrupt. Setting bits for channels that do not exist
 631:.\Generated_Source\PSoC4/ADC.c **** *  will have no effect. For example, if only 6 channels were enabled,
 632:.\Generated_Source\PSoC4/ADC.c **** *  setting a mask of 0x0103 would only enable the last two channels (0 and 1).
 633:.\Generated_Source\PSoC4/ADC.c **** *
 634:.\Generated_Source\PSoC4/ADC.c **** * Return:
 635:.\Generated_Source\PSoC4/ADC.c **** *  None.
 636:.\Generated_Source\PSoC4/ADC.c **** *
 637:.\Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
 638:.\Generated_Source\PSoC4/ADC.c **** void ADC_SetLimitMask(uint32 mask)
 639:.\Generated_Source\PSoC4/ADC.c **** {
 639              		.loc 1 639 0
 640              		.cfi_startproc
 641              	.LVL43:
 640:.\Generated_Source\PSoC4/ADC.c ****     ADC_SAR_RANGE_INTR_MASK_REG = mask & ADC_MAX_CHANNELS_EN_MASK;
 642              		.loc 1 640 0
 643 0000 0323     		mov	r3, #3
 644 0002 1840     		and	r0, r3
 645              	.LVL44:
 646 0004 014B     		ldr	r3, .L52
 647 0006 1860     		str	r0, [r3]
 641:.\Generated_Source\PSoC4/ADC.c **** }
 648              		.loc 1 641 0
 649              		@ sp needed
 650 0008 7047     		bx	lr
 651              	.L53:
 652 000a C046     		.align	2
 653              	.L52:
 654 000c 38021A40 		.word	1075446328
 655              		.cfi_endproc
 656              	.LFE11:
 657              		.size	ADC_SetLimitMask, .-ADC_SetLimitMask
 658              		.section	.text.ADC_SetSatMask,"ax",%progbits
ARM GAS  C:\Users\g\AppData\Local\Temp\ccZUjAgS.s 			page 24


 659              		.align	2
 660              		.global	ADC_SetSatMask
 661              		.code	16
 662              		.thumb_func
 663              		.type	ADC_SetSatMask, %function
 664              	ADC_SetSatMask:
 665              	.LFB12:
 642:.\Generated_Source\PSoC4/ADC.c **** 
 643:.\Generated_Source\PSoC4/ADC.c **** 
 644:.\Generated_Source\PSoC4/ADC.c **** /*******************************************************************************
 645:.\Generated_Source\PSoC4/ADC.c **** * Function Name: ADC_SetSatMask
 646:.\Generated_Source\PSoC4/ADC.c **** ********************************************************************************
 647:.\Generated_Source\PSoC4/ADC.c **** *
 648:.\Generated_Source\PSoC4/ADC.c **** * Summary:
 649:.\Generated_Source\PSoC4/ADC.c **** *  Sets the channel saturation event mask.
 650:.\Generated_Source\PSoC4/ADC.c **** *
 651:.\Generated_Source\PSoC4/ADC.c **** * Parameters:
 652:.\Generated_Source\PSoC4/ADC.c **** *  mask: Sets which channels that may cause a
 653:.\Generated_Source\PSoC4/ADC.c **** *  saturation event interrupt. Setting bits for channels that do not exist
 654:.\Generated_Source\PSoC4/ADC.c **** *  will have no effect. For example, if only 8 channels were enabled,
 655:.\Generated_Source\PSoC4/ADC.c **** *  setting a mask of 0x01C0 would only enable two channels (6 and 7).
 656:.\Generated_Source\PSoC4/ADC.c **** *
 657:.\Generated_Source\PSoC4/ADC.c **** * Return:
 658:.\Generated_Source\PSoC4/ADC.c **** *  None.
 659:.\Generated_Source\PSoC4/ADC.c **** *
 660:.\Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
 661:.\Generated_Source\PSoC4/ADC.c **** void ADC_SetSatMask(uint32 mask)
 662:.\Generated_Source\PSoC4/ADC.c **** {
 666              		.loc 1 662 0
 667              		.cfi_startproc
 668              	.LVL45:
 663:.\Generated_Source\PSoC4/ADC.c ****     ADC_SAR_SATURATE_INTR_MASK_REG = mask & ADC_MAX_CHANNELS_EN_MASK;
 669              		.loc 1 663 0
 670 0000 0323     		mov	r3, #3
 671 0002 1840     		and	r0, r3
 672              	.LVL46:
 673 0004 014B     		ldr	r3, .L55
 674 0006 1860     		str	r0, [r3]
 664:.\Generated_Source\PSoC4/ADC.c **** }
 675              		.loc 1 664 0
 676              		@ sp needed
 677 0008 7047     		bx	lr
 678              	.L56:
 679 000a C046     		.align	2
 680              	.L55:
 681 000c 28021A40 		.word	1075446312
 682              		.cfi_endproc
 683              	.LFE12:
 684              		.size	ADC_SetSatMask, .-ADC_SetSatMask
 685              		.section	.text.ADC_SetOffset,"ax",%progbits
 686              		.align	2
 687              		.global	ADC_SetOffset
 688              		.code	16
 689              		.thumb_func
 690              		.type	ADC_SetOffset, %function
 691              	ADC_SetOffset:
 692              	.LFB13:
ARM GAS  C:\Users\g\AppData\Local\Temp\ccZUjAgS.s 			page 25


 665:.\Generated_Source\PSoC4/ADC.c **** 
 666:.\Generated_Source\PSoC4/ADC.c **** 
 667:.\Generated_Source\PSoC4/ADC.c **** /*******************************************************************************
 668:.\Generated_Source\PSoC4/ADC.c **** * Function Name: ADC_SetOffset
 669:.\Generated_Source\PSoC4/ADC.c **** ********************************************************************************
 670:.\Generated_Source\PSoC4/ADC.c **** *
 671:.\Generated_Source\PSoC4/ADC.c **** * Summary:
 672:.\Generated_Source\PSoC4/ADC.c **** *   Description: Sets the ADC offset which is used by the functions
 673:.\Generated_Source\PSoC4/ADC.c **** *   ADC_CountsTo_uVolts, ADC_CountsTo_mVolts and ADC_CountsTo_Volts
 674:.\Generated_Source\PSoC4/ADC.c **** *   to substract the offset from the given reading
 675:.\Generated_Source\PSoC4/ADC.c **** *   before calculating the voltage conversion.
 676:.\Generated_Source\PSoC4/ADC.c **** *
 677:.\Generated_Source\PSoC4/ADC.c **** * Parameters:
 678:.\Generated_Source\PSoC4/ADC.c **** *  chan: ADC channel number.
 679:.\Generated_Source\PSoC4/ADC.c **** *  offset: This value is a measured value when the
 680:.\Generated_Source\PSoC4/ADC.c **** *          inputs are shorted or connected to the same input voltage.
 681:.\Generated_Source\PSoC4/ADC.c **** *
 682:.\Generated_Source\PSoC4/ADC.c **** * Return:
 683:.\Generated_Source\PSoC4/ADC.c **** *  None.
 684:.\Generated_Source\PSoC4/ADC.c **** *
 685:.\Generated_Source\PSoC4/ADC.c **** * Global variables:
 686:.\Generated_Source\PSoC4/ADC.c **** *  ADC_Offset:  Modified to set the user provided offset.
 687:.\Generated_Source\PSoC4/ADC.c **** *
 688:.\Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
 689:.\Generated_Source\PSoC4/ADC.c **** void ADC_SetOffset(uint32 chan, int16 offset)
 690:.\Generated_Source\PSoC4/ADC.c **** {
 693              		.loc 1 690 0
 694              		.cfi_startproc
 695              	.LVL47:
 696 0000 38B5     		push	{r3, r4, r5, lr}
 697              		.cfi_def_cfa_offset 16
 698              		.cfi_offset 3, -16
 699              		.cfi_offset 4, -12
 700              		.cfi_offset 5, -8
 701              		.cfi_offset 14, -4
 702 0002 041C     		mov	r4, r0
 703 0004 0D1C     		mov	r5, r1
 691:.\Generated_Source\PSoC4/ADC.c ****     /* Halt CPU in debug mode if channel is out of valid range */
 692:.\Generated_Source\PSoC4/ADC.c ****     CYASSERT(chan < ADC_TOTAL_CHANNELS_NUM);
 704              		.loc 1 692 0
 705 0006 0128     		cmp	r0, #1
 706 0008 02D9     		bls	.L58
 707              		.loc 1 692 0 is_stmt 0 discriminator 1
 708 000a 0020     		mov	r0, #0
 709              	.LVL48:
 710 000c FFF7FEFF 		bl	CyHalt
 711              	.LVL49:
 712              	.L58:
 693:.\Generated_Source\PSoC4/ADC.c **** 
 694:.\Generated_Source\PSoC4/ADC.c ****     ADC_offset[chan] = offset;
 713              		.loc 1 694 0 is_stmt 1
 714 0010 6400     		lsl	r4, r4, #1
 715              	.LVL50:
 716 0012 014B     		ldr	r3, .L59
 717 0014 E552     		strh	r5, [r4, r3]
 695:.\Generated_Source\PSoC4/ADC.c **** }
 718              		.loc 1 695 0
ARM GAS  C:\Users\g\AppData\Local\Temp\ccZUjAgS.s 			page 26


 719              		@ sp needed
 720 0016 38BD     		pop	{r3, r4, r5, pc}
 721              	.L60:
 722              		.align	2
 723              	.L59:
 724 0018 00000000 		.word	ADC_offset
 725              		.cfi_endproc
 726              	.LFE13:
 727              		.size	ADC_SetOffset, .-ADC_SetOffset
 728              		.section	.text.ADC_SetGain,"ax",%progbits
 729              		.align	2
 730              		.global	ADC_SetGain
 731              		.code	16
 732              		.thumb_func
 733              		.type	ADC_SetGain, %function
 734              	ADC_SetGain:
 735              	.LFB14:
 696:.\Generated_Source\PSoC4/ADC.c **** 
 697:.\Generated_Source\PSoC4/ADC.c **** 
 698:.\Generated_Source\PSoC4/ADC.c **** /*******************************************************************************
 699:.\Generated_Source\PSoC4/ADC.c **** * Function Name: ADC_SetGain
 700:.\Generated_Source\PSoC4/ADC.c **** ********************************************************************************
 701:.\Generated_Source\PSoC4/ADC.c **** *
 702:.\Generated_Source\PSoC4/ADC.c **** * Summary:
 703:.\Generated_Source\PSoC4/ADC.c **** *  Description: Sets the ADC gain in counts per 10 volt for the voltage
 704:.\Generated_Source\PSoC4/ADC.c **** *  conversion functions below. This value is set by default by the
 705:.\Generated_Source\PSoC4/ADC.c **** *  reference and input range settings. It should only be used to further
 706:.\Generated_Source\PSoC4/ADC.c **** *  calibrate the ADC with a known input or if an external reference is
 707:.\Generated_Source\PSoC4/ADC.c **** *  used. Affects the ADC_CountsTo_uVolts, ADC_CountsTo_mVolts
 708:.\Generated_Source\PSoC4/ADC.c **** *  and ADC_CountsTo_Volts functions by supplying the correct
 709:.\Generated_Source\PSoC4/ADC.c **** *  conversion between ADC counts and voltage.
 710:.\Generated_Source\PSoC4/ADC.c **** *
 711:.\Generated_Source\PSoC4/ADC.c **** * Parameters:
 712:.\Generated_Source\PSoC4/ADC.c **** *  chan: ADC channel number.
 713:.\Generated_Source\PSoC4/ADC.c **** *  adcGain: ADC gain in counts per 10 volts.
 714:.\Generated_Source\PSoC4/ADC.c **** *
 715:.\Generated_Source\PSoC4/ADC.c **** * Return:
 716:.\Generated_Source\PSoC4/ADC.c **** *  None.
 717:.\Generated_Source\PSoC4/ADC.c **** *
 718:.\Generated_Source\PSoC4/ADC.c **** * Global variables:
 719:.\Generated_Source\PSoC4/ADC.c **** *  ADC_CountsPer10Volt:  modified to set the ADC gain in counts
 720:.\Generated_Source\PSoC4/ADC.c **** *   per 10 volt.
 721:.\Generated_Source\PSoC4/ADC.c **** *
 722:.\Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
 723:.\Generated_Source\PSoC4/ADC.c **** void ADC_SetGain(uint32 chan, int32 adcGain)
 724:.\Generated_Source\PSoC4/ADC.c **** {
 736              		.loc 1 724 0
 737              		.cfi_startproc
 738              	.LVL51:
 739 0000 38B5     		push	{r3, r4, r5, lr}
 740              		.cfi_def_cfa_offset 16
 741              		.cfi_offset 3, -16
 742              		.cfi_offset 4, -12
 743              		.cfi_offset 5, -8
 744              		.cfi_offset 14, -4
 745 0002 041C     		mov	r4, r0
 746 0004 0D1C     		mov	r5, r1
ARM GAS  C:\Users\g\AppData\Local\Temp\ccZUjAgS.s 			page 27


 725:.\Generated_Source\PSoC4/ADC.c ****     /* Halt CPU in debug mode if channel is out of valid range */
 726:.\Generated_Source\PSoC4/ADC.c ****     CYASSERT(chan < ADC_TOTAL_CHANNELS_NUM);
 747              		.loc 1 726 0
 748 0006 0128     		cmp	r0, #1
 749 0008 02D9     		bls	.L62
 750              		.loc 1 726 0 is_stmt 0 discriminator 1
 751 000a 0020     		mov	r0, #0
 752              	.LVL52:
 753 000c FFF7FEFF 		bl	CyHalt
 754              	.LVL53:
 755              	.L62:
 727:.\Generated_Source\PSoC4/ADC.c **** 
 728:.\Generated_Source\PSoC4/ADC.c ****     ADC_countsPer10Volt[chan] = adcGain;
 756              		.loc 1 728 0 is_stmt 1
 757 0010 A400     		lsl	r4, r4, #2
 758              	.LVL54:
 759 0012 014B     		ldr	r3, .L63
 760 0014 E550     		str	r5, [r4, r3]
 729:.\Generated_Source\PSoC4/ADC.c **** }
 761              		.loc 1 729 0
 762              		@ sp needed
 763              	.LVL55:
 764 0016 38BD     		pop	{r3, r4, r5, pc}
 765              	.L64:
 766              		.align	2
 767              	.L63:
 768 0018 00000000 		.word	ADC_countsPer10Volt
 769              		.cfi_endproc
 770              	.LFE14:
 771              		.size	ADC_SetGain, .-ADC_SetGain
 772              		.global	__aeabi_idiv
 773              		.section	.text.ADC_CountsTo_mVolts,"ax",%progbits
 774              		.align	2
 775              		.global	ADC_CountsTo_mVolts
 776              		.code	16
 777              		.thumb_func
 778              		.type	ADC_CountsTo_mVolts, %function
 779              	ADC_CountsTo_mVolts:
 780              	.LFB15:
 730:.\Generated_Source\PSoC4/ADC.c **** 
 731:.\Generated_Source\PSoC4/ADC.c **** 
 732:.\Generated_Source\PSoC4/ADC.c **** #if(ADC_DEFAULT_JUSTIFICATION_SEL == ADC__RIGHT)
 733:.\Generated_Source\PSoC4/ADC.c **** 
 734:.\Generated_Source\PSoC4/ADC.c **** 
 735:.\Generated_Source\PSoC4/ADC.c ****     /*******************************************************************************
 736:.\Generated_Source\PSoC4/ADC.c ****     * Function Name: ADC_CountsTo_mVolts
 737:.\Generated_Source\PSoC4/ADC.c ****     ********************************************************************************
 738:.\Generated_Source\PSoC4/ADC.c ****     *
 739:.\Generated_Source\PSoC4/ADC.c ****     * Summary:
 740:.\Generated_Source\PSoC4/ADC.c ****     *  This function converts ADC counts to mVolts
 741:.\Generated_Source\PSoC4/ADC.c ****     *  This function is not available when left data format justification selected.
 742:.\Generated_Source\PSoC4/ADC.c ****     *
 743:.\Generated_Source\PSoC4/ADC.c ****     * Parameters:
 744:.\Generated_Source\PSoC4/ADC.c ****     *  chan: The ADC channel number.
 745:.\Generated_Source\PSoC4/ADC.c ****     *  adcCounts: Result from the ADC conversion
 746:.\Generated_Source\PSoC4/ADC.c ****     *
 747:.\Generated_Source\PSoC4/ADC.c ****     * Return:
ARM GAS  C:\Users\g\AppData\Local\Temp\ccZUjAgS.s 			page 28


 748:.\Generated_Source\PSoC4/ADC.c ****     *  Results in mVolts
 749:.\Generated_Source\PSoC4/ADC.c ****     *
 750:.\Generated_Source\PSoC4/ADC.c ****     * Global variables:
 751:.\Generated_Source\PSoC4/ADC.c ****     *  ADC_countsPer10Volt:  used to convert ADC counts to mVolts.
 752:.\Generated_Source\PSoC4/ADC.c ****     *  ADC_Offset:  Used as the offset while converting ADC counts
 753:.\Generated_Source\PSoC4/ADC.c ****     *   to mVolts.
 754:.\Generated_Source\PSoC4/ADC.c ****     *
 755:.\Generated_Source\PSoC4/ADC.c ****     *******************************************************************************/
 756:.\Generated_Source\PSoC4/ADC.c ****     int16 ADC_CountsTo_mVolts(uint32 chan, int16 adcCounts)
 757:.\Generated_Source\PSoC4/ADC.c ****     {
 781              		.loc 1 757 0
 782              		.cfi_startproc
 783              	.LVL56:
 784 0000 38B5     		push	{r3, r4, r5, lr}
 785              		.cfi_def_cfa_offset 16
 786              		.cfi_offset 3, -16
 787              		.cfi_offset 4, -12
 788              		.cfi_offset 5, -8
 789              		.cfi_offset 14, -4
 790 0002 041C     		mov	r4, r0
 791 0004 0D1C     		mov	r5, r1
 758:.\Generated_Source\PSoC4/ADC.c ****         int16 mVolts;
 759:.\Generated_Source\PSoC4/ADC.c **** 
 760:.\Generated_Source\PSoC4/ADC.c ****         /* Halt CPU in debug mode if channel is out of valid range */
 761:.\Generated_Source\PSoC4/ADC.c ****         CYASSERT(chan < ADC_TOTAL_CHANNELS_NUM);
 792              		.loc 1 761 0
 793 0006 0128     		cmp	r0, #1
 794 0008 02D9     		bls	.L66
 795              		.loc 1 761 0 is_stmt 0 discriminator 1
 796 000a 0020     		mov	r0, #0
 797              	.LVL57:
 798 000c FFF7FEFF 		bl	CyHalt
 799              	.LVL58:
 800              	.L66:
 762:.\Generated_Source\PSoC4/ADC.c **** 
 763:.\Generated_Source\PSoC4/ADC.c ****         /* Divide the adcCount when accumulate averaging mode selected */
 764:.\Generated_Source\PSoC4/ADC.c ****         #if(ADC_DEFAULT_AVG_MODE == ADC__ACCUMULATE)
 765:.\Generated_Source\PSoC4/ADC.c ****             if((ADC_channelsConfig[chan] & ADC_AVERAGING_EN) != 0u)
 766:.\Generated_Source\PSoC4/ADC.c ****             {
 767:.\Generated_Source\PSoC4/ADC.c ****                 adcCounts /= ADC_DEFAULT_AVG_SAMPLES_DIV;
 768:.\Generated_Source\PSoC4/ADC.c ****             }
 769:.\Generated_Source\PSoC4/ADC.c ****         #endif /* ADC_DEFAULT_AVG_MODE == ADC__ACCUMULATE */
 770:.\Generated_Source\PSoC4/ADC.c **** 
 771:.\Generated_Source\PSoC4/ADC.c ****         /* Subtract ADC offset */
 772:.\Generated_Source\PSoC4/ADC.c ****         adcCounts -= ADC_offset[chan];
 801              		.loc 1 772 0 is_stmt 1
 802 0010 6300     		lsl	r3, r4, #1
 803 0012 0F4A     		ldr	r2, .L69
 804 0014 995A     		ldrh	r1, [r3, r2]
 805 0016 691A     		sub	r1, r5, r1
 806 0018 09B2     		sxth	r1, r1
 807              	.LVL59:
 773:.\Generated_Source\PSoC4/ADC.c **** 
 774:.\Generated_Source\PSoC4/ADC.c ****         mVolts = (int16)((((int32)adcCounts * ADC_10MV_COUNTS) + ( (adcCounts > 0) ?
 808              		.loc 1 774 0
 809 001a 0E48     		ldr	r0, .L69+4
 810 001c 021C     		mov	r2, r0
ARM GAS  C:\Users\g\AppData\Local\Temp\ccZUjAgS.s 			page 29


 811 001e 4A43     		mul	r2, r1
 775:.\Generated_Source\PSoC4/ADC.c ****                  (ADC_countsPer10Volt[chan] / 2) : (-(ADC_countsPer10Volt[chan] / 2)) ))
 812              		.loc 1 775 0
 813 0020 0029     		cmp	r1, #0
 814 0022 06DD     		ble	.L67
 815              		.loc 1 775 0 is_stmt 0 discriminator 1
 816 0024 A300     		lsl	r3, r4, #2
 817 0026 0C49     		ldr	r1, .L69+8
 818              	.LVL60:
 819 0028 5B58     		ldr	r3, [r3, r1]
 820 002a D80F     		lsr	r0, r3, #31
 821 002c C018     		add	r0, r0, r3
 822 002e 4310     		asr	r3, r0, #1
 823 0030 06E0     		b	.L68
 824              	.LVL61:
 825              	.L67:
 826              		.loc 1 775 0 discriminator 2
 827 0032 A300     		lsl	r3, r4, #2
 828 0034 0849     		ldr	r1, .L69+8
 829              	.LVL62:
 830 0036 5B58     		ldr	r3, [r3, r1]
 831 0038 D80F     		lsr	r0, r3, #31
 832 003a C318     		add	r3, r0, r3
 833 003c 5B10     		asr	r3, r3, #1
 834 003e 5B42     		neg	r3, r3
 835              	.L68:
 774:.\Generated_Source\PSoC4/ADC.c ****                  (ADC_countsPer10Volt[chan] / 2) : (-(ADC_countsPer10Volt[chan] / 2)) ))
 836              		.loc 1 774 0 is_stmt 1
 837 0040 D018     		add	r0, r2, r3
 776:.\Generated_Source\PSoC4/ADC.c ****                  / ADC_countsPer10Volt[chan]);
 838              		.loc 1 776 0
 839 0042 A400     		lsl	r4, r4, #2
 840              	.LVL63:
 841 0044 044B     		ldr	r3, .L69+8
 842 0046 E158     		ldr	r1, [r4, r3]
 843 0048 FFF7FEFF 		bl	__aeabi_idiv
 844              	.LVL64:
 777:.\Generated_Source\PSoC4/ADC.c **** 
 778:.\Generated_Source\PSoC4/ADC.c ****         return( mVolts );
 845              		.loc 1 778 0
 846 004c 00B2     		sxth	r0, r0
 779:.\Generated_Source\PSoC4/ADC.c ****     }
 847              		.loc 1 779 0
 848              		@ sp needed
 849 004e 38BD     		pop	{r3, r4, r5, pc}
 850              	.L70:
 851              		.align	2
 852              	.L69:
 853 0050 00000000 		.word	ADC_offset
 854 0054 10270000 		.word	10000
 855 0058 00000000 		.word	ADC_countsPer10Volt
 856              		.cfi_endproc
 857              	.LFE15:
 858              		.size	ADC_CountsTo_mVolts, .-ADC_CountsTo_mVolts
 859              		.global	__aeabi_lmul
 860              		.global	__aeabi_ldivmod
 861              		.section	.text.ADC_CountsTo_uVolts,"ax",%progbits
ARM GAS  C:\Users\g\AppData\Local\Temp\ccZUjAgS.s 			page 30


 862              		.align	2
 863              		.global	ADC_CountsTo_uVolts
 864              		.code	16
 865              		.thumb_func
 866              		.type	ADC_CountsTo_uVolts, %function
 867              	ADC_CountsTo_uVolts:
 868              	.LFB16:
 780:.\Generated_Source\PSoC4/ADC.c **** 
 781:.\Generated_Source\PSoC4/ADC.c **** 
 782:.\Generated_Source\PSoC4/ADC.c ****     /*******************************************************************************
 783:.\Generated_Source\PSoC4/ADC.c ****     * Function Name: ADC_CountsTo_uVolts
 784:.\Generated_Source\PSoC4/ADC.c ****     ********************************************************************************
 785:.\Generated_Source\PSoC4/ADC.c ****     *
 786:.\Generated_Source\PSoC4/ADC.c ****     * Summary:
 787:.\Generated_Source\PSoC4/ADC.c ****     *  This function converts ADC counts to micro Volts
 788:.\Generated_Source\PSoC4/ADC.c ****     *  This function is not available when left data format justification selected.
 789:.\Generated_Source\PSoC4/ADC.c ****     *
 790:.\Generated_Source\PSoC4/ADC.c ****     * Parameters:
 791:.\Generated_Source\PSoC4/ADC.c ****     *  chan: The ADC channel number.
 792:.\Generated_Source\PSoC4/ADC.c ****     *  adcCounts: Result from the ADC conversion
 793:.\Generated_Source\PSoC4/ADC.c ****     *
 794:.\Generated_Source\PSoC4/ADC.c ****     * Return:
 795:.\Generated_Source\PSoC4/ADC.c ****     *  Results in uVolts
 796:.\Generated_Source\PSoC4/ADC.c ****     *
 797:.\Generated_Source\PSoC4/ADC.c ****     * Global variables:
 798:.\Generated_Source\PSoC4/ADC.c ****     *  ADC_countsPer10Volt:  used to convert ADC counts to uVolts.
 799:.\Generated_Source\PSoC4/ADC.c ****     *  ADC_Offset:  Used as the offset while converting ADC counts
 800:.\Generated_Source\PSoC4/ADC.c ****     *   to mVolts.
 801:.\Generated_Source\PSoC4/ADC.c ****     *
 802:.\Generated_Source\PSoC4/ADC.c ****     * Theory:
 803:.\Generated_Source\PSoC4/ADC.c ****     *  Care must be taken to not exceed the maximum value for a 31 bit signed
 804:.\Generated_Source\PSoC4/ADC.c ****     *  number in the conversion to uVolts and at the same time not loose
 805:.\Generated_Source\PSoC4/ADC.c ****     *  resolution.
 806:.\Generated_Source\PSoC4/ADC.c ****     *  To convert adcCounts to microVolts it is required to be multiplied
 807:.\Generated_Source\PSoC4/ADC.c ****     *  on 10 million and later divide on gain in counts per 10V.
 808:.\Generated_Source\PSoC4/ADC.c ****     *
 809:.\Generated_Source\PSoC4/ADC.c ****     *******************************************************************************/
 810:.\Generated_Source\PSoC4/ADC.c ****     int32 ADC_CountsTo_uVolts(uint32 chan, int16 adcCounts)
 811:.\Generated_Source\PSoC4/ADC.c ****     {
 869              		.loc 1 811 0
 870              		.cfi_startproc
 871              	.LVL65:
 872 0000 38B5     		push	{r3, r4, r5, lr}
 873              		.cfi_def_cfa_offset 16
 874              		.cfi_offset 3, -16
 875              		.cfi_offset 4, -12
 876              		.cfi_offset 5, -8
 877              		.cfi_offset 14, -4
 878 0002 051C     		mov	r5, r0
 879 0004 0C1C     		mov	r4, r1
 812:.\Generated_Source\PSoC4/ADC.c ****         int64 uVolts;
 813:.\Generated_Source\PSoC4/ADC.c **** 
 814:.\Generated_Source\PSoC4/ADC.c ****         /* Halt CPU in debug mode if channel is out of valid range */
 815:.\Generated_Source\PSoC4/ADC.c ****         CYASSERT(chan < ADC_TOTAL_CHANNELS_NUM);
 880              		.loc 1 815 0
 881 0006 0128     		cmp	r0, #1
 882 0008 02D9     		bls	.L72
ARM GAS  C:\Users\g\AppData\Local\Temp\ccZUjAgS.s 			page 31


 883              		.loc 1 815 0 is_stmt 0 discriminator 1
 884 000a 0020     		mov	r0, #0
 885              	.LVL66:
 886 000c FFF7FEFF 		bl	CyHalt
 887              	.LVL67:
 888              	.L72:
 816:.\Generated_Source\PSoC4/ADC.c **** 
 817:.\Generated_Source\PSoC4/ADC.c ****         /* Divide the adcCount when accumulate averaging mode selected */
 818:.\Generated_Source\PSoC4/ADC.c ****         #if(ADC_DEFAULT_AVG_MODE == ADC__ACCUMULATE)
 819:.\Generated_Source\PSoC4/ADC.c ****             if((ADC_channelsConfig[chan] & ADC_AVERAGING_EN) != 0u)
 820:.\Generated_Source\PSoC4/ADC.c ****             {
 821:.\Generated_Source\PSoC4/ADC.c ****                 adcCounts /= ADC_DEFAULT_AVG_SAMPLES_DIV;
 822:.\Generated_Source\PSoC4/ADC.c ****             }
 823:.\Generated_Source\PSoC4/ADC.c ****         #endif /* ADC_DEFAULT_AVG_MODE == ADC__ACCUMULATE */
 824:.\Generated_Source\PSoC4/ADC.c **** 
 825:.\Generated_Source\PSoC4/ADC.c ****         /* Subtract ADC offset */
 826:.\Generated_Source\PSoC4/ADC.c ****         adcCounts -= ADC_offset[chan];
 889              		.loc 1 826 0 is_stmt 1
 890 0010 6A00     		lsl	r2, r5, #1
 891 0012 084B     		ldr	r3, .L73
 892 0014 D05A     		ldrh	r0, [r2, r3]
 893 0016 201A     		sub	r0, r4, r0
 894 0018 00B2     		sxth	r0, r0
 895              	.LVL68:
 827:.\Generated_Source\PSoC4/ADC.c **** 
 828:.\Generated_Source\PSoC4/ADC.c ****         uVolts = ((int64)adcCounts * ADC_10UV_COUNTS) / ADC_countsPer10Volt[chan];
 896              		.loc 1 828 0
 897 001a C117     		asr	r1, r0, #31
 898 001c 064A     		ldr	r2, .L73+4
 899 001e 0023     		mov	r3, #0
 900 0020 FFF7FEFF 		bl	__aeabi_lmul
 901              	.LVL69:
 902 0024 AD00     		lsl	r5, r5, #2
 903              	.LVL70:
 904 0026 054B     		ldr	r3, .L73+8
 905 0028 EA58     		ldr	r2, [r5, r3]
 906 002a D317     		asr	r3, r2, #31
 907 002c FFF7FEFF 		bl	__aeabi_ldivmod
 908              	.LVL71:
 829:.\Generated_Source\PSoC4/ADC.c **** 
 830:.\Generated_Source\PSoC4/ADC.c ****         return( (int32)uVolts );
 831:.\Generated_Source\PSoC4/ADC.c ****     }
 909              		.loc 1 831 0
 910              		@ sp needed
 911 0030 38BD     		pop	{r3, r4, r5, pc}
 912              	.L74:
 913 0032 C046     		.align	2
 914              	.L73:
 915 0034 00000000 		.word	ADC_offset
 916 0038 80969800 		.word	10000000
 917 003c 00000000 		.word	ADC_countsPer10Volt
 918              		.cfi_endproc
 919              	.LFE16:
 920              		.size	ADC_CountsTo_uVolts, .-ADC_CountsTo_uVolts
 921              		.global	__aeabi_i2f
 922              		.global	__aeabi_fmul
 923              		.global	__aeabi_fdiv
ARM GAS  C:\Users\g\AppData\Local\Temp\ccZUjAgS.s 			page 32


 924              		.section	.text.ADC_CountsTo_Volts,"ax",%progbits
 925              		.align	2
 926              		.global	ADC_CountsTo_Volts
 927              		.code	16
 928              		.thumb_func
 929              		.type	ADC_CountsTo_Volts, %function
 930              	ADC_CountsTo_Volts:
 931              	.LFB17:
 832:.\Generated_Source\PSoC4/ADC.c **** 
 833:.\Generated_Source\PSoC4/ADC.c **** 
 834:.\Generated_Source\PSoC4/ADC.c ****     /*******************************************************************************
 835:.\Generated_Source\PSoC4/ADC.c ****     * Function Name: ADC_CountsTo_Volts
 836:.\Generated_Source\PSoC4/ADC.c ****     ********************************************************************************
 837:.\Generated_Source\PSoC4/ADC.c ****     *
 838:.\Generated_Source\PSoC4/ADC.c ****     * Summary:
 839:.\Generated_Source\PSoC4/ADC.c ****     *  Converts the ADC output to Volts as a floating point number.
 840:.\Generated_Source\PSoC4/ADC.c ****     *  This function is not available when left data format justification selected.
 841:.\Generated_Source\PSoC4/ADC.c ****     *
 842:.\Generated_Source\PSoC4/ADC.c ****     * Parameters:
 843:.\Generated_Source\PSoC4/ADC.c ****     *  chan: The ADC channel number.
 844:.\Generated_Source\PSoC4/ADC.c ****     *  Result from the ADC conversion
 845:.\Generated_Source\PSoC4/ADC.c ****     *
 846:.\Generated_Source\PSoC4/ADC.c ****     * Return:
 847:.\Generated_Source\PSoC4/ADC.c ****     *  Results in Volts
 848:.\Generated_Source\PSoC4/ADC.c ****     *
 849:.\Generated_Source\PSoC4/ADC.c ****     * Global variables:
 850:.\Generated_Source\PSoC4/ADC.c ****     *  ADC_countsPer10Volt:  used to convert ADC counts to Volts.
 851:.\Generated_Source\PSoC4/ADC.c ****     *  ADC_Offset:  Used as the offset while converting ADC counts
 852:.\Generated_Source\PSoC4/ADC.c ****     *   to mVolts.
 853:.\Generated_Source\PSoC4/ADC.c ****     *
 854:.\Generated_Source\PSoC4/ADC.c ****     *******************************************************************************/
 855:.\Generated_Source\PSoC4/ADC.c ****     float32 ADC_CountsTo_Volts(uint32 chan, int16 adcCounts)
 856:.\Generated_Source\PSoC4/ADC.c ****     {
 932              		.loc 1 856 0
 933              		.cfi_startproc
 934              	.LVL72:
 935 0000 38B5     		push	{r3, r4, r5, lr}
 936              		.cfi_def_cfa_offset 16
 937              		.cfi_offset 3, -16
 938              		.cfi_offset 4, -12
 939              		.cfi_offset 5, -8
 940              		.cfi_offset 14, -4
 941 0002 041C     		mov	r4, r0
 942 0004 0D1C     		mov	r5, r1
 857:.\Generated_Source\PSoC4/ADC.c ****         float32 volts;
 858:.\Generated_Source\PSoC4/ADC.c **** 
 859:.\Generated_Source\PSoC4/ADC.c ****         /* Halt CPU in debug mode if channel is out of valid range */
 860:.\Generated_Source\PSoC4/ADC.c ****         CYASSERT(chan < ADC_TOTAL_CHANNELS_NUM);
 943              		.loc 1 860 0
 944 0006 0128     		cmp	r0, #1
 945 0008 02D9     		bls	.L76
 946              		.loc 1 860 0 is_stmt 0 discriminator 1
 947 000a 0020     		mov	r0, #0
 948              	.LVL73:
 949 000c FFF7FEFF 		bl	CyHalt
 950              	.LVL74:
 951              	.L76:
ARM GAS  C:\Users\g\AppData\Local\Temp\ccZUjAgS.s 			page 33


 861:.\Generated_Source\PSoC4/ADC.c **** 
 862:.\Generated_Source\PSoC4/ADC.c ****         /* Divide the adcCount when accumulate averaging mode selected */
 863:.\Generated_Source\PSoC4/ADC.c ****         #if(ADC_DEFAULT_AVG_MODE == ADC__ACCUMULATE)
 864:.\Generated_Source\PSoC4/ADC.c ****             if((ADC_channelsConfig[chan] & ADC_AVERAGING_EN) != 0u)
 865:.\Generated_Source\PSoC4/ADC.c ****             {
 866:.\Generated_Source\PSoC4/ADC.c ****                 adcCounts /= ADC_DEFAULT_AVG_SAMPLES_DIV;
 867:.\Generated_Source\PSoC4/ADC.c ****             }
 868:.\Generated_Source\PSoC4/ADC.c ****         #endif /* ADC_DEFAULT_AVG_MODE == ADC__ACCUMULATE */
 869:.\Generated_Source\PSoC4/ADC.c **** 
 870:.\Generated_Source\PSoC4/ADC.c ****         /* Subtract ADC offset */
 871:.\Generated_Source\PSoC4/ADC.c ****         adcCounts -= ADC_offset[chan];
 952              		.loc 1 871 0 is_stmt 1
 953 0010 6200     		lsl	r2, r4, #1
 954 0012 0A4B     		ldr	r3, .L77
 955 0014 D05A     		ldrh	r0, [r2, r3]
 956 0016 281A     		sub	r0, r5, r0
 957 0018 00B2     		sxth	r0, r0
 958              	.LVL75:
 872:.\Generated_Source\PSoC4/ADC.c **** 
 873:.\Generated_Source\PSoC4/ADC.c ****         volts = ((float32)adcCounts * ADC_10V_COUNTS) / (float32)ADC_countsPer10Volt[chan];
 959              		.loc 1 873 0
 960 001a FFF7FEFF 		bl	__aeabi_i2f
 961              	.LVL76:
 962 001e 0849     		ldr	r1, .L77+4
 963 0020 FFF7FEFF 		bl	__aeabi_fmul
 964              	.LVL77:
 965 0024 051C     		add	r5, r0, #0
 966 0026 A400     		lsl	r4, r4, #2
 967              	.LVL78:
 968 0028 064B     		ldr	r3, .L77+8
 969 002a E058     		ldr	r0, [r4, r3]
 970 002c FFF7FEFF 		bl	__aeabi_i2f
 971              	.LVL79:
 972 0030 011C     		add	r1, r0, #0
 973 0032 281C     		add	r0, r5, #0
 974 0034 FFF7FEFF 		bl	__aeabi_fdiv
 975              	.LVL80:
 874:.\Generated_Source\PSoC4/ADC.c **** 
 875:.\Generated_Source\PSoC4/ADC.c ****         return( volts );
 876:.\Generated_Source\PSoC4/ADC.c ****     }
 976              		.loc 1 876 0
 977              		@ sp needed
 978 0038 38BD     		pop	{r3, r4, r5, pc}
 979              	.L78:
 980 003a C046     		.align	2
 981              	.L77:
 982 003c 00000000 		.word	ADC_offset
 983 0040 00002041 		.word	1092616192
 984 0044 00000000 		.word	ADC_countsPer10Volt
 985              		.cfi_endproc
 986              	.LFE17:
 987              		.size	ADC_CountsTo_Volts, .-ADC_CountsTo_Volts
 988              		.comm	ADC_countsPer10Volt,8,4
 989              		.comm	ADC_offset,4,4
 990              		.global	ADC_initVar
 991              		.section	.rodata
 992              		.align	2
ARM GAS  C:\Users\g\AppData\Local\Temp\ccZUjAgS.s 			page 34


 993              		.set	.LANCHOR0,. + 0
 994              		.type	ADC_channelsConfig, %object
 995              		.size	ADC_channelsConfig, 8
 996              	ADC_channelsConfig:
 997 0000 00000000 		.space	8
 997      00000000 
 998              		.type	ADC_InputsPlacement.4749, %object
 999              		.size	ADC_InputsPlacement.4749, 2
 1000              	ADC_InputsPlacement.4749:
 1001 0008 02       		.byte	2
 1002 0009 03       		.byte	3
 1003 000a 0000     		.bss
 1004              		.set	.LANCHOR1,. + 0
 1005              		.type	ADC_initVar, %object
 1006              		.size	ADC_initVar, 1
 1007              	ADC_initVar:
 1008 0000 00       		.space	1
 1009              		.text
 1010              	.Letext0:
 1011              		.file 2 ".\\Generated_Source\\PSoC4\\cytypes.h"
 1012              		.file 3 ".\\Generated_Source\\PSoC4\\CyLib.h"
 1013              		.section	.debug_info,"",%progbits
 1014              	.Ldebug_info0:
 1015 0000 BB050000 		.4byte	0x5bb
 1016 0004 0400     		.2byte	0x4
 1017 0006 00000000 		.4byte	.Ldebug_abbrev0
 1018 000a 04       		.byte	0x4
 1019 000b 01       		.uleb128 0x1
 1020 000c 6E000000 		.4byte	.LASF62
 1021 0010 01       		.byte	0x1
 1022 0011 E2020000 		.4byte	.LASF63
 1023 0015 6E030000 		.4byte	.LASF64
 1024 0019 00000000 		.4byte	.Ldebug_ranges0+0
 1025 001d 00000000 		.4byte	0
 1026 0021 00000000 		.4byte	.Ldebug_line0
 1027 0025 02       		.uleb128 0x2
 1028 0026 01       		.byte	0x1
 1029 0027 06       		.byte	0x6
 1030 0028 15010000 		.4byte	.LASF0
 1031 002c 02       		.uleb128 0x2
 1032 002d 01       		.byte	0x1
 1033 002e 08       		.byte	0x8
 1034 002f 01030000 		.4byte	.LASF1
 1035 0033 02       		.uleb128 0x2
 1036 0034 02       		.byte	0x2
 1037 0035 05       		.byte	0x5
 1038 0036 1A030000 		.4byte	.LASF2
 1039 003a 02       		.uleb128 0x2
 1040 003b 02       		.byte	0x2
 1041 003c 07       		.byte	0x7
 1042 003d F6010000 		.4byte	.LASF3
 1043 0041 02       		.uleb128 0x2
 1044 0042 04       		.byte	0x4
 1045 0043 05       		.byte	0x5
 1046 0044 38010000 		.4byte	.LASF4
 1047 0048 02       		.uleb128 0x2
 1048 0049 04       		.byte	0x4
ARM GAS  C:\Users\g\AppData\Local\Temp\ccZUjAgS.s 			page 35


 1049 004a 07       		.byte	0x7
 1050 004b C5010000 		.4byte	.LASF5
 1051 004f 02       		.uleb128 0x2
 1052 0050 08       		.byte	0x8
 1053 0051 05       		.byte	0x5
 1054 0052 07010000 		.4byte	.LASF6
 1055 0056 02       		.uleb128 0x2
 1056 0057 08       		.byte	0x8
 1057 0058 07       		.byte	0x7
 1058 0059 32000000 		.4byte	.LASF7
 1059 005d 03       		.uleb128 0x3
 1060 005e 04       		.byte	0x4
 1061 005f 05       		.byte	0x5
 1062 0060 696E7400 		.ascii	"int\000"
 1063 0064 02       		.uleb128 0x2
 1064 0065 04       		.byte	0x4
 1065 0066 07       		.byte	0x7
 1066 0067 B1010000 		.4byte	.LASF8
 1067 006b 04       		.uleb128 0x4
 1068 006c 69010000 		.4byte	.LASF9
 1069 0070 02       		.byte	0x2
 1070 0071 9801     		.2byte	0x198
 1071 0073 2C000000 		.4byte	0x2c
 1072 0077 04       		.uleb128 0x4
 1073 0078 00000000 		.4byte	.LASF10
 1074 007c 02       		.byte	0x2
 1075 007d 9901     		.2byte	0x199
 1076 007f 3A000000 		.4byte	0x3a
 1077 0083 04       		.uleb128 0x4
 1078 0084 80010000 		.4byte	.LASF11
 1079 0088 02       		.byte	0x2
 1080 0089 9A01     		.2byte	0x19a
 1081 008b 48000000 		.4byte	0x48
 1082 008f 04       		.uleb128 0x4
 1083 0090 A0030000 		.4byte	.LASF12
 1084 0094 02       		.byte	0x2
 1085 0095 9C01     		.2byte	0x19c
 1086 0097 33000000 		.4byte	0x33
 1087 009b 04       		.uleb128 0x4
 1088 009c 28010000 		.4byte	.LASF13
 1089 00a0 02       		.byte	0x2
 1090 00a1 9D01     		.2byte	0x19d
 1091 00a3 41000000 		.4byte	0x41
 1092 00a7 04       		.uleb128 0x4
 1093 00a8 35020000 		.4byte	.LASF14
 1094 00ac 02       		.byte	0x2
 1095 00ad 9E01     		.2byte	0x19e
 1096 00af B3000000 		.4byte	0xb3
 1097 00b3 02       		.uleb128 0x2
 1098 00b4 04       		.byte	0x4
 1099 00b5 04       		.byte	0x4
 1100 00b6 A7020000 		.4byte	.LASF15
 1101 00ba 02       		.uleb128 0x2
 1102 00bb 08       		.byte	0x8
 1103 00bc 04       		.byte	0x4
 1104 00bd 79010000 		.4byte	.LASF16
 1105 00c1 04       		.uleb128 0x4
ARM GAS  C:\Users\g\AppData\Local\Temp\ccZUjAgS.s 			page 36


 1106 00c2 74020000 		.4byte	.LASF17
 1107 00c6 02       		.byte	0x2
 1108 00c7 A301     		.2byte	0x1a3
 1109 00c9 4F000000 		.4byte	0x4f
 1110 00cd 02       		.uleb128 0x2
 1111 00ce 01       		.byte	0x1
 1112 00cf 08       		.byte	0x8
 1113 00d0 38030000 		.4byte	.LASF18
 1114 00d4 04       		.uleb128 0x4
 1115 00d5 2F020000 		.4byte	.LASF19
 1116 00d9 02       		.byte	0x2
 1117 00da 4402     		.2byte	0x244
 1118 00dc E0000000 		.4byte	0xe0
 1119 00e0 05       		.uleb128 0x5
 1120 00e1 83000000 		.4byte	0x83
 1121 00e5 04       		.uleb128 0x4
 1122 00e6 3D030000 		.4byte	.LASF20
 1123 00ea 02       		.byte	0x2
 1124 00eb 5402     		.2byte	0x254
 1125 00ed F1000000 		.4byte	0xf1
 1126 00f1 06       		.uleb128 0x6
 1127 00f2 04       		.byte	0x4
 1128 00f3 F7000000 		.4byte	0xf7
 1129 00f7 07       		.uleb128 0x7
 1130 00f8 02       		.uleb128 0x2
 1131 00f9 04       		.byte	0x4
 1132 00fa 07       		.byte	0x7
 1133 00fb 3D020000 		.4byte	.LASF21
 1134 00ff 08       		.uleb128 0x8
 1135 0100 29000000 		.4byte	.LASF26
 1136 0104 01       		.byte	0x1
 1137 0105 5E       		.byte	0x5e
 1138 0106 00000000 		.4byte	.LFB1
 1139 010a 8C010000 		.4byte	.LFE1-.LFB1
 1140 010e 01       		.uleb128 0x1
 1141 010f 9C       		.byte	0x9c
 1142 0110 7A010000 		.4byte	0x17a
 1143 0114 09       		.uleb128 0x9
 1144 0115 2D030000 		.4byte	.LASF22
 1145 0119 01       		.byte	0x1
 1146 011a 60       		.byte	0x60
 1147 011b 83000000 		.4byte	0x83
 1148 011f 00000000 		.4byte	.LLST0
 1149 0123 09       		.uleb128 0x9
 1150 0124 EC010000 		.4byte	.LASF23
 1151 0128 01       		.byte	0x1
 1152 0129 61       		.byte	0x61
 1153 012a 83000000 		.4byte	0x83
 1154 012e 1F000000 		.4byte	.LLST1
 1155 0132 09       		.uleb128 0x9
 1156 0133 0F000000 		.4byte	.LASF24
 1157 0137 01       		.byte	0x1
 1158 0138 62       		.byte	0x62
 1159 0139 9B000000 		.4byte	0x9b
 1160 013d 25010000 		.4byte	.LLST2
 1161 0141 0A       		.uleb128 0xa
 1162 0142 49000000 		.4byte	.LASF25
ARM GAS  C:\Users\g\AppData\Local\Temp\ccZUjAgS.s 			page 37


 1163 0146 01       		.byte	0x1
 1164 0147 65       		.byte	0x65
 1165 0148 8A010000 		.4byte	0x18a
 1166 014c 05       		.uleb128 0x5
 1167 014d 03       		.byte	0x3
 1168 014e 08000000 		.4byte	ADC_InputsPlacement.4749
 1169 0152 0B       		.uleb128 0xb
 1170 0153 0A000000 		.4byte	.LVL0
 1171 0157 70050000 		.4byte	0x570
 1172 015b 6A010000 		.4byte	0x16a
 1173 015f 0C       		.uleb128 0xc
 1174 0160 01       		.uleb128 0x1
 1175 0161 51       		.byte	0x51
 1176 0162 01       		.uleb128 0x1
 1177 0163 33       		.byte	0x33
 1178 0164 0C       		.uleb128 0xc
 1179 0165 01       		.uleb128 0x1
 1180 0166 50       		.byte	0x50
 1181 0167 01       		.uleb128 0x1
 1182 0168 3E       		.byte	0x3e
 1183 0169 00       		.byte	0
 1184 016a 0D       		.uleb128 0xd
 1185 016b 12000000 		.4byte	.LVL1
 1186 016f 86050000 		.4byte	0x586
 1187 0173 0C       		.uleb128 0xc
 1188 0174 01       		.uleb128 0x1
 1189 0175 50       		.byte	0x50
 1190 0176 01       		.uleb128 0x1
 1191 0177 3E       		.byte	0x3e
 1192 0178 00       		.byte	0
 1193 0179 00       		.byte	0
 1194 017a 0E       		.uleb128 0xe
 1195 017b 6B000000 		.4byte	0x6b
 1196 017f 8A010000 		.4byte	0x18a
 1197 0183 0F       		.uleb128 0xf
 1198 0184 F8000000 		.4byte	0xf8
 1199 0188 01       		.byte	0x1
 1200 0189 00       		.byte	0
 1201 018a 10       		.uleb128 0x10
 1202 018b 7A010000 		.4byte	0x17a
 1203 018f 11       		.uleb128 0x11
 1204 0190 95030000 		.4byte	.LASF27
 1205 0194 01       		.byte	0x1
 1206 0195 4A01     		.2byte	0x14a
 1207 0197 00000000 		.4byte	.LFB2
 1208 019b 24000000 		.4byte	.LFE2-.LFB2
 1209 019f 01       		.uleb128 0x1
 1210 01a0 9C       		.byte	0x9c
 1211 01a1 B5010000 		.4byte	0x1b5
 1212 01a5 0D       		.uleb128 0xd
 1213 01a6 1C000000 		.4byte	.LVL19
 1214 01aa A0050000 		.4byte	0x5a0
 1215 01ae 0C       		.uleb128 0xc
 1216 01af 01       		.uleb128 0x1
 1217 01b0 50       		.byte	0x50
 1218 01b1 01       		.uleb128 0x1
 1219 01b2 3A       		.byte	0x3a
ARM GAS  C:\Users\g\AppData\Local\Temp\ccZUjAgS.s 			page 38


 1220 01b3 00       		.byte	0
 1221 01b4 00       		.byte	0
 1222 01b5 08       		.uleb128 0x8
 1223 01b6 2E010000 		.4byte	.LASF28
 1224 01ba 01       		.byte	0x1
 1225 01bb 3F       		.byte	0x3f
 1226 01bc 00000000 		.4byte	.LFB0
 1227 01c0 20000000 		.4byte	.LFE0-.LFB0
 1228 01c4 01       		.uleb128 0x1
 1229 01c5 9C       		.byte	0x9c
 1230 01c6 DD010000 		.4byte	0x1dd
 1231 01ca 12       		.uleb128 0x12
 1232 01cb 0E000000 		.4byte	.LVL20
 1233 01cf FF000000 		.4byte	0xff
 1234 01d3 12       		.uleb128 0x12
 1235 01d4 18000000 		.4byte	.LVL21
 1236 01d8 8F010000 		.4byte	0x18f
 1237 01dc 00       		.byte	0
 1238 01dd 13       		.uleb128 0x13
 1239 01de 24030000 		.4byte	.LASF29
 1240 01e2 01       		.byte	0x1
 1241 01e3 6D01     		.2byte	0x16d
 1242 01e5 00000000 		.4byte	.LFB3
 1243 01e9 10000000 		.4byte	.LFE3-.LFB3
 1244 01ed 01       		.uleb128 0x1
 1245 01ee 9C       		.byte	0x9c
 1246 01ef 13       		.uleb128 0x13
 1247 01f0 5D000000 		.4byte	.LASF30
 1248 01f4 01       		.byte	0x1
 1249 01f5 8701     		.2byte	0x187
 1250 01f7 00000000 		.4byte	.LFB4
 1251 01fb 0C000000 		.4byte	.LFE4-.LFB4
 1252 01ff 01       		.uleb128 0x1
 1253 0200 9C       		.byte	0x9c
 1254 0201 13       		.uleb128 0x13
 1255 0202 18020000 		.4byte	.LASF31
 1256 0206 01       		.byte	0x1
 1257 0207 A001     		.2byte	0x1a0
 1258 0209 00000000 		.4byte	.LFB5
 1259 020d 02000000 		.4byte	.LFE5-.LFB5
 1260 0211 01       		.uleb128 0x1
 1261 0212 9C       		.byte	0x9c
 1262 0213 14       		.uleb128 0x14
 1263 0214 60020000 		.4byte	.LASF33
 1264 0218 01       		.byte	0x1
 1265 0219 C201     		.2byte	0x1c2
 1266 021b 83000000 		.4byte	0x83
 1267 021f 00000000 		.4byte	.LFB6
 1268 0223 28000000 		.4byte	.LFE6-.LFB6
 1269 0227 01       		.uleb128 0x1
 1270 0228 9C       		.byte	0x9c
 1271 0229 4E020000 		.4byte	0x24e
 1272 022d 15       		.uleb128 0x15
 1273 022e 98010000 		.4byte	.LASF35
 1274 0232 01       		.byte	0x1
 1275 0233 C201     		.2byte	0x1c2
 1276 0235 83000000 		.4byte	0x83
ARM GAS  C:\Users\g\AppData\Local\Temp\ccZUjAgS.s 			page 39


 1277 0239 38010000 		.4byte	.LLST3
 1278 023d 16       		.uleb128 0x16
 1279 023e 21010000 		.4byte	.LASF32
 1280 0242 01       		.byte	0x1
 1281 0243 C401     		.2byte	0x1c4
 1282 0245 83000000 		.4byte	0x83
 1283 0249 7D010000 		.4byte	.LLST4
 1284 024d 00       		.byte	0
 1285 024e 14       		.uleb128 0x14
 1286 024f BB030000 		.4byte	.LASF34
 1287 0253 01       		.byte	0x1
 1288 0254 F801     		.2byte	0x1f8
 1289 0256 8F000000 		.4byte	0x8f
 1290 025a 00000000 		.4byte	.LFB7
 1291 025e 2C000000 		.4byte	.LFE7-.LFB7
 1292 0262 01       		.uleb128 0x1
 1293 0263 9C       		.byte	0x9c
 1294 0264 98020000 		.4byte	0x298
 1295 0268 15       		.uleb128 0x15
 1296 0269 33030000 		.4byte	.LASF36
 1297 026d 01       		.byte	0x1
 1298 026e F801     		.2byte	0x1f8
 1299 0270 83000000 		.4byte	0x83
 1300 0274 B3010000 		.4byte	.LLST5
 1301 0278 16       		.uleb128 0x16
 1302 0279 B4030000 		.4byte	.LASF37
 1303 027d 01       		.byte	0x1
 1304 027e FA01     		.2byte	0x1fa
 1305 0280 83000000 		.4byte	0x83
 1306 0284 F8010000 		.4byte	.LLST6
 1307 0288 0D       		.uleb128 0xd
 1308 0289 0E000000 		.4byte	.LVL31
 1309 028d B1050000 		.4byte	0x5b1
 1310 0291 0C       		.uleb128 0xc
 1311 0292 01       		.uleb128 0x1
 1312 0293 50       		.byte	0x50
 1313 0294 01       		.uleb128 0x1
 1314 0295 30       		.byte	0x30
 1315 0296 00       		.byte	0
 1316 0297 00       		.byte	0
 1317 0298 11       		.uleb128 0x11
 1318 0299 8B020000 		.4byte	.LASF38
 1319 029d 01       		.byte	0x1
 1320 029e 2502     		.2byte	0x225
 1321 02a0 00000000 		.4byte	.LFB8
 1322 02a4 10000000 		.4byte	.LFE8-.LFB8
 1323 02a8 01       		.uleb128 0x1
 1324 02a9 9C       		.byte	0x9c
 1325 02aa BF020000 		.4byte	0x2bf
 1326 02ae 15       		.uleb128 0x15
 1327 02af 87010000 		.4byte	.LASF39
 1328 02b3 01       		.byte	0x1
 1329 02b4 2502     		.2byte	0x225
 1330 02b6 83000000 		.4byte	0x83
 1331 02ba 16020000 		.4byte	.LLST7
 1332 02be 00       		.byte	0
 1333 02bf 11       		.uleb128 0x11
ARM GAS  C:\Users\g\AppData\Local\Temp\ccZUjAgS.s 			page 40


 1334 02c0 CB020000 		.4byte	.LASF40
 1335 02c4 01       		.byte	0x1
 1336 02c5 5102     		.2byte	0x251
 1337 02c7 00000000 		.4byte	.LFB9
 1338 02cb 1C000000 		.4byte	.LFE9-.LFB9
 1339 02cf 01       		.uleb128 0x1
 1340 02d0 9C       		.byte	0x9c
 1341 02d1 E6020000 		.4byte	0x2e6
 1342 02d5 15       		.uleb128 0x15
 1343 02d6 46020000 		.4byte	.LASF41
 1344 02da 01       		.byte	0x1
 1345 02db 5102     		.2byte	0x251
 1346 02dd 83000000 		.4byte	0x83
 1347 02e1 37020000 		.4byte	.LLST8
 1348 02e5 00       		.byte	0
 1349 02e6 11       		.uleb128 0x11
 1350 02e7 4F020000 		.4byte	.LASF42
 1351 02eb 01       		.byte	0x1
 1352 02ec 6602     		.2byte	0x266
 1353 02ee 00000000 		.4byte	.LFB10
 1354 02f2 18000000 		.4byte	.LFE10-.LFB10
 1355 02f6 01       		.uleb128 0x1
 1356 02f7 9C       		.byte	0x9c
 1357 02f8 0D030000 		.4byte	0x30d
 1358 02fc 15       		.uleb128 0x15
 1359 02fd AD020000 		.4byte	.LASF43
 1360 0301 01       		.byte	0x1
 1361 0302 6602     		.2byte	0x266
 1362 0304 83000000 		.4byte	0x83
 1363 0308 58020000 		.4byte	.LLST9
 1364 030c 00       		.byte	0
 1365 030d 11       		.uleb128 0x11
 1366 030e A0010000 		.4byte	.LASF44
 1367 0312 01       		.byte	0x1
 1368 0313 7E02     		.2byte	0x27e
 1369 0315 00000000 		.4byte	.LFB11
 1370 0319 10000000 		.4byte	.LFE11-.LFB11
 1371 031d 01       		.uleb128 0x1
 1372 031e 9C       		.byte	0x9c
 1373 031f 34030000 		.4byte	0x334
 1374 0323 15       		.uleb128 0x15
 1375 0324 87010000 		.4byte	.LASF39
 1376 0328 01       		.byte	0x1
 1377 0329 7E02     		.2byte	0x27e
 1378 032b 83000000 		.4byte	0x83
 1379 032f 79020000 		.4byte	.LLST10
 1380 0333 00       		.byte	0
 1381 0334 11       		.uleb128 0x11
 1382 0335 D7010000 		.4byte	.LASF45
 1383 0339 01       		.byte	0x1
 1384 033a 9502     		.2byte	0x295
 1385 033c 00000000 		.4byte	.LFB12
 1386 0340 10000000 		.4byte	.LFE12-.LFB12
 1387 0344 01       		.uleb128 0x1
 1388 0345 9C       		.byte	0x9c
 1389 0346 5B030000 		.4byte	0x35b
 1390 034a 15       		.uleb128 0x15
ARM GAS  C:\Users\g\AppData\Local\Temp\ccZUjAgS.s 			page 41


 1391 034b 87010000 		.4byte	.LASF39
 1392 034f 01       		.byte	0x1
 1393 0350 9502     		.2byte	0x295
 1394 0352 83000000 		.4byte	0x83
 1395 0356 9A020000 		.4byte	.LLST11
 1396 035a 00       		.byte	0
 1397 035b 11       		.uleb128 0x11
 1398 035c A6030000 		.4byte	.LASF46
 1399 0360 01       		.byte	0x1
 1400 0361 B102     		.2byte	0x2b1
 1401 0363 00000000 		.4byte	.LFB13
 1402 0367 1C000000 		.4byte	.LFE13-.LFB13
 1403 036b 01       		.uleb128 0x1
 1404 036c 9C       		.byte	0x9c
 1405 036d A1030000 		.4byte	0x3a1
 1406 0371 15       		.uleb128 0x15
 1407 0372 33030000 		.4byte	.LASF36
 1408 0376 01       		.byte	0x1
 1409 0377 B102     		.2byte	0x2b1
 1410 0379 83000000 		.4byte	0x83
 1411 037d BB020000 		.4byte	.LLST12
 1412 0381 15       		.uleb128 0x15
 1413 0382 5D030000 		.4byte	.LASF47
 1414 0386 01       		.byte	0x1
 1415 0387 B102     		.2byte	0x2b1
 1416 0389 8F000000 		.4byte	0x8f
 1417 038d E7020000 		.4byte	.LLST13
 1418 0391 0D       		.uleb128 0xd
 1419 0392 10000000 		.4byte	.LVL49
 1420 0396 B1050000 		.4byte	0x5b1
 1421 039a 0C       		.uleb128 0xc
 1422 039b 01       		.uleb128 0x1
 1423 039c 50       		.byte	0x50
 1424 039d 01       		.uleb128 0x1
 1425 039e 30       		.byte	0x30
 1426 039f 00       		.byte	0
 1427 03a0 00       		.byte	0
 1428 03a1 11       		.uleb128 0x11
 1429 03a2 9B020000 		.4byte	.LASF48
 1430 03a6 01       		.byte	0x1
 1431 03a7 D302     		.2byte	0x2d3
 1432 03a9 00000000 		.4byte	.LFB14
 1433 03ad 1C000000 		.4byte	.LFE14-.LFB14
 1434 03b1 01       		.uleb128 0x1
 1435 03b2 9C       		.byte	0x9c
 1436 03b3 E7030000 		.4byte	0x3e7
 1437 03b7 15       		.uleb128 0x15
 1438 03b8 33030000 		.4byte	.LASF36
 1439 03bc 01       		.byte	0x1
 1440 03bd D302     		.2byte	0x2d3
 1441 03bf 83000000 		.4byte	0x83
 1442 03c3 08030000 		.4byte	.LLST14
 1443 03c7 15       		.uleb128 0x15
 1444 03c8 07000000 		.4byte	.LASF49
 1445 03cc 01       		.byte	0x1
 1446 03cd D302     		.2byte	0x2d3
 1447 03cf 9B000000 		.4byte	0x9b
ARM GAS  C:\Users\g\AppData\Local\Temp\ccZUjAgS.s 			page 42


 1448 03d3 34030000 		.4byte	.LLST15
 1449 03d7 0D       		.uleb128 0xd
 1450 03d8 10000000 		.4byte	.LVL53
 1451 03dc B1050000 		.4byte	0x5b1
 1452 03e0 0C       		.uleb128 0xc
 1453 03e1 01       		.uleb128 0x1
 1454 03e2 50       		.byte	0x50
 1455 03e3 01       		.uleb128 0x1
 1456 03e4 30       		.byte	0x30
 1457 03e5 00       		.byte	0
 1458 03e6 00       		.byte	0
 1459 03e7 17       		.uleb128 0x17
 1460 03e8 B7020000 		.4byte	.LASF50
 1461 03ec 01       		.byte	0x1
 1462 03ed F402     		.2byte	0x2f4
 1463 03ef 8F000000 		.4byte	0x8f
 1464 03f3 00000000 		.4byte	.LFB15
 1465 03f7 5C000000 		.4byte	.LFE15-.LFB15
 1466 03fb 01       		.uleb128 0x1
 1467 03fc 9C       		.byte	0x9c
 1468 03fd 3F040000 		.4byte	0x43f
 1469 0401 15       		.uleb128 0x15
 1470 0402 33030000 		.4byte	.LASF36
 1471 0406 01       		.byte	0x1
 1472 0407 F402     		.2byte	0x2f4
 1473 0409 83000000 		.4byte	0x83
 1474 040d 64030000 		.4byte	.LLST16
 1475 0411 15       		.uleb128 0x15
 1476 0412 64030000 		.4byte	.LASF51
 1477 0416 01       		.byte	0x1
 1478 0417 F402     		.2byte	0x2f4
 1479 0419 8F000000 		.4byte	0x8f
 1480 041d 90030000 		.4byte	.LLST17
 1481 0421 18       		.uleb128 0x18
 1482 0422 28020000 		.4byte	.LASF52
 1483 0426 01       		.byte	0x1
 1484 0427 F602     		.2byte	0x2f6
 1485 0429 8F000000 		.4byte	0x8f
 1486 042d 01       		.uleb128 0x1
 1487 042e 50       		.byte	0x50
 1488 042f 0D       		.uleb128 0xd
 1489 0430 10000000 		.4byte	.LVL58
 1490 0434 B1050000 		.4byte	0x5b1
 1491 0438 0C       		.uleb128 0xc
 1492 0439 01       		.uleb128 0x1
 1493 043a 50       		.byte	0x50
 1494 043b 01       		.uleb128 0x1
 1495 043c 30       		.byte	0x30
 1496 043d 00       		.byte	0
 1497 043e 00       		.byte	0
 1498 043f 17       		.uleb128 0x17
 1499 0440 41010000 		.4byte	.LASF53
 1500 0444 01       		.byte	0x1
 1501 0445 2A03     		.2byte	0x32a
 1502 0447 9B000000 		.4byte	0x9b
 1503 044b 00000000 		.4byte	.LFB16
 1504 044f 40000000 		.4byte	.LFE16-.LFB16
ARM GAS  C:\Users\g\AppData\Local\Temp\ccZUjAgS.s 			page 43


 1505 0453 01       		.uleb128 0x1
 1506 0454 9C       		.byte	0x9c
 1507 0455 95040000 		.4byte	0x495
 1508 0459 15       		.uleb128 0x15
 1509 045a 33030000 		.4byte	.LASF36
 1510 045e 01       		.byte	0x1
 1511 045f 2A03     		.2byte	0x32a
 1512 0461 83000000 		.4byte	0x83
 1513 0465 C7030000 		.4byte	.LLST18
 1514 0469 15       		.uleb128 0x15
 1515 046a 64030000 		.4byte	.LASF51
 1516 046e 01       		.byte	0x1
 1517 046f 2A03     		.2byte	0x32a
 1518 0471 8F000000 		.4byte	0x8f
 1519 0475 F3030000 		.4byte	.LLST19
 1520 0479 19       		.uleb128 0x19
 1521 047a BE010000 		.4byte	.LASF65
 1522 047e 01       		.byte	0x1
 1523 047f 2C03     		.2byte	0x32c
 1524 0481 C1000000 		.4byte	0xc1
 1525 0485 0D       		.uleb128 0xd
 1526 0486 10000000 		.4byte	.LVL67
 1527 048a B1050000 		.4byte	0x5b1
 1528 048e 0C       		.uleb128 0xc
 1529 048f 01       		.uleb128 0x1
 1530 0490 50       		.byte	0x50
 1531 0491 01       		.uleb128 0x1
 1532 0492 30       		.byte	0x30
 1533 0493 00       		.byte	0
 1534 0494 00       		.byte	0
 1535 0495 17       		.uleb128 0x17
 1536 0496 16000000 		.4byte	.LASF54
 1537 049a 01       		.byte	0x1
 1538 049b 5703     		.2byte	0x357
 1539 049d A7000000 		.4byte	0xa7
 1540 04a1 00000000 		.4byte	.LFB17
 1541 04a5 48000000 		.4byte	.LFE17-.LFB17
 1542 04a9 01       		.uleb128 0x1
 1543 04aa 9C       		.byte	0x9c
 1544 04ab ED040000 		.4byte	0x4ed
 1545 04af 15       		.uleb128 0x15
 1546 04b0 33030000 		.4byte	.LASF36
 1547 04b4 01       		.byte	0x1
 1548 04b5 5703     		.2byte	0x357
 1549 04b7 83000000 		.4byte	0x83
 1550 04bb 1F040000 		.4byte	.LLST20
 1551 04bf 15       		.uleb128 0x15
 1552 04c0 64030000 		.4byte	.LASF51
 1553 04c4 01       		.byte	0x1
 1554 04c5 5703     		.2byte	0x357
 1555 04c7 8F000000 		.4byte	0x8f
 1556 04cb 4B040000 		.4byte	.LLST21
 1557 04cf 18       		.uleb128 0x18
 1558 04d0 E6010000 		.4byte	.LASF55
 1559 04d4 01       		.byte	0x1
 1560 04d5 5903     		.2byte	0x359
 1561 04d7 A7000000 		.4byte	0xa7
ARM GAS  C:\Users\g\AppData\Local\Temp\ccZUjAgS.s 			page 44


 1562 04db 01       		.uleb128 0x1
 1563 04dc 50       		.byte	0x50
 1564 04dd 0D       		.uleb128 0xd
 1565 04de 10000000 		.4byte	.LVL74
 1566 04e2 B1050000 		.4byte	0x5b1
 1567 04e6 0C       		.uleb128 0xc
 1568 04e7 01       		.uleb128 0x1
 1569 04e8 50       		.byte	0x50
 1570 04e9 01       		.uleb128 0x1
 1571 04ea 30       		.byte	0x30
 1572 04eb 00       		.byte	0
 1573 04ec 00       		.byte	0
 1574 04ed 0E       		.uleb128 0xe
 1575 04ee 83000000 		.4byte	0x83
 1576 04f2 FD040000 		.4byte	0x4fd
 1577 04f6 0F       		.uleb128 0xf
 1578 04f7 F8000000 		.4byte	0xf8
 1579 04fb 01       		.byte	0x1
 1580 04fc 00       		.byte	0
 1581 04fd 0A       		.uleb128 0xa
 1582 04fe 4A030000 		.4byte	.LASF56
 1583 0502 01       		.byte	0x1
 1584 0503 21       		.byte	0x21
 1585 0504 0E050000 		.4byte	0x50e
 1586 0508 05       		.uleb128 0x5
 1587 0509 03       		.byte	0x3
 1588 050a 00000000 		.4byte	ADC_channelsConfig
 1589 050e 10       		.uleb128 0x10
 1590 050f ED040000 		.4byte	0x4ed
 1591 0513 1A       		.uleb128 0x1a
 1592 0514 8C010000 		.4byte	.LASF57
 1593 0518 01       		.byte	0x1
 1594 0519 18       		.byte	0x18
 1595 051a 6B000000 		.4byte	0x6b
 1596 051e 05       		.uleb128 0x5
 1597 051f 03       		.byte	0x3
 1598 0520 00000000 		.4byte	ADC_initVar
 1599 0524 0E       		.uleb128 0xe
 1600 0525 8F000000 		.4byte	0x8f
 1601 0529 34050000 		.4byte	0x534
 1602 052d 0F       		.uleb128 0xf
 1603 052e F8000000 		.4byte	0xf8
 1604 0532 01       		.byte	0x1
 1605 0533 00       		.byte	0
 1606 0534 1A       		.uleb128 0x1a
 1607 0535 0F030000 		.4byte	.LASF58
 1608 0539 01       		.byte	0x1
 1609 053a 19       		.byte	0x19
 1610 053b 45050000 		.4byte	0x545
 1611 053f 05       		.uleb128 0x5
 1612 0540 03       		.byte	0x3
 1613 0541 00000000 		.4byte	ADC_offset
 1614 0545 05       		.uleb128 0x5
 1615 0546 24050000 		.4byte	0x524
 1616 054a 0E       		.uleb128 0xe
 1617 054b 9B000000 		.4byte	0x9b
 1618 054f 5A050000 		.4byte	0x55a
ARM GAS  C:\Users\g\AppData\Local\Temp\ccZUjAgS.s 			page 45


 1619 0553 0F       		.uleb128 0xf
 1620 0554 F8000000 		.4byte	0xf8
 1621 0558 01       		.byte	0x1
 1622 0559 00       		.byte	0
 1623 055a 1A       		.uleb128 0x1a
 1624 055b 55010000 		.4byte	.LASF59
 1625 055f 01       		.byte	0x1
 1626 0560 1A       		.byte	0x1a
 1627 0561 6B050000 		.4byte	0x56b
 1628 0565 05       		.uleb128 0x5
 1629 0566 03       		.byte	0x3
 1630 0567 00000000 		.4byte	ADC_countsPer10Volt
 1631 056b 05       		.uleb128 0x5
 1632 056c 4A050000 		.4byte	0x54a
 1633 0570 1B       		.uleb128 0x1b
 1634 0571 7A020000 		.4byte	.LASF60
 1635 0575 03       		.byte	0x3
 1636 0576 BE       		.byte	0xbe
 1637 0577 86050000 		.4byte	0x586
 1638 057b 1C       		.uleb128 0x1c
 1639 057c 6B000000 		.4byte	0x6b
 1640 0580 1C       		.uleb128 0x1c
 1641 0581 6B000000 		.4byte	0x6b
 1642 0585 00       		.byte	0
 1643 0586 1D       		.uleb128 0x1d
 1644 0587 09020000 		.4byte	.LASF66
 1645 058b 03       		.byte	0x3
 1646 058c BB       		.byte	0xbb
 1647 058d E5000000 		.4byte	0xe5
 1648 0591 A0050000 		.4byte	0x5a0
 1649 0595 1C       		.uleb128 0x1c
 1650 0596 6B000000 		.4byte	0x6b
 1651 059a 1C       		.uleb128 0x1c
 1652 059b E5000000 		.4byte	0xe5
 1653 059f 00       		.byte	0
 1654 05a0 1B       		.uleb128 0x1b
 1655 05a1 6F010000 		.4byte	.LASF61
 1656 05a5 03       		.byte	0x3
 1657 05a6 D8       		.byte	0xd8
 1658 05a7 B1050000 		.4byte	0x5b1
 1659 05ab 1C       		.uleb128 0x1c
 1660 05ac 77000000 		.4byte	0x77
 1661 05b0 00       		.byte	0
 1662 05b1 1E       		.uleb128 0x1e
 1663 05b2 DB020000 		.4byte	.LASF67
 1664 05b6 03       		.byte	0x3
 1665 05b7 E5       		.byte	0xe5
 1666 05b8 1C       		.uleb128 0x1c
 1667 05b9 6B000000 		.4byte	0x6b
 1668 05bd 00       		.byte	0
 1669 05be 00       		.byte	0
 1670              		.section	.debug_abbrev,"",%progbits
 1671              	.Ldebug_abbrev0:
 1672 0000 01       		.uleb128 0x1
 1673 0001 11       		.uleb128 0x11
 1674 0002 01       		.byte	0x1
 1675 0003 25       		.uleb128 0x25
ARM GAS  C:\Users\g\AppData\Local\Temp\ccZUjAgS.s 			page 46


 1676 0004 0E       		.uleb128 0xe
 1677 0005 13       		.uleb128 0x13
 1678 0006 0B       		.uleb128 0xb
 1679 0007 03       		.uleb128 0x3
 1680 0008 0E       		.uleb128 0xe
 1681 0009 1B       		.uleb128 0x1b
 1682 000a 0E       		.uleb128 0xe
 1683 000b 55       		.uleb128 0x55
 1684 000c 17       		.uleb128 0x17
 1685 000d 11       		.uleb128 0x11
 1686 000e 01       		.uleb128 0x1
 1687 000f 10       		.uleb128 0x10
 1688 0010 17       		.uleb128 0x17
 1689 0011 00       		.byte	0
 1690 0012 00       		.byte	0
 1691 0013 02       		.uleb128 0x2
 1692 0014 24       		.uleb128 0x24
 1693 0015 00       		.byte	0
 1694 0016 0B       		.uleb128 0xb
 1695 0017 0B       		.uleb128 0xb
 1696 0018 3E       		.uleb128 0x3e
 1697 0019 0B       		.uleb128 0xb
 1698 001a 03       		.uleb128 0x3
 1699 001b 0E       		.uleb128 0xe
 1700 001c 00       		.byte	0
 1701 001d 00       		.byte	0
 1702 001e 03       		.uleb128 0x3
 1703 001f 24       		.uleb128 0x24
 1704 0020 00       		.byte	0
 1705 0021 0B       		.uleb128 0xb
 1706 0022 0B       		.uleb128 0xb
 1707 0023 3E       		.uleb128 0x3e
 1708 0024 0B       		.uleb128 0xb
 1709 0025 03       		.uleb128 0x3
 1710 0026 08       		.uleb128 0x8
 1711 0027 00       		.byte	0
 1712 0028 00       		.byte	0
 1713 0029 04       		.uleb128 0x4
 1714 002a 16       		.uleb128 0x16
 1715 002b 00       		.byte	0
 1716 002c 03       		.uleb128 0x3
 1717 002d 0E       		.uleb128 0xe
 1718 002e 3A       		.uleb128 0x3a
 1719 002f 0B       		.uleb128 0xb
 1720 0030 3B       		.uleb128 0x3b
 1721 0031 05       		.uleb128 0x5
 1722 0032 49       		.uleb128 0x49
 1723 0033 13       		.uleb128 0x13
 1724 0034 00       		.byte	0
 1725 0035 00       		.byte	0
 1726 0036 05       		.uleb128 0x5
 1727 0037 35       		.uleb128 0x35
 1728 0038 00       		.byte	0
 1729 0039 49       		.uleb128 0x49
 1730 003a 13       		.uleb128 0x13
 1731 003b 00       		.byte	0
 1732 003c 00       		.byte	0
ARM GAS  C:\Users\g\AppData\Local\Temp\ccZUjAgS.s 			page 47


 1733 003d 06       		.uleb128 0x6
 1734 003e 0F       		.uleb128 0xf
 1735 003f 00       		.byte	0
 1736 0040 0B       		.uleb128 0xb
 1737 0041 0B       		.uleb128 0xb
 1738 0042 49       		.uleb128 0x49
 1739 0043 13       		.uleb128 0x13
 1740 0044 00       		.byte	0
 1741 0045 00       		.byte	0
 1742 0046 07       		.uleb128 0x7
 1743 0047 15       		.uleb128 0x15
 1744 0048 00       		.byte	0
 1745 0049 27       		.uleb128 0x27
 1746 004a 19       		.uleb128 0x19
 1747 004b 00       		.byte	0
 1748 004c 00       		.byte	0
 1749 004d 08       		.uleb128 0x8
 1750 004e 2E       		.uleb128 0x2e
 1751 004f 01       		.byte	0x1
 1752 0050 3F       		.uleb128 0x3f
 1753 0051 19       		.uleb128 0x19
 1754 0052 03       		.uleb128 0x3
 1755 0053 0E       		.uleb128 0xe
 1756 0054 3A       		.uleb128 0x3a
 1757 0055 0B       		.uleb128 0xb
 1758 0056 3B       		.uleb128 0x3b
 1759 0057 0B       		.uleb128 0xb
 1760 0058 27       		.uleb128 0x27
 1761 0059 19       		.uleb128 0x19
 1762 005a 11       		.uleb128 0x11
 1763 005b 01       		.uleb128 0x1
 1764 005c 12       		.uleb128 0x12
 1765 005d 06       		.uleb128 0x6
 1766 005e 40       		.uleb128 0x40
 1767 005f 18       		.uleb128 0x18
 1768 0060 9742     		.uleb128 0x2117
 1769 0062 19       		.uleb128 0x19
 1770 0063 01       		.uleb128 0x1
 1771 0064 13       		.uleb128 0x13
 1772 0065 00       		.byte	0
 1773 0066 00       		.byte	0
 1774 0067 09       		.uleb128 0x9
 1775 0068 34       		.uleb128 0x34
 1776 0069 00       		.byte	0
 1777 006a 03       		.uleb128 0x3
 1778 006b 0E       		.uleb128 0xe
 1779 006c 3A       		.uleb128 0x3a
 1780 006d 0B       		.uleb128 0xb
 1781 006e 3B       		.uleb128 0x3b
 1782 006f 0B       		.uleb128 0xb
 1783 0070 49       		.uleb128 0x49
 1784 0071 13       		.uleb128 0x13
 1785 0072 02       		.uleb128 0x2
 1786 0073 17       		.uleb128 0x17
 1787 0074 00       		.byte	0
 1788 0075 00       		.byte	0
 1789 0076 0A       		.uleb128 0xa
ARM GAS  C:\Users\g\AppData\Local\Temp\ccZUjAgS.s 			page 48


 1790 0077 34       		.uleb128 0x34
 1791 0078 00       		.byte	0
 1792 0079 03       		.uleb128 0x3
 1793 007a 0E       		.uleb128 0xe
 1794 007b 3A       		.uleb128 0x3a
 1795 007c 0B       		.uleb128 0xb
 1796 007d 3B       		.uleb128 0x3b
 1797 007e 0B       		.uleb128 0xb
 1798 007f 49       		.uleb128 0x49
 1799 0080 13       		.uleb128 0x13
 1800 0081 02       		.uleb128 0x2
 1801 0082 18       		.uleb128 0x18
 1802 0083 00       		.byte	0
 1803 0084 00       		.byte	0
 1804 0085 0B       		.uleb128 0xb
 1805 0086 898201   		.uleb128 0x4109
 1806 0089 01       		.byte	0x1
 1807 008a 11       		.uleb128 0x11
 1808 008b 01       		.uleb128 0x1
 1809 008c 31       		.uleb128 0x31
 1810 008d 13       		.uleb128 0x13
 1811 008e 01       		.uleb128 0x1
 1812 008f 13       		.uleb128 0x13
 1813 0090 00       		.byte	0
 1814 0091 00       		.byte	0
 1815 0092 0C       		.uleb128 0xc
 1816 0093 8A8201   		.uleb128 0x410a
 1817 0096 00       		.byte	0
 1818 0097 02       		.uleb128 0x2
 1819 0098 18       		.uleb128 0x18
 1820 0099 9142     		.uleb128 0x2111
 1821 009b 18       		.uleb128 0x18
 1822 009c 00       		.byte	0
 1823 009d 00       		.byte	0
 1824 009e 0D       		.uleb128 0xd
 1825 009f 898201   		.uleb128 0x4109
 1826 00a2 01       		.byte	0x1
 1827 00a3 11       		.uleb128 0x11
 1828 00a4 01       		.uleb128 0x1
 1829 00a5 31       		.uleb128 0x31
 1830 00a6 13       		.uleb128 0x13
 1831 00a7 00       		.byte	0
 1832 00a8 00       		.byte	0
 1833 00a9 0E       		.uleb128 0xe
 1834 00aa 01       		.uleb128 0x1
 1835 00ab 01       		.byte	0x1
 1836 00ac 49       		.uleb128 0x49
 1837 00ad 13       		.uleb128 0x13
 1838 00ae 01       		.uleb128 0x1
 1839 00af 13       		.uleb128 0x13
 1840 00b0 00       		.byte	0
 1841 00b1 00       		.byte	0
 1842 00b2 0F       		.uleb128 0xf
 1843 00b3 21       		.uleb128 0x21
 1844 00b4 00       		.byte	0
 1845 00b5 49       		.uleb128 0x49
 1846 00b6 13       		.uleb128 0x13
ARM GAS  C:\Users\g\AppData\Local\Temp\ccZUjAgS.s 			page 49


 1847 00b7 2F       		.uleb128 0x2f
 1848 00b8 0B       		.uleb128 0xb
 1849 00b9 00       		.byte	0
 1850 00ba 00       		.byte	0
 1851 00bb 10       		.uleb128 0x10
 1852 00bc 26       		.uleb128 0x26
 1853 00bd 00       		.byte	0
 1854 00be 49       		.uleb128 0x49
 1855 00bf 13       		.uleb128 0x13
 1856 00c0 00       		.byte	0
 1857 00c1 00       		.byte	0
 1858 00c2 11       		.uleb128 0x11
 1859 00c3 2E       		.uleb128 0x2e
 1860 00c4 01       		.byte	0x1
 1861 00c5 3F       		.uleb128 0x3f
 1862 00c6 19       		.uleb128 0x19
 1863 00c7 03       		.uleb128 0x3
 1864 00c8 0E       		.uleb128 0xe
 1865 00c9 3A       		.uleb128 0x3a
 1866 00ca 0B       		.uleb128 0xb
 1867 00cb 3B       		.uleb128 0x3b
 1868 00cc 05       		.uleb128 0x5
 1869 00cd 27       		.uleb128 0x27
 1870 00ce 19       		.uleb128 0x19
 1871 00cf 11       		.uleb128 0x11
 1872 00d0 01       		.uleb128 0x1
 1873 00d1 12       		.uleb128 0x12
 1874 00d2 06       		.uleb128 0x6
 1875 00d3 40       		.uleb128 0x40
 1876 00d4 18       		.uleb128 0x18
 1877 00d5 9742     		.uleb128 0x2117
 1878 00d7 19       		.uleb128 0x19
 1879 00d8 01       		.uleb128 0x1
 1880 00d9 13       		.uleb128 0x13
 1881 00da 00       		.byte	0
 1882 00db 00       		.byte	0
 1883 00dc 12       		.uleb128 0x12
 1884 00dd 898201   		.uleb128 0x4109
 1885 00e0 00       		.byte	0
 1886 00e1 11       		.uleb128 0x11
 1887 00e2 01       		.uleb128 0x1
 1888 00e3 31       		.uleb128 0x31
 1889 00e4 13       		.uleb128 0x13
 1890 00e5 00       		.byte	0
 1891 00e6 00       		.byte	0
 1892 00e7 13       		.uleb128 0x13
 1893 00e8 2E       		.uleb128 0x2e
 1894 00e9 00       		.byte	0
 1895 00ea 3F       		.uleb128 0x3f
 1896 00eb 19       		.uleb128 0x19
 1897 00ec 03       		.uleb128 0x3
 1898 00ed 0E       		.uleb128 0xe
 1899 00ee 3A       		.uleb128 0x3a
 1900 00ef 0B       		.uleb128 0xb
 1901 00f0 3B       		.uleb128 0x3b
 1902 00f1 05       		.uleb128 0x5
 1903 00f2 27       		.uleb128 0x27
ARM GAS  C:\Users\g\AppData\Local\Temp\ccZUjAgS.s 			page 50


 1904 00f3 19       		.uleb128 0x19
 1905 00f4 11       		.uleb128 0x11
 1906 00f5 01       		.uleb128 0x1
 1907 00f6 12       		.uleb128 0x12
 1908 00f7 06       		.uleb128 0x6
 1909 00f8 40       		.uleb128 0x40
 1910 00f9 18       		.uleb128 0x18
 1911 00fa 9742     		.uleb128 0x2117
 1912 00fc 19       		.uleb128 0x19
 1913 00fd 00       		.byte	0
 1914 00fe 00       		.byte	0
 1915 00ff 14       		.uleb128 0x14
 1916 0100 2E       		.uleb128 0x2e
 1917 0101 01       		.byte	0x1
 1918 0102 3F       		.uleb128 0x3f
 1919 0103 19       		.uleb128 0x19
 1920 0104 03       		.uleb128 0x3
 1921 0105 0E       		.uleb128 0xe
 1922 0106 3A       		.uleb128 0x3a
 1923 0107 0B       		.uleb128 0xb
 1924 0108 3B       		.uleb128 0x3b
 1925 0109 05       		.uleb128 0x5
 1926 010a 27       		.uleb128 0x27
 1927 010b 19       		.uleb128 0x19
 1928 010c 49       		.uleb128 0x49
 1929 010d 13       		.uleb128 0x13
 1930 010e 11       		.uleb128 0x11
 1931 010f 01       		.uleb128 0x1
 1932 0110 12       		.uleb128 0x12
 1933 0111 06       		.uleb128 0x6
 1934 0112 40       		.uleb128 0x40
 1935 0113 18       		.uleb128 0x18
 1936 0114 9742     		.uleb128 0x2117
 1937 0116 19       		.uleb128 0x19
 1938 0117 01       		.uleb128 0x1
 1939 0118 13       		.uleb128 0x13
 1940 0119 00       		.byte	0
 1941 011a 00       		.byte	0
 1942 011b 15       		.uleb128 0x15
 1943 011c 05       		.uleb128 0x5
 1944 011d 00       		.byte	0
 1945 011e 03       		.uleb128 0x3
 1946 011f 0E       		.uleb128 0xe
 1947 0120 3A       		.uleb128 0x3a
 1948 0121 0B       		.uleb128 0xb
 1949 0122 3B       		.uleb128 0x3b
 1950 0123 05       		.uleb128 0x5
 1951 0124 49       		.uleb128 0x49
 1952 0125 13       		.uleb128 0x13
 1953 0126 02       		.uleb128 0x2
 1954 0127 17       		.uleb128 0x17
 1955 0128 00       		.byte	0
 1956 0129 00       		.byte	0
 1957 012a 16       		.uleb128 0x16
 1958 012b 34       		.uleb128 0x34
 1959 012c 00       		.byte	0
 1960 012d 03       		.uleb128 0x3
ARM GAS  C:\Users\g\AppData\Local\Temp\ccZUjAgS.s 			page 51


 1961 012e 0E       		.uleb128 0xe
 1962 012f 3A       		.uleb128 0x3a
 1963 0130 0B       		.uleb128 0xb
 1964 0131 3B       		.uleb128 0x3b
 1965 0132 05       		.uleb128 0x5
 1966 0133 49       		.uleb128 0x49
 1967 0134 13       		.uleb128 0x13
 1968 0135 02       		.uleb128 0x2
 1969 0136 17       		.uleb128 0x17
 1970 0137 00       		.byte	0
 1971 0138 00       		.byte	0
 1972 0139 17       		.uleb128 0x17
 1973 013a 2E       		.uleb128 0x2e
 1974 013b 01       		.byte	0x1
 1975 013c 3F       		.uleb128 0x3f
 1976 013d 19       		.uleb128 0x19
 1977 013e 03       		.uleb128 0x3
 1978 013f 0E       		.uleb128 0xe
 1979 0140 3A       		.uleb128 0x3a
 1980 0141 0B       		.uleb128 0xb
 1981 0142 3B       		.uleb128 0x3b
 1982 0143 05       		.uleb128 0x5
 1983 0144 27       		.uleb128 0x27
 1984 0145 19       		.uleb128 0x19
 1985 0146 49       		.uleb128 0x49
 1986 0147 13       		.uleb128 0x13
 1987 0148 11       		.uleb128 0x11
 1988 0149 01       		.uleb128 0x1
 1989 014a 12       		.uleb128 0x12
 1990 014b 06       		.uleb128 0x6
 1991 014c 40       		.uleb128 0x40
 1992 014d 18       		.uleb128 0x18
 1993 014e 9642     		.uleb128 0x2116
 1994 0150 19       		.uleb128 0x19
 1995 0151 01       		.uleb128 0x1
 1996 0152 13       		.uleb128 0x13
 1997 0153 00       		.byte	0
 1998 0154 00       		.byte	0
 1999 0155 18       		.uleb128 0x18
 2000 0156 34       		.uleb128 0x34
 2001 0157 00       		.byte	0
 2002 0158 03       		.uleb128 0x3
 2003 0159 0E       		.uleb128 0xe
 2004 015a 3A       		.uleb128 0x3a
 2005 015b 0B       		.uleb128 0xb
 2006 015c 3B       		.uleb128 0x3b
 2007 015d 05       		.uleb128 0x5
 2008 015e 49       		.uleb128 0x49
 2009 015f 13       		.uleb128 0x13
 2010 0160 02       		.uleb128 0x2
 2011 0161 18       		.uleb128 0x18
 2012 0162 00       		.byte	0
 2013 0163 00       		.byte	0
 2014 0164 19       		.uleb128 0x19
 2015 0165 34       		.uleb128 0x34
 2016 0166 00       		.byte	0
 2017 0167 03       		.uleb128 0x3
ARM GAS  C:\Users\g\AppData\Local\Temp\ccZUjAgS.s 			page 52


 2018 0168 0E       		.uleb128 0xe
 2019 0169 3A       		.uleb128 0x3a
 2020 016a 0B       		.uleb128 0xb
 2021 016b 3B       		.uleb128 0x3b
 2022 016c 05       		.uleb128 0x5
 2023 016d 49       		.uleb128 0x49
 2024 016e 13       		.uleb128 0x13
 2025 016f 00       		.byte	0
 2026 0170 00       		.byte	0
 2027 0171 1A       		.uleb128 0x1a
 2028 0172 34       		.uleb128 0x34
 2029 0173 00       		.byte	0
 2030 0174 03       		.uleb128 0x3
 2031 0175 0E       		.uleb128 0xe
 2032 0176 3A       		.uleb128 0x3a
 2033 0177 0B       		.uleb128 0xb
 2034 0178 3B       		.uleb128 0x3b
 2035 0179 0B       		.uleb128 0xb
 2036 017a 49       		.uleb128 0x49
 2037 017b 13       		.uleb128 0x13
 2038 017c 3F       		.uleb128 0x3f
 2039 017d 19       		.uleb128 0x19
 2040 017e 02       		.uleb128 0x2
 2041 017f 18       		.uleb128 0x18
 2042 0180 00       		.byte	0
 2043 0181 00       		.byte	0
 2044 0182 1B       		.uleb128 0x1b
 2045 0183 2E       		.uleb128 0x2e
 2046 0184 01       		.byte	0x1
 2047 0185 3F       		.uleb128 0x3f
 2048 0186 19       		.uleb128 0x19
 2049 0187 03       		.uleb128 0x3
 2050 0188 0E       		.uleb128 0xe
 2051 0189 3A       		.uleb128 0x3a
 2052 018a 0B       		.uleb128 0xb
 2053 018b 3B       		.uleb128 0x3b
 2054 018c 0B       		.uleb128 0xb
 2055 018d 27       		.uleb128 0x27
 2056 018e 19       		.uleb128 0x19
 2057 018f 3C       		.uleb128 0x3c
 2058 0190 19       		.uleb128 0x19
 2059 0191 01       		.uleb128 0x1
 2060 0192 13       		.uleb128 0x13
 2061 0193 00       		.byte	0
 2062 0194 00       		.byte	0
 2063 0195 1C       		.uleb128 0x1c
 2064 0196 05       		.uleb128 0x5
 2065 0197 00       		.byte	0
 2066 0198 49       		.uleb128 0x49
 2067 0199 13       		.uleb128 0x13
 2068 019a 00       		.byte	0
 2069 019b 00       		.byte	0
 2070 019c 1D       		.uleb128 0x1d
 2071 019d 2E       		.uleb128 0x2e
 2072 019e 01       		.byte	0x1
 2073 019f 3F       		.uleb128 0x3f
 2074 01a0 19       		.uleb128 0x19
ARM GAS  C:\Users\g\AppData\Local\Temp\ccZUjAgS.s 			page 53


 2075 01a1 03       		.uleb128 0x3
 2076 01a2 0E       		.uleb128 0xe
 2077 01a3 3A       		.uleb128 0x3a
 2078 01a4 0B       		.uleb128 0xb
 2079 01a5 3B       		.uleb128 0x3b
 2080 01a6 0B       		.uleb128 0xb
 2081 01a7 27       		.uleb128 0x27
 2082 01a8 19       		.uleb128 0x19
 2083 01a9 49       		.uleb128 0x49
 2084 01aa 13       		.uleb128 0x13
 2085 01ab 3C       		.uleb128 0x3c
 2086 01ac 19       		.uleb128 0x19
 2087 01ad 01       		.uleb128 0x1
 2088 01ae 13       		.uleb128 0x13
 2089 01af 00       		.byte	0
 2090 01b0 00       		.byte	0
 2091 01b1 1E       		.uleb128 0x1e
 2092 01b2 2E       		.uleb128 0x2e
 2093 01b3 01       		.byte	0x1
 2094 01b4 3F       		.uleb128 0x3f
 2095 01b5 19       		.uleb128 0x19
 2096 01b6 03       		.uleb128 0x3
 2097 01b7 0E       		.uleb128 0xe
 2098 01b8 3A       		.uleb128 0x3a
 2099 01b9 0B       		.uleb128 0xb
 2100 01ba 3B       		.uleb128 0x3b
 2101 01bb 0B       		.uleb128 0xb
 2102 01bc 27       		.uleb128 0x27
 2103 01bd 19       		.uleb128 0x19
 2104 01be 3C       		.uleb128 0x3c
 2105 01bf 19       		.uleb128 0x19
 2106 01c0 00       		.byte	0
 2107 01c1 00       		.byte	0
 2108 01c2 00       		.byte	0
 2109              		.section	.debug_loc,"",%progbits
 2110              	.Ldebug_loc0:
 2111              	.LLST0:
 2112 0000 82000000 		.4byte	.LVL5
 2113 0004 86000000 		.4byte	.LVL6
 2114 0008 0200     		.2byte	0x2
 2115 000a 30       		.byte	0x30
 2116 000b 9F       		.byte	0x9f
 2117 000c 86000000 		.4byte	.LVL6
 2118 0010 8C010000 		.4byte	.LFE1
 2119 0014 0100     		.2byte	0x1
 2120 0016 52       		.byte	0x52
 2121 0017 00000000 		.4byte	0
 2122 001b 00000000 		.4byte	0
 2123              	.LLST1:
 2124 001f 76000000 		.4byte	.LVL2
 2125 0023 7A000000 		.4byte	.LVL3
 2126 0027 0100     		.2byte	0x1
 2127 0029 51       		.byte	0x51
 2128 002a 7A000000 		.4byte	.LVL3
 2129 002e 86000000 		.4byte	.LVL6
 2130 0032 0100     		.2byte	0x1
 2131 0034 53       		.byte	0x53
ARM GAS  C:\Users\g\AppData\Local\Temp\ccZUjAgS.s 			page 54


 2132 0035 92000000 		.4byte	.LVL7
 2133 0039 A4000000 		.4byte	.LVL9
 2134 003d 0100     		.2byte	0x1
 2135 003f 53       		.byte	0x53
 2136 0040 A4000000 		.4byte	.LVL9
 2137 0044 AA000000 		.4byte	.LVL10
 2138 0048 0200     		.2byte	0x2
 2139 004a 71       		.byte	0x71
 2140 004b 00       		.sleb128 0
 2141 004c AA000000 		.4byte	.LVL10
 2142 0050 B6000000 		.4byte	.LVL11
 2143 0054 0700     		.2byte	0x7
 2144 0056 72       		.byte	0x72
 2145 0057 00       		.sleb128 0
 2146 0058 32       		.byte	0x32
 2147 0059 24       		.byte	0x24
 2148 005a 7C       		.byte	0x7c
 2149 005b 00       		.sleb128 0
 2150 005c 22       		.byte	0x22
 2151 005d B6000000 		.4byte	.LVL11
 2152 0061 BA000000 		.4byte	.LVL12
 2153 0065 1E00     		.2byte	0x1e
 2154 0067 72       		.byte	0x72
 2155 0068 00       		.sleb128 0
 2156 0069 32       		.byte	0x32
 2157 006a 24       		.byte	0x24
 2158 006b 03       		.byte	0x3
 2159 006c 00000000 		.4byte	.LANCHOR0
 2160 0070 22       		.byte	0x22
 2161 0071 06       		.byte	0x6
 2162 0072 0A       		.byte	0xa
 2163 0073 0037     		.2byte	0x3700
 2164 0075 1A       		.byte	0x1a
 2165 0076 72       		.byte	0x72
 2166 0077 00       		.sleb128 0
 2167 0078 03       		.byte	0x3
 2168 0079 08000000 		.4byte	.LANCHOR0+8
 2169 007d 22       		.byte	0x22
 2170 007e 94       		.byte	0x94
 2171 007f 01       		.byte	0x1
 2172 0080 08       		.byte	0x8
 2173 0081 FF       		.byte	0xff
 2174 0082 1A       		.byte	0x1a
 2175 0083 21       		.byte	0x21
 2176 0084 9F       		.byte	0x9f
 2177 0085 BA000000 		.4byte	.LVL12
 2178 0089 C6000000 		.4byte	.LVL13
 2179 008d 1A00     		.2byte	0x1a
 2180 008f 72       		.byte	0x72
 2181 0090 00       		.sleb128 0
 2182 0091 32       		.byte	0x32
 2183 0092 24       		.byte	0x24
 2184 0093 71       		.byte	0x71
 2185 0094 00       		.sleb128 0
 2186 0095 22       		.byte	0x22
 2187 0096 06       		.byte	0x6
 2188 0097 0A       		.byte	0xa
ARM GAS  C:\Users\g\AppData\Local\Temp\ccZUjAgS.s 			page 55


 2189 0098 0037     		.2byte	0x3700
 2190 009a 1A       		.byte	0x1a
 2191 009b 71       		.byte	0x71
 2192 009c 00       		.sleb128 0
 2193 009d 72       		.byte	0x72
 2194 009e 00       		.sleb128 0
 2195 009f 22       		.byte	0x22
 2196 00a0 23       		.byte	0x23
 2197 00a1 08       		.uleb128 0x8
 2198 00a2 94       		.byte	0x94
 2199 00a3 01       		.byte	0x1
 2200 00a4 08       		.byte	0x8
 2201 00a5 FF       		.byte	0xff
 2202 00a6 1A       		.byte	0x1a
 2203 00a7 21       		.byte	0x21
 2204 00a8 9F       		.byte	0x9f
 2205 00a9 C6000000 		.4byte	.LVL13
 2206 00ad D6000000 		.4byte	.LVL14
 2207 00b1 1E00     		.2byte	0x1e
 2208 00b3 72       		.byte	0x72
 2209 00b4 00       		.sleb128 0
 2210 00b5 32       		.byte	0x32
 2211 00b6 24       		.byte	0x24
 2212 00b7 03       		.byte	0x3
 2213 00b8 00000000 		.4byte	.LANCHOR0
 2214 00bc 22       		.byte	0x22
 2215 00bd 06       		.byte	0x6
 2216 00be 0A       		.byte	0xa
 2217 00bf 0037     		.2byte	0x3700
 2218 00c1 1A       		.byte	0x1a
 2219 00c2 72       		.byte	0x72
 2220 00c3 00       		.sleb128 0
 2221 00c4 03       		.byte	0x3
 2222 00c5 08000000 		.4byte	.LANCHOR0+8
 2223 00c9 22       		.byte	0x22
 2224 00ca 94       		.byte	0x94
 2225 00cb 01       		.byte	0x1
 2226 00cc 08       		.byte	0x8
 2227 00cd FF       		.byte	0xff
 2228 00ce 1A       		.byte	0x1a
 2229 00cf 21       		.byte	0x21
 2230 00d0 9F       		.byte	0x9f
 2231 00d1 D6000000 		.4byte	.LVL14
 2232 00d5 D8000000 		.4byte	.LVL15
 2233 00d9 1A00     		.2byte	0x1a
 2234 00db 72       		.byte	0x72
 2235 00dc 00       		.sleb128 0
 2236 00dd 32       		.byte	0x32
 2237 00de 24       		.byte	0x24
 2238 00df 71       		.byte	0x71
 2239 00e0 00       		.sleb128 0
 2240 00e1 22       		.byte	0x22
 2241 00e2 06       		.byte	0x6
 2242 00e3 0A       		.byte	0xa
 2243 00e4 0037     		.2byte	0x3700
 2244 00e6 1A       		.byte	0x1a
 2245 00e7 71       		.byte	0x71
ARM GAS  C:\Users\g\AppData\Local\Temp\ccZUjAgS.s 			page 56


 2246 00e8 00       		.sleb128 0
 2247 00e9 72       		.byte	0x72
 2248 00ea 00       		.sleb128 0
 2249 00eb 22       		.byte	0x22
 2250 00ec 23       		.byte	0x23
 2251 00ed 08       		.uleb128 0x8
 2252 00ee 94       		.byte	0x94
 2253 00ef 01       		.byte	0x1
 2254 00f0 08       		.byte	0x8
 2255 00f1 FF       		.byte	0xff
 2256 00f2 1A       		.byte	0x1a
 2257 00f3 21       		.byte	0x21
 2258 00f4 9F       		.byte	0x9f
 2259 00f5 D8000000 		.4byte	.LVL15
 2260 00f9 1A010000 		.4byte	.LVL18
 2261 00fd 1E00     		.2byte	0x1e
 2262 00ff 72       		.byte	0x72
 2263 0100 00       		.sleb128 0
 2264 0101 32       		.byte	0x32
 2265 0102 24       		.byte	0x24
 2266 0103 03       		.byte	0x3
 2267 0104 00000000 		.4byte	.LANCHOR0
 2268 0108 22       		.byte	0x22
 2269 0109 06       		.byte	0x6
 2270 010a 0A       		.byte	0xa
 2271 010b 0037     		.2byte	0x3700
 2272 010d 1A       		.byte	0x1a
 2273 010e 72       		.byte	0x72
 2274 010f 00       		.sleb128 0
 2275 0110 03       		.byte	0x3
 2276 0111 08000000 		.4byte	.LANCHOR0+8
 2277 0115 22       		.byte	0x22
 2278 0116 94       		.byte	0x94
 2279 0117 01       		.byte	0x1
 2280 0118 08       		.byte	0x8
 2281 0119 FF       		.byte	0xff
 2282 011a 1A       		.byte	0x1a
 2283 011b 21       		.byte	0x21
 2284 011c 9F       		.byte	0x9f
 2285 011d 00000000 		.4byte	0
 2286 0121 00000000 		.4byte	0
 2287              	.LLST2:
 2288 0125 E6000000 		.4byte	.LVL16
 2289 0129 14010000 		.4byte	.LVL17
 2290 012d 0100     		.2byte	0x1
 2291 012f 50       		.byte	0x50
 2292 0130 00000000 		.4byte	0
 2293 0134 00000000 		.4byte	0
 2294              	.LLST3:
 2295 0138 00000000 		.4byte	.LVL22
 2296 013c 06000000 		.4byte	.LVL24
 2297 0140 0100     		.2byte	0x1
 2298 0142 50       		.byte	0x50
 2299 0143 06000000 		.4byte	.LVL24
 2300 0147 1A000000 		.4byte	.LVL26
 2301 014b 0100     		.2byte	0x1
 2302 014d 52       		.byte	0x52
ARM GAS  C:\Users\g\AppData\Local\Temp\ccZUjAgS.s 			page 57


 2303 014e 1A000000 		.4byte	.LVL26
 2304 0152 20000000 		.4byte	.LVL27
 2305 0156 0400     		.2byte	0x4
 2306 0158 F3       		.byte	0xf3
 2307 0159 01       		.uleb128 0x1
 2308 015a 50       		.byte	0x50
 2309 015b 9F       		.byte	0x9f
 2310 015c 20000000 		.4byte	.LVL27
 2311 0160 22000000 		.4byte	.LVL28
 2312 0164 0100     		.2byte	0x1
 2313 0166 50       		.byte	0x50
 2314 0167 22000000 		.4byte	.LVL28
 2315 016b 28000000 		.4byte	.LFE6
 2316 016f 0400     		.2byte	0x4
 2317 0171 F3       		.byte	0xf3
 2318 0172 01       		.uleb128 0x1
 2319 0173 50       		.byte	0x50
 2320 0174 9F       		.byte	0x9f
 2321 0175 00000000 		.4byte	0
 2322 0179 00000000 		.4byte	0
 2323              	.LLST4:
 2324 017d 02000000 		.4byte	.LVL23
 2325 0181 06000000 		.4byte	.LVL24
 2326 0185 0200     		.2byte	0x2
 2327 0187 30       		.byte	0x30
 2328 0188 9F       		.byte	0x9f
 2329 0189 0E000000 		.4byte	.LVL25
 2330 018d 20000000 		.4byte	.LVL27
 2331 0191 0100     		.2byte	0x1
 2332 0193 50       		.byte	0x50
 2333 0194 20000000 		.4byte	.LVL27
 2334 0198 22000000 		.4byte	.LVL28
 2335 019c 0200     		.2byte	0x2
 2336 019e 30       		.byte	0x30
 2337 019f 9F       		.byte	0x9f
 2338 01a0 22000000 		.4byte	.LVL28
 2339 01a4 28000000 		.4byte	.LFE6
 2340 01a8 0100     		.2byte	0x1
 2341 01aa 50       		.byte	0x50
 2342 01ab 00000000 		.4byte	0
 2343 01af 00000000 		.4byte	0
 2344              	.LLST5:
 2345 01b3 00000000 		.4byte	.LVL29
 2346 01b7 0A000000 		.4byte	.LVL30
 2347 01bb 0100     		.2byte	0x1
 2348 01bd 50       		.byte	0x50
 2349 01be 0A000000 		.4byte	.LVL30
 2350 01c2 14000000 		.4byte	.LVL32
 2351 01c6 0100     		.2byte	0x1
 2352 01c8 54       		.byte	0x54
 2353 01c9 14000000 		.4byte	.LVL32
 2354 01cd 22000000 		.4byte	.LVL34
 2355 01d1 0400     		.2byte	0x4
 2356 01d3 F3       		.byte	0xf3
 2357 01d4 01       		.uleb128 0x1
 2358 01d5 50       		.byte	0x50
 2359 01d6 9F       		.byte	0x9f
ARM GAS  C:\Users\g\AppData\Local\Temp\ccZUjAgS.s 			page 58


 2360 01d7 22000000 		.4byte	.LVL34
 2361 01db 24000000 		.4byte	.LVL35
 2362 01df 0100     		.2byte	0x1
 2363 01e1 54       		.byte	0x54
 2364 01e2 24000000 		.4byte	.LVL35
 2365 01e6 2C000000 		.4byte	.LFE7
 2366 01ea 0400     		.2byte	0x4
 2367 01ec F3       		.byte	0xf3
 2368 01ed 01       		.uleb128 0x1
 2369 01ee 50       		.byte	0x50
 2370 01ef 9F       		.byte	0x9f
 2371 01f0 00000000 		.4byte	0
 2372 01f4 00000000 		.4byte	0
 2373              	.LLST6:
 2374 01f8 20000000 		.4byte	.LVL33
 2375 01fc 22000000 		.4byte	.LVL34
 2376 0200 0100     		.2byte	0x1
 2377 0202 50       		.byte	0x50
 2378 0203 24000000 		.4byte	.LVL35
 2379 0207 26000000 		.4byte	.LVL36
 2380 020b 0100     		.2byte	0x1
 2381 020d 50       		.byte	0x50
 2382 020e 00000000 		.4byte	0
 2383 0212 00000000 		.4byte	0
 2384              	.LLST7:
 2385 0216 00000000 		.4byte	.LVL37
 2386 021a 04000000 		.4byte	.LVL38
 2387 021e 0100     		.2byte	0x1
 2388 0220 50       		.byte	0x50
 2389 0221 04000000 		.4byte	.LVL38
 2390 0225 10000000 		.4byte	.LFE8
 2391 0229 0400     		.2byte	0x4
 2392 022b F3       		.byte	0xf3
 2393 022c 01       		.uleb128 0x1
 2394 022d 50       		.byte	0x50
 2395 022e 9F       		.byte	0x9f
 2396 022f 00000000 		.4byte	0
 2397 0233 00000000 		.4byte	0
 2398              	.LLST8:
 2399 0237 00000000 		.4byte	.LVL39
 2400 023b 0E000000 		.4byte	.LVL40
 2401 023f 0100     		.2byte	0x1
 2402 0241 50       		.byte	0x50
 2403 0242 0E000000 		.4byte	.LVL40
 2404 0246 1C000000 		.4byte	.LFE9
 2405 024a 0400     		.2byte	0x4
 2406 024c F3       		.byte	0xf3
 2407 024d 01       		.uleb128 0x1
 2408 024e 50       		.byte	0x50
 2409 024f 9F       		.byte	0x9f
 2410 0250 00000000 		.4byte	0
 2411 0254 00000000 		.4byte	0
 2412              	.LLST9:
 2413 0258 00000000 		.4byte	.LVL41
 2414 025c 0E000000 		.4byte	.LVL42
 2415 0260 0100     		.2byte	0x1
 2416 0262 50       		.byte	0x50
ARM GAS  C:\Users\g\AppData\Local\Temp\ccZUjAgS.s 			page 59


 2417 0263 0E000000 		.4byte	.LVL42
 2418 0267 18000000 		.4byte	.LFE10
 2419 026b 0400     		.2byte	0x4
 2420 026d F3       		.byte	0xf3
 2421 026e 01       		.uleb128 0x1
 2422 026f 50       		.byte	0x50
 2423 0270 9F       		.byte	0x9f
 2424 0271 00000000 		.4byte	0
 2425 0275 00000000 		.4byte	0
 2426              	.LLST10:
 2427 0279 00000000 		.4byte	.LVL43
 2428 027d 04000000 		.4byte	.LVL44
 2429 0281 0100     		.2byte	0x1
 2430 0283 50       		.byte	0x50
 2431 0284 04000000 		.4byte	.LVL44
 2432 0288 10000000 		.4byte	.LFE11
 2433 028c 0400     		.2byte	0x4
 2434 028e F3       		.byte	0xf3
 2435 028f 01       		.uleb128 0x1
 2436 0290 50       		.byte	0x50
 2437 0291 9F       		.byte	0x9f
 2438 0292 00000000 		.4byte	0
 2439 0296 00000000 		.4byte	0
 2440              	.LLST11:
 2441 029a 00000000 		.4byte	.LVL45
 2442 029e 04000000 		.4byte	.LVL46
 2443 02a2 0100     		.2byte	0x1
 2444 02a4 50       		.byte	0x50
 2445 02a5 04000000 		.4byte	.LVL46
 2446 02a9 10000000 		.4byte	.LFE12
 2447 02ad 0400     		.2byte	0x4
 2448 02af F3       		.byte	0xf3
 2449 02b0 01       		.uleb128 0x1
 2450 02b1 50       		.byte	0x50
 2451 02b2 9F       		.byte	0x9f
 2452 02b3 00000000 		.4byte	0
 2453 02b7 00000000 		.4byte	0
 2454              	.LLST12:
 2455 02bb 00000000 		.4byte	.LVL47
 2456 02bf 0C000000 		.4byte	.LVL48
 2457 02c3 0100     		.2byte	0x1
 2458 02c5 50       		.byte	0x50
 2459 02c6 0C000000 		.4byte	.LVL48
 2460 02ca 12000000 		.4byte	.LVL50
 2461 02ce 0100     		.2byte	0x1
 2462 02d0 54       		.byte	0x54
 2463 02d1 12000000 		.4byte	.LVL50
 2464 02d5 1C000000 		.4byte	.LFE13
 2465 02d9 0400     		.2byte	0x4
 2466 02db F3       		.byte	0xf3
 2467 02dc 01       		.uleb128 0x1
 2468 02dd 50       		.byte	0x50
 2469 02de 9F       		.byte	0x9f
 2470 02df 00000000 		.4byte	0
 2471 02e3 00000000 		.4byte	0
 2472              	.LLST13:
 2473 02e7 00000000 		.4byte	.LVL47
ARM GAS  C:\Users\g\AppData\Local\Temp\ccZUjAgS.s 			page 60


 2474 02eb 0F000000 		.4byte	.LVL49-1
 2475 02ef 0100     		.2byte	0x1
 2476 02f1 51       		.byte	0x51
 2477 02f2 0F000000 		.4byte	.LVL49-1
 2478 02f6 1C000000 		.4byte	.LFE13
 2479 02fa 0400     		.2byte	0x4
 2480 02fc F3       		.byte	0xf3
 2481 02fd 01       		.uleb128 0x1
 2482 02fe 51       		.byte	0x51
 2483 02ff 9F       		.byte	0x9f
 2484 0300 00000000 		.4byte	0
 2485 0304 00000000 		.4byte	0
 2486              	.LLST14:
 2487 0308 00000000 		.4byte	.LVL51
 2488 030c 0C000000 		.4byte	.LVL52
 2489 0310 0100     		.2byte	0x1
 2490 0312 50       		.byte	0x50
 2491 0313 0C000000 		.4byte	.LVL52
 2492 0317 12000000 		.4byte	.LVL54
 2493 031b 0100     		.2byte	0x1
 2494 031d 54       		.byte	0x54
 2495 031e 12000000 		.4byte	.LVL54
 2496 0322 1C000000 		.4byte	.LFE14
 2497 0326 0400     		.2byte	0x4
 2498 0328 F3       		.byte	0xf3
 2499 0329 01       		.uleb128 0x1
 2500 032a 50       		.byte	0x50
 2501 032b 9F       		.byte	0x9f
 2502 032c 00000000 		.4byte	0
 2503 0330 00000000 		.4byte	0
 2504              	.LLST15:
 2505 0334 00000000 		.4byte	.LVL51
 2506 0338 0F000000 		.4byte	.LVL53-1
 2507 033c 0100     		.2byte	0x1
 2508 033e 51       		.byte	0x51
 2509 033f 0F000000 		.4byte	.LVL53-1
 2510 0343 16000000 		.4byte	.LVL55
 2511 0347 0100     		.2byte	0x1
 2512 0349 55       		.byte	0x55
 2513 034a 16000000 		.4byte	.LVL55
 2514 034e 1C000000 		.4byte	.LFE14
 2515 0352 0800     		.2byte	0x8
 2516 0354 F3       		.byte	0xf3
 2517 0355 01       		.uleb128 0x1
 2518 0356 50       		.byte	0x50
 2519 0357 32       		.byte	0x32
 2520 0358 24       		.byte	0x24
 2521 0359 73       		.byte	0x73
 2522 035a 00       		.sleb128 0
 2523 035b 22       		.byte	0x22
 2524 035c 00000000 		.4byte	0
 2525 0360 00000000 		.4byte	0
 2526              	.LLST16:
 2527 0364 00000000 		.4byte	.LVL56
 2528 0368 0C000000 		.4byte	.LVL57
 2529 036c 0100     		.2byte	0x1
 2530 036e 50       		.byte	0x50
ARM GAS  C:\Users\g\AppData\Local\Temp\ccZUjAgS.s 			page 61


 2531 036f 0C000000 		.4byte	.LVL57
 2532 0373 44000000 		.4byte	.LVL63
 2533 0377 0100     		.2byte	0x1
 2534 0379 54       		.byte	0x54
 2535 037a 44000000 		.4byte	.LVL63
 2536 037e 5C000000 		.4byte	.LFE15
 2537 0382 0400     		.2byte	0x4
 2538 0384 F3       		.byte	0xf3
 2539 0385 01       		.uleb128 0x1
 2540 0386 50       		.byte	0x50
 2541 0387 9F       		.byte	0x9f
 2542 0388 00000000 		.4byte	0
 2543 038c 00000000 		.4byte	0
 2544              	.LLST17:
 2545 0390 00000000 		.4byte	.LVL56
 2546 0394 0F000000 		.4byte	.LVL58-1
 2547 0398 0100     		.2byte	0x1
 2548 039a 51       		.byte	0x51
 2549 039b 0F000000 		.4byte	.LVL58-1
 2550 039f 1A000000 		.4byte	.LVL59
 2551 03a3 0400     		.2byte	0x4
 2552 03a5 F3       		.byte	0xf3
 2553 03a6 01       		.uleb128 0x1
 2554 03a7 51       		.byte	0x51
 2555 03a8 9F       		.byte	0x9f
 2556 03a9 1A000000 		.4byte	.LVL59
 2557 03ad 28000000 		.4byte	.LVL60
 2558 03b1 0100     		.2byte	0x1
 2559 03b3 51       		.byte	0x51
 2560 03b4 32000000 		.4byte	.LVL61
 2561 03b8 36000000 		.4byte	.LVL62
 2562 03bc 0100     		.2byte	0x1
 2563 03be 51       		.byte	0x51
 2564 03bf 00000000 		.4byte	0
 2565 03c3 00000000 		.4byte	0
 2566              	.LLST18:
 2567 03c7 00000000 		.4byte	.LVL65
 2568 03cb 0C000000 		.4byte	.LVL66
 2569 03cf 0100     		.2byte	0x1
 2570 03d1 50       		.byte	0x50
 2571 03d2 0C000000 		.4byte	.LVL66
 2572 03d6 26000000 		.4byte	.LVL70
 2573 03da 0100     		.2byte	0x1
 2574 03dc 55       		.byte	0x55
 2575 03dd 26000000 		.4byte	.LVL70
 2576 03e1 40000000 		.4byte	.LFE16
 2577 03e5 0400     		.2byte	0x4
 2578 03e7 F3       		.byte	0xf3
 2579 03e8 01       		.uleb128 0x1
 2580 03e9 50       		.byte	0x50
 2581 03ea 9F       		.byte	0x9f
 2582 03eb 00000000 		.4byte	0
 2583 03ef 00000000 		.4byte	0
 2584              	.LLST19:
 2585 03f3 00000000 		.4byte	.LVL65
 2586 03f7 0F000000 		.4byte	.LVL67-1
 2587 03fb 0100     		.2byte	0x1
ARM GAS  C:\Users\g\AppData\Local\Temp\ccZUjAgS.s 			page 62


 2588 03fd 51       		.byte	0x51
 2589 03fe 0F000000 		.4byte	.LVL67-1
 2590 0402 1A000000 		.4byte	.LVL68
 2591 0406 0400     		.2byte	0x4
 2592 0408 F3       		.byte	0xf3
 2593 0409 01       		.uleb128 0x1
 2594 040a 51       		.byte	0x51
 2595 040b 9F       		.byte	0x9f
 2596 040c 1A000000 		.4byte	.LVL68
 2597 0410 23000000 		.4byte	.LVL69-1
 2598 0414 0100     		.2byte	0x1
 2599 0416 50       		.byte	0x50
 2600 0417 00000000 		.4byte	0
 2601 041b 00000000 		.4byte	0
 2602              	.LLST20:
 2603 041f 00000000 		.4byte	.LVL72
 2604 0423 0C000000 		.4byte	.LVL73
 2605 0427 0100     		.2byte	0x1
 2606 0429 50       		.byte	0x50
 2607 042a 0C000000 		.4byte	.LVL73
 2608 042e 28000000 		.4byte	.LVL78
 2609 0432 0100     		.2byte	0x1
 2610 0434 54       		.byte	0x54
 2611 0435 28000000 		.4byte	.LVL78
 2612 0439 48000000 		.4byte	.LFE17
 2613 043d 0400     		.2byte	0x4
 2614 043f F3       		.byte	0xf3
 2615 0440 01       		.uleb128 0x1
 2616 0441 50       		.byte	0x50
 2617 0442 9F       		.byte	0x9f
 2618 0443 00000000 		.4byte	0
 2619 0447 00000000 		.4byte	0
 2620              	.LLST21:
 2621 044b 00000000 		.4byte	.LVL72
 2622 044f 0F000000 		.4byte	.LVL74-1
 2623 0453 0100     		.2byte	0x1
 2624 0455 51       		.byte	0x51
 2625 0456 0F000000 		.4byte	.LVL74-1
 2626 045a 1A000000 		.4byte	.LVL75
 2627 045e 0400     		.2byte	0x4
 2628 0460 F3       		.byte	0xf3
 2629 0461 01       		.uleb128 0x1
 2630 0462 51       		.byte	0x51
 2631 0463 9F       		.byte	0x9f
 2632 0464 1A000000 		.4byte	.LVL75
 2633 0468 1D000000 		.4byte	.LVL76-1
 2634 046c 0100     		.2byte	0x1
 2635 046e 50       		.byte	0x50
 2636 046f 00000000 		.4byte	0
 2637 0473 00000000 		.4byte	0
 2638              		.section	.debug_aranges,"",%progbits
 2639 0000 A4000000 		.4byte	0xa4
 2640 0004 0200     		.2byte	0x2
 2641 0006 00000000 		.4byte	.Ldebug_info0
 2642 000a 04       		.byte	0x4
 2643 000b 00       		.byte	0
 2644 000c 0000     		.2byte	0
ARM GAS  C:\Users\g\AppData\Local\Temp\ccZUjAgS.s 			page 63


 2645 000e 0000     		.2byte	0
 2646 0010 00000000 		.4byte	.LFB1
 2647 0014 8C010000 		.4byte	.LFE1-.LFB1
 2648 0018 00000000 		.4byte	.LFB2
 2649 001c 24000000 		.4byte	.LFE2-.LFB2
 2650 0020 00000000 		.4byte	.LFB0
 2651 0024 20000000 		.4byte	.LFE0-.LFB0
 2652 0028 00000000 		.4byte	.LFB3
 2653 002c 10000000 		.4byte	.LFE3-.LFB3
 2654 0030 00000000 		.4byte	.LFB4
 2655 0034 0C000000 		.4byte	.LFE4-.LFB4
 2656 0038 00000000 		.4byte	.LFB5
 2657 003c 02000000 		.4byte	.LFE5-.LFB5
 2658 0040 00000000 		.4byte	.LFB6
 2659 0044 28000000 		.4byte	.LFE6-.LFB6
 2660 0048 00000000 		.4byte	.LFB7
 2661 004c 2C000000 		.4byte	.LFE7-.LFB7
 2662 0050 00000000 		.4byte	.LFB8
 2663 0054 10000000 		.4byte	.LFE8-.LFB8
 2664 0058 00000000 		.4byte	.LFB9
 2665 005c 1C000000 		.4byte	.LFE9-.LFB9
 2666 0060 00000000 		.4byte	.LFB10
 2667 0064 18000000 		.4byte	.LFE10-.LFB10
 2668 0068 00000000 		.4byte	.LFB11
 2669 006c 10000000 		.4byte	.LFE11-.LFB11
 2670 0070 00000000 		.4byte	.LFB12
 2671 0074 10000000 		.4byte	.LFE12-.LFB12
 2672 0078 00000000 		.4byte	.LFB13
 2673 007c 1C000000 		.4byte	.LFE13-.LFB13
 2674 0080 00000000 		.4byte	.LFB14
 2675 0084 1C000000 		.4byte	.LFE14-.LFB14
 2676 0088 00000000 		.4byte	.LFB15
 2677 008c 5C000000 		.4byte	.LFE15-.LFB15
 2678 0090 00000000 		.4byte	.LFB16
 2679 0094 40000000 		.4byte	.LFE16-.LFB16
 2680 0098 00000000 		.4byte	.LFB17
 2681 009c 48000000 		.4byte	.LFE17-.LFB17
 2682 00a0 00000000 		.4byte	0
 2683 00a4 00000000 		.4byte	0
 2684              		.section	.debug_ranges,"",%progbits
 2685              	.Ldebug_ranges0:
 2686 0000 00000000 		.4byte	.LFB1
 2687 0004 8C010000 		.4byte	.LFE1
 2688 0008 00000000 		.4byte	.LFB2
 2689 000c 24000000 		.4byte	.LFE2
 2690 0010 00000000 		.4byte	.LFB0
 2691 0014 20000000 		.4byte	.LFE0
 2692 0018 00000000 		.4byte	.LFB3
 2693 001c 10000000 		.4byte	.LFE3
 2694 0020 00000000 		.4byte	.LFB4
 2695 0024 0C000000 		.4byte	.LFE4
 2696 0028 00000000 		.4byte	.LFB5
 2697 002c 02000000 		.4byte	.LFE5
 2698 0030 00000000 		.4byte	.LFB6
 2699 0034 28000000 		.4byte	.LFE6
 2700 0038 00000000 		.4byte	.LFB7
 2701 003c 2C000000 		.4byte	.LFE7
ARM GAS  C:\Users\g\AppData\Local\Temp\ccZUjAgS.s 			page 64


 2702 0040 00000000 		.4byte	.LFB8
 2703 0044 10000000 		.4byte	.LFE8
 2704 0048 00000000 		.4byte	.LFB9
 2705 004c 1C000000 		.4byte	.LFE9
 2706 0050 00000000 		.4byte	.LFB10
 2707 0054 18000000 		.4byte	.LFE10
 2708 0058 00000000 		.4byte	.LFB11
 2709 005c 10000000 		.4byte	.LFE11
 2710 0060 00000000 		.4byte	.LFB12
 2711 0064 10000000 		.4byte	.LFE12
 2712 0068 00000000 		.4byte	.LFB13
 2713 006c 1C000000 		.4byte	.LFE13
 2714 0070 00000000 		.4byte	.LFB14
 2715 0074 1C000000 		.4byte	.LFE14
 2716 0078 00000000 		.4byte	.LFB15
 2717 007c 5C000000 		.4byte	.LFE15
 2718 0080 00000000 		.4byte	.LFB16
 2719 0084 40000000 		.4byte	.LFE16
 2720 0088 00000000 		.4byte	.LFB17
 2721 008c 48000000 		.4byte	.LFE17
 2722 0090 00000000 		.4byte	0
 2723 0094 00000000 		.4byte	0
 2724              		.section	.debug_line,"",%progbits
 2725              	.Ldebug_line0:
 2726 0000 96020000 		.section	.debug_str,"MS",%progbits,1
 2726      02004D00 
 2726      00000201 
 2726      FB0E0D00 
 2726      01010101 
 2727              	.LASF10:
 2728 0000 75696E74 		.ascii	"uint16\000"
 2728      313600
 2729              	.LASF49:
 2730 0007 61646347 		.ascii	"adcGain\000"
 2730      61696E00 
 2731              	.LASF24:
 2732 000f 636F756E 		.ascii	"counts\000"
 2732      747300
 2733              	.LASF54:
 2734 0016 4144435F 		.ascii	"ADC_CountsTo_Volts\000"
 2734      436F756E 
 2734      7473546F 
 2734      5F566F6C 
 2734      747300
 2735              	.LASF26:
 2736 0029 4144435F 		.ascii	"ADC_Init\000"
 2736      496E6974 
 2736      00
 2737              	.LASF7:
 2738 0032 6C6F6E67 		.ascii	"long long unsigned int\000"
 2738      206C6F6E 
 2738      6720756E 
 2738      7369676E 
 2738      65642069 
 2739              	.LASF25:
 2740 0049 4144435F 		.ascii	"ADC_InputsPlacement\000"
 2740      496E7075 
ARM GAS  C:\Users\g\AppData\Local\Temp\ccZUjAgS.s 			page 65


 2740      7473506C 
 2740      6163656D 
 2740      656E7400 
 2741              	.LASF30:
 2742 005d 4144435F 		.ascii	"ADC_StartConvert\000"
 2742      53746172 
 2742      74436F6E 
 2742      76657274 
 2742      00
 2743              	.LASF62:
 2744 006e 474E5520 		.ascii	"GNU C 4.9.3 20150303 (release) [ARM/embedded-4_9-br"
 2744      4320342E 
 2744      392E3320 
 2744      32303135 
 2744      30333033 
 2745 00a1 616E6368 		.ascii	"anch revision 221220] -mcpu=cortex-m0 -mthumb -g -O"
 2745      20726576 
 2745      6973696F 
 2745      6E203232 
 2745      31323230 
 2746 00d4 67202D73 		.ascii	"g -std=gnu99 -ffunction-sections -ffat-lto-objects\000"
 2746      74643D67 
 2746      6E753939 
 2746      202D6666 
 2746      756E6374 
 2747              	.LASF6:
 2748 0107 6C6F6E67 		.ascii	"long long int\000"
 2748      206C6F6E 
 2748      6720696E 
 2748      7400
 2749              	.LASF0:
 2750 0115 7369676E 		.ascii	"signed char\000"
 2750      65642063 
 2750      68617200 
 2751              	.LASF32:
 2752 0121 73746174 		.ascii	"status\000"
 2752      757300
 2753              	.LASF13:
 2754 0128 696E7433 		.ascii	"int32\000"
 2754      3200
 2755              	.LASF28:
 2756 012e 4144435F 		.ascii	"ADC_Start\000"
 2756      53746172 
 2756      7400
 2757              	.LASF4:
 2758 0138 6C6F6E67 		.ascii	"long int\000"
 2758      20696E74 
 2758      00
 2759              	.LASF53:
 2760 0141 4144435F 		.ascii	"ADC_CountsTo_uVolts\000"
 2760      436F756E 
 2760      7473546F 
 2760      5F75566F 
 2760      6C747300 
 2761              	.LASF59:
 2762 0155 4144435F 		.ascii	"ADC_countsPer10Volt\000"
 2762      636F756E 
ARM GAS  C:\Users\g\AppData\Local\Temp\ccZUjAgS.s 			page 66


 2762      74735065 
 2762      72313056 
 2762      6F6C7400 
 2763              	.LASF9:
 2764 0169 75696E74 		.ascii	"uint8\000"
 2764      3800
 2765              	.LASF61:
 2766 016f 43794465 		.ascii	"CyDelayUs\000"
 2766      6C617955 
 2766      7300
 2767              	.LASF16:
 2768 0179 646F7562 		.ascii	"double\000"
 2768      6C6500
 2769              	.LASF11:
 2770 0180 75696E74 		.ascii	"uint32\000"
 2770      333200
 2771              	.LASF39:
 2772 0187 6D61736B 		.ascii	"mask\000"
 2772      00
 2773              	.LASF57:
 2774 018c 4144435F 		.ascii	"ADC_initVar\000"
 2774      696E6974 
 2774      56617200 
 2775              	.LASF35:
 2776 0198 7265744D 		.ascii	"retMode\000"
 2776      6F646500 
 2777              	.LASF44:
 2778 01a0 4144435F 		.ascii	"ADC_SetLimitMask\000"
 2778      5365744C 
 2778      696D6974 
 2778      4D61736B 
 2778      00
 2779              	.LASF8:
 2780 01b1 756E7369 		.ascii	"unsigned int\000"
 2780      676E6564 
 2780      20696E74 
 2780      00
 2781              	.LASF65:
 2782 01be 75566F6C 		.ascii	"uVolts\000"
 2782      747300
 2783              	.LASF5:
 2784 01c5 6C6F6E67 		.ascii	"long unsigned int\000"
 2784      20756E73 
 2784      69676E65 
 2784      6420696E 
 2784      7400
 2785              	.LASF45:
 2786 01d7 4144435F 		.ascii	"ADC_SetSatMask\000"
 2786      53657453 
 2786      61744D61 
 2786      736B00
 2787              	.LASF55:
 2788 01e6 766F6C74 		.ascii	"volts\000"
 2788      7300
 2789              	.LASF23:
 2790 01ec 746D7052 		.ascii	"tmpRegVal\000"
 2790      65675661 
ARM GAS  C:\Users\g\AppData\Local\Temp\ccZUjAgS.s 			page 67


 2790      6C00
 2791              	.LASF3:
 2792 01f6 73686F72 		.ascii	"short unsigned int\000"
 2792      7420756E 
 2792      7369676E 
 2792      65642069 
 2792      6E7400
 2793              	.LASF66:
 2794 0209 4379496E 		.ascii	"CyIntSetVector\000"
 2794      74536574 
 2794      56656374 
 2794      6F7200
 2795              	.LASF31:
 2796 0218 4144435F 		.ascii	"ADC_StopConvert\000"
 2796      53746F70 
 2796      436F6E76 
 2796      65727400 
 2797              	.LASF52:
 2798 0228 6D566F6C 		.ascii	"mVolts\000"
 2798      747300
 2799              	.LASF19:
 2800 022f 72656733 		.ascii	"reg32\000"
 2800      3200
 2801              	.LASF14:
 2802 0235 666C6F61 		.ascii	"float32\000"
 2802      74333200 
 2803              	.LASF21:
 2804 023d 73697A65 		.ascii	"sizetype\000"
 2804      74797065 
 2804      00
 2805              	.LASF41:
 2806 0246 6C6F774C 		.ascii	"lowLimit\000"
 2806      696D6974 
 2806      00
 2807              	.LASF42:
 2808 024f 4144435F 		.ascii	"ADC_SetHighLimit\000"
 2808      53657448 
 2808      6967684C 
 2808      696D6974 
 2808      00
 2809              	.LASF33:
 2810 0260 4144435F 		.ascii	"ADC_IsEndConversion\000"
 2810      4973456E 
 2810      64436F6E 
 2810      76657273 
 2810      696F6E00 
 2811              	.LASF17:
 2812 0274 696E7436 		.ascii	"int64\000"
 2812      3400
 2813              	.LASF60:
 2814 027a 4379496E 		.ascii	"CyIntSetPriority\000"
 2814      74536574 
 2814      5072696F 
 2814      72697479 
 2814      00
 2815              	.LASF38:
 2816 028b 4144435F 		.ascii	"ADC_SetChanMask\000"
ARM GAS  C:\Users\g\AppData\Local\Temp\ccZUjAgS.s 			page 68


 2816      53657443 
 2816      68616E4D 
 2816      61736B00 
 2817              	.LASF48:
 2818 029b 4144435F 		.ascii	"ADC_SetGain\000"
 2818      53657447 
 2818      61696E00 
 2819              	.LASF15:
 2820 02a7 666C6F61 		.ascii	"float\000"
 2820      7400
 2821              	.LASF43:
 2822 02ad 68696768 		.ascii	"highLimit\000"
 2822      4C696D69 
 2822      7400
 2823              	.LASF50:
 2824 02b7 4144435F 		.ascii	"ADC_CountsTo_mVolts\000"
 2824      436F756E 
 2824      7473546F 
 2824      5F6D566F 
 2824      6C747300 
 2825              	.LASF40:
 2826 02cb 4144435F 		.ascii	"ADC_SetLowLimit\000"
 2826      5365744C 
 2826      6F774C69 
 2826      6D697400 
 2827              	.LASF67:
 2828 02db 43794861 		.ascii	"CyHalt\000"
 2828      6C7400
 2829              	.LASF63:
 2830 02e2 2E5C4765 		.ascii	".\\Generated_Source\\PSoC4\\ADC.c\000"
 2830      6E657261 
 2830      7465645F 
 2830      536F7572 
 2830      63655C50 
 2831              	.LASF1:
 2832 0301 756E7369 		.ascii	"unsigned char\000"
 2832      676E6564 
 2832      20636861 
 2832      7200
 2833              	.LASF58:
 2834 030f 4144435F 		.ascii	"ADC_offset\000"
 2834      6F666673 
 2834      657400
 2835              	.LASF2:
 2836 031a 73686F72 		.ascii	"short int\000"
 2836      7420696E 
 2836      7400
 2837              	.LASF29:
 2838 0324 4144435F 		.ascii	"ADC_Stop\000"
 2838      53746F70 
 2838      00
 2839              	.LASF22:
 2840 032d 63684E75 		.ascii	"chNum\000"
 2840      6D00
 2841              	.LASF36:
 2842 0333 6368616E 		.ascii	"chan\000"
 2842      00
ARM GAS  C:\Users\g\AppData\Local\Temp\ccZUjAgS.s 			page 69


 2843              	.LASF18:
 2844 0338 63686172 		.ascii	"char\000"
 2844      00
 2845              	.LASF20:
 2846 033d 63796973 		.ascii	"cyisraddress\000"
 2846      72616464 
 2846      72657373 
 2846      00
 2847              	.LASF56:
 2848 034a 4144435F 		.ascii	"ADC_channelsConfig\000"
 2848      6368616E 
 2848      6E656C73 
 2848      436F6E66 
 2848      696700
 2849              	.LASF47:
 2850 035d 6F666673 		.ascii	"offset\000"
 2850      657400
 2851              	.LASF51:
 2852 0364 61646343 		.ascii	"adcCounts\000"
 2852      6F756E74 
 2852      7300
 2853              	.LASF64:
 2854 036e 443A5C63 		.ascii	"D:\\code\\cypress\\controllers\\bldc.cydsn\000"
 2854      6F64655C 
 2854      63797072 
 2854      6573735C 
 2854      636F6E74 
 2855              	.LASF27:
 2856 0395 4144435F 		.ascii	"ADC_Enable\000"
 2856      456E6162 
 2856      6C6500
 2857              	.LASF12:
 2858 03a0 696E7431 		.ascii	"int16\000"
 2858      3600
 2859              	.LASF46:
 2860 03a6 4144435F 		.ascii	"ADC_SetOffset\000"
 2860      5365744F 
 2860      66667365 
 2860      7400
 2861              	.LASF37:
 2862 03b4 72657375 		.ascii	"result\000"
 2862      6C7400
 2863              	.LASF34:
 2864 03bb 4144435F 		.ascii	"ADC_GetResult16\000"
 2864      47657452 
 2864      6573756C 
 2864      74313600 
 2865              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 4.9.3 20150303 (release) [ARM/embedded-4_9-br
