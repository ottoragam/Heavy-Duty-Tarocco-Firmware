ARM GAS  C:\Users\g\AppData\Local\Temp\ccjVf3bh.s 			page 1


   1              		.cpu cortex-m0
   2              		.fpu softvfp
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 1
  10              		.eabi_attribute 34, 0
  11              		.eabi_attribute 18, 4
  12              		.code	16
  13              		.file	"CyLFClk.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.CySysClkIloEnabled,"ax",%progbits
  18              		.align	2
  19              		.code	16
  20              		.thumb_func
  21              		.type	CySysClkIloEnabled, %function
  22              	CySysClkIloEnabled:
  23              	.LFB5:
  24              		.file 1 ".\\Generated_Source\\PSoC4\\CyLFClk.c"
   1:.\Generated_Source\PSoC4/CyLFClk.c **** /***************************************************************************//**
   2:.\Generated_Source\PSoC4/CyLFClk.c **** * \file .c
   3:.\Generated_Source\PSoC4/CyLFClk.c **** * \version 1.10
   4:.\Generated_Source\PSoC4/CyLFClk.c **** *
   5:.\Generated_Source\PSoC4/CyLFClk.c **** * \brief
   6:.\Generated_Source\PSoC4/CyLFClk.c **** *  This file provides the source code for configuring watchdog timers WDTs, 
   7:.\Generated_Source\PSoC4/CyLFClk.c **** *  low frequency clocks (LFCLK) and the Real-time Clock (RTC) component in
   8:.\Generated_Source\PSoC4/CyLFClk.c **** *  PSoC Creator for the PSoC 4 families.
   9:.\Generated_Source\PSoC4/CyLFClk.c **** *
  10:.\Generated_Source\PSoC4/CyLFClk.c **** ********************************************************************************
  11:.\Generated_Source\PSoC4/CyLFClk.c **** * \copyright
  12:.\Generated_Source\PSoC4/CyLFClk.c **** * Copyright 2008-2016, Cypress Semiconductor Corporation.  All rights reserved.
  13:.\Generated_Source\PSoC4/CyLFClk.c **** * You may use this file only in accordance with the license, terms, conditions,
  14:.\Generated_Source\PSoC4/CyLFClk.c **** * disclaimers, and limitations in the end user license agreement accompanying
  15:.\Generated_Source\PSoC4/CyLFClk.c **** * the software package with which this file was provided.
  16:.\Generated_Source\PSoC4/CyLFClk.c **** *******************************************************************************/
  17:.\Generated_Source\PSoC4/CyLFClk.c **** 
  18:.\Generated_Source\PSoC4/CyLFClk.c **** 
  19:.\Generated_Source\PSoC4/CyLFClk.c **** #include "CyLFClk.h"
  20:.\Generated_Source\PSoC4/CyLFClk.c **** #include "CyLib.h"
  21:.\Generated_Source\PSoC4/CyLFClk.c **** 
  22:.\Generated_Source\PSoC4/CyLFClk.c **** #if (CY_IP_WCO && CY_IP_SRSSV2)
  23:.\Generated_Source\PSoC4/CyLFClk.c ****     static uint32 CySysClkGetLfclkSource(void);
  24:.\Generated_Source\PSoC4/CyLFClk.c **** #endif /* (CY_IP_WCO && CY_IP_SRSSV2) */
  25:.\Generated_Source\PSoC4/CyLFClk.c **** 
  26:.\Generated_Source\PSoC4/CyLFClk.c **** 
  27:.\Generated_Source\PSoC4/CyLFClk.c **** #if(CY_IP_SRSSV2 && (!(CY_PSOC4_4100 || CY_PSOC4_4200)))
  28:.\Generated_Source\PSoC4/CyLFClk.c ****     /* Default Ilo Trim Register value for ILO trimming*/
  29:.\Generated_Source\PSoC4/CyLFClk.c ****     static volatile uint16 defaultIloTrimRegValue = CY_SYS_CLK_ILO_TRIM_DEFAULT_VALUE;
  30:.\Generated_Source\PSoC4/CyLFClk.c **** #endif /* (CY_IP_SRSSV2 && (!(CY_PSOC4_4100 || CY_PSOC4_4200))) */
  31:.\Generated_Source\PSoC4/CyLFClk.c **** 
  32:.\Generated_Source\PSoC4/CyLFClk.c **** #if(CY_IP_SRSSV2)
  33:.\Generated_Source\PSoC4/CyLFClk.c ****     /* CySysClkLfclkPosedgeCatch() / CySysClkLfclkPosedgeRestore() */
ARM GAS  C:\Users\g\AppData\Local\Temp\ccjVf3bh.s 			page 2


  34:.\Generated_Source\PSoC4/CyLFClk.c ****     static uint32 lfclkPosedgeWdtCounter0Enabled = 0u;
  35:.\Generated_Source\PSoC4/CyLFClk.c ****     static uint32 lfclkPosedgeWdtCounter0Mode    = CY_SYS_WDT_MODE_NONE;
  36:.\Generated_Source\PSoC4/CyLFClk.c **** 
  37:.\Generated_Source\PSoC4/CyLFClk.c ****     static volatile uint32 disableServicedIsr = 0uL;
  38:.\Generated_Source\PSoC4/CyLFClk.c ****     static volatile uint32 wdtIsrMask = CY_SYS_WDT_COUNTER0_INT |\
  39:.\Generated_Source\PSoC4/CyLFClk.c ****                                         CY_SYS_WDT_COUNTER1_INT |\
  40:.\Generated_Source\PSoC4/CyLFClk.c ****                                         CY_SYS_WDT_COUNTER2_INT;
  41:.\Generated_Source\PSoC4/CyLFClk.c **** 
  42:.\Generated_Source\PSoC4/CyLFClk.c ****     static const uint32 counterIntMaskTbl[CY_WDT_NUM_OF_WDT] = {CY_SYS_WDT_COUNTER0_INT,
  43:.\Generated_Source\PSoC4/CyLFClk.c ****                                                                 CY_SYS_WDT_COUNTER1_INT,
  44:.\Generated_Source\PSoC4/CyLFClk.c ****                                                                 CY_SYS_WDT_COUNTER2_INT};
  45:.\Generated_Source\PSoC4/CyLFClk.c **** 
  46:.\Generated_Source\PSoC4/CyLFClk.c ****     static void CySysClkLfclkPosedgeCatch(void);
  47:.\Generated_Source\PSoC4/CyLFClk.c ****     static void CySysClkLfclkPosedgeRestore(void);
  48:.\Generated_Source\PSoC4/CyLFClk.c **** 
  49:.\Generated_Source\PSoC4/CyLFClk.c ****     static uint32 CySysWdtLocked(void);
  50:.\Generated_Source\PSoC4/CyLFClk.c ****     static uint32 CySysClkIloEnabled(void);
  51:.\Generated_Source\PSoC4/CyLFClk.c **** #endif /* (CY_IP_SRSSV2) */
  52:.\Generated_Source\PSoC4/CyLFClk.c **** 
  53:.\Generated_Source\PSoC4/CyLFClk.c **** #if (CY_IP_SRSSLT && CY_IP_WCO && CY_IP_WCO_WDT_EN)
  54:.\Generated_Source\PSoC4/CyLFClk.c ****     static uint32 CySysClkGetTimerSource(void);
  55:.\Generated_Source\PSoC4/CyLFClk.c ****     static volatile uint32 disableTimerServicedIsr = 0uL;
  56:.\Generated_Source\PSoC4/CyLFClk.c ****     static volatile uint32 timerIsrMask = CY_SYS_TIMER0_INT |\
  57:.\Generated_Source\PSoC4/CyLFClk.c ****                                           CY_SYS_TIMER1_INT |\
  58:.\Generated_Source\PSoC4/CyLFClk.c ****                                           CY_SYS_TIMER2_INT;
  59:.\Generated_Source\PSoC4/CyLFClk.c **** 
  60:.\Generated_Source\PSoC4/CyLFClk.c ****     static const uint32 counterTimerIntMaskTbl[CY_SYS_NUM_OF_TIMERS] = {CY_SYS_TIMER0_INT,
  61:.\Generated_Source\PSoC4/CyLFClk.c ****                                                                         CY_SYS_TIMER1_INT,
  62:.\Generated_Source\PSoC4/CyLFClk.c ****                                                                         CY_SYS_TIMER2_INT};
  63:.\Generated_Source\PSoC4/CyLFClk.c **** 
  64:.\Generated_Source\PSoC4/CyLFClk.c ****     static cyTimerCallback cySysTimerCallback[CY_SYS_NUM_OF_TIMERS] = {(void *)0, (void *)0, (void 
  65:.\Generated_Source\PSoC4/CyLFClk.c **** #endif /* (CY_IP_SRSSLT && CY_IP_WCO && CY_IP_WCO_DWT_EN) */
  66:.\Generated_Source\PSoC4/CyLFClk.c **** 
  67:.\Generated_Source\PSoC4/CyLFClk.c **** #if(CY_IP_SRSSV2)
  68:.\Generated_Source\PSoC4/CyLFClk.c ****     static cyWdtCallback cySysWdtCallback[CY_WDT_NUM_OF_WDT] = {(void *)0, (void *)0, (void *)0};
  69:.\Generated_Source\PSoC4/CyLFClk.c **** #else
  70:.\Generated_Source\PSoC4/CyLFClk.c ****     static cyWdtCallback cySysWdtCallback = (void *)0;
  71:.\Generated_Source\PSoC4/CyLFClk.c **** #endif /* (CY_IP_SRSSV2) */
  72:.\Generated_Source\PSoC4/CyLFClk.c **** 
  73:.\Generated_Source\PSoC4/CyLFClk.c **** 
  74:.\Generated_Source\PSoC4/CyLFClk.c **** /*******************************************************************************
  75:.\Generated_Source\PSoC4/CyLFClk.c **** * Function Name: CySysClkIloStart
  76:.\Generated_Source\PSoC4/CyLFClk.c **** ****************************************************************************//**
  77:.\Generated_Source\PSoC4/CyLFClk.c **** * \brief
  78:.\Generated_Source\PSoC4/CyLFClk.c **** *  Enables ILO.
  79:.\Generated_Source\PSoC4/CyLFClk.c **** *
  80:.\Generated_Source\PSoC4/CyLFClk.c **** *  Refer to the device datasheet for the ILO startup time.
  81:.\Generated_Source\PSoC4/CyLFClk.c **** *
  82:.\Generated_Source\PSoC4/CyLFClk.c **** *******************************************************************************/
  83:.\Generated_Source\PSoC4/CyLFClk.c **** void CySysClkIloStart(void)
  84:.\Generated_Source\PSoC4/CyLFClk.c **** {
  85:.\Generated_Source\PSoC4/CyLFClk.c ****     CY_SYS_CLK_ILO_CONFIG_REG |= CY_SYS_CLK_ILO_CONFIG_ENABLE;
  86:.\Generated_Source\PSoC4/CyLFClk.c **** }
  87:.\Generated_Source\PSoC4/CyLFClk.c **** 
  88:.\Generated_Source\PSoC4/CyLFClk.c **** 
  89:.\Generated_Source\PSoC4/CyLFClk.c **** /*******************************************************************************
  90:.\Generated_Source\PSoC4/CyLFClk.c **** * Function Name: CySysClkIloStop
ARM GAS  C:\Users\g\AppData\Local\Temp\ccjVf3bh.s 			page 3


  91:.\Generated_Source\PSoC4/CyLFClk.c **** ****************************************************************************//**
  92:.\Generated_Source\PSoC4/CyLFClk.c **** * \brief
  93:.\Generated_Source\PSoC4/CyLFClk.c **** *  Disables the ILO.
  94:.\Generated_Source\PSoC4/CyLFClk.c **** *
  95:.\Generated_Source\PSoC4/CyLFClk.c **** *  This function has no effect if WDT is locked (CySysWdtLock() is
  96:.\Generated_Source\PSoC4/CyLFClk.c **** *  called). Call CySysWdtUnlock() to unlock WDT and stop ILO.
  97:.\Generated_Source\PSoC4/CyLFClk.c **** *
  98:.\Generated_Source\PSoC4/CyLFClk.c **** *  PSoC 4100 / PSoC 4200: Note that ILO is required for WDT's operation.
  99:.\Generated_Source\PSoC4/CyLFClk.c **** *
 100:.\Generated_Source\PSoC4/CyLFClk.c **** *  PSoC 4100 BLE / PSoC 4200 BLE / PSoC 4200L / PSoC 4100M / 
 101:.\Generated_Source\PSoC4/CyLFClk.c **** *  PSoC 4200M:
 102:.\Generated_Source\PSoC4/CyLFClk.c **** *  Stopping ILO affects the peripheral clocked by LFCLK, if
 103:.\Generated_Source\PSoC4/CyLFClk.c **** *  LFCLK is configured to be sourced by ILO.
 104:.\Generated_Source\PSoC4/CyLFClk.c **** *
 105:.\Generated_Source\PSoC4/CyLFClk.c **** *  If the ILO is disabled, all blocks run by ILO will stop functioning.
 106:.\Generated_Source\PSoC4/CyLFClk.c **** *
 107:.\Generated_Source\PSoC4/CyLFClk.c **** *******************************************************************************/
 108:.\Generated_Source\PSoC4/CyLFClk.c **** void CySysClkIloStop(void)
 109:.\Generated_Source\PSoC4/CyLFClk.c **** {
 110:.\Generated_Source\PSoC4/CyLFClk.c ****     #if(CY_IP_SRSSV2)
 111:.\Generated_Source\PSoC4/CyLFClk.c ****         uint8  interruptState;
 112:.\Generated_Source\PSoC4/CyLFClk.c **** 
 113:.\Generated_Source\PSoC4/CyLFClk.c ****         /* Do nothing if WDT is locked or ILO is disabled */
 114:.\Generated_Source\PSoC4/CyLFClk.c ****         if (0u == CySysWdtLocked())
 115:.\Generated_Source\PSoC4/CyLFClk.c ****         {
 116:.\Generated_Source\PSoC4/CyLFClk.c ****             if (0u != CySysClkIloEnabled())
 117:.\Generated_Source\PSoC4/CyLFClk.c ****             {
 118:.\Generated_Source\PSoC4/CyLFClk.c **** 
 119:.\Generated_Source\PSoC4/CyLFClk.c ****             #if (CY_IP_WCO)
 120:.\Generated_Source\PSoC4/CyLFClk.c ****                 if (CY_SYS_CLK_LFCLK_SRC_ILO == CySysClkGetLfclkSource())
 121:.\Generated_Source\PSoC4/CyLFClk.c ****                 {
 122:.\Generated_Source\PSoC4/CyLFClk.c ****             #endif /* (CY_IP_WCO) */
 123:.\Generated_Source\PSoC4/CyLFClk.c **** 
 124:.\Generated_Source\PSoC4/CyLFClk.c ****                 interruptState = CyEnterCriticalSection();
 125:.\Generated_Source\PSoC4/CyLFClk.c ****                 CySysClkLfclkPosedgeCatch();
 126:.\Generated_Source\PSoC4/CyLFClk.c ****                 CY_SYS_CLK_ILO_CONFIG_REG &= (uint32) ( ~(uint32)CY_SYS_CLK_ILO_CONFIG_ENABLE);
 127:.\Generated_Source\PSoC4/CyLFClk.c ****                 CySysClkLfclkPosedgeRestore();
 128:.\Generated_Source\PSoC4/CyLFClk.c ****                 CyExitCriticalSection(interruptState);
 129:.\Generated_Source\PSoC4/CyLFClk.c **** 
 130:.\Generated_Source\PSoC4/CyLFClk.c ****             #if (CY_IP_WCO)
 131:.\Generated_Source\PSoC4/CyLFClk.c ****                 }
 132:.\Generated_Source\PSoC4/CyLFClk.c ****                 else /* Safe to disable - shortened pulse does not impact peripheral */
 133:.\Generated_Source\PSoC4/CyLFClk.c ****                 {
 134:.\Generated_Source\PSoC4/CyLFClk.c ****                     CY_SYS_CLK_ILO_CONFIG_REG &= (uint32) ( ~(uint32)CY_SYS_CLK_ILO_CONFIG_ENABLE);
 135:.\Generated_Source\PSoC4/CyLFClk.c ****                 }
 136:.\Generated_Source\PSoC4/CyLFClk.c ****             #endif /* (CY_IP_WCO) */
 137:.\Generated_Source\PSoC4/CyLFClk.c **** 
 138:.\Generated_Source\PSoC4/CyLFClk.c ****             }
 139:.\Generated_Source\PSoC4/CyLFClk.c ****         }
 140:.\Generated_Source\PSoC4/CyLFClk.c ****     #else
 141:.\Generated_Source\PSoC4/CyLFClk.c ****         CY_SYS_CLK_ILO_CONFIG_REG &= ( uint32 ) ( ~( uint32 )CY_SYS_CLK_ILO_CONFIG_ENABLE);
 142:.\Generated_Source\PSoC4/CyLFClk.c ****     #endif /* (CY_IP_SRSSV2) */
 143:.\Generated_Source\PSoC4/CyLFClk.c **** }
 144:.\Generated_Source\PSoC4/CyLFClk.c **** 
 145:.\Generated_Source\PSoC4/CyLFClk.c **** 
 146:.\Generated_Source\PSoC4/CyLFClk.c **** /******************************************************************************
 147:.\Generated_Source\PSoC4/CyLFClk.c **** * Function Name: CySysClkIloStartMeasurement
ARM GAS  C:\Users\g\AppData\Local\Temp\ccjVf3bh.s 			page 4


 148:.\Generated_Source\PSoC4/CyLFClk.c **** ***************************************************************************//**
 149:.\Generated_Source\PSoC4/CyLFClk.c **** * \brief
 150:.\Generated_Source\PSoC4/CyLFClk.c **** * Starts the ILO accuracy measurement.
 151:.\Generated_Source\PSoC4/CyLFClk.c **** *
 152:.\Generated_Source\PSoC4/CyLFClk.c **** * This function is non-blocking and needs to be called before using the 
 153:.\Generated_Source\PSoC4/CyLFClk.c **** * CySysClkIloTrim() and CySysClkIloCompensate() API.
 154:.\Generated_Source\PSoC4/CyLFClk.c **** *
 155:.\Generated_Source\PSoC4/CyLFClk.c **** * This API configures measurement counters to be sourced by SysClk (Counter 1)
 156:.\Generated_Source\PSoC4/CyLFClk.c **** * and ILO (Counter 2). 
 157:.\Generated_Source\PSoC4/CyLFClk.c **** *
 158:.\Generated_Source\PSoC4/CyLFClk.c **** * \note SysClk should be sourced by IMO. Otherwise CySysClkIloTrim() and 
 159:.\Generated_Source\PSoC4/CyLFClk.c **** * CySysClkIloCompensate() API can give incorrect results.
 160:.\Generated_Source\PSoC4/CyLFClk.c **** *
 161:.\Generated_Source\PSoC4/CyLFClk.c **** * In addition, this API stores the factory ILO trim settings on the first call 
 162:.\Generated_Source\PSoC4/CyLFClk.c **** * after reset. This stored factory setting is used by the 
 163:.\Generated_Source\PSoC4/CyLFClk.c **** * CySysClkIloRestoreFactoryTrim() API to restore the ILO factory trim. 
 164:.\Generated_Source\PSoC4/CyLFClk.c **** * Hence, it is important to call this API before restoring the ILO 
 165:.\Generated_Source\PSoC4/CyLFClk.c **** * factory trim settings.
 166:.\Generated_Source\PSoC4/CyLFClk.c **** *
 167:.\Generated_Source\PSoC4/CyLFClk.c **** ******************************************************************************/
 168:.\Generated_Source\PSoC4/CyLFClk.c **** void CySysClkIloStartMeasurement(void)
 169:.\Generated_Source\PSoC4/CyLFClk.c **** {
 170:.\Generated_Source\PSoC4/CyLFClk.c **** #if(CY_IP_SRSSV2 && (!(CY_PSOC4_4100 || CY_PSOC4_4200)))
 171:.\Generated_Source\PSoC4/CyLFClk.c ****     static uint8 iloTrimTrig = 0u;
 172:.\Generated_Source\PSoC4/CyLFClk.c **** 
 173:.\Generated_Source\PSoC4/CyLFClk.c ****     /* Write default ILO trim value while ILO starting ( Cypress ID 225244 )*/
 174:.\Generated_Source\PSoC4/CyLFClk.c ****     if (0u == iloTrimTrig)
 175:.\Generated_Source\PSoC4/CyLFClk.c ****     {
 176:.\Generated_Source\PSoC4/CyLFClk.c ****         defaultIloTrimRegValue = ((uint8)(CY_SYS_CLK_ILO_TRIM_REG & CY_SYS_CLK_ILO_TRIM_MASK));
 177:.\Generated_Source\PSoC4/CyLFClk.c ****         iloTrimTrig = 1u;
 178:.\Generated_Source\PSoC4/CyLFClk.c ****     }
 179:.\Generated_Source\PSoC4/CyLFClk.c **** #endif /* (CY_IP_SRSSV2 && (!(CY_PSOC4_4100 || CY_PSOC4_4200))) */
 180:.\Generated_Source\PSoC4/CyLFClk.c **** 
 181:.\Generated_Source\PSoC4/CyLFClk.c ****     /* Configure measurement counters to source by SysClk (Counter 1) and ILO (Counter 2)*/
 182:.\Generated_Source\PSoC4/CyLFClk.c ****     CY_SYS_CLK_DFT_REG = (CY_SYS_CLK_DFT_REG & (uint32) ~CY_SYS_CLK_DFT_SELECT_DEFAULT_MASK) |
 183:.\Generated_Source\PSoC4/CyLFClk.c ****                             CY_SYS_CLK_SEL_ILO_DFT_SOURCE; 
 184:.\Generated_Source\PSoC4/CyLFClk.c **** 
 185:.\Generated_Source\PSoC4/CyLFClk.c ****     CY_SYS_TST_DDFT_CTRL_REG = (CY_SYS_TST_DDFT_CTRL_REG & (uint32) ~ CY_SYS_TST_DDFT_CTRL_REG_DEFA
 186:.\Generated_Source\PSoC4/CyLFClk.c ****                             CY_SYS_TST_DDFT_CTRL_REG_SEL2_CLK1;
 187:.\Generated_Source\PSoC4/CyLFClk.c **** }
 188:.\Generated_Source\PSoC4/CyLFClk.c **** 
 189:.\Generated_Source\PSoC4/CyLFClk.c **** 
 190:.\Generated_Source\PSoC4/CyLFClk.c **** /******************************************************************************
 191:.\Generated_Source\PSoC4/CyLFClk.c **** * Function Name: CySysClkIloStopMeasurement
 192:.\Generated_Source\PSoC4/CyLFClk.c **** ***************************************************************************//**
 193:.\Generated_Source\PSoC4/CyLFClk.c **** * \brief
 194:.\Generated_Source\PSoC4/CyLFClk.c **** * Stops the ILO accuracy measurement.
 195:.\Generated_Source\PSoC4/CyLFClk.c **** *
 196:.\Generated_Source\PSoC4/CyLFClk.c **** * Calling this function immediately stops the the ILO frequency measurement.
 197:.\Generated_Source\PSoC4/CyLFClk.c **** * This function should be called before placing the device to deepsleep, if 
 198:.\Generated_Source\PSoC4/CyLFClk.c **** * CySysClkIloStartMeasurement() API was called before. 
 199:.\Generated_Source\PSoC4/CyLFClk.c **** *
 200:.\Generated_Source\PSoC4/CyLFClk.c **** ******************************************************************************/
 201:.\Generated_Source\PSoC4/CyLFClk.c **** void CySysClkIloStopMeasurement(void)
 202:.\Generated_Source\PSoC4/CyLFClk.c **** {
 203:.\Generated_Source\PSoC4/CyLFClk.c ****     /* Set default configurations in 11...8 DFT register bits to zero */
 204:.\Generated_Source\PSoC4/CyLFClk.c ****     CY_SYS_CLK_DFT_REG &= ~CY_SYS_CLK_DFT_SELECT_DEFAULT_MASK;
ARM GAS  C:\Users\g\AppData\Local\Temp\ccjVf3bh.s 			page 5


 205:.\Generated_Source\PSoC4/CyLFClk.c ****     #if(CY_IP_SRSSLT)
 206:.\Generated_Source\PSoC4/CyLFClk.c ****         CY_SYS_TST_DDFT_CTRL_REG &= ((uint32) CY_SYS_TST_DDFT_CTRL_REG_DEFAULT_MASK);
 207:.\Generated_Source\PSoC4/CyLFClk.c ****     #endif /* (CY_IP_SRSSLT) */
 208:.\Generated_Source\PSoC4/CyLFClk.c **** }
 209:.\Generated_Source\PSoC4/CyLFClk.c **** 
 210:.\Generated_Source\PSoC4/CyLFClk.c **** 
 211:.\Generated_Source\PSoC4/CyLFClk.c **** /******************************************************************************
 212:.\Generated_Source\PSoC4/CyLFClk.c **** * Function Name: CySysClkIloCompensate
 213:.\Generated_Source\PSoC4/CyLFClk.c **** ***************************************************************************//**
 214:.\Generated_Source\PSoC4/CyLFClk.c **** * \brief
 215:.\Generated_Source\PSoC4/CyLFClk.c **** * This API measures the current ILO accuracy.
 216:.\Generated_Source\PSoC4/CyLFClk.c **** *
 217:.\Generated_Source\PSoC4/CyLFClk.c **** * Basing on the measured frequency the required number of ILO cycles for a 
 218:.\Generated_Source\PSoC4/CyLFClk.c **** * given delay (in microseconds) is obtained. The desired delay that needs to 
 219:.\Generated_Source\PSoC4/CyLFClk.c **** * be compensated is passed through the desiredDelay parameter. The compensated 
 220:.\Generated_Source\PSoC4/CyLFClk.c **** * cycle count is returned through the compesatedCycles pointer.
 221:.\Generated_Source\PSoC4/CyLFClk.c **** * The compensated ILO cycles can then be used to define the WDT period value, 
 222:.\Generated_Source\PSoC4/CyLFClk.c **** * effectively compensating for the ILO inaccuracy and allowing a more 
 223:.\Generated_Source\PSoC4/CyLFClk.c **** * accurate WDT interrupt generation.
 224:.\Generated_Source\PSoC4/CyLFClk.c **** *
 225:.\Generated_Source\PSoC4/CyLFClk.c **** * CySysClkIloStartMeasurement() API should be called prior to calling this API. 
 226:.\Generated_Source\PSoC4/CyLFClk.c **** *
 227:.\Generated_Source\PSoC4/CyLFClk.c **** * \note SysClk should be sourced by IMO. Otherwise CySysClkIloTrim() and 
 228:.\Generated_Source\PSoC4/CyLFClk.c **** * CySysClkIloCompensate() API can give incorrect results.
 229:.\Generated_Source\PSoC4/CyLFClk.c **** *
 230:.\Generated_Source\PSoC4/CyLFClk.c **** * \note If the System clock frequency is changed in runtime, the CyDelayFreq() 
 231:.\Generated_Source\PSoC4/CyLFClk.c **** * with the appropriate parameter (Frequency of bus clock in Hertz) should be 
 232:.\Generated_Source\PSoC4/CyLFClk.c **** * called before calling a next CySysClkIloCompensate().
 233:.\Generated_Source\PSoC4/CyLFClk.c **** *
 234:.\Generated_Source\PSoC4/CyLFClk.c **** * \warning Do not enter deep sleep mode until the function returns CYRET_SUCCESS.
 235:.\Generated_Source\PSoC4/CyLFClk.c **** *
 236:.\Generated_Source\PSoC4/CyLFClk.c **** * \param desiredDelay Required delay in microseconds.
 237:.\Generated_Source\PSoC4/CyLFClk.c **** *
 238:.\Generated_Source\PSoC4/CyLFClk.c **** * \param *compensatedCycles The pointer to the variable in which the required
 239:.\Generated_Source\PSoC4/CyLFClk.c **** * number of ILO cycles for the given delay will be returned.
 240:.\Generated_Source\PSoC4/CyLFClk.c **** *
 241:.\Generated_Source\PSoC4/CyLFClk.c **** * \details
 242:.\Generated_Source\PSoC4/CyLFClk.c **** * The value returned in *compensatedCycles pointer is not valid until the 
 243:.\Generated_Source\PSoC4/CyLFClk.c **** * function returns CYRET_SUCCESS.
 244:.\Generated_Source\PSoC4/CyLFClk.c **** *
 245:.\Generated_Source\PSoC4/CyLFClk.c **** * The desiredDelay parameter value should be in next range: <br>From 100 to 
 246:.\Generated_Source\PSoC4/CyLFClk.c **** * 2 000 000 microseconds for PSoC 4000 / PSoC 4000S / PSoC 4100S / PSoC Analog 
 247:.\Generated_Source\PSoC4/CyLFClk.c **** * Coprocessor devices.<br>From 100 to 4 000 000 000 microseconds for 
 248:.\Generated_Source\PSoC4/CyLFClk.c **** * PSoC 4100 / PSoC 4200 / PSoC 4100 BLE / PSoC 4200 BLE / PRoC BLE /
 249:.\Generated_Source\PSoC4/CyLFClk.c **** * PSoC 4200L / PSoC 4100M /PSoC 4200M devices.
 250:.\Generated_Source\PSoC4/CyLFClk.c **** *
 251:.\Generated_Source\PSoC4/CyLFClk.c **** * \return CYRET_SUCCESS - The compensation process is complete and the 
 252:.\Generated_Source\PSoC4/CyLFClk.c **** * compensated cycles value is returned in the compensatedCycles pointer.
 253:.\Generated_Source\PSoC4/CyLFClk.c **** *
 254:.\Generated_Source\PSoC4/CyLFClk.c **** * \return CYRET_STARTED - Indicates measurement is in progress. It is 
 255:.\Generated_Source\PSoC4/CyLFClk.c **** * strongly recommended to do not make pauses between API calling. The 
 256:.\Generated_Source\PSoC4/CyLFClk.c **** * function should be called repeatedly until the API returns CYRET_SUCCESS.
 257:.\Generated_Source\PSoC4/CyLFClk.c **** *
 258:.\Generated_Source\PSoC4/CyLFClk.c **** * \return CYRET_INVALID_STATE - Indicates that measurement not started. 
 259:.\Generated_Source\PSoC4/CyLFClk.c **** * The user should call CySysClkIloStartMeasurement() API before calling 
 260:.\Generated_Source\PSoC4/CyLFClk.c **** * this API.
 261:.\Generated_Source\PSoC4/CyLFClk.c **** *
ARM GAS  C:\Users\g\AppData\Local\Temp\ccjVf3bh.s 			page 6


 262:.\Generated_Source\PSoC4/CyLFClk.c **** * \note For a correct WDT or DeepSleep Timers functioning with ILO compensating 
 263:.\Generated_Source\PSoC4/CyLFClk.c **** * the CySysClkIloCompensate() should be called before WDT or DeepSleep Timers 
 264:.\Generated_Source\PSoC4/CyLFClk.c **** * enabling.
 265:.\Generated_Source\PSoC4/CyLFClk.c **** *
 266:.\Generated_Source\PSoC4/CyLFClk.c **** *******************************************************************************/
 267:.\Generated_Source\PSoC4/CyLFClk.c **** cystatus CySysClkIloCompensate(uint32 desiredDelay , uint32* compensatedCycles)
 268:.\Generated_Source\PSoC4/CyLFClk.c **** {
 269:.\Generated_Source\PSoC4/CyLFClk.c ****     uint32 iloCompensatedCycles;
 270:.\Generated_Source\PSoC4/CyLFClk.c ****     uint32 desiredDelayInCounts;
 271:.\Generated_Source\PSoC4/CyLFClk.c ****     static uint32 compensateRunningStatus = CY_SYS_CLK_TRIM_OR_COMP_FINISHED;
 272:.\Generated_Source\PSoC4/CyLFClk.c ****     uint32 checkStatus;
 273:.\Generated_Source\PSoC4/CyLFClk.c ****     cystatus returnStatus;
 274:.\Generated_Source\PSoC4/CyLFClk.c **** 
 275:.\Generated_Source\PSoC4/CyLFClk.c ****     checkStatus = (uint32) (CY_SYS_CLK_DFT_REG & (uint32) CY_SYS_TST_DDFT_CTRL_REG_DEFAULT_MASK);
 276:.\Generated_Source\PSoC4/CyLFClk.c **** 
 277:.\Generated_Source\PSoC4/CyLFClk.c ****     /* Check if CySysStartMeasurement was called before */
 278:.\Generated_Source\PSoC4/CyLFClk.c ****     if((checkStatus == CY_SYS_CLK_SEL_ILO_DFT_SOURCE) && 
 279:.\Generated_Source\PSoC4/CyLFClk.c ****        (CY_SYS_TST_DDFT_CTRL_REG == CY_SYS_TST_DDFT_CTRL_REG_SEL2_CLK1) &&
 280:.\Generated_Source\PSoC4/CyLFClk.c ****        (CY_SYS_CLK_MAX_DELAY_US >= desiredDelay) &&
 281:.\Generated_Source\PSoC4/CyLFClk.c ****        (CY_SYS_CLK_MIN_DELAY_US <= desiredDelay) &&
 282:.\Generated_Source\PSoC4/CyLFClk.c ****        (compensatedCycles !=  NULL))
 283:.\Generated_Source\PSoC4/CyLFClk.c ****     {
 284:.\Generated_Source\PSoC4/CyLFClk.c ****         if(CY_SYS_CLK_TRIM_OR_COMP_FINISHED != compensateRunningStatus)
 285:.\Generated_Source\PSoC4/CyLFClk.c ****         {
 286:.\Generated_Source\PSoC4/CyLFClk.c ****             /* Wait until counter 1 stopped counting and after it calculate compensated cycles */
 287:.\Generated_Source\PSoC4/CyLFClk.c ****             if(0u != (CY_SYS_CNT_REG1_REG & CY_SYS_CLK_ILO_CALIBR_COMPLETE_MASK))
 288:.\Generated_Source\PSoC4/CyLFClk.c ****             {
 289:.\Generated_Source\PSoC4/CyLFClk.c ****                 if (0u != CY_SYS_CNT_REG2_REG)
 290:.\Generated_Source\PSoC4/CyLFClk.c ****                 {
 291:.\Generated_Source\PSoC4/CyLFClk.c ****                     /* Calculate required number of ILO cycles for given delay */
 292:.\Generated_Source\PSoC4/CyLFClk.c ****                     #if(CY_IP_SRSSV2)
 293:.\Generated_Source\PSoC4/CyLFClk.c ****                         if (CY_SYS_CLK_DELAY_COUNTS_LIMIT < desiredDelay)
 294:.\Generated_Source\PSoC4/CyLFClk.c ****                         {
 295:.\Generated_Source\PSoC4/CyLFClk.c ****                             desiredDelayInCounts = (desiredDelay / CY_SYS_CLK_ILO_PERIOD);
 296:.\Generated_Source\PSoC4/CyLFClk.c ****                             iloCompensatedCycles = 
 297:.\Generated_Source\PSoC4/CyLFClk.c ****                             (((CY_SYS_CNT_REG2_REG * cydelayFreqHz) / (cydelayFreqHz >> CY_SYS_CLK_
 298:.\Generated_Source\PSoC4/CyLFClk.c ****                                 CY_SYS_CLK_ILO_FREQ_2MSB) * (desiredDelayInCounts / CY_SYS_CLK_ILO_
 299:.\Generated_Source\PSoC4/CyLFClk.c ****                         }
 300:.\Generated_Source\PSoC4/CyLFClk.c ****                         else
 301:.\Generated_Source\PSoC4/CyLFClk.c ****                         {
 302:.\Generated_Source\PSoC4/CyLFClk.c ****                             desiredDelayInCounts = ((desiredDelay * CY_SYS_CLK_COEF_PHUNDRED) + 
 303:.\Generated_Source\PSoC4/CyLFClk.c ****                                                      CY_SYS_CLK_HALF_OF_CLOCK) / CY_SYS_CLK_ILO_PER
 304:.\Generated_Source\PSoC4/CyLFClk.c **** 
 305:.\Generated_Source\PSoC4/CyLFClk.c ****                             iloCompensatedCycles = (((CY_SYS_CNT_REG2_REG * cydelayFreqHz) / 
 306:.\Generated_Source\PSoC4/CyLFClk.c ****                                                      (cydelayFreqHz >> CY_SYS_CLK_SYS_CLK_DEVIDER))
 307:.\Generated_Source\PSoC4/CyLFClk.c ****                                                      desiredDelayInCounts) / CY_SYS_CLK_ILO_DESIRED
 308:.\Generated_Source\PSoC4/CyLFClk.c ****                         }
 309:.\Generated_Source\PSoC4/CyLFClk.c ****                     #else /* (CY_IP_SRSSLT) */
 310:.\Generated_Source\PSoC4/CyLFClk.c ****                         desiredDelayInCounts = ((desiredDelay * CY_SYS_CLK_COEF_PHUNDRED) + CY_SYS_
 311:.\Generated_Source\PSoC4/CyLFClk.c ****                                                                                            CY_SYS_C
 312:.\Generated_Source\PSoC4/CyLFClk.c ****                         if(CY_SYS_CLK_MAX_LITE_NUMBER < desiredDelayInCounts)
 313:.\Generated_Source\PSoC4/CyLFClk.c ****                         {
 314:.\Generated_Source\PSoC4/CyLFClk.c ****                             iloCompensatedCycles = (((CY_SYS_CNT_REG2_REG * cydelayFreqHz) / (cydel
 315:.\Generated_Source\PSoC4/CyLFClk.c ****                                                    CY_SYS_CLK_SYS_CLK_DEVIDER)) / CY_SYS_CLK_ILO_FR
 316:.\Generated_Source\PSoC4/CyLFClk.c ****                                                    (desiredDelayInCounts / CY_SYS_CLK_ILO_FREQ_3LSB
 317:.\Generated_Source\PSoC4/CyLFClk.c ****                         }
 318:.\Generated_Source\PSoC4/CyLFClk.c ****                         else
ARM GAS  C:\Users\g\AppData\Local\Temp\ccjVf3bh.s 			page 7


 319:.\Generated_Source\PSoC4/CyLFClk.c ****                         {
 320:.\Generated_Source\PSoC4/CyLFClk.c ****                             iloCompensatedCycles = (((CY_SYS_CNT_REG2_REG * cydelayFreqHz) / 
 321:.\Generated_Source\PSoC4/CyLFClk.c ****                                                      (cydelayFreqHz >> CY_SYS_CLK_SYS_CLK_DEVIDER))
 322:.\Generated_Source\PSoC4/CyLFClk.c ****                                                      desiredDelayInCounts) / CY_SYS_CLK_ILO_DESIRED
 323:.\Generated_Source\PSoC4/CyLFClk.c ****                         }
 324:.\Generated_Source\PSoC4/CyLFClk.c ****                     #endif /* (CY_IP_SRSSV2) */
 325:.\Generated_Source\PSoC4/CyLFClk.c **** 
 326:.\Generated_Source\PSoC4/CyLFClk.c ****                     *compensatedCycles = iloCompensatedCycles;
 327:.\Generated_Source\PSoC4/CyLFClk.c ****                     compensateRunningStatus = CY_SYS_CLK_TRIM_OR_COMP_FINISHED;
 328:.\Generated_Source\PSoC4/CyLFClk.c ****                     returnStatus = CYRET_SUCCESS;
 329:.\Generated_Source\PSoC4/CyLFClk.c ****                 }
 330:.\Generated_Source\PSoC4/CyLFClk.c ****                 else
 331:.\Generated_Source\PSoC4/CyLFClk.c ****                 {
 332:.\Generated_Source\PSoC4/CyLFClk.c ****                     returnStatus  = CYRET_INVALID_STATE;
 333:.\Generated_Source\PSoC4/CyLFClk.c ****                 }
 334:.\Generated_Source\PSoC4/CyLFClk.c ****             }
 335:.\Generated_Source\PSoC4/CyLFClk.c ****             else
 336:.\Generated_Source\PSoC4/CyLFClk.c ****             {
 337:.\Generated_Source\PSoC4/CyLFClk.c ****                 returnStatus = CYRET_STARTED;
 338:.\Generated_Source\PSoC4/CyLFClk.c ****             }
 339:.\Generated_Source\PSoC4/CyLFClk.c ****         }
 340:.\Generated_Source\PSoC4/CyLFClk.c ****         else
 341:.\Generated_Source\PSoC4/CyLFClk.c ****         {
 342:.\Generated_Source\PSoC4/CyLFClk.c ****             /* Reload CNTR 1 count value for next measurement cycle*/
 343:.\Generated_Source\PSoC4/CyLFClk.c ****             CY_SYS_CNT_REG1_REG = (cydelayFreqHz >> CY_SYS_CLK_SYS_CLK_DEVIDER);
 344:.\Generated_Source\PSoC4/CyLFClk.c ****             compensateRunningStatus = CY_SYS_CLK_TRIM_OR_COMP_STARTED;
 345:.\Generated_Source\PSoC4/CyLFClk.c ****             returnStatus = CYRET_STARTED;
 346:.\Generated_Source\PSoC4/CyLFClk.c ****         }
 347:.\Generated_Source\PSoC4/CyLFClk.c ****     }
 348:.\Generated_Source\PSoC4/CyLFClk.c ****     else
 349:.\Generated_Source\PSoC4/CyLFClk.c ****     {
 350:.\Generated_Source\PSoC4/CyLFClk.c ****         returnStatus = CYRET_INVALID_STATE;
 351:.\Generated_Source\PSoC4/CyLFClk.c ****     }
 352:.\Generated_Source\PSoC4/CyLFClk.c **** 
 353:.\Generated_Source\PSoC4/CyLFClk.c ****     return (returnStatus);
 354:.\Generated_Source\PSoC4/CyLFClk.c **** }
 355:.\Generated_Source\PSoC4/CyLFClk.c **** 
 356:.\Generated_Source\PSoC4/CyLFClk.c **** 
 357:.\Generated_Source\PSoC4/CyLFClk.c **** #if(CY_IP_SRSSV2)
 358:.\Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
 359:.\Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysClkIloEnabled
 360:.\Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
 361:.\Generated_Source\PSoC4/CyLFClk.c ****     *
 362:.\Generated_Source\PSoC4/CyLFClk.c ****     * \internal
 363:.\Generated_Source\PSoC4/CyLFClk.c ****     * Reports the ILO enable state.
 364:.\Generated_Source\PSoC4/CyLFClk.c ****     *
 365:.\Generated_Source\PSoC4/CyLFClk.c ****     * \return
 366:.\Generated_Source\PSoC4/CyLFClk.c ****     * 1 if ILO is enabled, and 0 if ILO is disabled.
 367:.\Generated_Source\PSoC4/CyLFClk.c ****     *
 368:.\Generated_Source\PSoC4/CyLFClk.c ****     * \endinternal
 369:.\Generated_Source\PSoC4/CyLFClk.c ****     ********************************************************************************/
 370:.\Generated_Source\PSoC4/CyLFClk.c ****     static uint32 CySysClkIloEnabled(void)
 371:.\Generated_Source\PSoC4/CyLFClk.c ****     {
  25              		.loc 1 371 0
  26              		.cfi_startproc
 372:.\Generated_Source\PSoC4/CyLFClk.c ****         /* Prohibits writing to WDT registers and ILO/WCO registers when not equal to 0 */
 373:.\Generated_Source\PSoC4/CyLFClk.c ****         return ((0u != (CY_SYS_CLK_ILO_CONFIG_REG & (uint32)(CY_SYS_CLK_ILO_CONFIG_ENABLE))) ?
ARM GAS  C:\Users\g\AppData\Local\Temp\ccjVf3bh.s 			page 8


  27              		.loc 1 373 0
  28 0000 034B     		ldr	r3, .L4
  29 0002 1B68     		ldr	r3, [r3]
 374:.\Generated_Source\PSoC4/CyLFClk.c ****             (uint32) 1u :
  30              		.loc 1 374 0
  31 0004 002B     		cmp	r3, #0
  32 0006 01DA     		bge	.L3
  33 0008 0120     		mov	r0, #1
  34 000a 00E0     		b	.L2
  35              	.L3:
  36 000c 0020     		mov	r0, #0
  37              	.L2:
 375:.\Generated_Source\PSoC4/CyLFClk.c ****             (uint32) 0u);
 376:.\Generated_Source\PSoC4/CyLFClk.c ****     }
  38              		.loc 1 376 0
  39              		@ sp needed
  40 000e 7047     		bx	lr
  41              	.L5:
  42              		.align	2
  43              	.L4:
  44 0010 04010B40 		.word	1074462980
  45              		.cfi_endproc
  46              	.LFE5:
  47              		.size	CySysClkIloEnabled, .-CySysClkIloEnabled
  48              		.section	.text.CySysWdtLocked,"ax",%progbits
  49              		.align	2
  50              		.code	16
  51              		.thumb_func
  52              		.type	CySysWdtLocked, %function
  53              	CySysWdtLocked:
  54              	.LFB7:
 377:.\Generated_Source\PSoC4/CyLFClk.c **** #endif /* (CY_IP_SRSSV2) */
 378:.\Generated_Source\PSoC4/CyLFClk.c **** 
 379:.\Generated_Source\PSoC4/CyLFClk.c **** 
 380:.\Generated_Source\PSoC4/CyLFClk.c **** #if(CY_IP_SRSSV2 && (!(CY_PSOC4_4100 || CY_PSOC4_4200)))
 381:.\Generated_Source\PSoC4/CyLFClk.c **** /********************************************************************************
 382:.\Generated_Source\PSoC4/CyLFClk.c **** * Function Name: CySysClkIloTrim
 383:.\Generated_Source\PSoC4/CyLFClk.c **** *****************************************************************************//**
 384:.\Generated_Source\PSoC4/CyLFClk.c **** * \brief
 385:.\Generated_Source\PSoC4/CyLFClk.c **** * The API trims the ILO frequency to +/- 10% accuracy range using accurate 
 386:.\Generated_Source\PSoC4/CyLFClk.c **** * SysClk.
 387:.\Generated_Source\PSoC4/CyLFClk.c **** *
 388:.\Generated_Source\PSoC4/CyLFClk.c **** * The API can be blocking or non-blocking depending on the value of the mode 
 389:.\Generated_Source\PSoC4/CyLFClk.c **** * parameter passed. The accuracy of ILO after trimming in parts per thousand 
 390:.\Generated_Source\PSoC4/CyLFClk.c **** * is returned through the iloAccuracyInPPT pointer. A positive number indicates 
 391:.\Generated_Source\PSoC4/CyLFClk.c **** * that the ILO is running fast and a negative number indicates that the ILO is 
 392:.\Generated_Source\PSoC4/CyLFClk.c **** * running slowly. This error is relative to the error in the reference clock 
 393:.\Generated_Source\PSoC4/CyLFClk.c **** * (SysClk), so the absolute error will be higher and depends on the accuracy 
 394:.\Generated_Source\PSoC4/CyLFClk.c **** * of the reference.
 395:.\Generated_Source\PSoC4/CyLFClk.c **** *
 396:.\Generated_Source\PSoC4/CyLFClk.c **** * The CySysClkIloStartMeasurement() API should be called prior to calling this 
 397:.\Generated_Source\PSoC4/CyLFClk.c **** * API. Otherwise it will return CYRET_INVALID_STATE as the measurement was not 
 398:.\Generated_Source\PSoC4/CyLFClk.c **** * started.
 399:.\Generated_Source\PSoC4/CyLFClk.c **** *
 400:.\Generated_Source\PSoC4/CyLFClk.c **** * \note SysClk should be sourced by IMO. Otherwise CySysClkIloTrim() and 
 401:.\Generated_Source\PSoC4/CyLFClk.c **** * CySysClkIloCompensate() API can give incorrect results.
 402:.\Generated_Source\PSoC4/CyLFClk.c **** *
ARM GAS  C:\Users\g\AppData\Local\Temp\ccjVf3bh.s 			page 9


 403:.\Generated_Source\PSoC4/CyLFClk.c **** * \note If System clock frequency is changed in runtime, the CyDelayFreq() 
 404:.\Generated_Source\PSoC4/CyLFClk.c **** * with the appropriate parameter (Frequency of bus clock in Hertz) should be 
 405:.\Generated_Source\PSoC4/CyLFClk.c **** * called before next CySysClkIloCompensate() usage.
 406:.\Generated_Source\PSoC4/CyLFClk.c **** *
 407:.\Generated_Source\PSoC4/CyLFClk.c **** * \warning Do not enter deep sleep mode until the function returns CYRET_SUCCESS
 408:.\Generated_Source\PSoC4/CyLFClk.c **** * or CYRET_TIMEOUT.
 409:.\Generated_Source\PSoC4/CyLFClk.c **** *
 410:.\Generated_Source\PSoC4/CyLFClk.c **** * Available for all PSoC 4 devices with ILO trim capability. This excludes 
 411:.\Generated_Source\PSoC4/CyLFClk.c **** * PSoC 4000 / PSoC 4100 / PSoC 4200 / PSoC 4000S / PSoC 4100S / PSoC
 412:.\Generated_Source\PSoC4/CyLFClk.c **** * Analog Coprocessor devices.
 413:.\Generated_Source\PSoC4/CyLFClk.c **** *
 414:.\Generated_Source\PSoC4/CyLFClk.c **** * \param mode
 415:.\Generated_Source\PSoC4/CyLFClk.c **** *  CY_SYS_CLK_BLOCKING -  The function does not return until the ILO is 
 416:.\Generated_Source\PSoC4/CyLFClk.c **** * within +/-10% accuracy range or time out has occurred.<br>
 417:.\Generated_Source\PSoC4/CyLFClk.c **** * CY_SYS_CLK_NON_BLOCKING - The function returns immediately after 
 418:.\Generated_Source\PSoC4/CyLFClk.c **** * performing a single iteration of the trim process. The function should be 
 419:.\Generated_Source\PSoC4/CyLFClk.c **** * called repeatedly until the trimming is completed successfully.
 420:.\Generated_Source\PSoC4/CyLFClk.c **** *
 421:.\Generated_Source\PSoC4/CyLFClk.c **** * \param *iloAccuracyInPPT Pointer to an integer in which the trimmed ILO 
 422:.\Generated_Source\PSoC4/CyLFClk.c **** * accuracy will be returned.
 423:.\Generated_Source\PSoC4/CyLFClk.c **** *
 424:.\Generated_Source\PSoC4/CyLFClk.c **** * \details The value returned in *iloAccuracyInPPT pointer is not valid 
 425:.\Generated_Source\PSoC4/CyLFClk.c **** * until the function returns CYRET_SUCCESS. ILO accuracy in PPT is given by:
 426:.\Generated_Source\PSoC4/CyLFClk.c **** *
 427:.\Generated_Source\PSoC4/CyLFClk.c **** * IloAccuracyInPPT = ((MeasuredIloFreq - DesiredIloFreq) * 
 428:.\Generated_Source\PSoC4/CyLFClk.c **** * CY_SYS_CLK_PERTHOUSAND) / DesiredIloFreq);
 429:.\Generated_Source\PSoC4/CyLFClk.c **** *
 430:.\Generated_Source\PSoC4/CyLFClk.c **** * DesiredIloFreq  = 32000, CY_SYS_CLK_PERTHOUSAND = 1000;
 431:.\Generated_Source\PSoC4/CyLFClk.c **** *
 432:.\Generated_Source\PSoC4/CyLFClk.c **** * \return CYRET_SUCCESS - Indicates trimming is complete. This value indicates 
 433:.\Generated_Source\PSoC4/CyLFClk.c **** * trimming is successful and iloAccuracyInPPT is within +/- 10%.
 434:.\Generated_Source\PSoC4/CyLFClk.c **** *
 435:.\Generated_Source\PSoC4/CyLFClk.c **** * \return CYRET_STARTED - Indicates measurement is in progress. This is applicable 
 436:.\Generated_Source\PSoC4/CyLFClk.c **** * only for non-blocking mode.
 437:.\Generated_Source\PSoC4/CyLFClk.c **** *
 438:.\Generated_Source\PSoC4/CyLFClk.c **** * \return CYRET_INVALID_STATE - Indicates trimming was unsuccessful. You should 
 439:.\Generated_Source\PSoC4/CyLFClk.c **** * call CySysClkIloStartMeasurement() before calling this API.
 440:.\Generated_Source\PSoC4/CyLFClk.c **** *
 441:.\Generated_Source\PSoC4/CyLFClk.c **** * \return CYRET_TIMEOUT - Indicates trimming was unsuccessful. This is applicable 
 442:.\Generated_Source\PSoC4/CyLFClk.c **** * only for blocking mode. Timeout means the trimming was tried 5 times without 
 443:.\Generated_Source\PSoC4/CyLFClk.c **** * success (i.e. ILO accuracy > +/- 10%). The user can call the API again for 
 444:.\Generated_Source\PSoC4/CyLFClk.c **** * another try or wait for some time before calling it again (to let the system 
 445:.\Generated_Source\PSoC4/CyLFClk.c **** * to settle to another operating point change in temperature etc.) and continue 
 446:.\Generated_Source\PSoC4/CyLFClk.c **** * using the previous trim value till the next call.
 447:.\Generated_Source\PSoC4/CyLFClk.c **** *
 448:.\Generated_Source\PSoC4/CyLFClk.c **** **********************************************************************************/
 449:.\Generated_Source\PSoC4/CyLFClk.c **** cystatus CySysClkIloTrim(uint32 mode, int32* iloAccuracyInPPT)
 450:.\Generated_Source\PSoC4/CyLFClk.c **** {
 451:.\Generated_Source\PSoC4/CyLFClk.c ****     uint32 timeOutClocks = CY_SYS_CLK_TIMEOUT;
 452:.\Generated_Source\PSoC4/CyLFClk.c ****     uint32 waitUntilCntr1Stops;
 453:.\Generated_Source\PSoC4/CyLFClk.c ****     static uint32 trimRunningStatus = CY_SYS_CLK_TRIM_OR_COMP_FINISHED;
 454:.\Generated_Source\PSoC4/CyLFClk.c ****     uint32 checkStatus;
 455:.\Generated_Source\PSoC4/CyLFClk.c ****     cystatus returnStatus;
 456:.\Generated_Source\PSoC4/CyLFClk.c **** 
 457:.\Generated_Source\PSoC4/CyLFClk.c ****     checkStatus = (uint32) (CY_SYS_CLK_DFT_REG & (uint32) CY_SYS_TST_DDFT_CTRL_REG_DEFAULT_MASK);
 458:.\Generated_Source\PSoC4/CyLFClk.c **** 
 459:.\Generated_Source\PSoC4/CyLFClk.c ****     /* Check if DFT and CTRL registers were configures in CySysStartMeasurement*/
ARM GAS  C:\Users\g\AppData\Local\Temp\ccjVf3bh.s 			page 10


 460:.\Generated_Source\PSoC4/CyLFClk.c ****     if((checkStatus == CY_SYS_CLK_SEL_ILO_DFT_SOURCE) &&
 461:.\Generated_Source\PSoC4/CyLFClk.c ****        (CY_SYS_TST_DDFT_CTRL_REG == CY_SYS_TST_DDFT_CTRL_REG_SEL2_CLK1) &&
 462:.\Generated_Source\PSoC4/CyLFClk.c ****        (iloAccuracyInPPT != NULL))
 463:.\Generated_Source\PSoC4/CyLFClk.c ****     {
 464:.\Generated_Source\PSoC4/CyLFClk.c ****         if(CY_SYS_CLK_BLOCKING == mode)
 465:.\Generated_Source\PSoC4/CyLFClk.c ****         {
 466:.\Generated_Source\PSoC4/CyLFClk.c ****             waitUntilCntr1Stops = cydelayFreqHz >> CY_SYS_CLK_SYS_CLK_DEVIDER;
 467:.\Generated_Source\PSoC4/CyLFClk.c ****             do
 468:.\Generated_Source\PSoC4/CyLFClk.c ****             {
 469:.\Generated_Source\PSoC4/CyLFClk.c ****                 /* Reload CNTR 1 count value for measuring cycle*/
 470:.\Generated_Source\PSoC4/CyLFClk.c ****                 CY_SYS_CNT_REG1_REG = cydelayFreqHz >> CY_SYS_CLK_SYS_CLK_DEVIDER; 
 471:.\Generated_Source\PSoC4/CyLFClk.c **** 
 472:.\Generated_Source\PSoC4/CyLFClk.c ****                 /* Wait until counter CNTR 1 will finish down-counting */
 473:.\Generated_Source\PSoC4/CyLFClk.c ****                 while (0u == (CY_SYS_CNT_REG1_REG & CY_SYS_CLK_ILO_CALIBR_COMPLETE_MASK))
 474:.\Generated_Source\PSoC4/CyLFClk.c ****                 {
 475:.\Generated_Source\PSoC4/CyLFClk.c ****                     waitUntilCntr1Stops--;
 476:.\Generated_Source\PSoC4/CyLFClk.c ****                     if (0u == waitUntilCntr1Stops)
 477:.\Generated_Source\PSoC4/CyLFClk.c ****                     {
 478:.\Generated_Source\PSoC4/CyLFClk.c ****                         break;
 479:.\Generated_Source\PSoC4/CyLFClk.c ****                     }
 480:.\Generated_Source\PSoC4/CyLFClk.c ****                 }
 481:.\Generated_Source\PSoC4/CyLFClk.c ****                 trimRunningStatus = CySysClkIloUpdateTrimReg(iloAccuracyInPPT);
 482:.\Generated_Source\PSoC4/CyLFClk.c ****                 timeOutClocks--;
 483:.\Generated_Source\PSoC4/CyLFClk.c **** 
 484:.\Generated_Source\PSoC4/CyLFClk.c ****             /* Untill ILO accuracy will be in range less than +/- 10% or timeout occurs*/
 485:.\Generated_Source\PSoC4/CyLFClk.c ****             } while((CYRET_SUCCESS != trimRunningStatus) && 
 486:.\Generated_Source\PSoC4/CyLFClk.c ****               (CYRET_INVALID_STATE != trimRunningStatus) && 
 487:.\Generated_Source\PSoC4/CyLFClk.c ****                                (0u != timeOutClocks));
 488:.\Generated_Source\PSoC4/CyLFClk.c **** 
 489:.\Generated_Source\PSoC4/CyLFClk.c ****             if (CYRET_SUCCESS == trimRunningStatus)
 490:.\Generated_Source\PSoC4/CyLFClk.c ****             {
 491:.\Generated_Source\PSoC4/CyLFClk.c ****                 returnStatus = CYRET_SUCCESS;
 492:.\Generated_Source\PSoC4/CyLFClk.c ****             }
 493:.\Generated_Source\PSoC4/CyLFClk.c ****             else
 494:.\Generated_Source\PSoC4/CyLFClk.c ****             {
 495:.\Generated_Source\PSoC4/CyLFClk.c ****                 if(0u == timeOutClocks)
 496:.\Generated_Source\PSoC4/CyLFClk.c ****                 {
 497:.\Generated_Source\PSoC4/CyLFClk.c ****                     trimRunningStatus = CY_SYS_CLK_TRIM_OR_COMP_FINISHED;
 498:.\Generated_Source\PSoC4/CyLFClk.c ****                     returnStatus = CYRET_TIMEOUT;
 499:.\Generated_Source\PSoC4/CyLFClk.c ****                 }
 500:.\Generated_Source\PSoC4/CyLFClk.c ****                 else
 501:.\Generated_Source\PSoC4/CyLFClk.c ****                 {
 502:.\Generated_Source\PSoC4/CyLFClk.c ****                     returnStatus = CYRET_INVALID_STATE;
 503:.\Generated_Source\PSoC4/CyLFClk.c ****                 }
 504:.\Generated_Source\PSoC4/CyLFClk.c ****             }
 505:.\Generated_Source\PSoC4/CyLFClk.c ****         }
 506:.\Generated_Source\PSoC4/CyLFClk.c ****         /* Non - blocking mode */
 507:.\Generated_Source\PSoC4/CyLFClk.c ****         else
 508:.\Generated_Source\PSoC4/CyLFClk.c ****         {
 509:.\Generated_Source\PSoC4/CyLFClk.c ****             if (CY_SYS_CLK_TRIM_OR_COMP_FINISHED != trimRunningStatus)
 510:.\Generated_Source\PSoC4/CyLFClk.c ****             {
 511:.\Generated_Source\PSoC4/CyLFClk.c ****                 /* Checking if the counter CNTR 1 finished down-counting */
 512:.\Generated_Source\PSoC4/CyLFClk.c ****                 if(0u != (CY_SYS_CNT_REG1_REG & CY_SYS_CLK_ILO_CALIBR_COMPLETE_MASK))
 513:.\Generated_Source\PSoC4/CyLFClk.c ****                 {
 514:.\Generated_Source\PSoC4/CyLFClk.c ****                     returnStatus = CySysClkIloUpdateTrimReg(iloAccuracyInPPT);
 515:.\Generated_Source\PSoC4/CyLFClk.c ****                     trimRunningStatus = CY_SYS_CLK_TRIM_OR_COMP_FINISHED;
 516:.\Generated_Source\PSoC4/CyLFClk.c ****                 }
ARM GAS  C:\Users\g\AppData\Local\Temp\ccjVf3bh.s 			page 11


 517:.\Generated_Source\PSoC4/CyLFClk.c ****                 else
 518:.\Generated_Source\PSoC4/CyLFClk.c ****                 {
 519:.\Generated_Source\PSoC4/CyLFClk.c ****                     returnStatus = CYRET_STARTED;
 520:.\Generated_Source\PSoC4/CyLFClk.c ****                 }
 521:.\Generated_Source\PSoC4/CyLFClk.c ****             }
 522:.\Generated_Source\PSoC4/CyLFClk.c ****             else
 523:.\Generated_Source\PSoC4/CyLFClk.c ****             {
 524:.\Generated_Source\PSoC4/CyLFClk.c ****                 /* Reload CNTR 1 count value for next measuring */
 525:.\Generated_Source\PSoC4/CyLFClk.c ****                 CY_SYS_CNT_REG1_REG = cydelayFreqHz >> CY_SYS_CLK_SYS_CLK_DEVIDER;
 526:.\Generated_Source\PSoC4/CyLFClk.c ****                 trimRunningStatus = CY_SYS_CLK_TRIM_OR_COMP_STARTED;
 527:.\Generated_Source\PSoC4/CyLFClk.c ****                 returnStatus = CYRET_STARTED;
 528:.\Generated_Source\PSoC4/CyLFClk.c ****             }
 529:.\Generated_Source\PSoC4/CyLFClk.c ****         }
 530:.\Generated_Source\PSoC4/CyLFClk.c ****     }
 531:.\Generated_Source\PSoC4/CyLFClk.c ****     else
 532:.\Generated_Source\PSoC4/CyLFClk.c ****     {
 533:.\Generated_Source\PSoC4/CyLFClk.c ****         returnStatus = CYRET_INVALID_STATE;
 534:.\Generated_Source\PSoC4/CyLFClk.c ****     }
 535:.\Generated_Source\PSoC4/CyLFClk.c **** 
 536:.\Generated_Source\PSoC4/CyLFClk.c ****     return (returnStatus);
 537:.\Generated_Source\PSoC4/CyLFClk.c **** }
 538:.\Generated_Source\PSoC4/CyLFClk.c **** 
 539:.\Generated_Source\PSoC4/CyLFClk.c **** 
 540:.\Generated_Source\PSoC4/CyLFClk.c **** /********************************************************************************
 541:.\Generated_Source\PSoC4/CyLFClk.c **** * Function Name: CySysClkIloUpdateTrimReg
 542:.\Generated_Source\PSoC4/CyLFClk.c **** *********************************************************************************
 543:.\Generated_Source\PSoC4/CyLFClk.c **** *
 544:.\Generated_Source\PSoC4/CyLFClk.c **** * \internal
 545:.\Generated_Source\PSoC4/CyLFClk.c **** * Function calculates ILO accuracy and check is error range is higher than 
 546:.\Generated_Source\PSoC4/CyLFClk.c **** * +/- 10%. If Measured frequency is higher than +/- 10% function updates 
 547:.\Generated_Source\PSoC4/CyLFClk.c **** * ILO Trim register.
 548:.\Generated_Source\PSoC4/CyLFClk.c **** *
 549:.\Generated_Source\PSoC4/CyLFClk.c **** * \param
 550:.\Generated_Source\PSoC4/CyLFClk.c **** * iloAccuracyInPPT Pointer to an integer in which the trimmed ILO 
 551:.\Generated_Source\PSoC4/CyLFClk.c **** * accuracy will be returned. The value returned in this pointer is not valid 
 552:.\Generated_Source\PSoC4/CyLFClk.c **** * until the function returns CYRET_SUCCESS. If ILO frequency error is lower 
 553:.\Generated_Source\PSoC4/CyLFClk.c **** * than +/- 10% then the value returned in this pointer will be updated.
 554:.\Generated_Source\PSoC4/CyLFClk.c **** *
 555:.\Generated_Source\PSoC4/CyLFClk.c **** * \return CYRET_SUCCESS - Indicates that ILO frequency error is lower than 
 556:.\Generated_Source\PSoC4/CyLFClk.c **** * +/- 10% and no actions are required.
 557:.\Generated_Source\PSoC4/CyLFClk.c **** *
 558:.\Generated_Source\PSoC4/CyLFClk.c **** * \return  CYRET_STARTED - Indicates that ILO frequency error is higher than 
 559:.\Generated_Source\PSoC4/CyLFClk.c **** * +/- 10% and ILO Trim register was updated.
 560:.\Generated_Source\PSoC4/CyLFClk.c **** *
 561:.\Generated_Source\PSoC4/CyLFClk.c **** * \return CYRET_INVALID_STATE - Indicates trimming was unsuccessful.
 562:.\Generated_Source\PSoC4/CyLFClk.c **** *
 563:.\Generated_Source\PSoC4/CyLFClk.c **** * Post #1 - To obtain 10% ILO accuracy the calculated accuracy should be equal 
 564:.\Generated_Source\PSoC4/CyLFClk.c **** * CY_SYS_CLK_ERROR_RANGE = 5.6%. Error value should take to account IMO error of 
 565:.\Generated_Source\PSoC4/CyLFClk.c **** * +/-2% (+/-0.64kHz), trim step of 2.36kHz (+/-1.18kHz) and error while ILO 
 566:.\Generated_Source\PSoC4/CyLFClk.c **** * frequency measuring.
 567:.\Generated_Source\PSoC4/CyLFClk.c **** *
 568:.\Generated_Source\PSoC4/CyLFClk.c **** * \endinternal
 569:.\Generated_Source\PSoC4/CyLFClk.c **** *
 570:.\Generated_Source\PSoC4/CyLFClk.c **** **********************************************************************************/
 571:.\Generated_Source\PSoC4/CyLFClk.c **** cystatus CySysClkIloUpdateTrimReg(int32* iloAccuracyInPPT)
 572:.\Generated_Source\PSoC4/CyLFClk.c **** {
 573:.\Generated_Source\PSoC4/CyLFClk.c ****     uint32 measuredIloFreq;
ARM GAS  C:\Users\g\AppData\Local\Temp\ccjVf3bh.s 			page 12


 574:.\Generated_Source\PSoC4/CyLFClk.c ****     uint32 currentIloTrimValue;
 575:.\Generated_Source\PSoC4/CyLFClk.c ****     int32 iloAccuracyValue;
 576:.\Generated_Source\PSoC4/CyLFClk.c ****     int32 trimStep;
 577:.\Generated_Source\PSoC4/CyLFClk.c ****     cystatus errorRangeStatus;
 578:.\Generated_Source\PSoC4/CyLFClk.c **** 
 579:.\Generated_Source\PSoC4/CyLFClk.c ****     if(0u != CY_SYS_CNT_REG2_REG)
 580:.\Generated_Source\PSoC4/CyLFClk.c ****     {
 581:.\Generated_Source\PSoC4/CyLFClk.c ****         measuredIloFreq = (CY_SYS_CNT_REG2_REG * cydelayFreqHz) / (cydelayFreqHz >> CY_SYS_CLK_SYS_
 582:.\Generated_Source\PSoC4/CyLFClk.c **** 
 583:.\Generated_Source\PSoC4/CyLFClk.c ****         /* Calculate value of error in PPT according to formula - 
 584:.\Generated_Source\PSoC4/CyLFClk.c ****         *       ((measuredIlofrequency - iloDesired freaquency) * 1000 / iloDesired freaquency) */
 585:.\Generated_Source\PSoC4/CyLFClk.c ****         iloAccuracyValue = (((int32) measuredIloFreq - (int32) CY_SYS_CLK_ILO_DESIRED_FREQ_HZ) * \
 586:.\Generated_Source\PSoC4/CyLFClk.c ****                             ((int32) CY_SYS_CLK_PERTHOUSAND)) / ((int32) CY_SYS_CLK_ILO_DESIRED_FRE
 587:.\Generated_Source\PSoC4/CyLFClk.c **** 
 588:.\Generated_Source\PSoC4/CyLFClk.c ****         /* Check if ILO accuracy is more than +/- CY_SYS_CLK_ERROR_RANGE. See post #1 of API descri
 589:.\Generated_Source\PSoC4/CyLFClk.c ****         if(CY_SYS_CLK_ERROR_RANGE < (uint32) (CY_SYS_CLK_ABS_MACRO(iloAccuracyValue)))
 590:.\Generated_Source\PSoC4/CyLFClk.c ****         {
 591:.\Generated_Source\PSoC4/CyLFClk.c ****             if (0 < iloAccuracyValue)
 592:.\Generated_Source\PSoC4/CyLFClk.c ****             {
 593:.\Generated_Source\PSoC4/CyLFClk.c ****                 trimStep = (int32) (((iloAccuracyValue * (int32) CY_SYS_CLK_ERROR_COEF) + 
 594:.\Generated_Source\PSoC4/CyLFClk.c ****                 CY_SYS_CLK_HALF_OF_STEP) / CY_SYS_CLK_ERROR_STEP);
 595:.\Generated_Source\PSoC4/CyLFClk.c ****             }
 596:.\Generated_Source\PSoC4/CyLFClk.c ****             else
 597:.\Generated_Source\PSoC4/CyLFClk.c ****             {
 598:.\Generated_Source\PSoC4/CyLFClk.c ****                 trimStep = (int32) (((iloAccuracyValue * (int32) CY_SYS_CLK_ERROR_COEF) - 
 599:.\Generated_Source\PSoC4/CyLFClk.c ****                 CY_SYS_CLK_HALF_OF_STEP) / CY_SYS_CLK_ERROR_STEP);
 600:.\Generated_Source\PSoC4/CyLFClk.c ****             }
 601:.\Generated_Source\PSoC4/CyLFClk.c ****             currentIloTrimValue = (CY_SYS_CLK_ILO_TRIM_REG & CY_SYS_CLK_ILO_TRIM_MASK);
 602:.\Generated_Source\PSoC4/CyLFClk.c ****             trimStep = (int32) currentIloTrimValue - trimStep;
 603:.\Generated_Source\PSoC4/CyLFClk.c **** 
 604:.\Generated_Source\PSoC4/CyLFClk.c ****             if(trimStep > CY_SYS_CLK_FOURBITS_MAX)
 605:.\Generated_Source\PSoC4/CyLFClk.c ****             {
 606:.\Generated_Source\PSoC4/CyLFClk.c ****                 trimStep = CY_SYS_CLK_FOURBITS_MAX;
 607:.\Generated_Source\PSoC4/CyLFClk.c ****             }
 608:.\Generated_Source\PSoC4/CyLFClk.c ****             if(trimStep < 0)
 609:.\Generated_Source\PSoC4/CyLFClk.c ****             {
 610:.\Generated_Source\PSoC4/CyLFClk.c ****                 trimStep = 0;
 611:.\Generated_Source\PSoC4/CyLFClk.c ****             }
 612:.\Generated_Source\PSoC4/CyLFClk.c ****             CY_SYS_CLK_ILO_TRIM_REG = (CY_SYS_CLK_ILO_TRIM_REG & (uint32)(~CY_SYS_CLK_ILO_TRIM_MASK
 613:.\Generated_Source\PSoC4/CyLFClk.c ****                                                                  ((uint32) trimStep);
 614:.\Generated_Source\PSoC4/CyLFClk.c ****             errorRangeStatus = CYRET_STARTED;
 615:.\Generated_Source\PSoC4/CyLFClk.c ****         } /* Else return success because error is in +/- 10% range*/
 616:.\Generated_Source\PSoC4/CyLFClk.c ****         else
 617:.\Generated_Source\PSoC4/CyLFClk.c ****         {
 618:.\Generated_Source\PSoC4/CyLFClk.c ****             /* Write trimmed ILO accuracy through pointer. */
 619:.\Generated_Source\PSoC4/CyLFClk.c ****             *iloAccuracyInPPT = iloAccuracyValue;
 620:.\Generated_Source\PSoC4/CyLFClk.c ****             errorRangeStatus = CYRET_SUCCESS;
 621:.\Generated_Source\PSoC4/CyLFClk.c ****         }
 622:.\Generated_Source\PSoC4/CyLFClk.c ****     }
 623:.\Generated_Source\PSoC4/CyLFClk.c ****     else
 624:.\Generated_Source\PSoC4/CyLFClk.c ****     {
 625:.\Generated_Source\PSoC4/CyLFClk.c ****         errorRangeStatus = CYRET_INVALID_STATE;
 626:.\Generated_Source\PSoC4/CyLFClk.c ****     }
 627:.\Generated_Source\PSoC4/CyLFClk.c **** return (errorRangeStatus);
 628:.\Generated_Source\PSoC4/CyLFClk.c **** }
 629:.\Generated_Source\PSoC4/CyLFClk.c **** 
 630:.\Generated_Source\PSoC4/CyLFClk.c **** 
ARM GAS  C:\Users\g\AppData\Local\Temp\ccjVf3bh.s 			page 13


 631:.\Generated_Source\PSoC4/CyLFClk.c **** /*******************************************************************************
 632:.\Generated_Source\PSoC4/CyLFClk.c **** * Function Name: CySysClkIloRestoreFactoryTrim
 633:.\Generated_Source\PSoC4/CyLFClk.c **** ****************************************************************************//**
 634:.\Generated_Source\PSoC4/CyLFClk.c **** * \brief
 635:.\Generated_Source\PSoC4/CyLFClk.c **** * Restores the ILO Trim Register to factory value.
 636:.\Generated_Source\PSoC4/CyLFClk.c **** *
 637:.\Generated_Source\PSoC4/CyLFClk.c **** * The CySysClkIloStartMeasurement() API should be called prior to 
 638:.\Generated_Source\PSoC4/CyLFClk.c **** * calling this API. Otherwise CYRET_UNKNOWN will be returned.
 639:.\Generated_Source\PSoC4/CyLFClk.c **** *
 640:.\Generated_Source\PSoC4/CyLFClk.c **** * Available for all PSoC 4 devices except for PSoC 4000 / PSoC 4100 / PSoC 4200 
 641:.\Generated_Source\PSoC4/CyLFClk.c **** * / PSoC 4000S / PSoC 4100S / PSoC Analog Coprocessor devices.
 642:.\Generated_Source\PSoC4/CyLFClk.c **** *
 643:.\Generated_Source\PSoC4/CyLFClk.c **** * \return CYRET_SUCCESS - Operation was successful. 
 644:.\Generated_Source\PSoC4/CyLFClk.c **** * \return CYRET_UNKNOWN - CySysClkIloStartMeasurement() was not called 
 645:.\Generated_Source\PSoC4/CyLFClk.c **** * before this API. Hence the trim value cannot be updated.
 646:.\Generated_Source\PSoC4/CyLFClk.c **** *
 647:.\Generated_Source\PSoC4/CyLFClk.c **** ******************************************************************************/
 648:.\Generated_Source\PSoC4/CyLFClk.c **** cystatus CySysClkIloRestoreFactoryTrim(void)
 649:.\Generated_Source\PSoC4/CyLFClk.c **** {
 650:.\Generated_Source\PSoC4/CyLFClk.c ****     cystatus returnStatus = CYRET_SUCCESS;
 651:.\Generated_Source\PSoC4/CyLFClk.c **** 
 652:.\Generated_Source\PSoC4/CyLFClk.c ****     /* Check was defaultIloTrimRegValue modified in CySysClkIloStartMeasurement */
 653:.\Generated_Source\PSoC4/CyLFClk.c ****     if(CY_SYS_CLK_ILO_TRIM_DEFAULT_VALUE != defaultIloTrimRegValue)
 654:.\Generated_Source\PSoC4/CyLFClk.c ****         {
 655:.\Generated_Source\PSoC4/CyLFClk.c ****             CY_SYS_CLK_ILO_TRIM_REG = ((CY_SYS_CLK_ILO_TRIM_REG & (uint32)(~CY_SYS_CLK_ILO_TRIM_MAS
 656:.\Generated_Source\PSoC4/CyLFClk.c ****                                        (defaultIloTrimRegValue & CY_SYS_CLK_ILO_TRIM_MASK));
 657:.\Generated_Source\PSoC4/CyLFClk.c ****         }
 658:.\Generated_Source\PSoC4/CyLFClk.c ****         else
 659:.\Generated_Source\PSoC4/CyLFClk.c ****         {
 660:.\Generated_Source\PSoC4/CyLFClk.c ****             returnStatus = CYRET_UNKNOWN;
 661:.\Generated_Source\PSoC4/CyLFClk.c ****         }
 662:.\Generated_Source\PSoC4/CyLFClk.c **** 
 663:.\Generated_Source\PSoC4/CyLFClk.c ****         return (returnStatus);
 664:.\Generated_Source\PSoC4/CyLFClk.c **** }
 665:.\Generated_Source\PSoC4/CyLFClk.c **** #endif /* (CY_IP_SRSSV2 && (!(CY_PSOC4_4100 || CY_PSOC4_4200))) */
 666:.\Generated_Source\PSoC4/CyLFClk.c **** 
 667:.\Generated_Source\PSoC4/CyLFClk.c **** 
 668:.\Generated_Source\PSoC4/CyLFClk.c **** #if (CY_IP_WCO && CY_IP_SRSSV2)
 669:.\Generated_Source\PSoC4/CyLFClk.c **** /*******************************************************************************
 670:.\Generated_Source\PSoC4/CyLFClk.c **** * Function Name: CySysClkGetLfclkSource
 671:.\Generated_Source\PSoC4/CyLFClk.c **** ********************************************************************************
 672:.\Generated_Source\PSoC4/CyLFClk.c **** *
 673:.\Generated_Source\PSoC4/CyLFClk.c **** * \internal
 674:.\Generated_Source\PSoC4/CyLFClk.c **** *  Gets the clock source for the LFCLK clock.
 675:.\Generated_Source\PSoC4/CyLFClk.c **** *  The function is applicable only for PSoC 4100 BLE / PSoC 4200 BLE / PSoC 4100M /
 676:.\Generated_Source\PSoC4/CyLFClk.c **** *  PSoC 4200M / PSoC 4200L.
 677:.\Generated_Source\PSoC4/CyLFClk.c **** *
 678:.\Generated_Source\PSoC4/CyLFClk.c **** * \return The LFCLK source:
 679:.\Generated_Source\PSoC4/CyLFClk.c **** * CY_SYS_CLK_LFCLK_SRC_ILO Internal Low Frequency (32 kHz) Oscillator (ILO)
 680:.\Generated_Source\PSoC4/CyLFClk.c **** * CY_SYS_CLK_LFCLK_SRC_WCO Low Frequency Watch Crystal Oscillator (WCO)
 681:.\Generated_Source\PSoC4/CyLFClk.c **** *
 682:.\Generated_Source\PSoC4/CyLFClk.c **** * \endinternal
 683:.\Generated_Source\PSoC4/CyLFClk.c **** *
 684:.\Generated_Source\PSoC4/CyLFClk.c **** *******************************************************************************/
 685:.\Generated_Source\PSoC4/CyLFClk.c ****     static uint32 CySysClkGetLfclkSource(void)
 686:.\Generated_Source\PSoC4/CyLFClk.c ****     {
 687:.\Generated_Source\PSoC4/CyLFClk.c ****         uint32 lfclkSource;
ARM GAS  C:\Users\g\AppData\Local\Temp\ccjVf3bh.s 			page 14


 688:.\Generated_Source\PSoC4/CyLFClk.c ****         lfclkSource = CY_SYS_WDT_CONFIG_REG & CY_SYS_CLK_LFCLK_SEL_MASK;
 689:.\Generated_Source\PSoC4/CyLFClk.c ****         return (lfclkSource);
 690:.\Generated_Source\PSoC4/CyLFClk.c ****     }
 691:.\Generated_Source\PSoC4/CyLFClk.c **** 
 692:.\Generated_Source\PSoC4/CyLFClk.c ****     
 693:.\Generated_Source\PSoC4/CyLFClk.c **** /*******************************************************************************
 694:.\Generated_Source\PSoC4/CyLFClk.c **** * Function Name: CySysClkSetLfclkSource
 695:.\Generated_Source\PSoC4/CyLFClk.c **** ****************************************************************************//**
 696:.\Generated_Source\PSoC4/CyLFClk.c **** * \brief
 697:.\Generated_Source\PSoC4/CyLFClk.c **** *  Sets the clock source for the LFCLK clock.
 698:.\Generated_Source\PSoC4/CyLFClk.c **** *
 699:.\Generated_Source\PSoC4/CyLFClk.c **** * The switch between LFCLK sources must be done between the positive edges of
 700:.\Generated_Source\PSoC4/CyLFClk.c **** * LFCLK, because the glitch risk is around the LFCLK positive edge. To ensure
 701:.\Generated_Source\PSoC4/CyLFClk.c **** * that the switch can be done safely, the WDT counter value is read until it
 702:.\Generated_Source\PSoC4/CyLFClk.c **** * changes.
 703:.\Generated_Source\PSoC4/CyLFClk.c **** *
 704:.\Generated_Source\PSoC4/CyLFClk.c **** * That means that the positive edge just finished and the switch is performed.
 705:.\Generated_Source\PSoC4/CyLFClk.c **** * The enabled WDT counter is used for that purpose. If no counters are enabled,
 706:.\Generated_Source\PSoC4/CyLFClk.c **** * counter 0 is enabled. And after the LFCLK source is switched, counter 0
 707:.\Generated_Source\PSoC4/CyLFClk.c **** * configuration is restored.
 708:.\Generated_Source\PSoC4/CyLFClk.c **** *
 709:.\Generated_Source\PSoC4/CyLFClk.c **** *  The function is applicable only for devices with more than one source for 
 710:.\Generated_Source\PSoC4/CyLFClk.c **** * LFCLK - PSoC 4100 BLE / PSoC 4200 BLE / PRoC BLE / PSoC 4100M / PSoC 4200M / 
 711:.\Generated_Source\PSoC4/CyLFClk.c **** * PSoC 4200L.
 712:.\Generated_Source\PSoC4/CyLFClk.c **** *
 713:.\Generated_Source\PSoC4/CyLFClk.c **** * \note For PSoC 4000S / PSoC 4100S / PSoC Analog Coprocessor devices LFCLK can
 714:.\Generated_Source\PSoC4/CyLFClk.c **** * only be sourced from ILO even though WCO is available.
 715:.\Generated_Source\PSoC4/CyLFClk.c **** *
 716:.\Generated_Source\PSoC4/CyLFClk.c **** * \param
 717:.\Generated_Source\PSoC4/CyLFClk.c **** * source
 718:.\Generated_Source\PSoC4/CyLFClk.c **** * CY_SYS_CLK_LFCLK_SRC_ILO - Internal Low Frequency (32 kHz) 
 719:.\Generated_Source\PSoC4/CyLFClk.c **** * Oscillator (ILO).<br>
 720:.\Generated_Source\PSoC4/CyLFClk.c **** * CY_SYS_CLK_LFCLK_SRC_WCO - Low Frequency Watch Crystal Oscillator (WCO).
 721:.\Generated_Source\PSoC4/CyLFClk.c **** *
 722:.\Generated_Source\PSoC4/CyLFClk.c **** * \details
 723:.\Generated_Source\PSoC4/CyLFClk.c **** * This function has no effect if WDT is locked (CySysWdtLock() is called). 
 724:.\Generated_Source\PSoC4/CyLFClk.c **** * Call CySysWdtUnlock() to unlock WDT.
 725:.\Generated_Source\PSoC4/CyLFClk.c **** *
 726:.\Generated_Source\PSoC4/CyLFClk.c **** * Both the current source and the new source must be running and stable before
 727:.\Generated_Source\PSoC4/CyLFClk.c **** * calling this function.
 728:.\Generated_Source\PSoC4/CyLFClk.c **** *
 729:.\Generated_Source\PSoC4/CyLFClk.c **** * Changing the LFCLK clock source may change the LFCLK clock frequency and
 730:.\Generated_Source\PSoC4/CyLFClk.c **** * affect the functionality that uses this clock. For example, watchdog timer
 731:.\Generated_Source\PSoC4/CyLFClk.c **** * "uses this clock" or "this clock uses" (WDT) is clocked by LFCLK.
 732:.\Generated_Source\PSoC4/CyLFClk.c **** *
 733:.\Generated_Source\PSoC4/CyLFClk.c **** *******************************************************************************/
 734:.\Generated_Source\PSoC4/CyLFClk.c ****     void CySysClkSetLfclkSource(uint32 source)
 735:.\Generated_Source\PSoC4/CyLFClk.c ****     {
 736:.\Generated_Source\PSoC4/CyLFClk.c ****         uint8  interruptState;
 737:.\Generated_Source\PSoC4/CyLFClk.c **** 
 738:.\Generated_Source\PSoC4/CyLFClk.c ****         if (CySysClkGetLfclkSource() != source)
 739:.\Generated_Source\PSoC4/CyLFClk.c ****         {
 740:.\Generated_Source\PSoC4/CyLFClk.c ****             interruptState = CyEnterCriticalSection();
 741:.\Generated_Source\PSoC4/CyLFClk.c ****             CySysClkLfclkPosedgeCatch();
 742:.\Generated_Source\PSoC4/CyLFClk.c ****             CY_SYS_WDT_CONFIG_REG = (CY_SYS_WDT_CONFIG_REG & (uint32)(~CY_SYS_CLK_LFCLK_SEL_MASK)) 
 743:.\Generated_Source\PSoC4/CyLFClk.c ****                                     (source & CY_SYS_CLK_LFCLK_SEL_MASK);
 744:.\Generated_Source\PSoC4/CyLFClk.c ****             CySysClkLfclkPosedgeRestore();
ARM GAS  C:\Users\g\AppData\Local\Temp\ccjVf3bh.s 			page 15


 745:.\Generated_Source\PSoC4/CyLFClk.c ****             CyExitCriticalSection(interruptState);
 746:.\Generated_Source\PSoC4/CyLFClk.c ****         }
 747:.\Generated_Source\PSoC4/CyLFClk.c ****     }
 748:.\Generated_Source\PSoC4/CyLFClk.c **** #endif /* (CY_IP_WCO && CY_IP_SRSSV2) */
 749:.\Generated_Source\PSoC4/CyLFClk.c **** 
 750:.\Generated_Source\PSoC4/CyLFClk.c **** 
 751:.\Generated_Source\PSoC4/CyLFClk.c **** #if (CY_IP_WCO)
 752:.\Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
 753:.\Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysClkWcoStart
 754:.\Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
 755:.\Generated_Source\PSoC4/CyLFClk.c ****     * \brief
 756:.\Generated_Source\PSoC4/CyLFClk.c ****     *  Enables Watch Crystal Oscillator (WCO).
 757:.\Generated_Source\PSoC4/CyLFClk.c ****     * 
 758:.\Generated_Source\PSoC4/CyLFClk.c ****     * This API enables WCO which is used as a source for LFCLK. Similar to ILO, 
 759:.\Generated_Source\PSoC4/CyLFClk.c ****     * WCO is also available in all modes except Hibernate and Stop modes.
 760:.\Generated_Source\PSoC4/CyLFClk.c ****     * \note In PSoC 4000S / PSoC 4100S / PSoC Analog Coprocessor devices
 761:.\Generated_Source\PSoC4/CyLFClk.c ****     * WCO cannot be a source for the LFCLK. 
 762:.\Generated_Source\PSoC4/CyLFClk.c ****     *
 763:.\Generated_Source\PSoC4/CyLFClk.c ****     *  WCO is always enabled in High Power Mode (HPM). Refer to the device
 764:.\Generated_Source\PSoC4/CyLFClk.c ****     *  datasheet for the  WCO startup time. Once WCO becomes stable it can be
 765:.\Generated_Source\PSoC4/CyLFClk.c ****     *  switched to Low Power Mode (LPM). Note that oscillator can be unstable
 766:.\Generated_Source\PSoC4/CyLFClk.c ****     *  during a switch and hence its output should not be used at that moment.
 767:.\Generated_Source\PSoC4/CyLFClk.c ****     *
 768:.\Generated_Source\PSoC4/CyLFClk.c ****     *  The CySysClkWcoSetPowerMode() function configures the WCO power mode.
 769:.\Generated_Source\PSoC4/CyLFClk.c ****     *
 770:.\Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
 771:.\Generated_Source\PSoC4/CyLFClk.c ****     void CySysClkWcoStart(void)
 772:.\Generated_Source\PSoC4/CyLFClk.c ****     {
 773:.\Generated_Source\PSoC4/CyLFClk.c ****         CySysClkWcoSetHighPowerMode();
 774:.\Generated_Source\PSoC4/CyLFClk.c ****         CY_SYS_CLK_WCO_CONFIG_REG |= CY_SYS_CLK_WCO_CONFIG_LPM_ENABLE;
 775:.\Generated_Source\PSoC4/CyLFClk.c ****     }
 776:.\Generated_Source\PSoC4/CyLFClk.c **** 
 777:.\Generated_Source\PSoC4/CyLFClk.c **** 
 778:.\Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
 779:.\Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysClkWcoStop
 780:.\Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
 781:.\Generated_Source\PSoC4/CyLFClk.c ****     * \brief
 782:.\Generated_Source\PSoC4/CyLFClk.c ****     * Disables the 32 KHz Crystal Oscillator.
 783:.\Generated_Source\PSoC4/CyLFClk.c ****     *
 784:.\Generated_Source\PSoC4/CyLFClk.c ****     * API switch of WCO.
 785:.\Generated_Source\PSoC4/CyLFClk.c ****     * \note PSoC 4100S / PSoC Analog Coprocessor: WCO is required for DeepSleep 
 786:.\Generated_Source\PSoC4/CyLFClk.c ****     * Timer's operation.
 787:.\Generated_Source\PSoC4/CyLFClk.c ****     *
 788:.\Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
 789:.\Generated_Source\PSoC4/CyLFClk.c ****     void  CySysClkWcoStop(void)
 790:.\Generated_Source\PSoC4/CyLFClk.c ****     {
 791:.\Generated_Source\PSoC4/CyLFClk.c ****         #if (CY_IP_SRSSV2)
 792:.\Generated_Source\PSoC4/CyLFClk.c ****             uint8  interruptState;
 793:.\Generated_Source\PSoC4/CyLFClk.c ****         #endif /* (CY_IP_SRSSV2) */
 794:.\Generated_Source\PSoC4/CyLFClk.c **** 
 795:.\Generated_Source\PSoC4/CyLFClk.c ****         if (0u != CySysClkWcoEnabled())
 796:.\Generated_Source\PSoC4/CyLFClk.c ****         {
 797:.\Generated_Source\PSoC4/CyLFClk.c ****             #if (CY_IP_SRSSV2)
 798:.\Generated_Source\PSoC4/CyLFClk.c ****                 if (CY_SYS_CLK_LFCLK_SRC_WCO == CySysClkGetLfclkSource())
 799:.\Generated_Source\PSoC4/CyLFClk.c ****                 {
 800:.\Generated_Source\PSoC4/CyLFClk.c ****                     interruptState = CyEnterCriticalSection();
 801:.\Generated_Source\PSoC4/CyLFClk.c ****                     CySysClkLfclkPosedgeCatch();
ARM GAS  C:\Users\g\AppData\Local\Temp\ccjVf3bh.s 			page 16


 802:.\Generated_Source\PSoC4/CyLFClk.c ****                     CY_SYS_CLK_WCO_CONFIG_REG &= (uint32) ~CY_SYS_CLK_WCO_CONFIG_LPM_ENABLE;
 803:.\Generated_Source\PSoC4/CyLFClk.c ****                     CySysClkLfclkPosedgeRestore();
 804:.\Generated_Source\PSoC4/CyLFClk.c ****                     CyExitCriticalSection(interruptState);
 805:.\Generated_Source\PSoC4/CyLFClk.c ****                 }
 806:.\Generated_Source\PSoC4/CyLFClk.c ****                 else /* Safe to disable - shortened pulse does not impact peripheral */
 807:.\Generated_Source\PSoC4/CyLFClk.c ****             #endif /* (CY_IP_SRSSV2) */
 808:.\Generated_Source\PSoC4/CyLFClk.c ****             {
 809:.\Generated_Source\PSoC4/CyLFClk.c ****                 CY_SYS_CLK_WCO_CONFIG_REG &= (uint32) ~CY_SYS_CLK_WCO_CONFIG_LPM_ENABLE;
 810:.\Generated_Source\PSoC4/CyLFClk.c ****             }
 811:.\Generated_Source\PSoC4/CyLFClk.c ****         } /* Otherwise do nothing. WCO configuration cannot be changed. */
 812:.\Generated_Source\PSoC4/CyLFClk.c ****     }
 813:.\Generated_Source\PSoC4/CyLFClk.c **** 
 814:.\Generated_Source\PSoC4/CyLFClk.c **** 
 815:.\Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
 816:.\Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysClkWcoEnabled
 817:.\Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
 818:.\Generated_Source\PSoC4/CyLFClk.c ****     * \internal Reports the WCO enable state.
 819:.\Generated_Source\PSoC4/CyLFClk.c ****     *
 820:.\Generated_Source\PSoC4/CyLFClk.c ****     * \return 1 if WCO is enabled
 821:.\Generated_Source\PSoC4/CyLFClk.c ****     * \return 0 if WCO is disabled.
 822:.\Generated_Source\PSoC4/CyLFClk.c ****     * \endinternal
 823:.\Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
 824:.\Generated_Source\PSoC4/CyLFClk.c ****     uint32 CySysClkWcoEnabled(void)
 825:.\Generated_Source\PSoC4/CyLFClk.c ****     {
 826:.\Generated_Source\PSoC4/CyLFClk.c ****         return ((0u != (CY_SYS_CLK_WCO_CONFIG_REG & (uint32)(CY_SYS_CLK_WCO_CONFIG_LPM_ENABLE))) ?
 827:.\Generated_Source\PSoC4/CyLFClk.c ****                 (uint32) 1u :
 828:.\Generated_Source\PSoC4/CyLFClk.c ****                 (uint32) 0u);
 829:.\Generated_Source\PSoC4/CyLFClk.c ****     }
 830:.\Generated_Source\PSoC4/CyLFClk.c **** 
 831:.\Generated_Source\PSoC4/CyLFClk.c **** 
 832:.\Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
 833:.\Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysClkWcoSetPowerMode
 834:.\Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
 835:.\Generated_Source\PSoC4/CyLFClk.c ****     * \brief
 836:.\Generated_Source\PSoC4/CyLFClk.c ****     * Sets the power mode for the 32 KHz WCO.
 837:.\Generated_Source\PSoC4/CyLFClk.c ****     *
 838:.\Generated_Source\PSoC4/CyLFClk.c ****     * By default (if this function is not called), the WCO is in High power mode 
 839:.\Generated_Source\PSoC4/CyLFClk.c ****     * during Active and device's low power modes
 840:.\Generated_Source\PSoC4/CyLFClk.c ****     *
 841:.\Generated_Source\PSoC4/CyLFClk.c ****     * \param mode
 842:.\Generated_Source\PSoC4/CyLFClk.c ****     * CY_SYS_CLK_WCO_HPM - The High Power mode.<br>
 843:.\Generated_Source\PSoC4/CyLFClk.c ****     * CY_SYS_CLK_WCO_LPM - The Low Power mode.
 844:.\Generated_Source\PSoC4/CyLFClk.c ****     *
 845:.\Generated_Source\PSoC4/CyLFClk.c ****     * \return A previous power mode. The same as the parameters.
 846:.\Generated_Source\PSoC4/CyLFClk.c ****     *
 847:.\Generated_Source\PSoC4/CyLFClk.c ****     * \note
 848:.\Generated_Source\PSoC4/CyLFClk.c ****     * The WCO Low Power mode is applicable for PSoC 4100 BLE / PSoC 4200 BLE devices.
 849:.\Generated_Source\PSoC4/CyLFClk.c ****     *
 850:.\Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
 851:.\Generated_Source\PSoC4/CyLFClk.c ****     uint32 CySysClkWcoSetPowerMode(uint32 mode)
 852:.\Generated_Source\PSoC4/CyLFClk.c ****     {
 853:.\Generated_Source\PSoC4/CyLFClk.c ****         uint32 powerModeStatus;
 854:.\Generated_Source\PSoC4/CyLFClk.c **** 
 855:.\Generated_Source\PSoC4/CyLFClk.c ****         powerModeStatus = CY_SYS_CLK_WCO_CONFIG_REG & CY_SYS_CLK_WCO_CONFIG_LPM_EN;
 856:.\Generated_Source\PSoC4/CyLFClk.c **** 
 857:.\Generated_Source\PSoC4/CyLFClk.c ****         switch(mode)
 858:.\Generated_Source\PSoC4/CyLFClk.c ****         {
ARM GAS  C:\Users\g\AppData\Local\Temp\ccjVf3bh.s 			page 17


 859:.\Generated_Source\PSoC4/CyLFClk.c ****         case CY_SYS_CLK_WCO_HPM:
 860:.\Generated_Source\PSoC4/CyLFClk.c ****                 CySysClkWcoSetHighPowerMode();
 861:.\Generated_Source\PSoC4/CyLFClk.c ****             break;
 862:.\Generated_Source\PSoC4/CyLFClk.c **** 
 863:.\Generated_Source\PSoC4/CyLFClk.c ****         #if(CY_PSOC4_4100BL || CY_PSOC4_4200BL)
 864:.\Generated_Source\PSoC4/CyLFClk.c ****             case CY_SYS_CLK_WCO_LPM:
 865:.\Generated_Source\PSoC4/CyLFClk.c ****                     CySysClkWcoSetLowPowerMode();
 866:.\Generated_Source\PSoC4/CyLFClk.c ****                 break;
 867:.\Generated_Source\PSoC4/CyLFClk.c ****         #endif /* (CY_PSOC4_4100BL || CY_PSOC4_4200BL) */
 868:.\Generated_Source\PSoC4/CyLFClk.c **** 
 869:.\Generated_Source\PSoC4/CyLFClk.c ****         default:
 870:.\Generated_Source\PSoC4/CyLFClk.c ****             CYASSERT(0u != 0u);
 871:.\Generated_Source\PSoC4/CyLFClk.c ****             break;
 872:.\Generated_Source\PSoC4/CyLFClk.c ****         }
 873:.\Generated_Source\PSoC4/CyLFClk.c **** 
 874:.\Generated_Source\PSoC4/CyLFClk.c ****         return (powerModeStatus);
 875:.\Generated_Source\PSoC4/CyLFClk.c ****     }
 876:.\Generated_Source\PSoC4/CyLFClk.c **** 
 877:.\Generated_Source\PSoC4/CyLFClk.c **** 
 878:.\Generated_Source\PSoC4/CyLFClk.c **** /*******************************************************************************
 879:.\Generated_Source\PSoC4/CyLFClk.c **** * Function Name: CySysClkWcoClockOutSelect
 880:.\Generated_Source\PSoC4/CyLFClk.c **** ****************************************************************************//**
 881:.\Generated_Source\PSoC4/CyLFClk.c **** * \brief
 882:.\Generated_Source\PSoC4/CyLFClk.c **** * Selects the WCO block output source.
 883:.\Generated_Source\PSoC4/CyLFClk.c **** *
 884:.\Generated_Source\PSoC4/CyLFClk.c **** * In addition to generating 32.768 kHz clock from external crystals, WCO 
 885:.\Generated_Source\PSoC4/CyLFClk.c **** * can be sourced by external clock source using wco_out pin. The API help to
 886:.\Generated_Source\PSoC4/CyLFClk.c **** * lets you select between the sources: External crystal or external pin.
 887:.\Generated_Source\PSoC4/CyLFClk.c **** *
 888:.\Generated_Source\PSoC4/CyLFClk.c **** * If you want to use external pin to drive WCO the next procedure is required:
 889:.\Generated_Source\PSoC4/CyLFClk.c **** * <br> 1) Disable the WCO.
 890:.\Generated_Source\PSoC4/CyLFClk.c **** * <br> 2) Drive the wco_out pin to an external signal source.
 891:.\Generated_Source\PSoC4/CyLFClk.c **** * <br> 3) Call CySysClkWcoClockOutSelect(CY_SYS_CLK_WCO_SEL_PIN).
 892:.\Generated_Source\PSoC4/CyLFClk.c **** * <br> 4) Enable the WCO and wait for 15 us before clocking the XO pad at the high 
 893:.\Generated_Source\PSoC4/CyLFClk.c **** * potential. Let's assume you are using the 1.6v clock amplitude, then the
 894:.\Generated_Source\PSoC4/CyLFClk.c **** * sequence would start at 1.6v, then 0v, then 1.6v etc at a chosen frequency.
 895:.\Generated_Source\PSoC4/CyLFClk.c **** *
 896:.\Generated_Source\PSoC4/CyLFClk.c **** * If you want to use WCO after using an external pin source:
 897:.\Generated_Source\PSoC4/CyLFClk.c **** * <br> 1) Disable the WCO.
 898:.\Generated_Source\PSoC4/CyLFClk.c **** * <br> 2) Drive off wco_out pin with external signal source.
 899:.\Generated_Source\PSoC4/CyLFClk.c **** * <br> 3) Call CySysClkWcoClockOutSelect(CY_SYS_CLK_WCO_SEL_CRYSTAL).
 900:.\Generated_Source\PSoC4/CyLFClk.c **** * <br> 4) Enable the WCO.
 901:.\Generated_Source\PSoC4/CyLFClk.c **** *
 902:.\Generated_Source\PSoC4/CyLFClk.c **** * \warning 
 903:.\Generated_Source\PSoC4/CyLFClk.c **** * Do not use the oscillator output clock prior to a 15uS delay in your system.
 904:.\Generated_Source\PSoC4/CyLFClk.c **** * There are no limitations on the external clock frequency.
 905:.\Generated_Source\PSoC4/CyLFClk.c **** * \warning 
 906:.\Generated_Source\PSoC4/CyLFClk.c **** * When external clock source was selected to drive WCO block the IMO can be 
 907:.\Generated_Source\PSoC4/CyLFClk.c **** * trimmed only when external clock source period is equal to WCO external
 908:.\Generated_Source\PSoC4/CyLFClk.c **** * crystal period. Also external clock source accuracy should be higher 
 909:.\Generated_Source\PSoC4/CyLFClk.c **** * or equal to WCO external crystal accuracy.
 910:.\Generated_Source\PSoC4/CyLFClk.c **** *
 911:.\Generated_Source\PSoC4/CyLFClk.c **** * \param clockSel
 912:.\Generated_Source\PSoC4/CyLFClk.c **** * CY_SYS_CLK_WCO_SEL_CRYSTAL - Selects External crystal as clock 
 913:.\Generated_Source\PSoC4/CyLFClk.c **** * source of WCO.<br>
 914:.\Generated_Source\PSoC4/CyLFClk.c **** * CY_SYS_CLK_WCO_SEL_PIN - Selects External clock input on wco_in pin as 
 915:.\Generated_Source\PSoC4/CyLFClk.c **** * clock source of WCO.
ARM GAS  C:\Users\g\AppData\Local\Temp\ccjVf3bh.s 			page 18


 916:.\Generated_Source\PSoC4/CyLFClk.c **** *
 917:.\Generated_Source\PSoC4/CyLFClk.c **** *******************************************************************************/
 918:.\Generated_Source\PSoC4/CyLFClk.c **** void CySysClkWcoClockOutSelect(uint32 clockSel)
 919:.\Generated_Source\PSoC4/CyLFClk.c ****     {
 920:.\Generated_Source\PSoC4/CyLFClk.c ****         if (0u != CySysClkWcoEnabled())
 921:.\Generated_Source\PSoC4/CyLFClk.c ****         {
 922:.\Generated_Source\PSoC4/CyLFClk.c ****             if (1u >= clockSel)
 923:.\Generated_Source\PSoC4/CyLFClk.c ****             {
 924:.\Generated_Source\PSoC4/CyLFClk.c ****                 CY_SYS_CLK_WCO_CONFIG_REG = (CY_SYS_CLK_WCO_CONFIG_REG & (uint32)(~CY_SYS_CLK_WCO_S
 925:.\Generated_Source\PSoC4/CyLFClk.c ****                                         (clockSel << CY_SYS_CLK_WCO_SELECT_PIN_OFFSET);
 926:.\Generated_Source\PSoC4/CyLFClk.c ****             }
 927:.\Generated_Source\PSoC4/CyLFClk.c ****             else
 928:.\Generated_Source\PSoC4/CyLFClk.c ****             {
 929:.\Generated_Source\PSoC4/CyLFClk.c ****                 CYASSERT(0u != 0u);
 930:.\Generated_Source\PSoC4/CyLFClk.c ****             }
 931:.\Generated_Source\PSoC4/CyLFClk.c ****         }
 932:.\Generated_Source\PSoC4/CyLFClk.c ****     }
 933:.\Generated_Source\PSoC4/CyLFClk.c **** #endif  /* (CY_IP_WCO) */
 934:.\Generated_Source\PSoC4/CyLFClk.c **** 
 935:.\Generated_Source\PSoC4/CyLFClk.c **** 
 936:.\Generated_Source\PSoC4/CyLFClk.c **** #if(CY_IP_SRSSV2)
 937:.\Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
 938:.\Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysWdtLock
 939:.\Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
 940:.\Generated_Source\PSoC4/CyLFClk.c ****     * \brief
 941:.\Generated_Source\PSoC4/CyLFClk.c ****     * Locks out configuration changes to the Watchdog timer registers and ILO
 942:.\Generated_Source\PSoC4/CyLFClk.c ****     * configuration register.
 943:.\Generated_Source\PSoC4/CyLFClk.c ****     *
 944:.\Generated_Source\PSoC4/CyLFClk.c ****     * After this function is called, ILO clock can't be disabled until
 945:.\Generated_Source\PSoC4/CyLFClk.c ****     * CySysWdtUnlock() is called.
 946:.\Generated_Source\PSoC4/CyLFClk.c ****     *
 947:.\Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
 948:.\Generated_Source\PSoC4/CyLFClk.c ****     void CySysWdtLock(void)
 949:.\Generated_Source\PSoC4/CyLFClk.c ****     {
 950:.\Generated_Source\PSoC4/CyLFClk.c ****         uint8 interruptState;
 951:.\Generated_Source\PSoC4/CyLFClk.c ****         interruptState = CyEnterCriticalSection();
 952:.\Generated_Source\PSoC4/CyLFClk.c **** 
 953:.\Generated_Source\PSoC4/CyLFClk.c ****         CY_SYS_CLK_SELECT_REG = (CY_SYS_CLK_SELECT_REG & (uint32)(~CY_SYS_WDT_CLK_LOCK_BITS_MASK)) 
 954:.\Generated_Source\PSoC4/CyLFClk.c ****                  CY_SYS_WDT_CLK_LOCK_BITS_MASK;
 955:.\Generated_Source\PSoC4/CyLFClk.c **** 
 956:.\Generated_Source\PSoC4/CyLFClk.c ****         CyExitCriticalSection(interruptState);
 957:.\Generated_Source\PSoC4/CyLFClk.c ****     }
 958:.\Generated_Source\PSoC4/CyLFClk.c **** 
 959:.\Generated_Source\PSoC4/CyLFClk.c **** 
 960:.\Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
 961:.\Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysWdtLocked
 962:.\Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
 963:.\Generated_Source\PSoC4/CyLFClk.c ****     * \internal
 964:.\Generated_Source\PSoC4/CyLFClk.c ****     * Reports the WDT lock state.
 965:.\Generated_Source\PSoC4/CyLFClk.c ****     *
 966:.\Generated_Source\PSoC4/CyLFClk.c ****     * \return 1 - WDT is locked, and 0 - WDT is unlocked.
 967:.\Generated_Source\PSoC4/CyLFClk.c ****     * \endinternal
 968:.\Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
 969:.\Generated_Source\PSoC4/CyLFClk.c ****     static uint32 CySysWdtLocked(void)
 970:.\Generated_Source\PSoC4/CyLFClk.c ****     {
  55              		.loc 1 970 0
  56              		.cfi_startproc
ARM GAS  C:\Users\g\AppData\Local\Temp\ccjVf3bh.s 			page 19


 971:.\Generated_Source\PSoC4/CyLFClk.c ****         /* Prohibits writing to WDT registers and ILO/WCO registers when not equal 0 */
 972:.\Generated_Source\PSoC4/CyLFClk.c ****         return ((0u != (CY_SYS_CLK_SELECT_REG & (uint32)(CY_SYS_WDT_CLK_LOCK_BITS_MASK))) ? (uint32
  57              		.loc 1 972 0
  58 0000 034B     		ldr	r3, .L8
  59 0002 1868     		ldr	r0, [r3]
  60 0004 C023     		mov	r3, #192
  61 0006 1B02     		lsl	r3, r3, #8
  62 0008 1840     		and	r0, r3
  63 000a 00D0     		beq	.L7
  64 000c 0120     		mov	r0, #1
  65              	.L7:
 973:.\Generated_Source\PSoC4/CyLFClk.c ****     }
  66              		.loc 1 973 0 discriminator 4
  67              		@ sp needed
  68 000e 7047     		bx	lr
  69              	.L9:
  70              		.align	2
  71              	.L8:
  72 0010 00010B40 		.word	1074462976
  73              		.cfi_endproc
  74              	.LFE7:
  75              		.size	CySysWdtLocked, .-CySysWdtLocked
  76              		.section	.text.CySysClkIloStart,"ax",%progbits
  77              		.align	2
  78              		.global	CySysClkIloStart
  79              		.code	16
  80              		.thumb_func
  81              		.type	CySysClkIloStart, %function
  82              	CySysClkIloStart:
  83              	.LFB0:
  84:.\Generated_Source\PSoC4/CyLFClk.c ****     CY_SYS_CLK_ILO_CONFIG_REG |= CY_SYS_CLK_ILO_CONFIG_ENABLE;
  84              		.loc 1 84 0
  85              		.cfi_startproc
  85:.\Generated_Source\PSoC4/CyLFClk.c **** }
  86              		.loc 1 85 0
  87 0000 034A     		ldr	r2, .L11
  88 0002 1368     		ldr	r3, [r2]
  89 0004 8021     		mov	r1, #128
  90 0006 0906     		lsl	r1, r1, #24
  91 0008 0B43     		orr	r3, r1
  92 000a 1360     		str	r3, [r2]
  86:.\Generated_Source\PSoC4/CyLFClk.c **** 
  93              		.loc 1 86 0
  94              		@ sp needed
  95 000c 7047     		bx	lr
  96              	.L12:
  97 000e C046     		.align	2
  98              	.L11:
  99 0010 04010B40 		.word	1074462980
 100              		.cfi_endproc
 101              	.LFE0:
 102              		.size	CySysClkIloStart, .-CySysClkIloStart
 103              		.section	.text.CySysClkIloStartMeasurement,"ax",%progbits
 104              		.align	2
 105              		.global	CySysClkIloStartMeasurement
 106              		.code	16
 107              		.thumb_func
ARM GAS  C:\Users\g\AppData\Local\Temp\ccjVf3bh.s 			page 20


 108              		.type	CySysClkIloStartMeasurement, %function
 109              	CySysClkIloStartMeasurement:
 110              	.LFB2:
 169:.\Generated_Source\PSoC4/CyLFClk.c **** #if(CY_IP_SRSSV2 && (!(CY_PSOC4_4100 || CY_PSOC4_4200)))
 111              		.loc 1 169 0
 112              		.cfi_startproc
 182:.\Generated_Source\PSoC4/CyLFClk.c ****                             CY_SYS_CLK_SEL_ILO_DFT_SOURCE; 
 113              		.loc 1 182 0
 114 0000 074A     		ldr	r2, .L14
 115 0002 1168     		ldr	r1, [r2]
 116 0004 074B     		ldr	r3, .L14+4
 117 0006 0B40     		and	r3, r1
 118 0008 8021     		mov	r1, #128
 119 000a 4900     		lsl	r1, r1, #1
 120 000c 0B43     		orr	r3, r1
 121 000e 1360     		str	r3, [r2]
 185:.\Generated_Source\PSoC4/CyLFClk.c ****                             CY_SYS_TST_DDFT_CTRL_REG_SEL2_CLK1;
 122              		.loc 1 185 0
 123 0010 054A     		ldr	r2, .L14+8
 124 0012 1168     		ldr	r1, [r2]
 125 0014 054B     		ldr	r3, .L14+12
 126 0016 0B40     		and	r3, r1
 127 0018 0549     		ldr	r1, .L14+16
 128 001a 0B43     		orr	r3, r1
 129 001c 1360     		str	r3, [r2]
 187:.\Generated_Source\PSoC4/CyLFClk.c **** 
 130              		.loc 1 187 0
 131              		@ sp needed
 132 001e 7047     		bx	lr
 133              	.L15:
 134              		.align	2
 135              	.L14:
 136 0020 10010B40 		.word	1074462992
 137 0024 FFF0FFFF 		.word	-3841
 138 0028 08000340 		.word	1073938440
 139 002c C0C0FFFF 		.word	-16192
 140 0030 01020000 		.word	513
 141              		.cfi_endproc
 142              	.LFE2:
 143              		.size	CySysClkIloStartMeasurement, .-CySysClkIloStartMeasurement
 144              		.section	.text.CySysClkIloStopMeasurement,"ax",%progbits
 145              		.align	2
 146              		.global	CySysClkIloStopMeasurement
 147              		.code	16
 148              		.thumb_func
 149              		.type	CySysClkIloStopMeasurement, %function
 150              	CySysClkIloStopMeasurement:
 151              	.LFB3:
 202:.\Generated_Source\PSoC4/CyLFClk.c ****     /* Set default configurations in 11...8 DFT register bits to zero */
 152              		.loc 1 202 0
 153              		.cfi_startproc
 204:.\Generated_Source\PSoC4/CyLFClk.c ****     #if(CY_IP_SRSSLT)
 154              		.loc 1 204 0
 155 0000 024A     		ldr	r2, .L17
 156 0002 1168     		ldr	r1, [r2]
 157 0004 024B     		ldr	r3, .L17+4
 158 0006 0B40     		and	r3, r1
ARM GAS  C:\Users\g\AppData\Local\Temp\ccjVf3bh.s 			page 21


 159 0008 1360     		str	r3, [r2]
 208:.\Generated_Source\PSoC4/CyLFClk.c **** 
 160              		.loc 1 208 0
 161              		@ sp needed
 162 000a 7047     		bx	lr
 163              	.L18:
 164              		.align	2
 165              	.L17:
 166 000c 10010B40 		.word	1074462992
 167 0010 FFF0FFFF 		.word	-3841
 168              		.cfi_endproc
 169              	.LFE3:
 170              		.size	CySysClkIloStopMeasurement, .-CySysClkIloStopMeasurement
 171              		.global	__aeabi_uidiv
 172              		.section	.text.CySysClkIloCompensate,"ax",%progbits
 173              		.align	2
 174              		.global	CySysClkIloCompensate
 175              		.code	16
 176              		.thumb_func
 177              		.type	CySysClkIloCompensate, %function
 178              	CySysClkIloCompensate:
 179              	.LFB4:
 268:.\Generated_Source\PSoC4/CyLFClk.c ****     uint32 iloCompensatedCycles;
 180              		.loc 1 268 0
 181              		.cfi_startproc
 182              	.LVL0:
 183 0000 70B5     		push	{r4, r5, r6, lr}
 184              		.cfi_def_cfa_offset 16
 185              		.cfi_offset 4, -16
 186              		.cfi_offset 5, -12
 187              		.cfi_offset 6, -8
 188              		.cfi_offset 14, -4
 275:.\Generated_Source\PSoC4/CyLFClk.c **** 
 189              		.loc 1 275 0
 190 0002 354B     		ldr	r3, .L31
 191 0004 1A68     		ldr	r2, [r3]
 192 0006 354B     		ldr	r3, .L31+4
 193 0008 1340     		and	r3, r2
 194              	.LVL1:
 278:.\Generated_Source\PSoC4/CyLFClk.c ****        (CY_SYS_TST_DDFT_CTRL_REG == CY_SYS_TST_DDFT_CTRL_REG_SEL2_CLK1) &&
 195              		.loc 1 278 0
 196 000a 8022     		mov	r2, #128
 197 000c 5200     		lsl	r2, r2, #1
 198 000e 9342     		cmp	r3, r2
 199 0010 54D1     		bne	.L24
 279:.\Generated_Source\PSoC4/CyLFClk.c ****        (CY_SYS_CLK_MAX_DELAY_US >= desiredDelay) &&
 200              		.loc 1 279 0 discriminator 1
 201 0012 334B     		ldr	r3, .L31+8
 202              	.LVL2:
 203 0014 1A68     		ldr	r2, [r3]
 278:.\Generated_Source\PSoC4/CyLFClk.c ****        (CY_SYS_TST_DDFT_CTRL_REG == CY_SYS_TST_DDFT_CTRL_REG_SEL2_CLK1) &&
 204              		.loc 1 278 0 discriminator 1
 205 0016 334B     		ldr	r3, .L31+12
 206 0018 9A42     		cmp	r2, r3
 207 001a 51D1     		bne	.L25
 279:.\Generated_Source\PSoC4/CyLFClk.c ****        (CY_SYS_CLK_MAX_DELAY_US >= desiredDelay) &&
 208              		.loc 1 279 0
ARM GAS  C:\Users\g\AppData\Local\Temp\ccjVf3bh.s 			page 22


 209 001c 324B     		ldr	r3, .L31+16
 210 001e 9842     		cmp	r0, r3
 211 0020 50D8     		bhi	.L26
 280:.\Generated_Source\PSoC4/CyLFClk.c ****        (CY_SYS_CLK_MIN_DELAY_US <= desiredDelay) &&
 212              		.loc 1 280 0
 213 0022 6328     		cmp	r0, #99
 214 0024 50D9     		bls	.L27
 281:.\Generated_Source\PSoC4/CyLFClk.c ****        (compensatedCycles !=  NULL))
 215              		.loc 1 281 0
 216 0026 0029     		cmp	r1, #0
 217 0028 50D0     		beq	.L28
 284:.\Generated_Source\PSoC4/CyLFClk.c ****         {
 218              		.loc 1 284 0
 219 002a 304B     		ldr	r3, .L31+20
 220 002c 1B68     		ldr	r3, [r3]
 221 002e 002B     		cmp	r3, #0
 222 0030 3AD0     		beq	.L21
 287:.\Generated_Source\PSoC4/CyLFClk.c ****             {
 223              		.loc 1 287 0
 224 0032 2F4B     		ldr	r3, .L31+24
 225 0034 1B68     		ldr	r3, [r3]
 226 0036 002B     		cmp	r3, #0
 227 0038 4ADA     		bge	.L29
 289:.\Generated_Source\PSoC4/CyLFClk.c ****                 {
 228              		.loc 1 289 0
 229 003a 2E4B     		ldr	r3, .L31+28
 230 003c 1B68     		ldr	r3, [r3]
 231 003e 002B     		cmp	r3, #0
 232 0040 48D0     		beq	.L30
 233 0042 0C1C     		mov	r4, r1
 293:.\Generated_Source\PSoC4/CyLFClk.c ****                         {
 234              		.loc 1 293 0
 235 0044 2C4B     		ldr	r3, .L31+32
 236 0046 9842     		cmp	r0, r3
 237 0048 13D9     		bls	.L22
 295:.\Generated_Source\PSoC4/CyLFClk.c ****                             iloCompensatedCycles = 
 238              		.loc 1 295 0
 239 004a 1F21     		mov	r1, #31
 240              	.LVL3:
 241 004c FFF7FEFF 		bl	__aeabi_uidiv
 242              	.LVL4:
 243 0050 051C     		mov	r5, r0
 244              	.LVL5:
 297:.\Generated_Source\PSoC4/CyLFClk.c ****                                 CY_SYS_CLK_ILO_FREQ_2MSB) * (desiredDelayInCounts / CY_SYS_CLK_ILO_
 245              		.loc 1 297 0
 246 0052 284B     		ldr	r3, .L31+28
 247 0054 1868     		ldr	r0, [r3]
 248              	.LVL6:
 249 0056 294B     		ldr	r3, .L31+36
 250 0058 1968     		ldr	r1, [r3]
 251 005a 4843     		mul	r0, r1
 252 005c 890A     		lsr	r1, r1, #10
 253 005e FFF7FEFF 		bl	__aeabi_uidiv
 254              	.LVL7:
 255 0062 4609     		lsr	r6, r0, #5
 298:.\Generated_Source\PSoC4/CyLFClk.c ****                         }
 256              		.loc 1 298 0
ARM GAS  C:\Users\g\AppData\Local\Temp\ccjVf3bh.s 			page 23


 257 0064 281C     		mov	r0, r5
 258 0066 FA21     		mov	r1, #250
 259 0068 8900     		lsl	r1, r1, #2
 260 006a FFF7FEFF 		bl	__aeabi_uidiv
 261              	.LVL8:
 296:.\Generated_Source\PSoC4/CyLFClk.c ****                             (((CY_SYS_CNT_REG2_REG * cydelayFreqHz) / (cydelayFreqHz >> CY_SYS_CLK_
 262              		.loc 1 296 0
 263 006e 7043     		mul	r0, r6
 264              	.LVL9:
 265 0070 15E0     		b	.L23
 266              	.LVL10:
 267              	.L22:
 302:.\Generated_Source\PSoC4/CyLFClk.c ****                                                      CY_SYS_CLK_HALF_OF_CLOCK) / CY_SYS_CLK_ILO_PER
 268              		.loc 1 302 0
 269 0072 6423     		mov	r3, #100
 270 0074 5843     		mul	r0, r3
 271              	.LVL11:
 272 0076 224B     		ldr	r3, .L31+40
 273 0078 9C46     		mov	ip, r3
 274 007a 6044     		add	r0, r0, ip
 275 007c 2149     		ldr	r1, .L31+44
 276              	.LVL12:
 277 007e FFF7FEFF 		bl	__aeabi_uidiv
 278              	.LVL13:
 279 0082 051C     		mov	r5, r0
 280              	.LVL14:
 305:.\Generated_Source\PSoC4/CyLFClk.c ****                                                      (cydelayFreqHz >> CY_SYS_CLK_SYS_CLK_DEVIDER))
 281              		.loc 1 305 0
 282 0084 1B4B     		ldr	r3, .L31+28
 283 0086 1868     		ldr	r0, [r3]
 284              	.LVL15:
 285 0088 1C4B     		ldr	r3, .L31+36
 286 008a 1968     		ldr	r1, [r3]
 287 008c 4843     		mul	r0, r1
 306:.\Generated_Source\PSoC4/CyLFClk.c ****                                                      desiredDelayInCounts) / CY_SYS_CLK_ILO_DESIRED
 288              		.loc 1 306 0
 289 008e 890A     		lsr	r1, r1, #10
 305:.\Generated_Source\PSoC4/CyLFClk.c ****                                                      (cydelayFreqHz >> CY_SYS_CLK_SYS_CLK_DEVIDER))
 290              		.loc 1 305 0
 291 0090 FFF7FEFF 		bl	__aeabi_uidiv
 292              	.LVL16:
 306:.\Generated_Source\PSoC4/CyLFClk.c ****                                                      desiredDelayInCounts) / CY_SYS_CLK_ILO_DESIRED
 293              		.loc 1 306 0
 294 0094 6843     		mul	r0, r5
 305:.\Generated_Source\PSoC4/CyLFClk.c ****                                                      (cydelayFreqHz >> CY_SYS_CLK_SYS_CLK_DEVIDER))
 295              		.loc 1 305 0
 296 0096 FA21     		mov	r1, #250
 297 0098 C901     		lsl	r1, r1, #7
 298 009a FFF7FEFF 		bl	__aeabi_uidiv
 299              	.LVL17:
 300              	.L23:
 326:.\Generated_Source\PSoC4/CyLFClk.c ****                     compensateRunningStatus = CY_SYS_CLK_TRIM_OR_COMP_FINISHED;
 301              		.loc 1 326 0
 302 009e 2060     		str	r0, [r4]
 327:.\Generated_Source\PSoC4/CyLFClk.c ****                     returnStatus = CYRET_SUCCESS;
 303              		.loc 1 327 0
 304 00a0 0020     		mov	r0, #0
ARM GAS  C:\Users\g\AppData\Local\Temp\ccjVf3bh.s 			page 24


 305              	.LVL18:
 306 00a2 124B     		ldr	r3, .L31+20
 307 00a4 1860     		str	r0, [r3]
 308              	.LVL19:
 309 00a6 16E0     		b	.L20
 310              	.LVL20:
 311              	.L21:
 343:.\Generated_Source\PSoC4/CyLFClk.c ****             compensateRunningStatus = CY_SYS_CLK_TRIM_OR_COMP_STARTED;
 312              		.loc 1 343 0
 313 00a8 144B     		ldr	r3, .L31+36
 314 00aa 1B68     		ldr	r3, [r3]
 315 00ac 9B0A     		lsr	r3, r3, #10
 316 00ae 104A     		ldr	r2, .L31+24
 317 00b0 1360     		str	r3, [r2]
 344:.\Generated_Source\PSoC4/CyLFClk.c ****             returnStatus = CYRET_STARTED;
 318              		.loc 1 344 0
 319 00b2 0122     		mov	r2, #1
 320 00b4 0D4B     		ldr	r3, .L31+20
 321 00b6 1A60     		str	r2, [r3]
 322              	.LVL21:
 345:.\Generated_Source\PSoC4/CyLFClk.c ****         }
 323              		.loc 1 345 0
 324 00b8 0720     		mov	r0, #7
 325              	.LVL22:
 326 00ba 0CE0     		b	.L20
 327              	.LVL23:
 328              	.L24:
 350:.\Generated_Source\PSoC4/CyLFClk.c ****     }
 329              		.loc 1 350 0
 330 00bc 1120     		mov	r0, #17
 331              	.LVL24:
 332 00be 0AE0     		b	.L20
 333              	.LVL25:
 334              	.L25:
 335 00c0 1120     		mov	r0, #17
 336              	.LVL26:
 337 00c2 08E0     		b	.L20
 338              	.LVL27:
 339              	.L26:
 340 00c4 1120     		mov	r0, #17
 341              	.LVL28:
 342 00c6 06E0     		b	.L20
 343              	.LVL29:
 344              	.L27:
 345 00c8 1120     		mov	r0, #17
 346              	.LVL30:
 347 00ca 04E0     		b	.L20
 348              	.LVL31:
 349              	.L28:
 350 00cc 1120     		mov	r0, #17
 351              	.LVL32:
 352 00ce 02E0     		b	.L20
 353              	.LVL33:
 354              	.L29:
 337:.\Generated_Source\PSoC4/CyLFClk.c ****             }
 355              		.loc 1 337 0
 356 00d0 0720     		mov	r0, #7
ARM GAS  C:\Users\g\AppData\Local\Temp\ccjVf3bh.s 			page 25


 357              	.LVL34:
 358 00d2 00E0     		b	.L20
 359              	.LVL35:
 360              	.L30:
 332:.\Generated_Source\PSoC4/CyLFClk.c ****                 }
 361              		.loc 1 332 0
 362 00d4 1120     		mov	r0, #17
 363              	.LVL36:
 364              	.L20:
 354:.\Generated_Source\PSoC4/CyLFClk.c **** 
 365              		.loc 1 354 0
 366              		@ sp needed
 367 00d6 70BD     		pop	{r4, r5, r6, pc}
 368              	.L32:
 369              		.align	2
 370              	.L31:
 371 00d8 10010B40 		.word	1074462992
 372 00dc 3F3F0000 		.word	16191
 373 00e0 08000340 		.word	1073938440
 374 00e4 01020000 		.word	513
 375 00e8 00286BEE 		.word	-294967296
 376 00ec 00000000 		.word	.LANCHOR0
 377 00f0 18000340 		.word	1073938456
 378 00f4 1C000340 		.word	1073938460
 379 00f8 60D10000 		.word	53600
 380 00fc 00000000 		.word	cydelayFreqHz
 381 0100 0D030000 		.word	781
 382 0104 350C0000 		.word	3125
 383              		.cfi_endproc
 384              	.LFE4:
 385              		.size	CySysClkIloCompensate, .-CySysClkIloCompensate
 386              		.section	.text.CySysWdtLock,"ax",%progbits
 387              		.align	2
 388              		.global	CySysWdtLock
 389              		.code	16
 390              		.thumb_func
 391              		.type	CySysWdtLock, %function
 392              	CySysWdtLock:
 393              	.LFB6:
 949:.\Generated_Source\PSoC4/CyLFClk.c ****         uint8 interruptState;
 394              		.loc 1 949 0
 395              		.cfi_startproc
 396 0000 08B5     		push	{r3, lr}
 397              		.cfi_def_cfa_offset 8
 398              		.cfi_offset 3, -8
 399              		.cfi_offset 14, -4
 951:.\Generated_Source\PSoC4/CyLFClk.c **** 
 400              		.loc 1 951 0
 401 0002 FFF7FEFF 		bl	CyEnterCriticalSection
 402              	.LVL37:
 953:.\Generated_Source\PSoC4/CyLFClk.c ****                  CY_SYS_WDT_CLK_LOCK_BITS_MASK;
 403              		.loc 1 953 0
 404 0006 044A     		ldr	r2, .L34
 405 0008 1368     		ldr	r3, [r2]
 406 000a C021     		mov	r1, #192
 407 000c 0902     		lsl	r1, r1, #8
 408 000e 0B43     		orr	r3, r1
ARM GAS  C:\Users\g\AppData\Local\Temp\ccjVf3bh.s 			page 26


 409 0010 1360     		str	r3, [r2]
 956:.\Generated_Source\PSoC4/CyLFClk.c ****     }
 410              		.loc 1 956 0
 411 0012 FFF7FEFF 		bl	CyExitCriticalSection
 412              	.LVL38:
 957:.\Generated_Source\PSoC4/CyLFClk.c **** 
 413              		.loc 1 957 0
 414              		@ sp needed
 415 0016 08BD     		pop	{r3, pc}
 416              	.L35:
 417              		.align	2
 418              	.L34:
 419 0018 00010B40 		.word	1074462976
 420              		.cfi_endproc
 421              	.LFE6:
 422              		.size	CySysWdtLock, .-CySysWdtLock
 423              		.section	.text.CySysWdtUnlock,"ax",%progbits
 424              		.align	2
 425              		.global	CySysWdtUnlock
 426              		.code	16
 427              		.thumb_func
 428              		.type	CySysWdtUnlock, %function
 429              	CySysWdtUnlock:
 430              	.LFB8:
 974:.\Generated_Source\PSoC4/CyLFClk.c **** 
 975:.\Generated_Source\PSoC4/CyLFClk.c **** 
 976:.\Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
 977:.\Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysWdtUnlock
 978:.\Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
 979:.\Generated_Source\PSoC4/CyLFClk.c ****     * \brief
 980:.\Generated_Source\PSoC4/CyLFClk.c ****     *  Unlocks the Watchdog Timer configuration register.
 981:.\Generated_Source\PSoC4/CyLFClk.c ****     *
 982:.\Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
 983:.\Generated_Source\PSoC4/CyLFClk.c ****     void CySysWdtUnlock(void)
 984:.\Generated_Source\PSoC4/CyLFClk.c ****     {
 431              		.loc 1 984 0
 432              		.cfi_startproc
 433 0000 10B5     		push	{r4, lr}
 434              		.cfi_def_cfa_offset 8
 435              		.cfi_offset 4, -8
 436              		.cfi_offset 14, -4
 985:.\Generated_Source\PSoC4/CyLFClk.c ****         uint8 interruptState;
 986:.\Generated_Source\PSoC4/CyLFClk.c ****         interruptState = CyEnterCriticalSection();
 437              		.loc 1 986 0
 438 0002 FFF7FEFF 		bl	CyEnterCriticalSection
 439              	.LVL39:
 987:.\Generated_Source\PSoC4/CyLFClk.c **** 
 988:.\Generated_Source\PSoC4/CyLFClk.c ****         /* Removing WDT lock requires two writes */
 989:.\Generated_Source\PSoC4/CyLFClk.c ****         CY_SYS_CLK_SELECT_REG = ((CY_SYS_CLK_SELECT_REG & (uint32)(~CY_SYS_WDT_CLK_LOCK_BITS_MASK))
 440              		.loc 1 989 0
 441 0006 0849     		ldr	r1, .L37
 442 0008 0A68     		ldr	r2, [r1]
 443 000a 084B     		ldr	r3, .L37+4
 444 000c 1A40     		and	r2, r3
 445 000e 8024     		mov	r4, #128
 446 0010 E401     		lsl	r4, r4, #7
 447 0012 2243     		orr	r2, r4
ARM GAS  C:\Users\g\AppData\Local\Temp\ccjVf3bh.s 			page 27


 448 0014 0A60     		str	r2, [r1]
 990:.\Generated_Source\PSoC4/CyLFClk.c ****                 CY_SYS_WDT_CLK_LOCK_BIT0);
 991:.\Generated_Source\PSoC4/CyLFClk.c **** 
 992:.\Generated_Source\PSoC4/CyLFClk.c ****         CY_SYS_CLK_SELECT_REG = ((CY_SYS_CLK_SELECT_REG & (uint32)(~CY_SYS_WDT_CLK_LOCK_BITS_MASK))
 449              		.loc 1 992 0
 450 0016 0A68     		ldr	r2, [r1]
 451 0018 1340     		and	r3, r2
 452 001a 8022     		mov	r2, #128
 453 001c 1202     		lsl	r2, r2, #8
 454 001e 1343     		orr	r3, r2
 455 0020 0B60     		str	r3, [r1]
 993:.\Generated_Source\PSoC4/CyLFClk.c ****                 CY_SYS_WDT_CLK_LOCK_BIT1);
 994:.\Generated_Source\PSoC4/CyLFClk.c **** 
 995:.\Generated_Source\PSoC4/CyLFClk.c ****         CyExitCriticalSection(interruptState);
 456              		.loc 1 995 0
 457 0022 FFF7FEFF 		bl	CyExitCriticalSection
 458              	.LVL40:
 996:.\Generated_Source\PSoC4/CyLFClk.c ****     }
 459              		.loc 1 996 0
 460              		@ sp needed
 461 0026 10BD     		pop	{r4, pc}
 462              	.L38:
 463              		.align	2
 464              	.L37:
 465 0028 00010B40 		.word	1074462976
 466 002c FF3FFFFF 		.word	-49153
 467              		.cfi_endproc
 468              	.LFE8:
 469              		.size	CySysWdtUnlock, .-CySysWdtUnlock
 470              		.section	.text.CySysWdtGetEnabledStatus,"ax",%progbits
 471              		.align	2
 472              		.global	CySysWdtGetEnabledStatus
 473              		.code	16
 474              		.thumb_func
 475              		.type	CySysWdtGetEnabledStatus, %function
 476              	CySysWdtGetEnabledStatus:
 477              	.LFB9:
 997:.\Generated_Source\PSoC4/CyLFClk.c **** 
 998:.\Generated_Source\PSoC4/CyLFClk.c **** 
 999:.\Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
1000:.\Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysWdtGetEnabledStatus
1001:.\Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
1002:.\Generated_Source\PSoC4/CyLFClk.c ****     * \brief
1003:.\Generated_Source\PSoC4/CyLFClk.c ****     *  Reads the enabled status of one of the three WDT counters.
1004:.\Generated_Source\PSoC4/CyLFClk.c ****     *
1005:.\Generated_Source\PSoC4/CyLFClk.c ****     * \param counterNum: Valid range [0-2].  The number of the WDT counter.
1006:.\Generated_Source\PSoC4/CyLFClk.c ****     *
1007:.\Generated_Source\PSoC4/CyLFClk.c ****     * \return The status of the WDT counter:
1008:.\Generated_Source\PSoC4/CyLFClk.c ****     * \return 0 - If the counter is disabled.
1009:.\Generated_Source\PSoC4/CyLFClk.c ****     * \return 1 - If the counter is enabled.
1010:.\Generated_Source\PSoC4/CyLFClk.c ****     *
1011:.\Generated_Source\PSoC4/CyLFClk.c ****     * \details
1012:.\Generated_Source\PSoC4/CyLFClk.c ****     * This function returns an actual WDT counter status from the status register. It may
1013:.\Generated_Source\PSoC4/CyLFClk.c ****     * take up to 3 LFCLK cycles for the WDT status register to contain actual data
1014:.\Generated_Source\PSoC4/CyLFClk.c ****     * after the WDT counter is enabled.
1015:.\Generated_Source\PSoC4/CyLFClk.c ****     *
1016:.\Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
ARM GAS  C:\Users\g\AppData\Local\Temp\ccjVf3bh.s 			page 28


1017:.\Generated_Source\PSoC4/CyLFClk.c ****     uint32 CySysWdtGetEnabledStatus(uint32 counterNum)
1018:.\Generated_Source\PSoC4/CyLFClk.c ****     {
 478              		.loc 1 1018 0
 479              		.cfi_startproc
 480              	.LVL41:
 481 0000 10B5     		push	{r4, lr}
 482              		.cfi_def_cfa_offset 8
 483              		.cfi_offset 4, -8
 484              		.cfi_offset 14, -4
 485 0002 041E     		sub	r4, r0, #0
1019:.\Generated_Source\PSoC4/CyLFClk.c ****         CYASSERT(counterNum < CY_SYS_WDT_COUNTERS_MAX);
 486              		.loc 1 1019 0
 487 0004 022C     		cmp	r4, #2
 488 0006 02D9     		bls	.L40
 489              		.loc 1 1019 0 is_stmt 0 discriminator 1
 490 0008 0020     		mov	r0, #0
 491              	.LVL42:
 492 000a FFF7FEFF 		bl	CyHalt
 493              	.LVL43:
 494              	.L40:
1020:.\Generated_Source\PSoC4/CyLFClk.c ****         return ((CY_SYS_WDT_CONTROL_REG >> ((CY_SYS_WDT_CNT_SHIFT * counterNum) + CY_SYS_WDT_CNT_ST
 495              		.loc 1 1020 0 is_stmt 1
 496 000e 044B     		ldr	r3, .L41
 497 0010 1868     		ldr	r0, [r3]
 498 0012 E400     		lsl	r4, r4, #3
 499              	.LVL44:
 500 0014 0134     		add	r4, r4, #1
 501 0016 E040     		lsr	r0, r0, r4
 502 0018 041C     		mov	r4, r0
 503 001a 0120     		mov	r0, #1
 504 001c 2040     		and	r0, r4
1021:.\Generated_Source\PSoC4/CyLFClk.c ****     }
 505              		.loc 1 1021 0
 506              		@ sp needed
 507 001e 10BD     		pop	{r4, pc}
 508              	.L42:
 509              		.align	2
 510              	.L41:
 511 0020 10020B40 		.word	1074463248
 512              		.cfi_endproc
 513              	.LFE9:
 514              		.size	CySysWdtGetEnabledStatus, .-CySysWdtGetEnabledStatus
 515              		.section	.text.CySysWdtSetMode,"ax",%progbits
 516              		.align	2
 517              		.global	CySysWdtSetMode
 518              		.code	16
 519              		.thumb_func
 520              		.type	CySysWdtSetMode, %function
 521              	CySysWdtSetMode:
 522              	.LFB10:
1022:.\Generated_Source\PSoC4/CyLFClk.c **** 
1023:.\Generated_Source\PSoC4/CyLFClk.c **** 
1024:.\Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
1025:.\Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysWdtSetMode
1026:.\Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
1027:.\Generated_Source\PSoC4/CyLFClk.c ****     * \brief
1028:.\Generated_Source\PSoC4/CyLFClk.c ****     * Writes the mode of one of the three WDT counters.
ARM GAS  C:\Users\g\AppData\Local\Temp\ccjVf3bh.s 			page 29


1029:.\Generated_Source\PSoC4/CyLFClk.c ****     *
1030:.\Generated_Source\PSoC4/CyLFClk.c ****     * \param counterNum: Valid range [0-2].  The number of the WDT counter.
1031:.\Generated_Source\PSoC4/CyLFClk.c ****     *
1032:.\Generated_Source\PSoC4/CyLFClk.c ****     * \param mode
1033:.\Generated_Source\PSoC4/CyLFClk.c ****     *  CY_SYS_WDT_MODE_NONE - Free running.<br>
1034:.\Generated_Source\PSoC4/CyLFClk.c ****     * CY_SYS_WDT_MODE_INT - The interrupt generated on match for counter 0
1035:.\Generated_Source\PSoC4/CyLFClk.c ****     * and 1, and on bit toggle for counter 2.<br>
1036:.\Generated_Source\PSoC4/CyLFClk.c ****     * CY_SYS_WDT_MODE_RESET - Reset on match (valid for counter 0 and 1 only).<br>
1037:.\Generated_Source\PSoC4/CyLFClk.c ****     * CY_SYS_WDT_MODE_INT_RESET - Generate an interrupt.  Generate a reset on
1038:.\Generated_Source\PSoC4/CyLFClk.c ****     * the 3rd non-handled interrupt (valid for counter 0 and counter 1 only).
1039:.\Generated_Source\PSoC4/CyLFClk.c ****     *
1040:.\Generated_Source\PSoC4/CyLFClk.c ****     * \details
1041:.\Generated_Source\PSoC4/CyLFClk.c ****     * WDT counter counterNum should be disabled to set a mode. Otherwise, this
1042:.\Generated_Source\PSoC4/CyLFClk.c ****     * function call has no effect. If the specified counter is enabled,
1043:.\Generated_Source\PSoC4/CyLFClk.c ****     * call the CySysWdtDisable() function with the corresponding parameter to
1044:.\Generated_Source\PSoC4/CyLFClk.c ****     * disable the specified counter and wait for it to stop.
1045:.\Generated_Source\PSoC4/CyLFClk.c ****     *
1046:.\Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
1047:.\Generated_Source\PSoC4/CyLFClk.c ****     void CySysWdtSetMode(uint32 counterNum, uint32 mode)
1048:.\Generated_Source\PSoC4/CyLFClk.c ****     {
 523              		.loc 1 1048 0
 524              		.cfi_startproc
 525              	.LVL45:
 526 0000 38B5     		push	{r3, r4, r5, lr}
 527              		.cfi_def_cfa_offset 16
 528              		.cfi_offset 3, -16
 529              		.cfi_offset 4, -12
 530              		.cfi_offset 5, -8
 531              		.cfi_offset 14, -4
 532 0002 041C     		mov	r4, r0
 533 0004 0D1C     		mov	r5, r1
1049:.\Generated_Source\PSoC4/CyLFClk.c ****         uint32 configRegValue;
1050:.\Generated_Source\PSoC4/CyLFClk.c **** 
1051:.\Generated_Source\PSoC4/CyLFClk.c ****         CYASSERT(counterNum < CY_SYS_WDT_COUNTERS_MAX);
 534              		.loc 1 1051 0
 535 0006 0228     		cmp	r0, #2
 536 0008 02D9     		bls	.L44
 537              		.loc 1 1051 0 is_stmt 0 discriminator 1
 538 000a 0020     		mov	r0, #0
 539              	.LVL46:
 540 000c FFF7FEFF 		bl	CyHalt
 541              	.LVL47:
 542              	.L44:
1052:.\Generated_Source\PSoC4/CyLFClk.c **** 
1053:.\Generated_Source\PSoC4/CyLFClk.c ****         if(0u == CySysWdtGetEnabledStatus(counterNum))
 543              		.loc 1 1053 0 is_stmt 1
 544 0010 201C     		mov	r0, r4
 545 0012 FFF7FEFF 		bl	CySysWdtGetEnabledStatus
 546              	.LVL48:
 547 0016 0028     		cmp	r0, #0
 548 0018 0BD1     		bne	.L43
1054:.\Generated_Source\PSoC4/CyLFClk.c ****         {
1055:.\Generated_Source\PSoC4/CyLFClk.c ****             configRegValue = CY_SYS_WDT_CONFIG_REG &
 549              		.loc 1 1055 0
 550 001a 064A     		ldr	r2, .L46
 551 001c 1368     		ldr	r3, [r2]
1056:.\Generated_Source\PSoC4/CyLFClk.c ****                                 (uint32)~((uint32)(CY_SYS_WDT_MODE_MASK << (counterNum * CY_SYS_WDT
ARM GAS  C:\Users\g\AppData\Local\Temp\ccjVf3bh.s 			page 30


 552              		.loc 1 1056 0
 553 001e E400     		lsl	r4, r4, #3
 554              	.LVL49:
 555 0020 0321     		mov	r1, #3
 556 0022 081C     		mov	r0, r1
 557 0024 A040     		lsl	r0, r0, r4
1055:.\Generated_Source\PSoC4/CyLFClk.c ****                                 (uint32)~((uint32)(CY_SYS_WDT_MODE_MASK << (counterNum * CY_SYS_WDT
 558              		.loc 1 1055 0
 559 0026 8343     		bic	r3, r0
 560              	.LVL50:
1057:.\Generated_Source\PSoC4/CyLFClk.c ****             configRegValue |= (uint32)((mode & CY_SYS_WDT_MODE_MASK) << (counterNum * CY_SYS_WDT_CN
 561              		.loc 1 1057 0
 562 0028 0D40     		and	r5, r1
 563              	.LVL51:
 564 002a A540     		lsl	r5, r5, r4
 565 002c 2C1C     		mov	r4, r5
 566 002e 1C43     		orr	r4, r3
 567              	.LVL52:
1058:.\Generated_Source\PSoC4/CyLFClk.c ****             CY_SYS_WDT_CONFIG_REG = configRegValue;
 568              		.loc 1 1058 0
 569 0030 1460     		str	r4, [r2]
 570              	.LVL53:
 571              	.L43:
1059:.\Generated_Source\PSoC4/CyLFClk.c ****         }
1060:.\Generated_Source\PSoC4/CyLFClk.c ****     }
 572              		.loc 1 1060 0
 573              		@ sp needed
 574 0032 38BD     		pop	{r3, r4, r5, pc}
 575              	.L47:
 576              		.align	2
 577              	.L46:
 578 0034 0C020B40 		.word	1074463244
 579              		.cfi_endproc
 580              	.LFE10:
 581              		.size	CySysWdtSetMode, .-CySysWdtSetMode
 582              		.section	.text.CySysClkLfclkPosedgeRestore,"ax",%progbits
 583              		.align	2
 584              		.code	16
 585              		.thumb_func
 586              		.type	CySysClkLfclkPosedgeRestore, %function
 587              	CySysClkLfclkPosedgeRestore:
 588              	.LFB33:
1061:.\Generated_Source\PSoC4/CyLFClk.c **** 
1062:.\Generated_Source\PSoC4/CyLFClk.c **** 
1063:.\Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
1064:.\Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysWdtGetMode
1065:.\Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
1066:.\Generated_Source\PSoC4/CyLFClk.c ****     * 
1067:.\Generated_Source\PSoC4/CyLFClk.c ****     * \brief Reads the mode of one of the three WDT counters.
1068:.\Generated_Source\PSoC4/CyLFClk.c ****     *
1069:.\Generated_Source\PSoC4/CyLFClk.c ****     * \param counterNum Valid range [0-2]. The number of the WDT counter.
1070:.\Generated_Source\PSoC4/CyLFClk.c ****     *
1071:.\Generated_Source\PSoC4/CyLFClk.c ****     * \return The mode of the counter. The same enumerated values as the mode 
1072:.\Generated_Source\PSoC4/CyLFClk.c ****     * parameter used in CySysWdtSetMode().
1073:.\Generated_Source\PSoC4/CyLFClk.c ****     *
1074:.\Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
1075:.\Generated_Source\PSoC4/CyLFClk.c ****     uint32 CySysWdtGetMode(uint32 counterNum)
ARM GAS  C:\Users\g\AppData\Local\Temp\ccjVf3bh.s 			page 31


1076:.\Generated_Source\PSoC4/CyLFClk.c ****     {
1077:.\Generated_Source\PSoC4/CyLFClk.c ****         return ((CY_SYS_WDT_CONFIG_REG >> (counterNum * CY_SYS_WDT_CNT_SHIFT)) & CY_SYS_WDT_MODE_MA
1078:.\Generated_Source\PSoC4/CyLFClk.c ****     }
1079:.\Generated_Source\PSoC4/CyLFClk.c **** 
1080:.\Generated_Source\PSoC4/CyLFClk.c **** 
1081:.\Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
1082:.\Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysWdtSetClearOnMatch
1083:.\Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
1084:.\Generated_Source\PSoC4/CyLFClk.c ****     * 
1085:.\Generated_Source\PSoC4/CyLFClk.c ****     * \brief Configures the WDT counter "clear on match" setting.
1086:.\Generated_Source\PSoC4/CyLFClk.c ****     *
1087:.\Generated_Source\PSoC4/CyLFClk.c ****     * If configured to "clear on match", the counter counts from 0 to MatchValue
1088:.\Generated_Source\PSoC4/CyLFClk.c ****     * giving it a period of (MatchValue + 1).
1089:.\Generated_Source\PSoC4/CyLFClk.c ****     *
1090:.\Generated_Source\PSoC4/CyLFClk.c ****     * \param counterNum
1091:.\Generated_Source\PSoC4/CyLFClk.c ****     * Valid range [0-1]. The number of the WDT counter. The match values are not
1092:.\Generated_Source\PSoC4/CyLFClk.c ****     * supported by counter 2.
1093:.\Generated_Source\PSoC4/CyLFClk.c ****     *
1094:.\Generated_Source\PSoC4/CyLFClk.c ****     * \param enable 0 to disable appropriate counter <br>
1095:.\Generated_Source\PSoC4/CyLFClk.c ****     *  1 to enable appropriate counter
1096:.\Generated_Source\PSoC4/CyLFClk.c ****     *
1097:.\Generated_Source\PSoC4/CyLFClk.c ****     * \details
1098:.\Generated_Source\PSoC4/CyLFClk.c ****     * WDT counter counterNum should be disabled. Otherwise this function call
1099:.\Generated_Source\PSoC4/CyLFClk.c ****     * has no effect. If the specified counter is enabled, call the CySysWdtDisable()
1100:.\Generated_Source\PSoC4/CyLFClk.c ****     * function with the corresponding parameter to disable the specified counter and
1101:.\Generated_Source\PSoC4/CyLFClk.c ****     * wait for it to stop. This may take up to three LFCLK cycles.
1102:.\Generated_Source\PSoC4/CyLFClk.c ****     *
1103:.\Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
1104:.\Generated_Source\PSoC4/CyLFClk.c ****     void CySysWdtSetClearOnMatch(uint32 counterNum, uint32 enable)
1105:.\Generated_Source\PSoC4/CyLFClk.c ****     {
1106:.\Generated_Source\PSoC4/CyLFClk.c ****         uint32 configRegValue;
1107:.\Generated_Source\PSoC4/CyLFClk.c **** 
1108:.\Generated_Source\PSoC4/CyLFClk.c ****         CYASSERT((counterNum == CY_SYS_WDT_COUNTER0) ||
1109:.\Generated_Source\PSoC4/CyLFClk.c ****                  (counterNum == CY_SYS_WDT_COUNTER1));
1110:.\Generated_Source\PSoC4/CyLFClk.c **** 
1111:.\Generated_Source\PSoC4/CyLFClk.c ****         if(0u == CySysWdtGetEnabledStatus(counterNum))
1112:.\Generated_Source\PSoC4/CyLFClk.c ****         {
1113:.\Generated_Source\PSoC4/CyLFClk.c ****             configRegValue = CY_SYS_WDT_CONFIG_REG & (uint32)~((uint32)((uint32)1u << 
1114:.\Generated_Source\PSoC4/CyLFClk.c ****                                      ((counterNum * CY_SYS_WDT_CNT_SHIFT) + CY_SYS_WDT_CNT_MATCH_CL
1115:.\Generated_Source\PSoC4/CyLFClk.c **** 
1116:.\Generated_Source\PSoC4/CyLFClk.c ****             configRegValue
1117:.\Generated_Source\PSoC4/CyLFClk.c ****                 |= (uint32)(enable << ((counterNum * CY_SYS_WDT_CNT_SHIFT) + CY_SYS_WDT_CNT_MATCH_C
1118:.\Generated_Source\PSoC4/CyLFClk.c **** 
1119:.\Generated_Source\PSoC4/CyLFClk.c ****             CY_SYS_WDT_CONFIG_REG = configRegValue;
1120:.\Generated_Source\PSoC4/CyLFClk.c ****         }
1121:.\Generated_Source\PSoC4/CyLFClk.c ****     }
1122:.\Generated_Source\PSoC4/CyLFClk.c **** 
1123:.\Generated_Source\PSoC4/CyLFClk.c **** 
1124:.\Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
1125:.\Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysWdtGetClearOnMatch
1126:.\Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
1127:.\Generated_Source\PSoC4/CyLFClk.c ****     * \brief
1128:.\Generated_Source\PSoC4/CyLFClk.c ****     * Reads the "clear on match" setting for the specified counter.
1129:.\Generated_Source\PSoC4/CyLFClk.c ****     *
1130:.\Generated_Source\PSoC4/CyLFClk.c ****     * \param
1131:.\Generated_Source\PSoC4/CyLFClk.c ****     * counterNum Valid range [0-1]. The number of the WDT counter. The match values
1132:.\Generated_Source\PSoC4/CyLFClk.c ****     * are not supported by counter 2.
ARM GAS  C:\Users\g\AppData\Local\Temp\ccjVf3bh.s 			page 32


1133:.\Generated_Source\PSoC4/CyLFClk.c ****     *
1134:.\Generated_Source\PSoC4/CyLFClk.c ****     * \return The "clear on match" status: <br>1 if enabled <br>0 if disabled
1135:.\Generated_Source\PSoC4/CyLFClk.c ****     *
1136:.\Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
1137:.\Generated_Source\PSoC4/CyLFClk.c ****     uint32 CySysWdtGetClearOnMatch(uint32 counterNum)
1138:.\Generated_Source\PSoC4/CyLFClk.c ****     {
1139:.\Generated_Source\PSoC4/CyLFClk.c ****         CYASSERT((counterNum == CY_SYS_WDT_COUNTER0) ||
1140:.\Generated_Source\PSoC4/CyLFClk.c ****                  (counterNum == CY_SYS_WDT_COUNTER1));
1141:.\Generated_Source\PSoC4/CyLFClk.c **** 
1142:.\Generated_Source\PSoC4/CyLFClk.c ****         return (uint32)((CY_SYS_WDT_CONFIG_REG >>
1143:.\Generated_Source\PSoC4/CyLFClk.c ****                         ((counterNum * CY_SYS_WDT_CNT_SHIFT) + CY_SYS_WDT_CNT_MATCH_CLR_SHIFT)) & 0
1144:.\Generated_Source\PSoC4/CyLFClk.c ****     }
1145:.\Generated_Source\PSoC4/CyLFClk.c **** 
1146:.\Generated_Source\PSoC4/CyLFClk.c **** 
1147:.\Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
1148:.\Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysWdtEnable
1149:.\Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
1150:.\Generated_Source\PSoC4/CyLFClk.c ****     *
1151:.\Generated_Source\PSoC4/CyLFClk.c ****     * \brief Enables the specified WDT counters.
1152:.\Generated_Source\PSoC4/CyLFClk.c ****     *
1153:.\Generated_Source\PSoC4/CyLFClk.c ****     * All the counters specified in the mask are enabled.
1154:.\Generated_Source\PSoC4/CyLFClk.c ****     *
1155:.\Generated_Source\PSoC4/CyLFClk.c ****     * \param counterMask
1156:.\Generated_Source\PSoC4/CyLFClk.c ****     *  CY_SYS_WDT_COUNTER0_MASK - The mask for counter 0 to enable.<br>
1157:.\Generated_Source\PSoC4/CyLFClk.c ****     * CY_SYS_WDT_COUNTER1_MASK - The mask for counter 1 to enable.<br>
1158:.\Generated_Source\PSoC4/CyLFClk.c ****     * CY_SYS_WDT_COUNTER2_MASK - The mask for counter 2 to enable.
1159:.\Generated_Source\PSoC4/CyLFClk.c ****     *
1160:.\Generated_Source\PSoC4/CyLFClk.c ****     * \details
1161:.\Generated_Source\PSoC4/CyLFClk.c ****     * Enabling or disabling WDT requires 3 LFCLK cycles to come into effect.
1162:.\Generated_Source\PSoC4/CyLFClk.c ****     * Therefore, the WDT enable state must not be changed more than once in
1163:.\Generated_Source\PSoC4/CyLFClk.c ****     * that period.
1164:.\Generated_Source\PSoC4/CyLFClk.c ****     *
1165:.\Generated_Source\PSoC4/CyLFClk.c ****     * After WDT is enabled, it is illegal to write WDT configuration (WDT_CONFIG)
1166:.\Generated_Source\PSoC4/CyLFClk.c ****     * and control (WDT_CONTROL) registers. This means that all WDT functions that
1167:.\Generated_Source\PSoC4/CyLFClk.c ****     * contain 'write' in the name (with the exception of CySysWdtSetMatch()
1168:.\Generated_Source\PSoC4/CyLFClk.c ****     * function) are illegal to call if WDT is enabled.
1169:.\Generated_Source\PSoC4/CyLFClk.c ****     *
1170:.\Generated_Source\PSoC4/CyLFClk.c ****     * PSoC 4100 / PSoC 4200: This function enables ILO.
1171:.\Generated_Source\PSoC4/CyLFClk.c ****     *
1172:.\Generated_Source\PSoC4/CyLFClk.c ****     * PSoC 4100 BLE / PSoC 4200 BLE / PSoC4200L / PSoC 4100M 
1173:.\Generated_Source\PSoC4/CyLFClk.c ****     * / PSoC 4200M:
1174:.\Generated_Source\PSoC4/CyLFClk.c ****     * LFLCK should be configured before calling this function. The desired
1175:.\Generated_Source\PSoC4/CyLFClk.c ****     * source should be enabled and configured to be the source for LFCLK.
1176:.\Generated_Source\PSoC4/CyLFClk.c ****     *
1177:.\Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
1178:.\Generated_Source\PSoC4/CyLFClk.c ****     void CySysWdtEnable(uint32 counterMask)
1179:.\Generated_Source\PSoC4/CyLFClk.c ****     {
1180:.\Generated_Source\PSoC4/CyLFClk.c ****         #if (!CY_IP_WCO)
1181:.\Generated_Source\PSoC4/CyLFClk.c ****             CySysClkIloStart();
1182:.\Generated_Source\PSoC4/CyLFClk.c ****         #endif /* (!CY_IP_WCO) */
1183:.\Generated_Source\PSoC4/CyLFClk.c **** 
1184:.\Generated_Source\PSoC4/CyLFClk.c ****         CY_SYS_WDT_CONTROL_REG |= counterMask;
1185:.\Generated_Source\PSoC4/CyLFClk.c **** 
1186:.\Generated_Source\PSoC4/CyLFClk.c ****         if(0u != (counterMask & CY_SYS_WDT_COUNTER0_MASK))
1187:.\Generated_Source\PSoC4/CyLFClk.c ****         {
1188:.\Generated_Source\PSoC4/CyLFClk.c ****             while (0u == CySysWdtGetEnabledStatus(CY_SYS_WDT_COUNTER0))
1189:.\Generated_Source\PSoC4/CyLFClk.c ****             {
ARM GAS  C:\Users\g\AppData\Local\Temp\ccjVf3bh.s 			page 33


1190:.\Generated_Source\PSoC4/CyLFClk.c ****                 /* Wait for changes to come into effect */
1191:.\Generated_Source\PSoC4/CyLFClk.c ****             }
1192:.\Generated_Source\PSoC4/CyLFClk.c ****         }
1193:.\Generated_Source\PSoC4/CyLFClk.c **** 
1194:.\Generated_Source\PSoC4/CyLFClk.c ****         if(0u != (counterMask & CY_SYS_WDT_COUNTER1_MASK))
1195:.\Generated_Source\PSoC4/CyLFClk.c ****         {
1196:.\Generated_Source\PSoC4/CyLFClk.c ****             while (0u == CySysWdtGetEnabledStatus(CY_SYS_WDT_COUNTER1))
1197:.\Generated_Source\PSoC4/CyLFClk.c ****             {
1198:.\Generated_Source\PSoC4/CyLFClk.c ****                 /* Wait for changes to come into effect */
1199:.\Generated_Source\PSoC4/CyLFClk.c ****             }
1200:.\Generated_Source\PSoC4/CyLFClk.c ****         }
1201:.\Generated_Source\PSoC4/CyLFClk.c **** 
1202:.\Generated_Source\PSoC4/CyLFClk.c ****         if(0u != (counterMask & CY_SYS_WDT_COUNTER2_MASK))
1203:.\Generated_Source\PSoC4/CyLFClk.c ****         {
1204:.\Generated_Source\PSoC4/CyLFClk.c ****             while (0u == CySysWdtGetEnabledStatus(CY_SYS_WDT_COUNTER2))
1205:.\Generated_Source\PSoC4/CyLFClk.c ****             {
1206:.\Generated_Source\PSoC4/CyLFClk.c ****                 /* Wait for changes to come into effect */
1207:.\Generated_Source\PSoC4/CyLFClk.c ****             }
1208:.\Generated_Source\PSoC4/CyLFClk.c ****         }
1209:.\Generated_Source\PSoC4/CyLFClk.c ****     }
1210:.\Generated_Source\PSoC4/CyLFClk.c **** 
1211:.\Generated_Source\PSoC4/CyLFClk.c **** 
1212:.\Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
1213:.\Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysWdtDisable
1214:.\Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
1215:.\Generated_Source\PSoC4/CyLFClk.c ****     *
1216:.\Generated_Source\PSoC4/CyLFClk.c ****     * \brief Disables the specified WDT counters.
1217:.\Generated_Source\PSoC4/CyLFClk.c ****     * All the counters specified in the mask are disabled. The function waits for 
1218:.\Generated_Source\PSoC4/CyLFClk.c ****     * the changes to come into effect.
1219:.\Generated_Source\PSoC4/CyLFClk.c ****     *
1220:.\Generated_Source\PSoC4/CyLFClk.c ****     * \param counterMask
1221:.\Generated_Source\PSoC4/CyLFClk.c ****     * CY_SYS_WDT_COUNTER0_MASK - The mask for counter 0 to disable. <br>
1222:.\Generated_Source\PSoC4/CyLFClk.c ****     * CY_SYS_WDT_COUNTER1_MASK - The mask for counter 1 to disable. <br>
1223:.\Generated_Source\PSoC4/CyLFClk.c ****     * CY_SYS_WDT_COUNTER2_MASK - The mask for counter 2 to disable.
1224:.\Generated_Source\PSoC4/CyLFClk.c ****     *
1225:.\Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
1226:.\Generated_Source\PSoC4/CyLFClk.c ****     void CySysWdtDisable(uint32 counterMask)
1227:.\Generated_Source\PSoC4/CyLFClk.c ****     {
1228:.\Generated_Source\PSoC4/CyLFClk.c ****         if (0uL == CySysWdtLocked())
1229:.\Generated_Source\PSoC4/CyLFClk.c ****         {
1230:.\Generated_Source\PSoC4/CyLFClk.c ****             CY_SYS_WDT_CONTROL_REG &= ~counterMask;
1231:.\Generated_Source\PSoC4/CyLFClk.c **** 
1232:.\Generated_Source\PSoC4/CyLFClk.c ****             if(0u != (counterMask & CY_SYS_WDT_COUNTER0_MASK))
1233:.\Generated_Source\PSoC4/CyLFClk.c ****             {
1234:.\Generated_Source\PSoC4/CyLFClk.c ****                 while (0u != CySysWdtGetEnabledStatus(CY_SYS_WDT_COUNTER0))
1235:.\Generated_Source\PSoC4/CyLFClk.c ****                 {
1236:.\Generated_Source\PSoC4/CyLFClk.c ****                     /* Wait for changes to come into effect */
1237:.\Generated_Source\PSoC4/CyLFClk.c ****                 }
1238:.\Generated_Source\PSoC4/CyLFClk.c ****             }
1239:.\Generated_Source\PSoC4/CyLFClk.c **** 
1240:.\Generated_Source\PSoC4/CyLFClk.c ****             if(0u != (counterMask & CY_SYS_WDT_COUNTER1_MASK))
1241:.\Generated_Source\PSoC4/CyLFClk.c ****             {
1242:.\Generated_Source\PSoC4/CyLFClk.c ****                 while (0u != CySysWdtGetEnabledStatus(CY_SYS_WDT_COUNTER1))
1243:.\Generated_Source\PSoC4/CyLFClk.c ****                 {
1244:.\Generated_Source\PSoC4/CyLFClk.c ****                     /* Wait for changes to come into effect */
1245:.\Generated_Source\PSoC4/CyLFClk.c ****                 }
1246:.\Generated_Source\PSoC4/CyLFClk.c ****             }
ARM GAS  C:\Users\g\AppData\Local\Temp\ccjVf3bh.s 			page 34


1247:.\Generated_Source\PSoC4/CyLFClk.c **** 
1248:.\Generated_Source\PSoC4/CyLFClk.c ****             if(0u != (counterMask & CY_SYS_WDT_COUNTER2_MASK))
1249:.\Generated_Source\PSoC4/CyLFClk.c ****             {
1250:.\Generated_Source\PSoC4/CyLFClk.c ****                 while (0u != CySysWdtGetEnabledStatus(CY_SYS_WDT_COUNTER2))
1251:.\Generated_Source\PSoC4/CyLFClk.c ****                 {
1252:.\Generated_Source\PSoC4/CyLFClk.c ****                     /* Wait for changes to come into effect */
1253:.\Generated_Source\PSoC4/CyLFClk.c ****                 }
1254:.\Generated_Source\PSoC4/CyLFClk.c ****             }
1255:.\Generated_Source\PSoC4/CyLFClk.c ****         }
1256:.\Generated_Source\PSoC4/CyLFClk.c ****     }
1257:.\Generated_Source\PSoC4/CyLFClk.c **** 
1258:.\Generated_Source\PSoC4/CyLFClk.c **** 
1259:.\Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
1260:.\Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysWdtSetCascade
1261:.\Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
1262:.\Generated_Source\PSoC4/CyLFClk.c ****     * \brief
1263:.\Generated_Source\PSoC4/CyLFClk.c ****     * Writes the two WDT cascade values based on the combination of mask values
1264:.\Generated_Source\PSoC4/CyLFClk.c ****     * specified.
1265:.\Generated_Source\PSoC4/CyLFClk.c ****     *
1266:.\Generated_Source\PSoC4/CyLFClk.c ****     * \param cascadeMask The mask value used to set or clear the cascade values:
1267:.\Generated_Source\PSoC4/CyLFClk.c ****     * CY_SYS_WDT_CASCADE_NONE - Neither <br>
1268:.\Generated_Source\PSoC4/CyLFClk.c ****     * CY_SYS_WDT_CASCADE_01 - Cascade 01 <br>
1269:.\Generated_Source\PSoC4/CyLFClk.c ****     * CY_SYS_WDT_CASCADE_12 - Cascade 12
1270:.\Generated_Source\PSoC4/CyLFClk.c ****     *
1271:.\Generated_Source\PSoC4/CyLFClk.c ****     * If only one cascade mask is specified, the second cascade is disabled.
1272:.\Generated_Source\PSoC4/CyLFClk.c ****     * To set both cascade modes, two defines should be ORed:
1273:.\Generated_Source\PSoC4/CyLFClk.c ****     * (CY_SYS_TIMER_CASCADE_01 | CY_SYS_TIMER_CASCADE_12).
1274:.\Generated_Source\PSoC4/CyLFClk.c ****     * \note If CySysWdtSetCascade() was called with ORed defines it is necessary 
1275:.\Generated_Source\PSoC4/CyLFClk.c ****     * to call CySysWdtSetClearOnMatch(1,1). It is needed to make sure that 
1276:.\Generated_Source\PSoC4/CyLFClk.c ****     * Counter 2 will be updated in the expected way.
1277:.\Generated_Source\PSoC4/CyLFClk.c ****     *
1278:.\Generated_Source\PSoC4/CyLFClk.c ****     * WDT counters that are part of the specified cascade should be disabled.
1279:.\Generated_Source\PSoC4/CyLFClk.c ****     * Otherwise this function call has no effect. If the specified
1280:.\Generated_Source\PSoC4/CyLFClk.c ****     * counter is enabled, call CySysWdtDisable() function with the corresponding
1281:.\Generated_Source\PSoC4/CyLFClk.c ****     * parameter to disable the specified counter and wait for it to stop. This may
1282:.\Generated_Source\PSoC4/CyLFClk.c ****     * take up to 3 LFCLK cycles.
1283:.\Generated_Source\PSoC4/CyLFClk.c ****     *
1284:.\Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
1285:.\Generated_Source\PSoC4/CyLFClk.c ****     void CySysWdtSetCascade(uint32 cascadeMask)
1286:.\Generated_Source\PSoC4/CyLFClk.c ****     {
1287:.\Generated_Source\PSoC4/CyLFClk.c ****         uint32 configRegValue;
1288:.\Generated_Source\PSoC4/CyLFClk.c ****         uint32 countersEnableStatus;
1289:.\Generated_Source\PSoC4/CyLFClk.c **** 
1290:.\Generated_Source\PSoC4/CyLFClk.c ****         countersEnableStatus = CySysWdtGetEnabledStatus(CY_SYS_WDT_COUNTER0) |
1291:.\Generated_Source\PSoC4/CyLFClk.c ****                             CySysWdtGetEnabledStatus(CY_SYS_WDT_COUNTER1) |
1292:.\Generated_Source\PSoC4/CyLFClk.c ****                             CySysWdtGetEnabledStatus(CY_SYS_WDT_COUNTER2);
1293:.\Generated_Source\PSoC4/CyLFClk.c **** 
1294:.\Generated_Source\PSoC4/CyLFClk.c ****         if (0u == countersEnableStatus)
1295:.\Generated_Source\PSoC4/CyLFClk.c ****         {
1296:.\Generated_Source\PSoC4/CyLFClk.c ****             configRegValue = CY_SYS_WDT_CONFIG_REG;
1297:.\Generated_Source\PSoC4/CyLFClk.c ****             configRegValue &= ((uint32)(~(CY_SYS_WDT_CASCADE_01|CY_SYS_WDT_CASCADE_12)));
1298:.\Generated_Source\PSoC4/CyLFClk.c ****             configRegValue |= cascadeMask;
1299:.\Generated_Source\PSoC4/CyLFClk.c ****             CY_SYS_WDT_CONFIG_REG = configRegValue;
1300:.\Generated_Source\PSoC4/CyLFClk.c ****         }
1301:.\Generated_Source\PSoC4/CyLFClk.c ****     }
1302:.\Generated_Source\PSoC4/CyLFClk.c **** 
1303:.\Generated_Source\PSoC4/CyLFClk.c **** 
ARM GAS  C:\Users\g\AppData\Local\Temp\ccjVf3bh.s 			page 35


1304:.\Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
1305:.\Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysWdtGetCascade
1306:.\Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
1307:.\Generated_Source\PSoC4/CyLFClk.c ****     *
1308:.\Generated_Source\PSoC4/CyLFClk.c ****     * \brief Reads the two WDT cascade values returning a mask of the bits set.
1309:.\Generated_Source\PSoC4/CyLFClk.c ****     *
1310:.\Generated_Source\PSoC4/CyLFClk.c ****     * \return The mask of the cascade values set.
1311:.\Generated_Source\PSoC4/CyLFClk.c ****     * \return CY_SYS_WDT_CASCADE_NONE - Neither
1312:.\Generated_Source\PSoC4/CyLFClk.c ****     * \return CY_SYS_WDT_CASCADE_01 - Cascade 01
1313:.\Generated_Source\PSoC4/CyLFClk.c ****     * \return CY_SYS_WDT_CASCADE_12 - Cascade 12
1314:.\Generated_Source\PSoC4/CyLFClk.c ****     *
1315:.\Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
1316:.\Generated_Source\PSoC4/CyLFClk.c ****     uint32 CySysWdtGetCascade(void)
1317:.\Generated_Source\PSoC4/CyLFClk.c ****     {
1318:.\Generated_Source\PSoC4/CyLFClk.c ****         return (CY_SYS_WDT_CONFIG_REG & (CY_SYS_WDT_CASCADE_01 | CY_SYS_WDT_CASCADE_12));
1319:.\Generated_Source\PSoC4/CyLFClk.c ****     }
1320:.\Generated_Source\PSoC4/CyLFClk.c **** 
1321:.\Generated_Source\PSoC4/CyLFClk.c **** 
1322:.\Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
1323:.\Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysWdtSetMatch
1324:.\Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
1325:.\Generated_Source\PSoC4/CyLFClk.c ****     *
1326:.\Generated_Source\PSoC4/CyLFClk.c ****     * \brief Configures the WDT counter match comparison value.
1327:.\Generated_Source\PSoC4/CyLFClk.c ****     *
1328:.\Generated_Source\PSoC4/CyLFClk.c ****     * \param counterNum
1329:.\Generated_Source\PSoC4/CyLFClk.c ****     * Valid range [0-1]. The number of the WDT counter. The match values are not
1330:.\Generated_Source\PSoC4/CyLFClk.c ****     * supported by counter 2.
1331:.\Generated_Source\PSoC4/CyLFClk.c ****     *
1332:.\Generated_Source\PSoC4/CyLFClk.c ****     * \param match
1333:.\Generated_Source\PSoC4/CyLFClk.c ****     * Valid range [0-65535]. The value to be used to match against the counter.
1334:.\Generated_Source\PSoC4/CyLFClk.c ****     *
1335:.\Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
1336:.\Generated_Source\PSoC4/CyLFClk.c ****     void CySysWdtSetMatch(uint32 counterNum, uint32 match)
1337:.\Generated_Source\PSoC4/CyLFClk.c ****     {
1338:.\Generated_Source\PSoC4/CyLFClk.c ****         uint32 regValue;
1339:.\Generated_Source\PSoC4/CyLFClk.c **** 
1340:.\Generated_Source\PSoC4/CyLFClk.c ****         CYASSERT((counterNum == CY_SYS_WDT_COUNTER0) ||
1341:.\Generated_Source\PSoC4/CyLFClk.c ****                  (counterNum == CY_SYS_WDT_COUNTER1));
1342:.\Generated_Source\PSoC4/CyLFClk.c **** 
1343:.\Generated_Source\PSoC4/CyLFClk.c ****         /* Wait for previous changes to come into effect */
1344:.\Generated_Source\PSoC4/CyLFClk.c ****         CyDelayUs(CY_SYS_WDT_3LFCLK_DELAY_US);
1345:.\Generated_Source\PSoC4/CyLFClk.c **** 
1346:.\Generated_Source\PSoC4/CyLFClk.c ****         regValue = CY_SYS_WDT_MATCH_REG;
1347:.\Generated_Source\PSoC4/CyLFClk.c ****         regValue &= (uint32)~((uint32)(CY_SYS_WDT_LOWER_16BITS_MASK << (counterNum * CY_SYS_WDT_CNT
1348:.\Generated_Source\PSoC4/CyLFClk.c ****         CY_SYS_WDT_MATCH_REG = (regValue | (match << (counterNum * CY_SYS_WDT_CNT_MATCH_SHIFT)));
1349:.\Generated_Source\PSoC4/CyLFClk.c **** 
1350:.\Generated_Source\PSoC4/CyLFClk.c ****         /* Make sure match synchronization has started */
1351:.\Generated_Source\PSoC4/CyLFClk.c ****         CyDelayUs(CY_SYS_WDT_1LFCLK_DELAY_US);
1352:.\Generated_Source\PSoC4/CyLFClk.c ****     }
1353:.\Generated_Source\PSoC4/CyLFClk.c **** 
1354:.\Generated_Source\PSoC4/CyLFClk.c **** 
1355:.\Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
1356:.\Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysWdtSetToggleBit
1357:.\Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
1358:.\Generated_Source\PSoC4/CyLFClk.c ****     * \brief
1359:.\Generated_Source\PSoC4/CyLFClk.c ****     * Configures which bit in WDT counter 2 to monitor for a toggle.
1360:.\Generated_Source\PSoC4/CyLFClk.c ****     *
ARM GAS  C:\Users\g\AppData\Local\Temp\ccjVf3bh.s 			page 36


1361:.\Generated_Source\PSoC4/CyLFClk.c ****     * When that bit toggles, an interrupt is generated if the mode for counter 2 has
1362:.\Generated_Source\PSoC4/CyLFClk.c ****     * enabled interrupts.
1363:.\Generated_Source\PSoC4/CyLFClk.c ****     *
1364:.\Generated_Source\PSoC4/CyLFClk.c ****     * \param bits Valid range [0-31].  Counter 2 bit to monitor for a toggle.
1365:.\Generated_Source\PSoC4/CyLFClk.c ****     *
1366:.\Generated_Source\PSoC4/CyLFClk.c ****     * \details
1367:.\Generated_Source\PSoC4/CyLFClk.c ****     * WDT Counter 2 should be disabled. Otherwise this function call has no
1368:.\Generated_Source\PSoC4/CyLFClk.c ****     * effect.
1369:.\Generated_Source\PSoC4/CyLFClk.c ****     *
1370:.\Generated_Source\PSoC4/CyLFClk.c ****     * If the specified counter is enabled, call the CySysWdtDisable() function with
1371:.\Generated_Source\PSoC4/CyLFClk.c ****     * the corresponding parameter to disable the specified counter and wait for it to
1372:.\Generated_Source\PSoC4/CyLFClk.c ****     * stop. This may take up to 3 LFCLK cycles.
1373:.\Generated_Source\PSoC4/CyLFClk.c ****     *
1374:.\Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
1375:.\Generated_Source\PSoC4/CyLFClk.c ****     void CySysWdtSetToggleBit(uint32 bits)
1376:.\Generated_Source\PSoC4/CyLFClk.c ****     {
1377:.\Generated_Source\PSoC4/CyLFClk.c ****         uint32 configRegValue;
1378:.\Generated_Source\PSoC4/CyLFClk.c **** 
1379:.\Generated_Source\PSoC4/CyLFClk.c ****         if (0u == CySysWdtGetEnabledStatus(CY_SYS_WDT_COUNTER2))
1380:.\Generated_Source\PSoC4/CyLFClk.c ****         {
1381:.\Generated_Source\PSoC4/CyLFClk.c ****             configRegValue = CY_SYS_WDT_CONFIG_REG;
1382:.\Generated_Source\PSoC4/CyLFClk.c ****             configRegValue &= (uint32)(~((uint32)(CY_SYS_WDT_CONFIG_BITS2_MASK << CY_SYS_WDT_CONFIG
1383:.\Generated_Source\PSoC4/CyLFClk.c ****             configRegValue |= ((bits & CY_SYS_WDT_CONFIG_BITS2_MASK) << CY_SYS_WDT_CONFIG_BITS2_POS
1384:.\Generated_Source\PSoC4/CyLFClk.c ****             CY_SYS_WDT_CONFIG_REG = configRegValue;
1385:.\Generated_Source\PSoC4/CyLFClk.c ****         }
1386:.\Generated_Source\PSoC4/CyLFClk.c ****     }
1387:.\Generated_Source\PSoC4/CyLFClk.c **** 
1388:.\Generated_Source\PSoC4/CyLFClk.c **** 
1389:.\Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
1390:.\Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysWdtGetToggleBit
1391:.\Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
1392:.\Generated_Source\PSoC4/CyLFClk.c ****     * \brief
1393:.\Generated_Source\PSoC4/CyLFClk.c ****     * Reads which bit in WDT counter 2 is monitored for a toggle.
1394:.\Generated_Source\PSoC4/CyLFClk.c ****     *
1395:.\Generated_Source\PSoC4/CyLFClk.c ****     * \return The bit that is monitored (range of 0 to 31)
1396:.\Generated_Source\PSoC4/CyLFClk.c ****     *
1397:.\Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
1398:.\Generated_Source\PSoC4/CyLFClk.c ****     uint32 CySysWdtGetToggleBit(void)
1399:.\Generated_Source\PSoC4/CyLFClk.c ****     {
1400:.\Generated_Source\PSoC4/CyLFClk.c ****         return ((CY_SYS_WDT_CONFIG_REG >> CY_SYS_WDT_CONFIG_BITS2_POS) & CY_SYS_WDT_CONFIG_BITS2_MA
1401:.\Generated_Source\PSoC4/CyLFClk.c ****     }
1402:.\Generated_Source\PSoC4/CyLFClk.c **** 
1403:.\Generated_Source\PSoC4/CyLFClk.c **** 
1404:.\Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
1405:.\Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysWdtGetMatch
1406:.\Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
1407:.\Generated_Source\PSoC4/CyLFClk.c ****     *
1408:.\Generated_Source\PSoC4/CyLFClk.c ****     * \brief Reads the WDT counter match comparison value.
1409:.\Generated_Source\PSoC4/CyLFClk.c ****     *
1410:.\Generated_Source\PSoC4/CyLFClk.c ****     * \param counterNum Valid range [0-1].  The number of the WDT counter. The match
1411:.\Generated_Source\PSoC4/CyLFClk.c ****     * values are not supported by counter 2.
1412:.\Generated_Source\PSoC4/CyLFClk.c ****     *
1413:.\Generated_Source\PSoC4/CyLFClk.c ****     * \return A 16-bit match value.
1414:.\Generated_Source\PSoC4/CyLFClk.c ****     *
1415:.\Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
1416:.\Generated_Source\PSoC4/CyLFClk.c ****     uint32 CySysWdtGetMatch(uint32 counterNum)
1417:.\Generated_Source\PSoC4/CyLFClk.c ****     {
ARM GAS  C:\Users\g\AppData\Local\Temp\ccjVf3bh.s 			page 37


1418:.\Generated_Source\PSoC4/CyLFClk.c ****         CYASSERT((counterNum == CY_SYS_WDT_COUNTER0) ||
1419:.\Generated_Source\PSoC4/CyLFClk.c ****                  (counterNum == CY_SYS_WDT_COUNTER1));
1420:.\Generated_Source\PSoC4/CyLFClk.c **** 
1421:.\Generated_Source\PSoC4/CyLFClk.c ****         return ((uint32)(CY_SYS_WDT_MATCH_REG >> 
1422:.\Generated_Source\PSoC4/CyLFClk.c ****                                             (counterNum * CY_SYS_WDT_CNT_MATCH_SHIFT)) & CY_SYS_WDT
1423:.\Generated_Source\PSoC4/CyLFClk.c ****     }
1424:.\Generated_Source\PSoC4/CyLFClk.c **** 
1425:.\Generated_Source\PSoC4/CyLFClk.c **** 
1426:.\Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
1427:.\Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysWdtGetCount
1428:.\Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
1429:.\Generated_Source\PSoC4/CyLFClk.c ****     *
1430:.\Generated_Source\PSoC4/CyLFClk.c ****     * \brief Reads the current WDT counter value.
1431:.\Generated_Source\PSoC4/CyLFClk.c ****     *
1432:.\Generated_Source\PSoC4/CyLFClk.c ****     * \param counterNum: Valid range [0-2]. The number of the WDT counter.
1433:.\Generated_Source\PSoC4/CyLFClk.c ****     *
1434:.\Generated_Source\PSoC4/CyLFClk.c ****     * \return A live counter value.  Counter 0 and Counter 1 are 16 bit counters 
1435:.\Generated_Source\PSoC4/CyLFClk.c ****     * and counter 2 is a 32 bit counter.
1436:.\Generated_Source\PSoC4/CyLFClk.c ****     *
1437:.\Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
1438:.\Generated_Source\PSoC4/CyLFClk.c ****     uint32 CySysWdtGetCount(uint32 counterNum)
1439:.\Generated_Source\PSoC4/CyLFClk.c ****     {
1440:.\Generated_Source\PSoC4/CyLFClk.c ****         uint32 regValue = 0u;
1441:.\Generated_Source\PSoC4/CyLFClk.c **** 
1442:.\Generated_Source\PSoC4/CyLFClk.c ****         switch(counterNum)
1443:.\Generated_Source\PSoC4/CyLFClk.c ****         {
1444:.\Generated_Source\PSoC4/CyLFClk.c ****             /* WDT Counter 0 */
1445:.\Generated_Source\PSoC4/CyLFClk.c ****             case 0u:
1446:.\Generated_Source\PSoC4/CyLFClk.c ****                 regValue = CY_SYS_WDT_CTRLOW_REG & CY_SYS_WDT_LOWER_16BITS_MASK;
1447:.\Generated_Source\PSoC4/CyLFClk.c ****             break;
1448:.\Generated_Source\PSoC4/CyLFClk.c **** 
1449:.\Generated_Source\PSoC4/CyLFClk.c ****             /* WDT Counter 1 */
1450:.\Generated_Source\PSoC4/CyLFClk.c ****             case 1u:
1451:.\Generated_Source\PSoC4/CyLFClk.c ****                 regValue = (CY_SYS_WDT_CTRLOW_REG >> CY_SYS_WDT_CNT_MATCH_SHIFT) & CY_SYS_WDT_LOWER
1452:.\Generated_Source\PSoC4/CyLFClk.c ****             break;
1453:.\Generated_Source\PSoC4/CyLFClk.c **** 
1454:.\Generated_Source\PSoC4/CyLFClk.c ****             /* WDT Counter 2 */
1455:.\Generated_Source\PSoC4/CyLFClk.c ****             case 2u:
1456:.\Generated_Source\PSoC4/CyLFClk.c ****                 regValue = CY_SYS_WDT_CTRHIGH_REG;
1457:.\Generated_Source\PSoC4/CyLFClk.c ****             break;
1458:.\Generated_Source\PSoC4/CyLFClk.c **** 
1459:.\Generated_Source\PSoC4/CyLFClk.c ****             default:
1460:.\Generated_Source\PSoC4/CyLFClk.c ****                 CYASSERT(0u != 0u);
1461:.\Generated_Source\PSoC4/CyLFClk.c ****             break;
1462:.\Generated_Source\PSoC4/CyLFClk.c ****         }
1463:.\Generated_Source\PSoC4/CyLFClk.c **** 
1464:.\Generated_Source\PSoC4/CyLFClk.c ****         return (regValue);
1465:.\Generated_Source\PSoC4/CyLFClk.c ****     }
1466:.\Generated_Source\PSoC4/CyLFClk.c **** 
1467:.\Generated_Source\PSoC4/CyLFClk.c **** 
1468:.\Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
1469:.\Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysWdtGetInterruptSource
1470:.\Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
1471:.\Generated_Source\PSoC4/CyLFClk.c ****     * \brief
1472:.\Generated_Source\PSoC4/CyLFClk.c ****     * Reads a mask containing all the WDT counters interrupts that are currently
1473:.\Generated_Source\PSoC4/CyLFClk.c ****     * set by the hardware, if a corresponding mode is selected.
1474:.\Generated_Source\PSoC4/CyLFClk.c ****     *
ARM GAS  C:\Users\g\AppData\Local\Temp\ccjVf3bh.s 			page 38


1475:.\Generated_Source\PSoC4/CyLFClk.c ****     * \return The mask of interrupts set
1476:.\Generated_Source\PSoC4/CyLFClk.c ****     * \return CY_SYS_WDT_COUNTER0_INT - Counter 0
1477:.\Generated_Source\PSoC4/CyLFClk.c ****     * \return CY_SYS_WDT_COUNTER1_INT - Counter 1
1478:.\Generated_Source\PSoC4/CyLFClk.c ****     * \return CY_SYS_WDT_COUNTER2_INT - Counter 2
1479:.\Generated_Source\PSoC4/CyLFClk.c ****     *
1480:.\Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
1481:.\Generated_Source\PSoC4/CyLFClk.c ****     uint32 CySysWdtGetInterruptSource(void)
1482:.\Generated_Source\PSoC4/CyLFClk.c ****     {
1483:.\Generated_Source\PSoC4/CyLFClk.c ****         return (CY_SYS_WDT_CONTROL_REG & (CY_SYS_WDT_COUNTER0_INT | CY_SYS_WDT_COUNTER1_INT | CY_SY
1484:.\Generated_Source\PSoC4/CyLFClk.c ****     }
1485:.\Generated_Source\PSoC4/CyLFClk.c **** 
1486:.\Generated_Source\PSoC4/CyLFClk.c **** 
1487:.\Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
1488:.\Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysWdtClearInterrupt
1489:.\Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
1490:.\Generated_Source\PSoC4/CyLFClk.c ****     * \brief
1491:.\Generated_Source\PSoC4/CyLFClk.c ****     * Clears all the WDT counter interrupts set in the mask.
1492:.\Generated_Source\PSoC4/CyLFClk.c ****     *
1493:.\Generated_Source\PSoC4/CyLFClk.c ****     * Calling this function also prevents from Reset when the counter mode is set 
1494:.\Generated_Source\PSoC4/CyLFClk.c ****     * to generate 3 interrupts and then the device resets.
1495:.\Generated_Source\PSoC4/CyLFClk.c ****     *
1496:.\Generated_Source\PSoC4/CyLFClk.c ****     * All the WDT interrupts are to be cleared by the firmware, otherwise
1497:.\Generated_Source\PSoC4/CyLFClk.c ****     * interrupts are generated continuously.
1498:.\Generated_Source\PSoC4/CyLFClk.c ****     *
1499:.\Generated_Source\PSoC4/CyLFClk.c ****     * \param counterMask
1500:.\Generated_Source\PSoC4/CyLFClk.c ****     * CY_SYS_WDT_COUNTER0_INT - Clears counter 0 interrupts <br>
1501:.\Generated_Source\PSoC4/CyLFClk.c ****     * CY_SYS_WDT_COUNTER1_INT - Clears counter 1 interrupts <br>
1502:.\Generated_Source\PSoC4/CyLFClk.c ****     * CY_SYS_WDT_COUNTER2_INT - Clears counter 2 interrupts
1503:.\Generated_Source\PSoC4/CyLFClk.c ****     *
1504:.\Generated_Source\PSoC4/CyLFClk.c ****     * \details
1505:.\Generated_Source\PSoC4/CyLFClk.c ****     * This function temporary removes the watchdog lock, if it was set, and
1506:.\Generated_Source\PSoC4/CyLFClk.c ****     * restores the lock state after cleaning the WDT interrupts that are set in
1507:.\Generated_Source\PSoC4/CyLFClk.c ****     * a mask.
1508:.\Generated_Source\PSoC4/CyLFClk.c ****     *
1509:.\Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
1510:.\Generated_Source\PSoC4/CyLFClk.c ****     void CySysWdtClearInterrupt(uint32 counterMask)
1511:.\Generated_Source\PSoC4/CyLFClk.c ****     {
1512:.\Generated_Source\PSoC4/CyLFClk.c ****         uint8 interruptState;
1513:.\Generated_Source\PSoC4/CyLFClk.c ****         uint32 wdtLockState;
1514:.\Generated_Source\PSoC4/CyLFClk.c **** 
1515:.\Generated_Source\PSoC4/CyLFClk.c ****         interruptState = CyEnterCriticalSection();
1516:.\Generated_Source\PSoC4/CyLFClk.c **** 
1517:.\Generated_Source\PSoC4/CyLFClk.c ****         if (0u != CySysWdtLocked())
1518:.\Generated_Source\PSoC4/CyLFClk.c ****         {
1519:.\Generated_Source\PSoC4/CyLFClk.c ****             wdtLockState = 1u;
1520:.\Generated_Source\PSoC4/CyLFClk.c ****             CySysWdtUnlock();
1521:.\Generated_Source\PSoC4/CyLFClk.c ****         }
1522:.\Generated_Source\PSoC4/CyLFClk.c ****         else
1523:.\Generated_Source\PSoC4/CyLFClk.c ****         {
1524:.\Generated_Source\PSoC4/CyLFClk.c ****             wdtLockState = 0u;
1525:.\Generated_Source\PSoC4/CyLFClk.c ****         }
1526:.\Generated_Source\PSoC4/CyLFClk.c **** 
1527:.\Generated_Source\PSoC4/CyLFClk.c ****         /* Set new WDT control register value */
1528:.\Generated_Source\PSoC4/CyLFClk.c ****         counterMask &= (CY_SYS_WDT_COUNTER0_INT |
1529:.\Generated_Source\PSoC4/CyLFClk.c ****                         CY_SYS_WDT_COUNTER1_INT |
1530:.\Generated_Source\PSoC4/CyLFClk.c ****                         CY_SYS_WDT_COUNTER2_INT);
1531:.\Generated_Source\PSoC4/CyLFClk.c **** 
ARM GAS  C:\Users\g\AppData\Local\Temp\ccjVf3bh.s 			page 39


1532:.\Generated_Source\PSoC4/CyLFClk.c ****         CY_SYS_WDT_CONTROL_REG = counterMask | (CY_SYS_WDT_CONTROL_REG & ~(CY_SYS_WDT_COUNTER0_INT 
1533:.\Generated_Source\PSoC4/CyLFClk.c ****                                                                            CY_SYS_WDT_COUNTER1_INT 
1534:.\Generated_Source\PSoC4/CyLFClk.c ****                                                                            CY_SYS_WDT_COUNTER2_INT)
1535:.\Generated_Source\PSoC4/CyLFClk.c **** 
1536:.\Generated_Source\PSoC4/CyLFClk.c ****         /* Read the CY_SYS_WDT_CONTROL_REG to clear the interrupt request.
1537:.\Generated_Source\PSoC4/CyLFClk.c ****          * Cypress ID #207093, #206231
1538:.\Generated_Source\PSoC4/CyLFClk.c ****         */
1539:.\Generated_Source\PSoC4/CyLFClk.c ****         (void)CY_SYS_WDT_CONTROL_REG;
1540:.\Generated_Source\PSoC4/CyLFClk.c **** 
1541:.\Generated_Source\PSoC4/CyLFClk.c ****         if (1u == wdtLockState)
1542:.\Generated_Source\PSoC4/CyLFClk.c ****         {
1543:.\Generated_Source\PSoC4/CyLFClk.c ****             CySysWdtLock();
1544:.\Generated_Source\PSoC4/CyLFClk.c ****         }
1545:.\Generated_Source\PSoC4/CyLFClk.c **** 
1546:.\Generated_Source\PSoC4/CyLFClk.c ****         CyExitCriticalSection(interruptState);
1547:.\Generated_Source\PSoC4/CyLFClk.c ****     }
1548:.\Generated_Source\PSoC4/CyLFClk.c **** 
1549:.\Generated_Source\PSoC4/CyLFClk.c **** 
1550:.\Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
1551:.\Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysWdtResetCounters
1552:.\Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
1553:.\Generated_Source\PSoC4/CyLFClk.c ****     * \brief
1554:.\Generated_Source\PSoC4/CyLFClk.c ****     * Resets all the WDT counters set in the mask.
1555:.\Generated_Source\PSoC4/CyLFClk.c ****     *
1556:.\Generated_Source\PSoC4/CyLFClk.c ****     * \param countersMask
1557:.\Generated_Source\PSoC4/CyLFClk.c ****     * CY_SYS_WDT_COUNTER0_RESET - Reset counter 0 <br>
1558:.\Generated_Source\PSoC4/CyLFClk.c ****     * CY_SYS_WDT_COUNTER1_RESET - Reset counter 1 <br>
1559:.\Generated_Source\PSoC4/CyLFClk.c ****     * CY_SYS_WDT_COUNTER2_RESET - Reset counter 2
1560:.\Generated_Source\PSoC4/CyLFClk.c ****     *
1561:.\Generated_Source\PSoC4/CyLFClk.c ****     * \details
1562:.\Generated_Source\PSoC4/CyLFClk.c ****     * This function does not reset counter values if the Watchdog is locked.
1563:.\Generated_Source\PSoC4/CyLFClk.c ****     * This function waits while corresponding counters will be reset. This may
1564:.\Generated_Source\PSoC4/CyLFClk.c ****     * take up to 3 LFCLK cycles.
1565:.\Generated_Source\PSoC4/CyLFClk.c ****     * The LFCLK source must be enabled. Otherwise, the function will never exit.
1566:.\Generated_Source\PSoC4/CyLFClk.c ****     *
1567:.\Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
1568:.\Generated_Source\PSoC4/CyLFClk.c ****     void CySysWdtResetCounters(uint32 countersMask)
1569:.\Generated_Source\PSoC4/CyLFClk.c ****     {
1570:.\Generated_Source\PSoC4/CyLFClk.c ****         /* Set new WDT reset value */
1571:.\Generated_Source\PSoC4/CyLFClk.c ****         CY_SYS_WDT_CONTROL_REG |= (countersMask & CY_SYS_WDT_COUNTERS_RESET);
1572:.\Generated_Source\PSoC4/CyLFClk.c **** 
1573:.\Generated_Source\PSoC4/CyLFClk.c ****         while (0uL != (CY_SYS_WDT_CONTROL_REG & CY_SYS_WDT_COUNTERS_RESET))
1574:.\Generated_Source\PSoC4/CyLFClk.c ****         {
1575:.\Generated_Source\PSoC4/CyLFClk.c ****             /* Wait for reset to come into effect */
1576:.\Generated_Source\PSoC4/CyLFClk.c ****         }
1577:.\Generated_Source\PSoC4/CyLFClk.c ****     }
1578:.\Generated_Source\PSoC4/CyLFClk.c **** 
1579:.\Generated_Source\PSoC4/CyLFClk.c **** 
1580:.\Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
1581:.\Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysWdtSetInterruptCallback
1582:.\Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
1583:.\Generated_Source\PSoC4/CyLFClk.c ****     * \brief
1584:.\Generated_Source\PSoC4/CyLFClk.c ****     * Sets the ISR callback function for the particular WDT counter.
1585:.\Generated_Source\PSoC4/CyLFClk.c ****     * These functions are called on the WDT interrupt.
1586:.\Generated_Source\PSoC4/CyLFClk.c ****     *
1587:.\Generated_Source\PSoC4/CyLFClk.c ****     * \param counterNum The number of the WDT counter.
1588:.\Generated_Source\PSoC4/CyLFClk.c ****     * \param function The pointer to the callback function.
ARM GAS  C:\Users\g\AppData\Local\Temp\ccjVf3bh.s 			page 40


1589:.\Generated_Source\PSoC4/CyLFClk.c ****     *
1590:.\Generated_Source\PSoC4/CyLFClk.c ****     * \return The pointer to the previous callback function.
1591:.\Generated_Source\PSoC4/CyLFClk.c ****     * \return NULL is returned if the specified address is not set.
1592:.\Generated_Source\PSoC4/CyLFClk.c ****     *
1593:.\Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
1594:.\Generated_Source\PSoC4/CyLFClk.c ****     cyWdtCallback CySysWdtSetInterruptCallback(uint32 counterNum, cyWdtCallback function)
1595:.\Generated_Source\PSoC4/CyLFClk.c ****     {
1596:.\Generated_Source\PSoC4/CyLFClk.c ****         cyWdtCallback prevCallback = (void *)0;
1597:.\Generated_Source\PSoC4/CyLFClk.c **** 
1598:.\Generated_Source\PSoC4/CyLFClk.c ****         if(counterNum < CY_WDT_NUM_OF_WDT)
1599:.\Generated_Source\PSoC4/CyLFClk.c ****         {
1600:.\Generated_Source\PSoC4/CyLFClk.c ****             prevCallback = cySysWdtCallback[counterNum];
1601:.\Generated_Source\PSoC4/CyLFClk.c ****             cySysWdtCallback[counterNum] = function;
1602:.\Generated_Source\PSoC4/CyLFClk.c ****         }
1603:.\Generated_Source\PSoC4/CyLFClk.c ****         else
1604:.\Generated_Source\PSoC4/CyLFClk.c ****         {
1605:.\Generated_Source\PSoC4/CyLFClk.c ****             CYASSERT(0u != 0u);
1606:.\Generated_Source\PSoC4/CyLFClk.c ****         }
1607:.\Generated_Source\PSoC4/CyLFClk.c **** 
1608:.\Generated_Source\PSoC4/CyLFClk.c ****         return((cyWdtCallback)prevCallback);
1609:.\Generated_Source\PSoC4/CyLFClk.c ****     }
1610:.\Generated_Source\PSoC4/CyLFClk.c **** 
1611:.\Generated_Source\PSoC4/CyLFClk.c **** 
1612:.\Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
1613:.\Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysWdtGetInterruptCallback
1614:.\Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
1615:.\Generated_Source\PSoC4/CyLFClk.c ****     * \brief
1616:.\Generated_Source\PSoC4/CyLFClk.c ****     * Gets the ISR callback function for the particular WDT counter.
1617:.\Generated_Source\PSoC4/CyLFClk.c ****     *
1618:.\Generated_Source\PSoC4/CyLFClk.c ****     * \param counterNum The number of the WDT counter.
1619:.\Generated_Source\PSoC4/CyLFClk.c ****     *
1620:.\Generated_Source\PSoC4/CyLFClk.c ****     * \return The pointer to the callback function registered for a particular WDT by
1621:.\Generated_Source\PSoC4/CyLFClk.c ****     * a particular address that are passed through arguments.
1622:.\Generated_Source\PSoC4/CyLFClk.c ****     *
1623:.\Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
1624:.\Generated_Source\PSoC4/CyLFClk.c ****     cyWdtCallback CySysWdtGetInterruptCallback(uint32 counterNum)
1625:.\Generated_Source\PSoC4/CyLFClk.c ****     {
1626:.\Generated_Source\PSoC4/CyLFClk.c ****         cyWdtCallback retCallback = (void *)0;
1627:.\Generated_Source\PSoC4/CyLFClk.c **** 
1628:.\Generated_Source\PSoC4/CyLFClk.c ****         if(counterNum < CY_WDT_NUM_OF_WDT)
1629:.\Generated_Source\PSoC4/CyLFClk.c ****         {
1630:.\Generated_Source\PSoC4/CyLFClk.c ****             retCallback = (cyWdtCallback)cySysWdtCallback[counterNum];
1631:.\Generated_Source\PSoC4/CyLFClk.c ****         }
1632:.\Generated_Source\PSoC4/CyLFClk.c ****         else
1633:.\Generated_Source\PSoC4/CyLFClk.c ****         {
1634:.\Generated_Source\PSoC4/CyLFClk.c ****             CYASSERT(0u != 0u);
1635:.\Generated_Source\PSoC4/CyLFClk.c ****         }
1636:.\Generated_Source\PSoC4/CyLFClk.c **** 
1637:.\Generated_Source\PSoC4/CyLFClk.c ****         return(retCallback);
1638:.\Generated_Source\PSoC4/CyLFClk.c ****     }
1639:.\Generated_Source\PSoC4/CyLFClk.c **** 
1640:.\Generated_Source\PSoC4/CyLFClk.c **** 
1641:.\Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
1642:.\Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysWdtEnableCounterIsr
1643:.\Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
1644:.\Generated_Source\PSoC4/CyLFClk.c ****     * \brief
1645:.\Generated_Source\PSoC4/CyLFClk.c ****     * Enables the ISR callback servicing for the particular WDT counter
ARM GAS  C:\Users\g\AppData\Local\Temp\ccjVf3bh.s 			page 41


1646:.\Generated_Source\PSoC4/CyLFClk.c ****     *
1647:.\Generated_Source\PSoC4/CyLFClk.c ****     * \param counterNum Valid range [0-2]. The number of the WDT counter.
1648:.\Generated_Source\PSoC4/CyLFClk.c ****     *
1649:.\Generated_Source\PSoC4/CyLFClk.c ****     * Value corresponds to appropriate WDT counter. For example value 1 
1650:.\Generated_Source\PSoC4/CyLFClk.c ****     * corresponds to second WDT counter.
1651:.\Generated_Source\PSoC4/CyLFClk.c ****     *
1652:.\Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
1653:.\Generated_Source\PSoC4/CyLFClk.c ****     void CySysWdtEnableCounterIsr(uint32 counterNum)
1654:.\Generated_Source\PSoC4/CyLFClk.c ****     {
1655:.\Generated_Source\PSoC4/CyLFClk.c ****         if(counterNum <= CY_SYS_WDT_COUNTER2)
1656:.\Generated_Source\PSoC4/CyLFClk.c ****         {
1657:.\Generated_Source\PSoC4/CyLFClk.c ****             disableServicedIsr &= ~counterIntMaskTbl[counterNum];
1658:.\Generated_Source\PSoC4/CyLFClk.c ****             wdtIsrMask |= counterIntMaskTbl[counterNum];
1659:.\Generated_Source\PSoC4/CyLFClk.c ****         }
1660:.\Generated_Source\PSoC4/CyLFClk.c ****         else
1661:.\Generated_Source\PSoC4/CyLFClk.c ****         {
1662:.\Generated_Source\PSoC4/CyLFClk.c ****             CYASSERT(0u != 0u);
1663:.\Generated_Source\PSoC4/CyLFClk.c ****         }
1664:.\Generated_Source\PSoC4/CyLFClk.c ****     }
1665:.\Generated_Source\PSoC4/CyLFClk.c **** 
1666:.\Generated_Source\PSoC4/CyLFClk.c **** 
1667:.\Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
1668:.\Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysWdtDisableCounterIsr
1669:.\Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
1670:.\Generated_Source\PSoC4/CyLFClk.c ****     * \brief
1671:.\Generated_Source\PSoC4/CyLFClk.c ****     * Disables the ISR callback servicing for the particular WDT counter
1672:.\Generated_Source\PSoC4/CyLFClk.c ****     *
1673:.\Generated_Source\PSoC4/CyLFClk.c ****     * \param counterNum Valid range [0-2]. The number of the WDT counter.
1674:.\Generated_Source\PSoC4/CyLFClk.c ****     *
1675:.\Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
1676:.\Generated_Source\PSoC4/CyLFClk.c ****     void CySysWdtDisableCounterIsr(uint32 counterNum)
1677:.\Generated_Source\PSoC4/CyLFClk.c ****     {
1678:.\Generated_Source\PSoC4/CyLFClk.c ****         if(counterNum <= CY_SYS_WDT_COUNTER2)
1679:.\Generated_Source\PSoC4/CyLFClk.c ****         {
1680:.\Generated_Source\PSoC4/CyLFClk.c ****             wdtIsrMask &= ~counterIntMaskTbl[counterNum];
1681:.\Generated_Source\PSoC4/CyLFClk.c ****         }
1682:.\Generated_Source\PSoC4/CyLFClk.c ****         else
1683:.\Generated_Source\PSoC4/CyLFClk.c ****         {
1684:.\Generated_Source\PSoC4/CyLFClk.c ****             CYASSERT(0u != 0u);
1685:.\Generated_Source\PSoC4/CyLFClk.c ****         }
1686:.\Generated_Source\PSoC4/CyLFClk.c ****     }
1687:.\Generated_Source\PSoC4/CyLFClk.c **** 
1688:.\Generated_Source\PSoC4/CyLFClk.c **** 
1689:.\Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
1690:.\Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysWdtIsr
1691:.\Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
1692:.\Generated_Source\PSoC4/CyLFClk.c ****     * \brief
1693:.\Generated_Source\PSoC4/CyLFClk.c ****     * This is the handler of the WDT interrupt in CPU NVIC.
1694:.\Generated_Source\PSoC4/CyLFClk.c ****     *
1695:.\Generated_Source\PSoC4/CyLFClk.c ****     * The handler checks which WDT triggered in the interrupt and calls the 
1696:.\Generated_Source\PSoC4/CyLFClk.c ****     * respective callback functions configured by the user by using 
1697:.\Generated_Source\PSoC4/CyLFClk.c ****     * CySysWdtSetIsrCallback() API.
1698:.\Generated_Source\PSoC4/CyLFClk.c ****     *
1699:.\Generated_Source\PSoC4/CyLFClk.c ****     * The order of the callback execution is incremental. Callback-0 is
1700:.\Generated_Source\PSoC4/CyLFClk.c ****     * run as the first one and callback-2 is called as the last one.
1701:.\Generated_Source\PSoC4/CyLFClk.c ****     *
1702:.\Generated_Source\PSoC4/CyLFClk.c ****     * \details
ARM GAS  C:\Users\g\AppData\Local\Temp\ccjVf3bh.s 			page 42


1703:.\Generated_Source\PSoC4/CyLFClk.c ****     * This function clears the WDT interrupt every time when it is called.
1704:.\Generated_Source\PSoC4/CyLFClk.c ****     * Reset after the 3rd interrupt does not happen if this function is registered
1705:.\Generated_Source\PSoC4/CyLFClk.c ****     * as the interrupt handler even if the "Watchdog with Interrupt" mode is
1706:.\Generated_Source\PSoC4/CyLFClk.c ****     * selected on the "Low Frequency Clocks" tab.
1707:.\Generated_Source\PSoC4/CyLFClk.c ****     *
1708:.\Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
1709:.\Generated_Source\PSoC4/CyLFClk.c ****     void CySysWdtIsr(void)
1710:.\Generated_Source\PSoC4/CyLFClk.c ****     {
1711:.\Generated_Source\PSoC4/CyLFClk.c ****         if(0u != (CY_SYS_WDT_COUNTER0_INT & CY_SYS_WDT_CONTROL_REG))
1712:.\Generated_Source\PSoC4/CyLFClk.c ****         {
1713:.\Generated_Source\PSoC4/CyLFClk.c ****             if(0u != (CY_SYS_WDT_COUNTER0_INT & wdtIsrMask))
1714:.\Generated_Source\PSoC4/CyLFClk.c ****             {
1715:.\Generated_Source\PSoC4/CyLFClk.c ****                 wdtIsrMask &= ~(disableServicedIsr & CY_SYS_WDT_COUNTER0_INT);
1716:.\Generated_Source\PSoC4/CyLFClk.c ****                 disableServicedIsr  &= ~CY_SYS_WDT_COUNTER0_INT;
1717:.\Generated_Source\PSoC4/CyLFClk.c ****                 if(cySysWdtCallback[CY_SYS_WDT_COUNTER0] != (void *) 0)
1718:.\Generated_Source\PSoC4/CyLFClk.c ****                 {
1719:.\Generated_Source\PSoC4/CyLFClk.c ****                     (void)(cySysWdtCallback[CY_SYS_WDT_COUNTER0])();
1720:.\Generated_Source\PSoC4/CyLFClk.c ****                 }
1721:.\Generated_Source\PSoC4/CyLFClk.c ****             }
1722:.\Generated_Source\PSoC4/CyLFClk.c ****             CySysWdtClearInterrupt(CY_SYS_WDT_COUNTER0_INT);
1723:.\Generated_Source\PSoC4/CyLFClk.c ****         }
1724:.\Generated_Source\PSoC4/CyLFClk.c **** 
1725:.\Generated_Source\PSoC4/CyLFClk.c ****         if(0u != (CY_SYS_WDT_COUNTER1_INT & CY_SYS_WDT_CONTROL_REG))
1726:.\Generated_Source\PSoC4/CyLFClk.c ****         {
1727:.\Generated_Source\PSoC4/CyLFClk.c ****             if(0u != (CY_SYS_WDT_COUNTER1_INT & wdtIsrMask))
1728:.\Generated_Source\PSoC4/CyLFClk.c ****             {
1729:.\Generated_Source\PSoC4/CyLFClk.c ****                 wdtIsrMask &= ~(disableServicedIsr & CY_SYS_WDT_COUNTER1_INT);
1730:.\Generated_Source\PSoC4/CyLFClk.c ****                 disableServicedIsr  &= ~CY_SYS_WDT_COUNTER1_INT;
1731:.\Generated_Source\PSoC4/CyLFClk.c ****                 if(cySysWdtCallback[CY_SYS_WDT_COUNTER1] != (void *) 0)
1732:.\Generated_Source\PSoC4/CyLFClk.c ****                 {
1733:.\Generated_Source\PSoC4/CyLFClk.c ****                     (void)(cySysWdtCallback[CY_SYS_WDT_COUNTER1])();
1734:.\Generated_Source\PSoC4/CyLFClk.c ****                 }
1735:.\Generated_Source\PSoC4/CyLFClk.c ****             }
1736:.\Generated_Source\PSoC4/CyLFClk.c ****             CySysWdtClearInterrupt(CY_SYS_WDT_COUNTER1_INT);
1737:.\Generated_Source\PSoC4/CyLFClk.c ****         }
1738:.\Generated_Source\PSoC4/CyLFClk.c **** 
1739:.\Generated_Source\PSoC4/CyLFClk.c ****         if(0u != (CY_SYS_WDT_COUNTER2_INT & CY_SYS_WDT_CONTROL_REG))
1740:.\Generated_Source\PSoC4/CyLFClk.c ****         {
1741:.\Generated_Source\PSoC4/CyLFClk.c ****             if(0u != (CY_SYS_WDT_COUNTER2_INT & wdtIsrMask))
1742:.\Generated_Source\PSoC4/CyLFClk.c ****             {
1743:.\Generated_Source\PSoC4/CyLFClk.c ****                 if(cySysWdtCallback[CY_SYS_WDT_COUNTER2] != (void *) 0)
1744:.\Generated_Source\PSoC4/CyLFClk.c ****                 {
1745:.\Generated_Source\PSoC4/CyLFClk.c ****                     (void)(cySysWdtCallback[CY_SYS_WDT_COUNTER2])();
1746:.\Generated_Source\PSoC4/CyLFClk.c ****                 }
1747:.\Generated_Source\PSoC4/CyLFClk.c ****             }
1748:.\Generated_Source\PSoC4/CyLFClk.c ****             CySysWdtClearInterrupt(CY_SYS_WDT_COUNTER2_INT);
1749:.\Generated_Source\PSoC4/CyLFClk.c ****         }
1750:.\Generated_Source\PSoC4/CyLFClk.c ****     }
1751:.\Generated_Source\PSoC4/CyLFClk.c **** 
1752:.\Generated_Source\PSoC4/CyLFClk.c **** 
1753:.\Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
1754:.\Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysWatchdogFeed
1755:.\Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
1756:.\Generated_Source\PSoC4/CyLFClk.c ****     * \brief
1757:.\Generated_Source\PSoC4/CyLFClk.c ****     * Feeds the corresponded Watchdog Counter before it causes the device reset.
1758:.\Generated_Source\PSoC4/CyLFClk.c ****     *
1759:.\Generated_Source\PSoC4/CyLFClk.c ****     * Supported only for first WDT0 and second WDT1 counters in the "Watchdog" or 
ARM GAS  C:\Users\g\AppData\Local\Temp\ccjVf3bh.s 			page 43


1760:.\Generated_Source\PSoC4/CyLFClk.c ****     * "Watchdog w/ Interrupts" modes.
1761:.\Generated_Source\PSoC4/CyLFClk.c ****     *
1762:.\Generated_Source\PSoC4/CyLFClk.c ****     * \param counterNum
1763:.\Generated_Source\PSoC4/CyLFClk.c ****     * CY_SYS_WDT_COUNTER0 - Feeds the Counter 0 <br>
1764:.\Generated_Source\PSoC4/CyLFClk.c ****     * CY_SYS_WDT_COUNTER1 - Feeds the Counter 1
1765:.\Generated_Source\PSoC4/CyLFClk.c ****     *
1766:.\Generated_Source\PSoC4/CyLFClk.c ****     * Value of counterNum corresponds to appropriate counter. For example value 1 
1767:.\Generated_Source\PSoC4/CyLFClk.c ****     * corresponds to second WDT1 Counter.
1768:.\Generated_Source\PSoC4/CyLFClk.c ****     *
1769:.\Generated_Source\PSoC4/CyLFClk.c ****     * \details
1770:.\Generated_Source\PSoC4/CyLFClk.c ****     * Clears the WDT counter in the "Watchdog" mode or clears the WDT interrupt in
1771:.\Generated_Source\PSoC4/CyLFClk.c ****     * "Watchdog w/ Interrupts" mode. Does nothing in other modes.
1772:.\Generated_Source\PSoC4/CyLFClk.c ****     *
1773:.\Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
1774:.\Generated_Source\PSoC4/CyLFClk.c ****     void CySysWatchdogFeed(uint32 counterNum)
1775:.\Generated_Source\PSoC4/CyLFClk.c ****     {
1776:.\Generated_Source\PSoC4/CyLFClk.c ****         if(counterNum == CY_SYS_WDT_COUNTER0)
1777:.\Generated_Source\PSoC4/CyLFClk.c ****         {
1778:.\Generated_Source\PSoC4/CyLFClk.c ****             if(CY_SYS_WDT_MODE_INT_RESET == CySysWdtGetMode(counterNum))
1779:.\Generated_Source\PSoC4/CyLFClk.c ****             {
1780:.\Generated_Source\PSoC4/CyLFClk.c ****                 CySysWdtClearInterrupt(CY_SYS_WDT_COUNTER0_INT);
1781:.\Generated_Source\PSoC4/CyLFClk.c ****             }
1782:.\Generated_Source\PSoC4/CyLFClk.c ****             else if(CY_SYS_WDT_MODE_RESET == CySysWdtGetMode(counterNum))
1783:.\Generated_Source\PSoC4/CyLFClk.c ****             {
1784:.\Generated_Source\PSoC4/CyLFClk.c ****                 CySysWdtResetCounters(CY_SYS_WDT_COUNTER0_RESET);
1785:.\Generated_Source\PSoC4/CyLFClk.c ****                 CySysWdtClearInterrupt(CY_SYS_WDT_COUNTER0_INT);
1786:.\Generated_Source\PSoC4/CyLFClk.c ****             }
1787:.\Generated_Source\PSoC4/CyLFClk.c ****             else
1788:.\Generated_Source\PSoC4/CyLFClk.c ****             {
1789:.\Generated_Source\PSoC4/CyLFClk.c ****                 /* Do nothing. */
1790:.\Generated_Source\PSoC4/CyLFClk.c ****             }
1791:.\Generated_Source\PSoC4/CyLFClk.c ****         }
1792:.\Generated_Source\PSoC4/CyLFClk.c ****         else if(counterNum == CY_SYS_WDT_COUNTER1)
1793:.\Generated_Source\PSoC4/CyLFClk.c ****         {
1794:.\Generated_Source\PSoC4/CyLFClk.c ****             if(CY_SYS_WDT_MODE_INT_RESET == CySysWdtGetMode(counterNum))
1795:.\Generated_Source\PSoC4/CyLFClk.c ****             {
1796:.\Generated_Source\PSoC4/CyLFClk.c ****                 CySysWdtClearInterrupt(CY_SYS_WDT_COUNTER1_INT);
1797:.\Generated_Source\PSoC4/CyLFClk.c ****             }
1798:.\Generated_Source\PSoC4/CyLFClk.c ****             else if(CY_SYS_WDT_MODE_RESET == CySysWdtGetMode(counterNum))
1799:.\Generated_Source\PSoC4/CyLFClk.c ****             {
1800:.\Generated_Source\PSoC4/CyLFClk.c ****                 CySysWdtResetCounters(CY_SYS_WDT_COUNTER1_RESET);
1801:.\Generated_Source\PSoC4/CyLFClk.c ****                 CySysWdtClearInterrupt(CY_SYS_WDT_COUNTER1_INT);
1802:.\Generated_Source\PSoC4/CyLFClk.c ****             }
1803:.\Generated_Source\PSoC4/CyLFClk.c ****             else
1804:.\Generated_Source\PSoC4/CyLFClk.c ****             {
1805:.\Generated_Source\PSoC4/CyLFClk.c ****                 /* Do nothing. */
1806:.\Generated_Source\PSoC4/CyLFClk.c ****             }
1807:.\Generated_Source\PSoC4/CyLFClk.c ****         }
1808:.\Generated_Source\PSoC4/CyLFClk.c ****         else
1809:.\Generated_Source\PSoC4/CyLFClk.c ****         {
1810:.\Generated_Source\PSoC4/CyLFClk.c ****             /* Do nothing. */
1811:.\Generated_Source\PSoC4/CyLFClk.c ****         }
1812:.\Generated_Source\PSoC4/CyLFClk.c ****     }
1813:.\Generated_Source\PSoC4/CyLFClk.c **** 
1814:.\Generated_Source\PSoC4/CyLFClk.c **** 
1815:.\Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
1816:.\Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysClkLfclkPosedgeCatch
ARM GAS  C:\Users\g\AppData\Local\Temp\ccjVf3bh.s 			page 44


1817:.\Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
1818:.\Generated_Source\PSoC4/CyLFClk.c ****     * \internal
1819:.\Generated_Source\PSoC4/CyLFClk.c ****     * Returns once the LFCLK positive edge occurred.
1820:.\Generated_Source\PSoC4/CyLFClk.c ****     *
1821:.\Generated_Source\PSoC4/CyLFClk.c ****     * CySysClkLfclkPosedgeRestore() should be called after this function
1822:.\Generated_Source\PSoC4/CyLFClk.c ****     * to restore the WDT configuration.
1823:.\Generated_Source\PSoC4/CyLFClk.c ****     *
1824:.\Generated_Source\PSoC4/CyLFClk.c ****     * A pair of the CySysClkLfclkPosedgeCatch() and CySysClkLfclkPosedgeRestore()
1825:.\Generated_Source\PSoC4/CyLFClk.c ****     * functions is expected to be called inside a critical section.
1826:.\Generated_Source\PSoC4/CyLFClk.c ****     *
1827:.\Generated_Source\PSoC4/CyLFClk.c ****     * To ensure that the WDT counter value is read until it changes, the enabled
1828:.\Generated_Source\PSoC4/CyLFClk.c ****     * WDT counter is used. If no counter is enabled, counter 0 is enabled.
1829:.\Generated_Source\PSoC4/CyLFClk.c ****     * And after the LFCLK source is switched, the counter 0 configuration
1830:.\Generated_Source\PSoC4/CyLFClk.c ****     * is restored.
1831:.\Generated_Source\PSoC4/CyLFClk.c ****     *
1832:.\Generated_Source\PSoC4/CyLFClk.c ****     * Not applicable for the PSoC 4000 / PSoC 4000S / PSoC 4100S / PSoC Analog 
1833:.\Generated_Source\PSoC4/CyLFClk.c ****     * Coprocessor devices.
1834:.\Generated_Source\PSoC4/CyLFClk.c ****     *
1835:.\Generated_Source\PSoC4/CyLFClk.c ****     * \details
1836:.\Generated_Source\PSoC4/CyLFClk.c ****     * This function has no effect if WDT is locked (CySysWdtLock() is
1837:.\Generated_Source\PSoC4/CyLFClk.c ****     * called). Call CySysWdtUnlock() to unlock WDT.
1838:.\Generated_Source\PSoC4/CyLFClk.c ****     * \endinternal
1839:.\Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
1840:.\Generated_Source\PSoC4/CyLFClk.c ****     static void CySysClkLfclkPosedgeCatch(void)
1841:.\Generated_Source\PSoC4/CyLFClk.c ****     {
1842:.\Generated_Source\PSoC4/CyLFClk.c ****         uint32 firstCount;
1843:.\Generated_Source\PSoC4/CyLFClk.c ****         static uint32 lfclkPosedgeEnabledWdtCounter = 0u;
1844:.\Generated_Source\PSoC4/CyLFClk.c **** 
1845:.\Generated_Source\PSoC4/CyLFClk.c ****         if (0u != CySysWdtGetEnabledStatus(CY_SYS_WDT_COUNTER0))
1846:.\Generated_Source\PSoC4/CyLFClk.c ****         {
1847:.\Generated_Source\PSoC4/CyLFClk.c ****             lfclkPosedgeEnabledWdtCounter = CY_SYS_WDT_COUNTER0;
1848:.\Generated_Source\PSoC4/CyLFClk.c ****         }
1849:.\Generated_Source\PSoC4/CyLFClk.c ****         else if (0u != CySysWdtGetEnabledStatus(CY_SYS_WDT_COUNTER1))
1850:.\Generated_Source\PSoC4/CyLFClk.c ****         {
1851:.\Generated_Source\PSoC4/CyLFClk.c ****             lfclkPosedgeEnabledWdtCounter = CY_SYS_WDT_COUNTER1;
1852:.\Generated_Source\PSoC4/CyLFClk.c ****         }
1853:.\Generated_Source\PSoC4/CyLFClk.c ****         else if (0u != CySysWdtGetEnabledStatus(CY_SYS_WDT_COUNTER2))
1854:.\Generated_Source\PSoC4/CyLFClk.c ****         {
1855:.\Generated_Source\PSoC4/CyLFClk.c ****             lfclkPosedgeEnabledWdtCounter = CY_SYS_WDT_COUNTER2;
1856:.\Generated_Source\PSoC4/CyLFClk.c ****         }
1857:.\Generated_Source\PSoC4/CyLFClk.c ****         else /* All WDT counters are disabled */
1858:.\Generated_Source\PSoC4/CyLFClk.c ****         {
1859:.\Generated_Source\PSoC4/CyLFClk.c ****             /* Configure WDT counter # 0 */
1860:.\Generated_Source\PSoC4/CyLFClk.c ****             lfclkPosedgeWdtCounter0Enabled = 1u;
1861:.\Generated_Source\PSoC4/CyLFClk.c ****             lfclkPosedgeEnabledWdtCounter = CY_SYS_WDT_COUNTER0;
1862:.\Generated_Source\PSoC4/CyLFClk.c **** 
1863:.\Generated_Source\PSoC4/CyLFClk.c ****             lfclkPosedgeWdtCounter0Mode = CySysWdtGetMode(CY_SYS_WDT_COUNTER0);
1864:.\Generated_Source\PSoC4/CyLFClk.c ****             CySysWdtSetMode(CY_SYS_WDT_COUNTER0, CY_SYS_WDT_MODE_NONE);
1865:.\Generated_Source\PSoC4/CyLFClk.c ****             CySysWdtEnable(CY_SYS_WDT_COUNTER0_MASK);
1866:.\Generated_Source\PSoC4/CyLFClk.c ****         }
1867:.\Generated_Source\PSoC4/CyLFClk.c **** 
1868:.\Generated_Source\PSoC4/CyLFClk.c ****         firstCount = CySysWdtGetCount(lfclkPosedgeEnabledWdtCounter);
1869:.\Generated_Source\PSoC4/CyLFClk.c ****         while (CySysWdtGetCount(lfclkPosedgeEnabledWdtCounter) == firstCount)
1870:.\Generated_Source\PSoC4/CyLFClk.c ****         {
1871:.\Generated_Source\PSoC4/CyLFClk.c ****             /* Wait for counter to increment */
1872:.\Generated_Source\PSoC4/CyLFClk.c ****         }
1873:.\Generated_Source\PSoC4/CyLFClk.c ****     }
ARM GAS  C:\Users\g\AppData\Local\Temp\ccjVf3bh.s 			page 45


1874:.\Generated_Source\PSoC4/CyLFClk.c **** 
1875:.\Generated_Source\PSoC4/CyLFClk.c **** 
1876:.\Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
1877:.\Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysClkLfclkPosedgeRestore
1878:.\Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
1879:.\Generated_Source\PSoC4/CyLFClk.c ****     * \internal
1880:.\Generated_Source\PSoC4/CyLFClk.c ****     *  Restores the WDT configuration after a CySysClkLfclkPosedgeCatch() call.
1881:.\Generated_Source\PSoC4/CyLFClk.c ****     *
1882:.\Generated_Source\PSoC4/CyLFClk.c ****     *  A pair of the CySysClkLfclkPosedgeCatch() and CySysClkLfclkPosedgeRestore()
1883:.\Generated_Source\PSoC4/CyLFClk.c ****     *  functions is expected to be called inside a critical section.
1884:.\Generated_Source\PSoC4/CyLFClk.c ****     *
1885:.\Generated_Source\PSoC4/CyLFClk.c ****     * Not applicable for the PSoC 4000/PSoC 4000S / PSoC 4100S / PSoC Analog 
1886:.\Generated_Source\PSoC4/CyLFClk.c ****     * Coprocessor devices.
1887:.\Generated_Source\PSoC4/CyLFClk.c ****     *
1888:.\Generated_Source\PSoC4/CyLFClk.c ****     * \details
1889:.\Generated_Source\PSoC4/CyLFClk.c ****     *  This function has no effect if WDT is locked (CySysWdtLock() is
1890:.\Generated_Source\PSoC4/CyLFClk.c ****     *  called). Call CySysWdtUnlock() to unlock WDT.
1891:.\Generated_Source\PSoC4/CyLFClk.c ****     *
1892:.\Generated_Source\PSoC4/CyLFClk.c ****     * \endinternal
1893:.\Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
1894:.\Generated_Source\PSoC4/CyLFClk.c ****     static void CySysClkLfclkPosedgeRestore(void)
1895:.\Generated_Source\PSoC4/CyLFClk.c ****     {
 589              		.loc 1 1895 0
 590              		.cfi_startproc
 591 0000 10B5     		push	{r4, lr}
 592              		.cfi_def_cfa_offset 8
 593              		.cfi_offset 4, -8
 594              		.cfi_offset 14, -4
1896:.\Generated_Source\PSoC4/CyLFClk.c ****         if (lfclkPosedgeWdtCounter0Enabled != 0u)
 595              		.loc 1 1896 0
 596 0002 084B     		ldr	r3, .L50
 597 0004 5B68     		ldr	r3, [r3, #4]
 598 0006 002B     		cmp	r3, #0
 599 0008 0BD0     		beq	.L48
1897:.\Generated_Source\PSoC4/CyLFClk.c ****         {
1898:.\Generated_Source\PSoC4/CyLFClk.c ****             /* Restore counter # 0 configuration and force its shutdown */
1899:.\Generated_Source\PSoC4/CyLFClk.c ****             CY_SYS_WDT_CONTROL_REG &= (uint32)(~CY_SYS_WDT_COUNTER0_MASK);
 600              		.loc 1 1899 0
 601 000a 074A     		ldr	r2, .L50+4
 602 000c 1368     		ldr	r3, [r2]
 603 000e 0121     		mov	r1, #1
 604 0010 8B43     		bic	r3, r1
 605 0012 1360     		str	r3, [r2]
1900:.\Generated_Source\PSoC4/CyLFClk.c ****             CySysWdtSetMode(CY_SYS_WDT_COUNTER0, lfclkPosedgeWdtCounter0Mode);
 606              		.loc 1 1900 0
 607 0014 034C     		ldr	r4, .L50
 608 0016 0020     		mov	r0, #0
 609 0018 A168     		ldr	r1, [r4, #8]
 610 001a FFF7FEFF 		bl	CySysWdtSetMode
 611              	.LVL54:
1901:.\Generated_Source\PSoC4/CyLFClk.c ****             lfclkPosedgeWdtCounter0Enabled = 0u;
 612              		.loc 1 1901 0
 613 001e 0023     		mov	r3, #0
 614 0020 6360     		str	r3, [r4, #4]
 615              	.L48:
1902:.\Generated_Source\PSoC4/CyLFClk.c ****         }
1903:.\Generated_Source\PSoC4/CyLFClk.c ****     }
ARM GAS  C:\Users\g\AppData\Local\Temp\ccjVf3bh.s 			page 46


 616              		.loc 1 1903 0
 617              		@ sp needed
 618 0022 10BD     		pop	{r4, pc}
 619              	.L51:
 620              		.align	2
 621              	.L50:
 622 0024 00000000 		.word	.LANCHOR0
 623 0028 10020B40 		.word	1074463248
 624              		.cfi_endproc
 625              	.LFE33:
 626              		.size	CySysClkLfclkPosedgeRestore, .-CySysClkLfclkPosedgeRestore
 627              		.section	.text.CySysWdtGetMode,"ax",%progbits
 628              		.align	2
 629              		.global	CySysWdtGetMode
 630              		.code	16
 631              		.thumb_func
 632              		.type	CySysWdtGetMode, %function
 633              	CySysWdtGetMode:
 634              	.LFB11:
1076:.\Generated_Source\PSoC4/CyLFClk.c ****         return ((CY_SYS_WDT_CONFIG_REG >> (counterNum * CY_SYS_WDT_CNT_SHIFT)) & CY_SYS_WDT_MODE_MA
 635              		.loc 1 1076 0
 636              		.cfi_startproc
 637              	.LVL55:
1077:.\Generated_Source\PSoC4/CyLFClk.c ****     }
 638              		.loc 1 1077 0
 639 0000 034B     		ldr	r3, .L53
 640 0002 1B68     		ldr	r3, [r3]
 641 0004 C000     		lsl	r0, r0, #3
 642              	.LVL56:
 643 0006 C340     		lsr	r3, r3, r0
 644 0008 181C     		mov	r0, r3
 645 000a 0323     		mov	r3, #3
 646 000c 1840     		and	r0, r3
1078:.\Generated_Source\PSoC4/CyLFClk.c **** 
 647              		.loc 1 1078 0
 648              		@ sp needed
 649 000e 7047     		bx	lr
 650              	.L54:
 651              		.align	2
 652              	.L53:
 653 0010 0C020B40 		.word	1074463244
 654              		.cfi_endproc
 655              	.LFE11:
 656              		.size	CySysWdtGetMode, .-CySysWdtGetMode
 657              		.section	.text.CySysWdtSetClearOnMatch,"ax",%progbits
 658              		.align	2
 659              		.global	CySysWdtSetClearOnMatch
 660              		.code	16
 661              		.thumb_func
 662              		.type	CySysWdtSetClearOnMatch, %function
 663              	CySysWdtSetClearOnMatch:
 664              	.LFB12:
1105:.\Generated_Source\PSoC4/CyLFClk.c ****         uint32 configRegValue;
 665              		.loc 1 1105 0
 666              		.cfi_startproc
 667              	.LVL57:
 668 0000 38B5     		push	{r3, r4, r5, lr}
ARM GAS  C:\Users\g\AppData\Local\Temp\ccjVf3bh.s 			page 47


 669              		.cfi_def_cfa_offset 16
 670              		.cfi_offset 3, -16
 671              		.cfi_offset 4, -12
 672              		.cfi_offset 5, -8
 673              		.cfi_offset 14, -4
 674 0002 041C     		mov	r4, r0
 675 0004 0D1C     		mov	r5, r1
1108:.\Generated_Source\PSoC4/CyLFClk.c ****                  (counterNum == CY_SYS_WDT_COUNTER1));
 676              		.loc 1 1108 0
 677 0006 0128     		cmp	r0, #1
 678 0008 02D9     		bls	.L56
1108:.\Generated_Source\PSoC4/CyLFClk.c ****                  (counterNum == CY_SYS_WDT_COUNTER1));
 679              		.loc 1 1108 0 is_stmt 0 discriminator 1
 680 000a 0020     		mov	r0, #0
 681              	.LVL58:
 682 000c FFF7FEFF 		bl	CyHalt
 683              	.LVL59:
 684              	.L56:
1111:.\Generated_Source\PSoC4/CyLFClk.c ****         {
 685              		.loc 1 1111 0 is_stmt 1
 686 0010 201C     		mov	r0, r4
 687 0012 FFF7FEFF 		bl	CySysWdtGetEnabledStatus
 688              	.LVL60:
 689 0016 0028     		cmp	r0, #0
 690 0018 0AD1     		bne	.L55
1113:.\Generated_Source\PSoC4/CyLFClk.c ****                                      ((counterNum * CY_SYS_WDT_CNT_SHIFT) + CY_SYS_WDT_CNT_MATCH_CL
 691              		.loc 1 1113 0
 692 001a 0649     		ldr	r1, .L58
 693 001c 0B68     		ldr	r3, [r1]
1114:.\Generated_Source\PSoC4/CyLFClk.c **** 
 694              		.loc 1 1114 0
 695 001e E400     		lsl	r4, r4, #3
 696              	.LVL61:
 697 0020 0234     		add	r4, r4, #2
1113:.\Generated_Source\PSoC4/CyLFClk.c ****                                      ((counterNum * CY_SYS_WDT_CNT_SHIFT) + CY_SYS_WDT_CNT_MATCH_CL
 698              		.loc 1 1113 0
 699 0022 0122     		mov	r2, #1
 700 0024 A240     		lsl	r2, r2, r4
 701 0026 9343     		bic	r3, r2
 702              	.LVL62:
1117:.\Generated_Source\PSoC4/CyLFClk.c **** 
 703              		.loc 1 1117 0
 704 0028 A540     		lsl	r5, r5, r4
 705              	.LVL63:
 706 002a 2C1C     		mov	r4, r5
 707 002c 1C43     		orr	r4, r3
 708              	.LVL64:
1119:.\Generated_Source\PSoC4/CyLFClk.c ****         }
 709              		.loc 1 1119 0
 710 002e 0C60     		str	r4, [r1]
 711              	.LVL65:
 712              	.L55:
1121:.\Generated_Source\PSoC4/CyLFClk.c **** 
 713              		.loc 1 1121 0
 714              		@ sp needed
 715 0030 38BD     		pop	{r3, r4, r5, pc}
 716              	.L59:
ARM GAS  C:\Users\g\AppData\Local\Temp\ccjVf3bh.s 			page 48


 717 0032 C046     		.align	2
 718              	.L58:
 719 0034 0C020B40 		.word	1074463244
 720              		.cfi_endproc
 721              	.LFE12:
 722              		.size	CySysWdtSetClearOnMatch, .-CySysWdtSetClearOnMatch
 723              		.section	.text.CySysWdtGetClearOnMatch,"ax",%progbits
 724              		.align	2
 725              		.global	CySysWdtGetClearOnMatch
 726              		.code	16
 727              		.thumb_func
 728              		.type	CySysWdtGetClearOnMatch, %function
 729              	CySysWdtGetClearOnMatch:
 730              	.LFB13:
1138:.\Generated_Source\PSoC4/CyLFClk.c ****         CYASSERT((counterNum == CY_SYS_WDT_COUNTER0) ||
 731              		.loc 1 1138 0
 732              		.cfi_startproc
 733              	.LVL66:
 734 0000 10B5     		push	{r4, lr}
 735              		.cfi_def_cfa_offset 8
 736              		.cfi_offset 4, -8
 737              		.cfi_offset 14, -4
 738 0002 041E     		sub	r4, r0, #0
1139:.\Generated_Source\PSoC4/CyLFClk.c ****                  (counterNum == CY_SYS_WDT_COUNTER1));
 739              		.loc 1 1139 0
 740 0004 012C     		cmp	r4, #1
 741 0006 02D9     		bls	.L61
1139:.\Generated_Source\PSoC4/CyLFClk.c ****                  (counterNum == CY_SYS_WDT_COUNTER1));
 742              		.loc 1 1139 0 is_stmt 0 discriminator 1
 743 0008 0020     		mov	r0, #0
 744              	.LVL67:
 745 000a FFF7FEFF 		bl	CyHalt
 746              	.LVL68:
 747              	.L61:
1142:.\Generated_Source\PSoC4/CyLFClk.c ****                         ((counterNum * CY_SYS_WDT_CNT_SHIFT) + CY_SYS_WDT_CNT_MATCH_CLR_SHIFT)) & 0
 748              		.loc 1 1142 0 is_stmt 1
 749 000e 044B     		ldr	r3, .L62
 750 0010 1868     		ldr	r0, [r3]
1143:.\Generated_Source\PSoC4/CyLFClk.c ****     }
 751              		.loc 1 1143 0
 752 0012 E400     		lsl	r4, r4, #3
 753              	.LVL69:
 754 0014 0234     		add	r4, r4, #2
1142:.\Generated_Source\PSoC4/CyLFClk.c ****                         ((counterNum * CY_SYS_WDT_CNT_SHIFT) + CY_SYS_WDT_CNT_MATCH_CLR_SHIFT)) & 0
 755              		.loc 1 1142 0
 756 0016 E040     		lsr	r0, r0, r4
 757 0018 041C     		mov	r4, r0
 758 001a 0120     		mov	r0, #1
 759 001c 2040     		and	r0, r4
1144:.\Generated_Source\PSoC4/CyLFClk.c **** 
 760              		.loc 1 1144 0
 761              		@ sp needed
 762 001e 10BD     		pop	{r4, pc}
 763              	.L63:
 764              		.align	2
 765              	.L62:
 766 0020 0C020B40 		.word	1074463244
ARM GAS  C:\Users\g\AppData\Local\Temp\ccjVf3bh.s 			page 49


 767              		.cfi_endproc
 768              	.LFE13:
 769              		.size	CySysWdtGetClearOnMatch, .-CySysWdtGetClearOnMatch
 770              		.section	.text.CySysWdtEnable,"ax",%progbits
 771              		.align	2
 772              		.global	CySysWdtEnable
 773              		.code	16
 774              		.thumb_func
 775              		.type	CySysWdtEnable, %function
 776              	CySysWdtEnable:
 777              	.LFB14:
1179:.\Generated_Source\PSoC4/CyLFClk.c ****         #if (!CY_IP_WCO)
 778              		.loc 1 1179 0
 779              		.cfi_startproc
 780              	.LVL70:
 781 0000 10B5     		push	{r4, lr}
 782              		.cfi_def_cfa_offset 8
 783              		.cfi_offset 4, -8
 784              		.cfi_offset 14, -4
 785 0002 041C     		mov	r4, r0
1181:.\Generated_Source\PSoC4/CyLFClk.c ****         #endif /* (!CY_IP_WCO) */
 786              		.loc 1 1181 0
 787 0004 FFF7FEFF 		bl	CySysClkIloStart
 788              	.LVL71:
1184:.\Generated_Source\PSoC4/CyLFClk.c **** 
 789              		.loc 1 1184 0
 790 0008 0C4A     		ldr	r2, .L71
 791 000a 1368     		ldr	r3, [r2]
 792 000c 2343     		orr	r3, r4
 793 000e 1360     		str	r3, [r2]
1186:.\Generated_Source\PSoC4/CyLFClk.c ****         {
 794              		.loc 1 1186 0
 795 0010 E307     		lsl	r3, r4, #31
 796 0012 04D5     		bpl	.L65
 797              	.L66:
1188:.\Generated_Source\PSoC4/CyLFClk.c ****             {
 798              		.loc 1 1188 0 discriminator 1
 799 0014 0020     		mov	r0, #0
 800 0016 FFF7FEFF 		bl	CySysWdtGetEnabledStatus
 801              	.LVL72:
 802 001a 0028     		cmp	r0, #0
 803 001c FAD0     		beq	.L66
 804              	.L65:
1194:.\Generated_Source\PSoC4/CyLFClk.c ****         {
 805              		.loc 1 1194 0
 806 001e E305     		lsl	r3, r4, #23
 807 0020 04D5     		bpl	.L67
 808              	.L68:
1196:.\Generated_Source\PSoC4/CyLFClk.c ****             {
 809              		.loc 1 1196 0 discriminator 1
 810 0022 0120     		mov	r0, #1
 811 0024 FFF7FEFF 		bl	CySysWdtGetEnabledStatus
 812              	.LVL73:
 813 0028 0028     		cmp	r0, #0
 814 002a FAD0     		beq	.L68
 815              	.L67:
1202:.\Generated_Source\PSoC4/CyLFClk.c ****         {
ARM GAS  C:\Users\g\AppData\Local\Temp\ccjVf3bh.s 			page 50


 816              		.loc 1 1202 0
 817 002c E303     		lsl	r3, r4, #15
 818 002e 04D5     		bpl	.L64
 819              	.L70:
1204:.\Generated_Source\PSoC4/CyLFClk.c ****             {
 820              		.loc 1 1204 0 discriminator 1
 821 0030 0220     		mov	r0, #2
 822 0032 FFF7FEFF 		bl	CySysWdtGetEnabledStatus
 823              	.LVL74:
 824 0036 0028     		cmp	r0, #0
 825 0038 FAD0     		beq	.L70
 826              	.L64:
1209:.\Generated_Source\PSoC4/CyLFClk.c **** 
 827              		.loc 1 1209 0
 828              		@ sp needed
 829              	.LVL75:
 830 003a 10BD     		pop	{r4, pc}
 831              	.L72:
 832              		.align	2
 833              	.L71:
 834 003c 10020B40 		.word	1074463248
 835              		.cfi_endproc
 836              	.LFE14:
 837              		.size	CySysWdtEnable, .-CySysWdtEnable
 838              		.section	.text.CySysWdtDisable,"ax",%progbits
 839              		.align	2
 840              		.global	CySysWdtDisable
 841              		.code	16
 842              		.thumb_func
 843              		.type	CySysWdtDisable, %function
 844              	CySysWdtDisable:
 845              	.LFB15:
1227:.\Generated_Source\PSoC4/CyLFClk.c ****         if (0uL == CySysWdtLocked())
 846              		.loc 1 1227 0
 847              		.cfi_startproc
 848              	.LVL76:
 849 0000 10B5     		push	{r4, lr}
 850              		.cfi_def_cfa_offset 8
 851              		.cfi_offset 4, -8
 852              		.cfi_offset 14, -4
 853 0002 041C     		mov	r4, r0
1228:.\Generated_Source\PSoC4/CyLFClk.c ****         {
 854              		.loc 1 1228 0
 855 0004 FFF7FEFF 		bl	CySysWdtLocked
 856              	.LVL77:
 857 0008 0028     		cmp	r0, #0
 858 000a 18D1     		bne	.L73
1230:.\Generated_Source\PSoC4/CyLFClk.c **** 
 859              		.loc 1 1230 0
 860 000c 0C4A     		ldr	r2, .L80
 861 000e 1368     		ldr	r3, [r2]
 862 0010 A343     		bic	r3, r4
 863 0012 1360     		str	r3, [r2]
1232:.\Generated_Source\PSoC4/CyLFClk.c ****             {
 864              		.loc 1 1232 0
 865 0014 E307     		lsl	r3, r4, #31
 866 0016 04D5     		bpl	.L75
ARM GAS  C:\Users\g\AppData\Local\Temp\ccjVf3bh.s 			page 51


 867              	.L76:
1234:.\Generated_Source\PSoC4/CyLFClk.c ****                 {
 868              		.loc 1 1234 0 discriminator 1
 869 0018 0020     		mov	r0, #0
 870 001a FFF7FEFF 		bl	CySysWdtGetEnabledStatus
 871              	.LVL78:
 872 001e 0028     		cmp	r0, #0
 873 0020 FAD1     		bne	.L76
 874              	.L75:
1240:.\Generated_Source\PSoC4/CyLFClk.c ****             {
 875              		.loc 1 1240 0
 876 0022 E305     		lsl	r3, r4, #23
 877 0024 04D5     		bpl	.L77
 878              	.L78:
1242:.\Generated_Source\PSoC4/CyLFClk.c ****                 {
 879              		.loc 1 1242 0 discriminator 1
 880 0026 0120     		mov	r0, #1
 881 0028 FFF7FEFF 		bl	CySysWdtGetEnabledStatus
 882              	.LVL79:
 883 002c 0028     		cmp	r0, #0
 884 002e FAD1     		bne	.L78
 885              	.L77:
1248:.\Generated_Source\PSoC4/CyLFClk.c ****             {
 886              		.loc 1 1248 0
 887 0030 E303     		lsl	r3, r4, #15
 888 0032 04D5     		bpl	.L73
 889              	.L79:
1250:.\Generated_Source\PSoC4/CyLFClk.c ****                 {
 890              		.loc 1 1250 0 discriminator 1
 891 0034 0220     		mov	r0, #2
 892 0036 FFF7FEFF 		bl	CySysWdtGetEnabledStatus
 893              	.LVL80:
 894 003a 0028     		cmp	r0, #0
 895 003c FAD1     		bne	.L79
 896              	.L73:
1256:.\Generated_Source\PSoC4/CyLFClk.c **** 
 897              		.loc 1 1256 0
 898              		@ sp needed
 899              	.LVL81:
 900 003e 10BD     		pop	{r4, pc}
 901              	.L81:
 902              		.align	2
 903              	.L80:
 904 0040 10020B40 		.word	1074463248
 905              		.cfi_endproc
 906              	.LFE15:
 907              		.size	CySysWdtDisable, .-CySysWdtDisable
 908              		.section	.text.CySysWdtSetCascade,"ax",%progbits
 909              		.align	2
 910              		.global	CySysWdtSetCascade
 911              		.code	16
 912              		.thumb_func
 913              		.type	CySysWdtSetCascade, %function
 914              	CySysWdtSetCascade:
 915              	.LFB16:
1286:.\Generated_Source\PSoC4/CyLFClk.c ****         uint32 configRegValue;
 916              		.loc 1 1286 0
ARM GAS  C:\Users\g\AppData\Local\Temp\ccjVf3bh.s 			page 52


 917              		.cfi_startproc
 918              	.LVL82:
 919 0000 38B5     		push	{r3, r4, r5, lr}
 920              		.cfi_def_cfa_offset 16
 921              		.cfi_offset 3, -16
 922              		.cfi_offset 4, -12
 923              		.cfi_offset 5, -8
 924              		.cfi_offset 14, -4
 925 0002 051C     		mov	r5, r0
1290:.\Generated_Source\PSoC4/CyLFClk.c ****                             CySysWdtGetEnabledStatus(CY_SYS_WDT_COUNTER1) |
 926              		.loc 1 1290 0
 927 0004 0020     		mov	r0, #0
 928              	.LVL83:
 929 0006 FFF7FEFF 		bl	CySysWdtGetEnabledStatus
 930              	.LVL84:
 931 000a 041C     		mov	r4, r0
1291:.\Generated_Source\PSoC4/CyLFClk.c ****                             CySysWdtGetEnabledStatus(CY_SYS_WDT_COUNTER2);
 932              		.loc 1 1291 0
 933 000c 0120     		mov	r0, #1
 934 000e FFF7FEFF 		bl	CySysWdtGetEnabledStatus
 935              	.LVL85:
1290:.\Generated_Source\PSoC4/CyLFClk.c ****                             CySysWdtGetEnabledStatus(CY_SYS_WDT_COUNTER1) |
 936              		.loc 1 1290 0
 937 0012 0443     		orr	r4, r0
1292:.\Generated_Source\PSoC4/CyLFClk.c **** 
 938              		.loc 1 1292 0
 939 0014 0220     		mov	r0, #2
 940 0016 FFF7FEFF 		bl	CySysWdtGetEnabledStatus
 941              	.LVL86:
1290:.\Generated_Source\PSoC4/CyLFClk.c ****                             CySysWdtGetEnabledStatus(CY_SYS_WDT_COUNTER1) |
 942              		.loc 1 1290 0
 943 001a 2043     		orr	r0, r4
 944              	.LVL87:
1294:.\Generated_Source\PSoC4/CyLFClk.c ****         {
 945              		.loc 1 1294 0
 946 001c 05D1     		bne	.L82
1296:.\Generated_Source\PSoC4/CyLFClk.c ****             configRegValue &= ((uint32)(~(CY_SYS_WDT_CASCADE_01|CY_SYS_WDT_CASCADE_12)));
 947              		.loc 1 1296 0
 948 001e 034A     		ldr	r2, .L84
 949 0020 1168     		ldr	r1, [r2]
 950              	.LVL88:
1297:.\Generated_Source\PSoC4/CyLFClk.c ****             configRegValue |= cascadeMask;
 951              		.loc 1 1297 0
 952 0022 034B     		ldr	r3, .L84+4
 953 0024 0B40     		and	r3, r1
 954              	.LVL89:
1298:.\Generated_Source\PSoC4/CyLFClk.c ****             CY_SYS_WDT_CONFIG_REG = configRegValue;
 955              		.loc 1 1298 0
 956 0026 1D43     		orr	r5, r3
 957              	.LVL90:
1299:.\Generated_Source\PSoC4/CyLFClk.c ****         }
 958              		.loc 1 1299 0
 959 0028 1560     		str	r5, [r2]
 960              	.LVL91:
 961              	.L82:
1301:.\Generated_Source\PSoC4/CyLFClk.c **** 
 962              		.loc 1 1301 0
ARM GAS  C:\Users\g\AppData\Local\Temp\ccjVf3bh.s 			page 53


 963              		@ sp needed
 964 002a 38BD     		pop	{r3, r4, r5, pc}
 965              	.L85:
 966              		.align	2
 967              	.L84:
 968 002c 0C020B40 		.word	1074463244
 969 0030 F7F7FFFF 		.word	-2057
 970              		.cfi_endproc
 971              	.LFE16:
 972              		.size	CySysWdtSetCascade, .-CySysWdtSetCascade
 973              		.section	.text.CySysWdtGetCascade,"ax",%progbits
 974              		.align	2
 975              		.global	CySysWdtGetCascade
 976              		.code	16
 977              		.thumb_func
 978              		.type	CySysWdtGetCascade, %function
 979              	CySysWdtGetCascade:
 980              	.LFB17:
1317:.\Generated_Source\PSoC4/CyLFClk.c ****         return (CY_SYS_WDT_CONFIG_REG & (CY_SYS_WDT_CASCADE_01 | CY_SYS_WDT_CASCADE_12));
 981              		.loc 1 1317 0
 982              		.cfi_startproc
1318:.\Generated_Source\PSoC4/CyLFClk.c ****     }
 983              		.loc 1 1318 0
 984 0000 024B     		ldr	r3, .L87
 985 0002 1868     		ldr	r0, [r3]
 986 0004 024B     		ldr	r3, .L87+4
 987 0006 1840     		and	r0, r3
1319:.\Generated_Source\PSoC4/CyLFClk.c **** 
 988              		.loc 1 1319 0
 989              		@ sp needed
 990 0008 7047     		bx	lr
 991              	.L88:
 992 000a C046     		.align	2
 993              	.L87:
 994 000c 0C020B40 		.word	1074463244
 995 0010 08080000 		.word	2056
 996              		.cfi_endproc
 997              	.LFE17:
 998              		.size	CySysWdtGetCascade, .-CySysWdtGetCascade
 999              		.section	.text.CySysWdtSetMatch,"ax",%progbits
 1000              		.align	2
 1001              		.global	CySysWdtSetMatch
 1002              		.code	16
 1003              		.thumb_func
 1004              		.type	CySysWdtSetMatch, %function
 1005              	CySysWdtSetMatch:
 1006              	.LFB18:
1337:.\Generated_Source\PSoC4/CyLFClk.c ****         uint32 regValue;
 1007              		.loc 1 1337 0
 1008              		.cfi_startproc
 1009              	.LVL92:
 1010 0000 38B5     		push	{r3, r4, r5, lr}
 1011              		.cfi_def_cfa_offset 16
 1012              		.cfi_offset 3, -16
 1013              		.cfi_offset 4, -12
 1014              		.cfi_offset 5, -8
 1015              		.cfi_offset 14, -4
ARM GAS  C:\Users\g\AppData\Local\Temp\ccjVf3bh.s 			page 54


 1016 0002 041C     		mov	r4, r0
 1017 0004 0D1C     		mov	r5, r1
1340:.\Generated_Source\PSoC4/CyLFClk.c ****                  (counterNum == CY_SYS_WDT_COUNTER1));
 1018              		.loc 1 1340 0
 1019 0006 0128     		cmp	r0, #1
 1020 0008 02D9     		bls	.L90
1340:.\Generated_Source\PSoC4/CyLFClk.c ****                  (counterNum == CY_SYS_WDT_COUNTER1));
 1021              		.loc 1 1340 0 is_stmt 0 discriminator 1
 1022 000a 0020     		mov	r0, #0
 1023              	.LVL93:
 1024 000c FFF7FEFF 		bl	CyHalt
 1025              	.LVL94:
 1026              	.L90:
1344:.\Generated_Source\PSoC4/CyLFClk.c **** 
 1027              		.loc 1 1344 0 is_stmt 1
 1028 0010 C920     		mov	r0, #201
 1029 0012 FFF7FEFF 		bl	CyDelayUs
 1030              	.LVL95:
1346:.\Generated_Source\PSoC4/CyLFClk.c ****         regValue &= (uint32)~((uint32)(CY_SYS_WDT_LOWER_16BITS_MASK << (counterNum * CY_SYS_WDT_CNT
 1031              		.loc 1 1346 0
 1032 0016 074A     		ldr	r2, .L91
 1033 0018 1068     		ldr	r0, [r2]
 1034              	.LVL96:
1347:.\Generated_Source\PSoC4/CyLFClk.c ****         CY_SYS_WDT_MATCH_REG = (regValue | (match << (counterNum * CY_SYS_WDT_CNT_MATCH_SHIFT)));
 1035              		.loc 1 1347 0
 1036 001a 2401     		lsl	r4, r4, #4
 1037              	.LVL97:
 1038 001c 064B     		ldr	r3, .L91+4
 1039 001e A340     		lsl	r3, r3, r4
 1040 0020 9843     		bic	r0, r3
 1041              	.LVL98:
 1042 0022 031C     		mov	r3, r0
 1043              	.LVL99:
1348:.\Generated_Source\PSoC4/CyLFClk.c **** 
 1044              		.loc 1 1348 0
 1045 0024 281C     		mov	r0, r5
 1046              	.LVL100:
 1047 0026 A040     		lsl	r0, r0, r4
 1048 0028 1843     		orr	r0, r3
 1049 002a 1060     		str	r0, [r2]
1351:.\Generated_Source\PSoC4/CyLFClk.c ****     }
 1050              		.loc 1 1351 0
 1051 002c 4320     		mov	r0, #67
 1052 002e FFF7FEFF 		bl	CyDelayUs
 1053              	.LVL101:
1352:.\Generated_Source\PSoC4/CyLFClk.c **** 
 1054              		.loc 1 1352 0
 1055              		@ sp needed
 1056              	.LVL102:
 1057 0032 38BD     		pop	{r3, r4, r5, pc}
 1058              	.L92:
 1059              		.align	2
 1060              	.L91:
 1061 0034 08020B40 		.word	1074463240
 1062 0038 FFFF0000 		.word	65535
 1063              		.cfi_endproc
 1064              	.LFE18:
ARM GAS  C:\Users\g\AppData\Local\Temp\ccjVf3bh.s 			page 55


 1065              		.size	CySysWdtSetMatch, .-CySysWdtSetMatch
 1066              		.section	.text.CySysWdtSetToggleBit,"ax",%progbits
 1067              		.align	2
 1068              		.global	CySysWdtSetToggleBit
 1069              		.code	16
 1070              		.thumb_func
 1071              		.type	CySysWdtSetToggleBit, %function
 1072              	CySysWdtSetToggleBit:
 1073              	.LFB19:
1376:.\Generated_Source\PSoC4/CyLFClk.c ****         uint32 configRegValue;
 1074              		.loc 1 1376 0
 1075              		.cfi_startproc
 1076              	.LVL103:
 1077 0000 10B5     		push	{r4, lr}
 1078              		.cfi_def_cfa_offset 8
 1079              		.cfi_offset 4, -8
 1080              		.cfi_offset 14, -4
 1081 0002 041C     		mov	r4, r0
1379:.\Generated_Source\PSoC4/CyLFClk.c ****         {
 1082              		.loc 1 1379 0
 1083 0004 0220     		mov	r0, #2
 1084              	.LVL104:
 1085 0006 FFF7FEFF 		bl	CySysWdtGetEnabledStatus
 1086              	.LVL105:
 1087 000a 0028     		cmp	r0, #0
 1088 000c 08D1     		bne	.L93
1381:.\Generated_Source\PSoC4/CyLFClk.c ****             configRegValue &= (uint32)(~((uint32)(CY_SYS_WDT_CONFIG_BITS2_MASK << CY_SYS_WDT_CONFIG
 1089              		.loc 1 1381 0
 1090 000e 054A     		ldr	r2, .L95
 1091 0010 1168     		ldr	r1, [r2]
 1092              	.LVL106:
1382:.\Generated_Source\PSoC4/CyLFClk.c ****             configRegValue |= ((bits & CY_SYS_WDT_CONFIG_BITS2_MASK) << CY_SYS_WDT_CONFIG_BITS2_POS
 1093              		.loc 1 1382 0
 1094 0012 054B     		ldr	r3, .L95+4
 1095 0014 0B40     		and	r3, r1
 1096              	.LVL107:
1383:.\Generated_Source\PSoC4/CyLFClk.c ****             CY_SYS_WDT_CONFIG_REG = configRegValue;
 1097              		.loc 1 1383 0
 1098 0016 1F21     		mov	r1, #31
 1099 0018 0C40     		and	r4, r1
 1100              	.LVL108:
 1101 001a 2406     		lsl	r4, r4, #24
 1102 001c 1C43     		orr	r4, r3
 1103              	.LVL109:
1384:.\Generated_Source\PSoC4/CyLFClk.c ****         }
 1104              		.loc 1 1384 0
 1105 001e 1460     		str	r4, [r2]
 1106              	.LVL110:
 1107              	.L93:
1386:.\Generated_Source\PSoC4/CyLFClk.c **** 
 1108              		.loc 1 1386 0
 1109              		@ sp needed
 1110 0020 10BD     		pop	{r4, pc}
 1111              	.L96:
 1112 0022 C046     		.align	2
 1113              	.L95:
 1114 0024 0C020B40 		.word	1074463244
ARM GAS  C:\Users\g\AppData\Local\Temp\ccjVf3bh.s 			page 56


 1115 0028 FFFFFFE0 		.word	-520093697
 1116              		.cfi_endproc
 1117              	.LFE19:
 1118              		.size	CySysWdtSetToggleBit, .-CySysWdtSetToggleBit
 1119              		.section	.text.CySysWdtGetToggleBit,"ax",%progbits
 1120              		.align	2
 1121              		.global	CySysWdtGetToggleBit
 1122              		.code	16
 1123              		.thumb_func
 1124              		.type	CySysWdtGetToggleBit, %function
 1125              	CySysWdtGetToggleBit:
 1126              	.LFB20:
1399:.\Generated_Source\PSoC4/CyLFClk.c ****         return ((CY_SYS_WDT_CONFIG_REG >> CY_SYS_WDT_CONFIG_BITS2_POS) & CY_SYS_WDT_CONFIG_BITS2_MA
 1127              		.loc 1 1399 0
 1128              		.cfi_startproc
1400:.\Generated_Source\PSoC4/CyLFClk.c ****     }
 1129              		.loc 1 1400 0
 1130 0000 024B     		ldr	r3, .L98
 1131 0002 1868     		ldr	r0, [r3]
 1132 0004 C000     		lsl	r0, r0, #3
 1133 0006 C00E     		lsr	r0, r0, #27
1401:.\Generated_Source\PSoC4/CyLFClk.c **** 
 1134              		.loc 1 1401 0
 1135              		@ sp needed
 1136 0008 7047     		bx	lr
 1137              	.L99:
 1138 000a C046     		.align	2
 1139              	.L98:
 1140 000c 0C020B40 		.word	1074463244
 1141              		.cfi_endproc
 1142              	.LFE20:
 1143              		.size	CySysWdtGetToggleBit, .-CySysWdtGetToggleBit
 1144              		.section	.text.CySysWdtGetMatch,"ax",%progbits
 1145              		.align	2
 1146              		.global	CySysWdtGetMatch
 1147              		.code	16
 1148              		.thumb_func
 1149              		.type	CySysWdtGetMatch, %function
 1150              	CySysWdtGetMatch:
 1151              	.LFB21:
1417:.\Generated_Source\PSoC4/CyLFClk.c ****         CYASSERT((counterNum == CY_SYS_WDT_COUNTER0) ||
 1152              		.loc 1 1417 0
 1153              		.cfi_startproc
 1154              	.LVL111:
 1155 0000 10B5     		push	{r4, lr}
 1156              		.cfi_def_cfa_offset 8
 1157              		.cfi_offset 4, -8
 1158              		.cfi_offset 14, -4
 1159 0002 041E     		sub	r4, r0, #0
1418:.\Generated_Source\PSoC4/CyLFClk.c ****                  (counterNum == CY_SYS_WDT_COUNTER1));
 1160              		.loc 1 1418 0
 1161 0004 012C     		cmp	r4, #1
 1162 0006 02D9     		bls	.L101
1418:.\Generated_Source\PSoC4/CyLFClk.c ****                  (counterNum == CY_SYS_WDT_COUNTER1));
 1163              		.loc 1 1418 0 is_stmt 0 discriminator 1
 1164 0008 0020     		mov	r0, #0
 1165              	.LVL112:
ARM GAS  C:\Users\g\AppData\Local\Temp\ccjVf3bh.s 			page 57


 1166 000a FFF7FEFF 		bl	CyHalt
 1167              	.LVL113:
 1168              	.L101:
1421:.\Generated_Source\PSoC4/CyLFClk.c ****                                             (counterNum * CY_SYS_WDT_CNT_MATCH_SHIFT)) & CY_SYS_WDT
 1169              		.loc 1 1421 0 is_stmt 1
 1170 000e 034B     		ldr	r3, .L102
 1171 0010 1B68     		ldr	r3, [r3]
1422:.\Generated_Source\PSoC4/CyLFClk.c ****     }
 1172              		.loc 1 1422 0
 1173 0012 2401     		lsl	r4, r4, #4
 1174              	.LVL114:
1421:.\Generated_Source\PSoC4/CyLFClk.c ****                                             (counterNum * CY_SYS_WDT_CNT_MATCH_SHIFT)) & CY_SYS_WDT
 1175              		.loc 1 1421 0
 1176 0014 E340     		lsr	r3, r3, r4
 1177 0016 1804     		lsl	r0, r3, #16
 1178 0018 000C     		lsr	r0, r0, #16
1423:.\Generated_Source\PSoC4/CyLFClk.c **** 
 1179              		.loc 1 1423 0
 1180              		@ sp needed
 1181 001a 10BD     		pop	{r4, pc}
 1182              	.L103:
 1183              		.align	2
 1184              	.L102:
 1185 001c 08020B40 		.word	1074463240
 1186              		.cfi_endproc
 1187              	.LFE21:
 1188              		.size	CySysWdtGetMatch, .-CySysWdtGetMatch
 1189              		.section	.text.CySysWdtGetCount,"ax",%progbits
 1190              		.align	2
 1191              		.global	CySysWdtGetCount
 1192              		.code	16
 1193              		.thumb_func
 1194              		.type	CySysWdtGetCount, %function
 1195              	CySysWdtGetCount:
 1196              	.LFB22:
1439:.\Generated_Source\PSoC4/CyLFClk.c ****         uint32 regValue = 0u;
 1197              		.loc 1 1439 0
 1198              		.cfi_startproc
 1199              	.LVL115:
 1200 0000 08B5     		push	{r3, lr}
 1201              		.cfi_def_cfa_offset 8
 1202              		.cfi_offset 3, -8
 1203              		.cfi_offset 14, -4
 1204              	.LVL116:
1442:.\Generated_Source\PSoC4/CyLFClk.c ****         {
 1205              		.loc 1 1442 0
 1206 0002 0128     		cmp	r0, #1
 1207 0004 09D0     		beq	.L106
 1208 0006 0028     		cmp	r0, #0
 1209 0008 02D0     		beq	.L107
 1210 000a 0228     		cmp	r0, #2
 1211 000c 09D0     		beq	.L108
 1212 000e 0BE0     		b	.L110
 1213              	.L107:
1446:.\Generated_Source\PSoC4/CyLFClk.c ****             break;
 1214              		.loc 1 1446 0
 1215 0010 084B     		ldr	r3, .L111
ARM GAS  C:\Users\g\AppData\Local\Temp\ccjVf3bh.s 			page 58


 1216 0012 1868     		ldr	r0, [r3]
 1217              	.LVL117:
 1218 0014 0004     		lsl	r0, r0, #16
 1219 0016 000C     		lsr	r0, r0, #16
 1220              	.LVL118:
1447:.\Generated_Source\PSoC4/CyLFClk.c **** 
 1221              		.loc 1 1447 0
 1222 0018 0AE0     		b	.L109
 1223              	.LVL119:
 1224              	.L106:
1451:.\Generated_Source\PSoC4/CyLFClk.c ****             break;
 1225              		.loc 1 1451 0
 1226 001a 064B     		ldr	r3, .L111
 1227 001c 1868     		ldr	r0, [r3]
 1228              	.LVL120:
 1229 001e 000C     		lsr	r0, r0, #16
 1230              	.LVL121:
1452:.\Generated_Source\PSoC4/CyLFClk.c **** 
 1231              		.loc 1 1452 0
 1232 0020 06E0     		b	.L109
 1233              	.LVL122:
 1234              	.L108:
1456:.\Generated_Source\PSoC4/CyLFClk.c ****             break;
 1235              		.loc 1 1456 0
 1236 0022 054B     		ldr	r3, .L111+4
 1237 0024 1868     		ldr	r0, [r3]
 1238              	.LVL123:
1457:.\Generated_Source\PSoC4/CyLFClk.c **** 
 1239              		.loc 1 1457 0
 1240 0026 03E0     		b	.L109
 1241              	.LVL124:
 1242              	.L110:
1460:.\Generated_Source\PSoC4/CyLFClk.c ****             break;
 1243              		.loc 1 1460 0 discriminator 1
 1244 0028 0020     		mov	r0, #0
 1245              	.LVL125:
 1246 002a FFF7FEFF 		bl	CyHalt
 1247              	.LVL126:
1440:.\Generated_Source\PSoC4/CyLFClk.c **** 
 1248              		.loc 1 1440 0 discriminator 1
 1249 002e 0020     		mov	r0, #0
 1250              	.LVL127:
 1251              	.L109:
1465:.\Generated_Source\PSoC4/CyLFClk.c **** 
 1252              		.loc 1 1465 0
 1253              		@ sp needed
 1254 0030 08BD     		pop	{r3, pc}
 1255              	.L112:
 1256 0032 C046     		.align	2
 1257              	.L111:
 1258 0034 00020B40 		.word	1074463232
 1259 0038 04020B40 		.word	1074463236
 1260              		.cfi_endproc
 1261              	.LFE22:
 1262              		.size	CySysWdtGetCount, .-CySysWdtGetCount
 1263              		.section	.text.CySysClkLfclkPosedgeCatch,"ax",%progbits
 1264              		.align	2
ARM GAS  C:\Users\g\AppData\Local\Temp\ccjVf3bh.s 			page 59


 1265              		.code	16
 1266              		.thumb_func
 1267              		.type	CySysClkLfclkPosedgeCatch, %function
 1268              	CySysClkLfclkPosedgeCatch:
 1269              	.LFB32:
1841:.\Generated_Source\PSoC4/CyLFClk.c ****         uint32 firstCount;
 1270              		.loc 1 1841 0
 1271              		.cfi_startproc
 1272 0000 10B5     		push	{r4, lr}
 1273              		.cfi_def_cfa_offset 8
 1274              		.cfi_offset 4, -8
 1275              		.cfi_offset 14, -4
1845:.\Generated_Source\PSoC4/CyLFClk.c ****         {
 1276              		.loc 1 1845 0
 1277 0002 0020     		mov	r0, #0
 1278 0004 FFF7FEFF 		bl	CySysWdtGetEnabledStatus
 1279              	.LVL128:
 1280 0008 0028     		cmp	r0, #0
 1281 000a 03D0     		beq	.L114
1847:.\Generated_Source\PSoC4/CyLFClk.c ****         }
 1282              		.loc 1 1847 0
 1283 000c 0022     		mov	r2, #0
 1284 000e 184B     		ldr	r3, .L119
 1285 0010 DA60     		str	r2, [r3, #12]
 1286 0012 21E0     		b	.L115
 1287              	.L114:
1849:.\Generated_Source\PSoC4/CyLFClk.c ****         {
 1288              		.loc 1 1849 0
 1289 0014 0120     		mov	r0, #1
 1290 0016 FFF7FEFF 		bl	CySysWdtGetEnabledStatus
 1291              	.LVL129:
 1292 001a 0028     		cmp	r0, #0
 1293 001c 03D0     		beq	.L116
1851:.\Generated_Source\PSoC4/CyLFClk.c ****         }
 1294              		.loc 1 1851 0
 1295 001e 0122     		mov	r2, #1
 1296 0020 134B     		ldr	r3, .L119
 1297 0022 DA60     		str	r2, [r3, #12]
 1298 0024 18E0     		b	.L115
 1299              	.L116:
1853:.\Generated_Source\PSoC4/CyLFClk.c ****         {
 1300              		.loc 1 1853 0
 1301 0026 0220     		mov	r0, #2
 1302 0028 FFF7FEFF 		bl	CySysWdtGetEnabledStatus
 1303              	.LVL130:
 1304 002c 0028     		cmp	r0, #0
 1305 002e 03D0     		beq	.L117
1855:.\Generated_Source\PSoC4/CyLFClk.c ****         }
 1306              		.loc 1 1855 0
 1307 0030 0222     		mov	r2, #2
 1308 0032 0F4B     		ldr	r3, .L119
 1309 0034 DA60     		str	r2, [r3, #12]
 1310 0036 0FE0     		b	.L115
 1311              	.L117:
1860:.\Generated_Source\PSoC4/CyLFClk.c ****             lfclkPosedgeEnabledWdtCounter = CY_SYS_WDT_COUNTER0;
 1312              		.loc 1 1860 0
 1313 0038 0D4C     		ldr	r4, .L119
ARM GAS  C:\Users\g\AppData\Local\Temp\ccjVf3bh.s 			page 60


 1314 003a 0123     		mov	r3, #1
 1315 003c 6360     		str	r3, [r4, #4]
1861:.\Generated_Source\PSoC4/CyLFClk.c **** 
 1316              		.loc 1 1861 0
 1317 003e 0023     		mov	r3, #0
 1318 0040 E360     		str	r3, [r4, #12]
1863:.\Generated_Source\PSoC4/CyLFClk.c ****             CySysWdtSetMode(CY_SYS_WDT_COUNTER0, CY_SYS_WDT_MODE_NONE);
 1319              		.loc 1 1863 0
 1320 0042 0020     		mov	r0, #0
 1321 0044 FFF7FEFF 		bl	CySysWdtGetMode
 1322              	.LVL131:
 1323 0048 A060     		str	r0, [r4, #8]
1864:.\Generated_Source\PSoC4/CyLFClk.c ****             CySysWdtEnable(CY_SYS_WDT_COUNTER0_MASK);
 1324              		.loc 1 1864 0
 1325 004a 0020     		mov	r0, #0
 1326 004c 0021     		mov	r1, #0
 1327 004e FFF7FEFF 		bl	CySysWdtSetMode
 1328              	.LVL132:
1865:.\Generated_Source\PSoC4/CyLFClk.c ****         }
 1329              		.loc 1 1865 0
 1330 0052 0120     		mov	r0, #1
 1331 0054 FFF7FEFF 		bl	CySysWdtEnable
 1332              	.LVL133:
 1333              	.L115:
1868:.\Generated_Source\PSoC4/CyLFClk.c ****         while (CySysWdtGetCount(lfclkPosedgeEnabledWdtCounter) == firstCount)
 1334              		.loc 1 1868 0
 1335 0058 054B     		ldr	r3, .L119
 1336 005a D868     		ldr	r0, [r3, #12]
 1337 005c FFF7FEFF 		bl	CySysWdtGetCount
 1338              	.LVL134:
 1339 0060 041C     		mov	r4, r0
 1340              	.LVL135:
 1341              	.L118:
1869:.\Generated_Source\PSoC4/CyLFClk.c ****         {
 1342              		.loc 1 1869 0 discriminator 1
 1343 0062 034B     		ldr	r3, .L119
 1344 0064 D868     		ldr	r0, [r3, #12]
 1345 0066 FFF7FEFF 		bl	CySysWdtGetCount
 1346              	.LVL136:
 1347 006a A042     		cmp	r0, r4
 1348 006c F9D0     		beq	.L118
1873:.\Generated_Source\PSoC4/CyLFClk.c **** 
 1349              		.loc 1 1873 0
 1350              		@ sp needed
 1351              	.LVL137:
 1352 006e 10BD     		pop	{r4, pc}
 1353              	.L120:
 1354              		.align	2
 1355              	.L119:
 1356 0070 00000000 		.word	.LANCHOR0
 1357              		.cfi_endproc
 1358              	.LFE32:
 1359              		.size	CySysClkLfclkPosedgeCatch, .-CySysClkLfclkPosedgeCatch
 1360              		.section	.text.CySysClkIloStop,"ax",%progbits
 1361              		.align	2
 1362              		.global	CySysClkIloStop
 1363              		.code	16
ARM GAS  C:\Users\g\AppData\Local\Temp\ccjVf3bh.s 			page 61


 1364              		.thumb_func
 1365              		.type	CySysClkIloStop, %function
 1366              	CySysClkIloStop:
 1367              	.LFB1:
 109:.\Generated_Source\PSoC4/CyLFClk.c ****     #if(CY_IP_SRSSV2)
 1368              		.loc 1 109 0
 1369              		.cfi_startproc
 1370 0000 10B5     		push	{r4, lr}
 1371              		.cfi_def_cfa_offset 8
 1372              		.cfi_offset 4, -8
 1373              		.cfi_offset 14, -4
 114:.\Generated_Source\PSoC4/CyLFClk.c ****         {
 1374              		.loc 1 114 0
 1375 0002 FFF7FEFF 		bl	CySysWdtLocked
 1376              	.LVL138:
 1377 0006 0028     		cmp	r0, #0
 1378 0008 12D1     		bne	.L121
 116:.\Generated_Source\PSoC4/CyLFClk.c ****             {
 1379              		.loc 1 116 0
 1380 000a FFF7FEFF 		bl	CySysClkIloEnabled
 1381              	.LVL139:
 1382 000e 0028     		cmp	r0, #0
 1383 0010 0ED0     		beq	.L121
 124:.\Generated_Source\PSoC4/CyLFClk.c ****                 CySysClkLfclkPosedgeCatch();
 1384              		.loc 1 124 0
 1385 0012 FFF7FEFF 		bl	CyEnterCriticalSection
 1386              	.LVL140:
 1387 0016 041C     		mov	r4, r0
 1388              	.LVL141:
 125:.\Generated_Source\PSoC4/CyLFClk.c ****                 CY_SYS_CLK_ILO_CONFIG_REG &= (uint32) ( ~(uint32)CY_SYS_CLK_ILO_CONFIG_ENABLE);
 1389              		.loc 1 125 0
 1390 0018 FFF7FEFF 		bl	CySysClkLfclkPosedgeCatch
 1391              	.LVL142:
 126:.\Generated_Source\PSoC4/CyLFClk.c ****                 CySysClkLfclkPosedgeRestore();
 1392              		.loc 1 126 0
 1393 001c 054A     		ldr	r2, .L123
 1394 001e 1368     		ldr	r3, [r2]
 1395 0020 5B00     		lsl	r3, r3, #1
 1396 0022 5B08     		lsr	r3, r3, #1
 1397 0024 1360     		str	r3, [r2]
 127:.\Generated_Source\PSoC4/CyLFClk.c ****                 CyExitCriticalSection(interruptState);
 1398              		.loc 1 127 0
 1399 0026 FFF7FEFF 		bl	CySysClkLfclkPosedgeRestore
 1400              	.LVL143:
 128:.\Generated_Source\PSoC4/CyLFClk.c **** 
 1401              		.loc 1 128 0
 1402 002a 201C     		mov	r0, r4
 1403 002c FFF7FEFF 		bl	CyExitCriticalSection
 1404              	.LVL144:
 1405              	.L121:
 143:.\Generated_Source\PSoC4/CyLFClk.c **** 
 1406              		.loc 1 143 0
 1407              		@ sp needed
 1408 0030 10BD     		pop	{r4, pc}
 1409              	.L124:
 1410 0032 C046     		.align	2
 1411              	.L123:
ARM GAS  C:\Users\g\AppData\Local\Temp\ccjVf3bh.s 			page 62


 1412 0034 04010B40 		.word	1074462980
 1413              		.cfi_endproc
 1414              	.LFE1:
 1415              		.size	CySysClkIloStop, .-CySysClkIloStop
 1416              		.section	.text.CySysWdtGetInterruptSource,"ax",%progbits
 1417              		.align	2
 1418              		.global	CySysWdtGetInterruptSource
 1419              		.code	16
 1420              		.thumb_func
 1421              		.type	CySysWdtGetInterruptSource, %function
 1422              	CySysWdtGetInterruptSource:
 1423              	.LFB23:
1482:.\Generated_Source\PSoC4/CyLFClk.c ****         return (CY_SYS_WDT_CONTROL_REG & (CY_SYS_WDT_COUNTER0_INT | CY_SYS_WDT_COUNTER1_INT | CY_SY
 1424              		.loc 1 1482 0
 1425              		.cfi_startproc
1483:.\Generated_Source\PSoC4/CyLFClk.c ****     }
 1426              		.loc 1 1483 0
 1427 0000 024B     		ldr	r3, .L126
 1428 0002 1868     		ldr	r0, [r3]
 1429 0004 024B     		ldr	r3, .L126+4
 1430 0006 1840     		and	r0, r3
1484:.\Generated_Source\PSoC4/CyLFClk.c **** 
 1431              		.loc 1 1484 0
 1432              		@ sp needed
 1433 0008 7047     		bx	lr
 1434              	.L127:
 1435 000a C046     		.align	2
 1436              	.L126:
 1437 000c 10020B40 		.word	1074463248
 1438 0010 04040400 		.word	263172
 1439              		.cfi_endproc
 1440              	.LFE23:
 1441              		.size	CySysWdtGetInterruptSource, .-CySysWdtGetInterruptSource
 1442              		.section	.text.CySysWdtClearInterrupt,"ax",%progbits
 1443              		.align	2
 1444              		.global	CySysWdtClearInterrupt
 1445              		.code	16
 1446              		.thumb_func
 1447              		.type	CySysWdtClearInterrupt, %function
 1448              	CySysWdtClearInterrupt:
 1449              	.LFB24:
1511:.\Generated_Source\PSoC4/CyLFClk.c ****         uint8 interruptState;
 1450              		.loc 1 1511 0
 1451              		.cfi_startproc
 1452              	.LVL145:
 1453 0000 70B5     		push	{r4, r5, r6, lr}
 1454              		.cfi_def_cfa_offset 16
 1455              		.cfi_offset 4, -16
 1456              		.cfi_offset 5, -12
 1457              		.cfi_offset 6, -8
 1458              		.cfi_offset 14, -4
 1459 0002 061C     		mov	r6, r0
1515:.\Generated_Source\PSoC4/CyLFClk.c **** 
 1460              		.loc 1 1515 0
 1461 0004 FFF7FEFF 		bl	CyEnterCriticalSection
 1462              	.LVL146:
 1463 0008 041C     		mov	r4, r0
ARM GAS  C:\Users\g\AppData\Local\Temp\ccjVf3bh.s 			page 63


 1464              	.LVL147:
1517:.\Generated_Source\PSoC4/CyLFClk.c ****         {
 1465              		.loc 1 1517 0
 1466 000a FFF7FEFF 		bl	CySysWdtLocked
 1467              	.LVL148:
 1468 000e 0028     		cmp	r0, #0
 1469 0010 03D0     		beq	.L131
 1470              	.LVL149:
1520:.\Generated_Source\PSoC4/CyLFClk.c ****         }
 1471              		.loc 1 1520 0
 1472 0012 FFF7FEFF 		bl	CySysWdtUnlock
 1473              	.LVL150:
1519:.\Generated_Source\PSoC4/CyLFClk.c ****             CySysWdtUnlock();
 1474              		.loc 1 1519 0
 1475 0016 0125     		mov	r5, #1
 1476 0018 00E0     		b	.L129
 1477              	.LVL151:
 1478              	.L131:
1524:.\Generated_Source\PSoC4/CyLFClk.c ****         }
 1479              		.loc 1 1524 0
 1480 001a 0025     		mov	r5, #0
 1481              	.L129:
 1482              	.LVL152:
1528:.\Generated_Source\PSoC4/CyLFClk.c ****                         CY_SYS_WDT_COUNTER1_INT |
 1483              		.loc 1 1528 0
 1484 001c 0848     		ldr	r0, .L132
 1485 001e 331C     		mov	r3, r6
 1486 0020 0340     		and	r3, r0
 1487              	.LVL153:
1532:.\Generated_Source\PSoC4/CyLFClk.c ****                                                                            CY_SYS_WDT_COUNTER1_INT 
 1488              		.loc 1 1532 0
 1489 0022 084A     		ldr	r2, .L132+4
 1490 0024 1068     		ldr	r0, [r2]
 1491 0026 0849     		ldr	r1, .L132+8
 1492 0028 0840     		and	r0, r1
 1493 002a 1843     		orr	r0, r3
 1494 002c 1060     		str	r0, [r2]
1539:.\Generated_Source\PSoC4/CyLFClk.c **** 
 1495              		.loc 1 1539 0
 1496 002e 1368     		ldr	r3, [r2]
 1497              	.LVL154:
1541:.\Generated_Source\PSoC4/CyLFClk.c ****         {
 1498              		.loc 1 1541 0
 1499 0030 012D     		cmp	r5, #1
 1500 0032 01D1     		bne	.L130
1543:.\Generated_Source\PSoC4/CyLFClk.c ****         }
 1501              		.loc 1 1543 0
 1502 0034 FFF7FEFF 		bl	CySysWdtLock
 1503              	.LVL155:
 1504              	.L130:
1546:.\Generated_Source\PSoC4/CyLFClk.c ****     }
 1505              		.loc 1 1546 0
 1506 0038 201C     		mov	r0, r4
 1507 003a FFF7FEFF 		bl	CyExitCriticalSection
 1508              	.LVL156:
1547:.\Generated_Source\PSoC4/CyLFClk.c **** 
 1509              		.loc 1 1547 0
ARM GAS  C:\Users\g\AppData\Local\Temp\ccjVf3bh.s 			page 64


 1510              		@ sp needed
 1511              	.LVL157:
 1512              	.LVL158:
 1513              	.LVL159:
 1514 003e 70BD     		pop	{r4, r5, r6, pc}
 1515              	.L133:
 1516              		.align	2
 1517              	.L132:
 1518 0040 04040400 		.word	263172
 1519 0044 10020B40 		.word	1074463248
 1520 0048 FBFBFBFF 		.word	-263173
 1521              		.cfi_endproc
 1522              	.LFE24:
 1523              		.size	CySysWdtClearInterrupt, .-CySysWdtClearInterrupt
 1524              		.section	.text.CySysWdtResetCounters,"ax",%progbits
 1525              		.align	2
 1526              		.global	CySysWdtResetCounters
 1527              		.code	16
 1528              		.thumb_func
 1529              		.type	CySysWdtResetCounters, %function
 1530              	CySysWdtResetCounters:
 1531              	.LFB25:
1569:.\Generated_Source\PSoC4/CyLFClk.c ****         /* Set new WDT reset value */
 1532              		.loc 1 1569 0
 1533              		.cfi_startproc
 1534              	.LVL160:
1571:.\Generated_Source\PSoC4/CyLFClk.c **** 
 1535              		.loc 1 1571 0
 1536 0000 054A     		ldr	r2, .L136
 1537 0002 1168     		ldr	r1, [r2]
 1538 0004 054B     		ldr	r3, .L136+4
 1539 0006 1840     		and	r0, r3
 1540              	.LVL161:
 1541 0008 0843     		orr	r0, r1
 1542 000a 1060     		str	r0, [r2]
 1543              	.L135:
1573:.\Generated_Source\PSoC4/CyLFClk.c ****         {
 1544              		.loc 1 1573 0 discriminator 1
 1545 000c 024B     		ldr	r3, .L136
 1546 000e 1A68     		ldr	r2, [r3]
 1547 0010 024B     		ldr	r3, .L136+4
 1548 0012 1A42     		tst	r2, r3
 1549 0014 FAD1     		bne	.L135
1577:.\Generated_Source\PSoC4/CyLFClk.c **** 
 1550              		.loc 1 1577 0
 1551              		@ sp needed
 1552 0016 7047     		bx	lr
 1553              	.L137:
 1554              		.align	2
 1555              	.L136:
 1556 0018 10020B40 		.word	1074463248
 1557 001c 08080800 		.word	526344
 1558              		.cfi_endproc
 1559              	.LFE25:
 1560              		.size	CySysWdtResetCounters, .-CySysWdtResetCounters
 1561              		.section	.text.CySysWdtSetInterruptCallback,"ax",%progbits
 1562              		.align	2
ARM GAS  C:\Users\g\AppData\Local\Temp\ccjVf3bh.s 			page 65


 1563              		.global	CySysWdtSetInterruptCallback
 1564              		.code	16
 1565              		.thumb_func
 1566              		.type	CySysWdtSetInterruptCallback, %function
 1567              	CySysWdtSetInterruptCallback:
 1568              	.LFB26:
1595:.\Generated_Source\PSoC4/CyLFClk.c ****         cyWdtCallback prevCallback = (void *)0;
 1569              		.loc 1 1595 0
 1570              		.cfi_startproc
 1571              	.LVL162:
 1572 0000 08B5     		push	{r3, lr}
 1573              		.cfi_def_cfa_offset 8
 1574              		.cfi_offset 3, -8
 1575              		.cfi_offset 14, -4
 1576              	.LVL163:
1598:.\Generated_Source\PSoC4/CyLFClk.c ****         {
 1577              		.loc 1 1598 0
 1578 0002 0228     		cmp	r0, #2
 1579 0004 05D8     		bhi	.L139
1600:.\Generated_Source\PSoC4/CyLFClk.c ****             cySysWdtCallback[counterNum] = function;
 1580              		.loc 1 1600 0
 1581 0006 8000     		lsl	r0, r0, #2
 1582              	.LVL164:
 1583 0008 044B     		ldr	r3, .L141
 1584 000a 1B18     		add	r3, r3, r0
 1585 000c 1869     		ldr	r0, [r3, #16]
 1586              	.LVL165:
1601:.\Generated_Source\PSoC4/CyLFClk.c ****         }
 1587              		.loc 1 1601 0
 1588 000e 1961     		str	r1, [r3, #16]
 1589 0010 03E0     		b	.L140
 1590              	.LVL166:
 1591              	.L139:
1605:.\Generated_Source\PSoC4/CyLFClk.c ****         }
 1592              		.loc 1 1605 0 discriminator 1
 1593 0012 0020     		mov	r0, #0
 1594              	.LVL167:
 1595 0014 FFF7FEFF 		bl	CyHalt
 1596              	.LVL168:
1596:.\Generated_Source\PSoC4/CyLFClk.c **** 
 1597              		.loc 1 1596 0 discriminator 1
 1598 0018 0020     		mov	r0, #0
 1599              	.LVL169:
 1600              	.L140:
1609:.\Generated_Source\PSoC4/CyLFClk.c **** 
 1601              		.loc 1 1609 0
 1602              		@ sp needed
 1603 001a 08BD     		pop	{r3, pc}
 1604              	.L142:
 1605              		.align	2
 1606              	.L141:
 1607 001c 00000000 		.word	.LANCHOR0
 1608              		.cfi_endproc
 1609              	.LFE26:
 1610              		.size	CySysWdtSetInterruptCallback, .-CySysWdtSetInterruptCallback
 1611              		.section	.text.CySysWdtGetInterruptCallback,"ax",%progbits
 1612              		.align	2
ARM GAS  C:\Users\g\AppData\Local\Temp\ccjVf3bh.s 			page 66


 1613              		.global	CySysWdtGetInterruptCallback
 1614              		.code	16
 1615              		.thumb_func
 1616              		.type	CySysWdtGetInterruptCallback, %function
 1617              	CySysWdtGetInterruptCallback:
 1618              	.LFB27:
1625:.\Generated_Source\PSoC4/CyLFClk.c ****         cyWdtCallback retCallback = (void *)0;
 1619              		.loc 1 1625 0
 1620              		.cfi_startproc
 1621              	.LVL170:
 1622 0000 08B5     		push	{r3, lr}
 1623              		.cfi_def_cfa_offset 8
 1624              		.cfi_offset 3, -8
 1625              		.cfi_offset 14, -4
 1626              	.LVL171:
1628:.\Generated_Source\PSoC4/CyLFClk.c ****         {
 1627              		.loc 1 1628 0
 1628 0002 0228     		cmp	r0, #2
 1629 0004 04D8     		bhi	.L144
1630:.\Generated_Source\PSoC4/CyLFClk.c ****         }
 1630              		.loc 1 1630 0
 1631 0006 8000     		lsl	r0, r0, #2
 1632              	.LVL172:
 1633 0008 044B     		ldr	r3, .L146
 1634 000a 1818     		add	r0, r3, r0
 1635 000c 0069     		ldr	r0, [r0, #16]
 1636              	.LVL173:
 1637 000e 03E0     		b	.L145
 1638              	.LVL174:
 1639              	.L144:
1634:.\Generated_Source\PSoC4/CyLFClk.c ****         }
 1640              		.loc 1 1634 0 discriminator 1
 1641 0010 0020     		mov	r0, #0
 1642              	.LVL175:
 1643 0012 FFF7FEFF 		bl	CyHalt
 1644              	.LVL176:
1626:.\Generated_Source\PSoC4/CyLFClk.c **** 
 1645              		.loc 1 1626 0 discriminator 1
 1646 0016 0020     		mov	r0, #0
 1647              	.LVL177:
 1648              	.L145:
1638:.\Generated_Source\PSoC4/CyLFClk.c **** 
 1649              		.loc 1 1638 0
 1650              		@ sp needed
 1651 0018 08BD     		pop	{r3, pc}
 1652              	.L147:
 1653 001a C046     		.align	2
 1654              	.L146:
 1655 001c 00000000 		.word	.LANCHOR0
 1656              		.cfi_endproc
 1657              	.LFE27:
 1658              		.size	CySysWdtGetInterruptCallback, .-CySysWdtGetInterruptCallback
 1659              		.section	.text.CySysWdtEnableCounterIsr,"ax",%progbits
 1660              		.align	2
 1661              		.global	CySysWdtEnableCounterIsr
 1662              		.code	16
 1663              		.thumb_func
ARM GAS  C:\Users\g\AppData\Local\Temp\ccjVf3bh.s 			page 67


 1664              		.type	CySysWdtEnableCounterIsr, %function
 1665              	CySysWdtEnableCounterIsr:
 1666              	.LFB28:
1654:.\Generated_Source\PSoC4/CyLFClk.c ****         if(counterNum <= CY_SYS_WDT_COUNTER2)
 1667              		.loc 1 1654 0
 1668              		.cfi_startproc
 1669              	.LVL178:
 1670 0000 08B5     		push	{r3, lr}
 1671              		.cfi_def_cfa_offset 8
 1672              		.cfi_offset 3, -8
 1673              		.cfi_offset 14, -4
1655:.\Generated_Source\PSoC4/CyLFClk.c ****         {
 1674              		.loc 1 1655 0
 1675 0002 0228     		cmp	r0, #2
 1676 0004 0BD8     		bhi	.L149
1657:.\Generated_Source\PSoC4/CyLFClk.c ****             wdtIsrMask |= counterIntMaskTbl[counterNum];
 1677              		.loc 1 1657 0
 1678 0006 8000     		lsl	r0, r0, #2
 1679              	.LVL179:
 1680 0008 074B     		ldr	r3, .L151
 1681 000a C158     		ldr	r1, [r0, r3]
 1682 000c 074B     		ldr	r3, .L151+4
 1683 000e DA69     		ldr	r2, [r3, #28]
 1684 0010 8A43     		bic	r2, r1
 1685 0012 DA61     		str	r2, [r3, #28]
1658:.\Generated_Source\PSoC4/CyLFClk.c ****         }
 1686              		.loc 1 1658 0
 1687 0014 064A     		ldr	r2, .L151+8
 1688 0016 1368     		ldr	r3, [r2]
 1689 0018 0B43     		orr	r3, r1
 1690 001a 1360     		str	r3, [r2]
 1691 001c 02E0     		b	.L148
 1692              	.LVL180:
 1693              	.L149:
1662:.\Generated_Source\PSoC4/CyLFClk.c ****         }
 1694              		.loc 1 1662 0 discriminator 1
 1695 001e 0020     		mov	r0, #0
 1696              	.LVL181:
 1697 0020 FFF7FEFF 		bl	CyHalt
 1698              	.LVL182:
 1699              	.L148:
1664:.\Generated_Source\PSoC4/CyLFClk.c **** 
 1700              		.loc 1 1664 0
 1701              		@ sp needed
 1702 0024 08BD     		pop	{r3, pc}
 1703              	.L152:
 1704 0026 C046     		.align	2
 1705              	.L151:
 1706 0028 00000000 		.word	.LANCHOR1
 1707 002c 00000000 		.word	.LANCHOR0
 1708 0030 00000000 		.word	.LANCHOR2
 1709              		.cfi_endproc
 1710              	.LFE28:
 1711              		.size	CySysWdtEnableCounterIsr, .-CySysWdtEnableCounterIsr
 1712              		.section	.text.CySysWdtDisableCounterIsr,"ax",%progbits
 1713              		.align	2
 1714              		.global	CySysWdtDisableCounterIsr
ARM GAS  C:\Users\g\AppData\Local\Temp\ccjVf3bh.s 			page 68


 1715              		.code	16
 1716              		.thumb_func
 1717              		.type	CySysWdtDisableCounterIsr, %function
 1718              	CySysWdtDisableCounterIsr:
 1719              	.LFB29:
1677:.\Generated_Source\PSoC4/CyLFClk.c ****         if(counterNum <= CY_SYS_WDT_COUNTER2)
 1720              		.loc 1 1677 0
 1721              		.cfi_startproc
 1722              	.LVL183:
 1723 0000 08B5     		push	{r3, lr}
 1724              		.cfi_def_cfa_offset 8
 1725              		.cfi_offset 3, -8
 1726              		.cfi_offset 14, -4
1678:.\Generated_Source\PSoC4/CyLFClk.c ****         {
 1727              		.loc 1 1678 0
 1728 0002 0228     		cmp	r0, #2
 1729 0004 07D8     		bhi	.L154
1680:.\Generated_Source\PSoC4/CyLFClk.c ****         }
 1730              		.loc 1 1680 0
 1731 0006 8000     		lsl	r0, r0, #2
 1732              	.LVL184:
 1733 0008 054B     		ldr	r3, .L156
 1734 000a C158     		ldr	r1, [r0, r3]
 1735 000c 054A     		ldr	r2, .L156+4
 1736 000e 1368     		ldr	r3, [r2]
 1737 0010 8B43     		bic	r3, r1
 1738 0012 1360     		str	r3, [r2]
 1739 0014 02E0     		b	.L153
 1740              	.LVL185:
 1741              	.L154:
1684:.\Generated_Source\PSoC4/CyLFClk.c ****         }
 1742              		.loc 1 1684 0 discriminator 1
 1743 0016 0020     		mov	r0, #0
 1744              	.LVL186:
 1745 0018 FFF7FEFF 		bl	CyHalt
 1746              	.LVL187:
 1747              	.L153:
1686:.\Generated_Source\PSoC4/CyLFClk.c **** 
 1748              		.loc 1 1686 0
 1749              		@ sp needed
 1750 001c 08BD     		pop	{r3, pc}
 1751              	.L157:
 1752 001e C046     		.align	2
 1753              	.L156:
 1754 0020 00000000 		.word	.LANCHOR1
 1755 0024 00000000 		.word	.LANCHOR2
 1756              		.cfi_endproc
 1757              	.LFE29:
 1758              		.size	CySysWdtDisableCounterIsr, .-CySysWdtDisableCounterIsr
 1759              		.section	.text.CySysWdtIsr,"ax",%progbits
 1760              		.align	2
 1761              		.global	CySysWdtIsr
 1762              		.code	16
 1763              		.thumb_func
 1764              		.type	CySysWdtIsr, %function
 1765              	CySysWdtIsr:
 1766              	.LFB30:
ARM GAS  C:\Users\g\AppData\Local\Temp\ccjVf3bh.s 			page 69


1710:.\Generated_Source\PSoC4/CyLFClk.c ****         if(0u != (CY_SYS_WDT_COUNTER0_INT & CY_SYS_WDT_CONTROL_REG))
 1767              		.loc 1 1710 0
 1768              		.cfi_startproc
 1769 0000 10B5     		push	{r4, lr}
 1770              		.cfi_def_cfa_offset 8
 1771              		.cfi_offset 4, -8
 1772              		.cfi_offset 14, -4
1711:.\Generated_Source\PSoC4/CyLFClk.c ****         {
 1773              		.loc 1 1711 0
 1774 0002 244B     		ldr	r3, .L165
 1775 0004 1B68     		ldr	r3, [r3]
 1776 0006 5B07     		lsl	r3, r3, #29
 1777 0008 15D5     		bpl	.L159
1713:.\Generated_Source\PSoC4/CyLFClk.c ****             {
 1778              		.loc 1 1713 0
 1779 000a 234B     		ldr	r3, .L165+4
 1780 000c 1B68     		ldr	r3, [r3]
 1781 000e 5B07     		lsl	r3, r3, #29
 1782 0010 0ED5     		bpl	.L160
1715:.\Generated_Source\PSoC4/CyLFClk.c ****                 disableServicedIsr  &= ~CY_SYS_WDT_COUNTER0_INT;
 1783              		.loc 1 1715 0
 1784 0012 224B     		ldr	r3, .L165+8
 1785 0014 D969     		ldr	r1, [r3, #28]
 1786 0016 0420     		mov	r0, #4
 1787 0018 0140     		and	r1, r0
 1788 001a 1F4C     		ldr	r4, .L165+4
 1789 001c 2268     		ldr	r2, [r4]
 1790 001e 8A43     		bic	r2, r1
 1791 0020 2260     		str	r2, [r4]
1716:.\Generated_Source\PSoC4/CyLFClk.c ****                 if(cySysWdtCallback[CY_SYS_WDT_COUNTER0] != (void *) 0)
 1792              		.loc 1 1716 0
 1793 0022 DA69     		ldr	r2, [r3, #28]
 1794 0024 8243     		bic	r2, r0
 1795 0026 DA61     		str	r2, [r3, #28]
1717:.\Generated_Source\PSoC4/CyLFClk.c ****                 {
 1796              		.loc 1 1717 0
 1797 0028 1B69     		ldr	r3, [r3, #16]
 1798 002a 002B     		cmp	r3, #0
 1799 002c 00D0     		beq	.L160
1719:.\Generated_Source\PSoC4/CyLFClk.c ****                 }
 1800              		.loc 1 1719 0
 1801 002e 9847     		blx	r3
 1802              	.LVL188:
 1803              	.L160:
1722:.\Generated_Source\PSoC4/CyLFClk.c ****         }
 1804              		.loc 1 1722 0
 1805 0030 0420     		mov	r0, #4
 1806 0032 FFF7FEFF 		bl	CySysWdtClearInterrupt
 1807              	.LVL189:
 1808              	.L159:
1725:.\Generated_Source\PSoC4/CyLFClk.c ****         {
 1809              		.loc 1 1725 0
 1810 0036 174B     		ldr	r3, .L165
 1811 0038 1B68     		ldr	r3, [r3]
 1812 003a 5B05     		lsl	r3, r3, #21
 1813 003c 18D5     		bpl	.L161
1727:.\Generated_Source\PSoC4/CyLFClk.c ****             {
ARM GAS  C:\Users\g\AppData\Local\Temp\ccjVf3bh.s 			page 70


 1814              		.loc 1 1727 0
 1815 003e 164B     		ldr	r3, .L165+4
 1816 0040 1B68     		ldr	r3, [r3]
 1817 0042 5B05     		lsl	r3, r3, #21
 1818 0044 10D5     		bpl	.L162
1729:.\Generated_Source\PSoC4/CyLFClk.c ****                 disableServicedIsr  &= ~CY_SYS_WDT_COUNTER1_INT;
 1819              		.loc 1 1729 0
 1820 0046 154B     		ldr	r3, .L165+8
 1821 0048 D969     		ldr	r1, [r3, #28]
 1822 004a 8022     		mov	r2, #128
 1823 004c D200     		lsl	r2, r2, #3
 1824 004e 1140     		and	r1, r2
 1825 0050 1148     		ldr	r0, .L165+4
 1826 0052 0268     		ldr	r2, [r0]
 1827 0054 8A43     		bic	r2, r1
 1828 0056 0260     		str	r2, [r0]
1730:.\Generated_Source\PSoC4/CyLFClk.c ****                 if(cySysWdtCallback[CY_SYS_WDT_COUNTER1] != (void *) 0)
 1829              		.loc 1 1730 0
 1830 0058 D969     		ldr	r1, [r3, #28]
 1831 005a 114A     		ldr	r2, .L165+12
 1832 005c 0A40     		and	r2, r1
 1833 005e DA61     		str	r2, [r3, #28]
1731:.\Generated_Source\PSoC4/CyLFClk.c ****                 {
 1834              		.loc 1 1731 0
 1835 0060 5B69     		ldr	r3, [r3, #20]
 1836 0062 002B     		cmp	r3, #0
 1837 0064 00D0     		beq	.L162
1733:.\Generated_Source\PSoC4/CyLFClk.c ****                 }
 1838              		.loc 1 1733 0
 1839 0066 9847     		blx	r3
 1840              	.LVL190:
 1841              	.L162:
1736:.\Generated_Source\PSoC4/CyLFClk.c ****         }
 1842              		.loc 1 1736 0
 1843 0068 8020     		mov	r0, #128
 1844 006a C000     		lsl	r0, r0, #3
 1845 006c FFF7FEFF 		bl	CySysWdtClearInterrupt
 1846              	.LVL191:
 1847              	.L161:
1739:.\Generated_Source\PSoC4/CyLFClk.c ****         {
 1848              		.loc 1 1739 0
 1849 0070 084B     		ldr	r3, .L165
 1850 0072 1B68     		ldr	r3, [r3]
 1851 0074 5B03     		lsl	r3, r3, #13
 1852 0076 0CD5     		bpl	.L158
1741:.\Generated_Source\PSoC4/CyLFClk.c ****             {
 1853              		.loc 1 1741 0
 1854 0078 074B     		ldr	r3, .L165+4
 1855 007a 1B68     		ldr	r3, [r3]
 1856 007c 5B03     		lsl	r3, r3, #13
 1857 007e 04D5     		bpl	.L164
1743:.\Generated_Source\PSoC4/CyLFClk.c ****                 {
 1858              		.loc 1 1743 0
 1859 0080 064B     		ldr	r3, .L165+8
 1860 0082 9B69     		ldr	r3, [r3, #24]
 1861 0084 002B     		cmp	r3, #0
 1862 0086 00D0     		beq	.L164
ARM GAS  C:\Users\g\AppData\Local\Temp\ccjVf3bh.s 			page 71


1745:.\Generated_Source\PSoC4/CyLFClk.c ****                 }
 1863              		.loc 1 1745 0
 1864 0088 9847     		blx	r3
 1865              	.LVL192:
 1866              	.L164:
1748:.\Generated_Source\PSoC4/CyLFClk.c ****         }
 1867              		.loc 1 1748 0
 1868 008a 8020     		mov	r0, #128
 1869 008c C002     		lsl	r0, r0, #11
 1870 008e FFF7FEFF 		bl	CySysWdtClearInterrupt
 1871              	.LVL193:
 1872              	.L158:
1750:.\Generated_Source\PSoC4/CyLFClk.c **** 
 1873              		.loc 1 1750 0
 1874              		@ sp needed
 1875 0092 10BD     		pop	{r4, pc}
 1876              	.L166:
 1877              		.align	2
 1878              	.L165:
 1879 0094 10020B40 		.word	1074463248
 1880 0098 00000000 		.word	.LANCHOR2
 1881 009c 00000000 		.word	.LANCHOR0
 1882 00a0 FFFBFFFF 		.word	-1025
 1883              		.cfi_endproc
 1884              	.LFE30:
 1885              		.size	CySysWdtIsr, .-CySysWdtIsr
 1886              		.section	.text.CySysWatchdogFeed,"ax",%progbits
 1887              		.align	2
 1888              		.global	CySysWatchdogFeed
 1889              		.code	16
 1890              		.thumb_func
 1891              		.type	CySysWatchdogFeed, %function
 1892              	CySysWatchdogFeed:
 1893              	.LFB31:
1775:.\Generated_Source\PSoC4/CyLFClk.c ****         if(counterNum == CY_SYS_WDT_COUNTER0)
 1894              		.loc 1 1775 0
 1895              		.cfi_startproc
 1896              	.LVL194:
 1897 0000 10B5     		push	{r4, lr}
 1898              		.cfi_def_cfa_offset 8
 1899              		.cfi_offset 4, -8
 1900              		.cfi_offset 14, -4
 1901 0002 041E     		sub	r4, r0, #0
1776:.\Generated_Source\PSoC4/CyLFClk.c ****         {
 1902              		.loc 1 1776 0
 1903 0004 13D1     		bne	.L168
1778:.\Generated_Source\PSoC4/CyLFClk.c ****             {
 1904              		.loc 1 1778 0
 1905 0006 FFF7FEFF 		bl	CySysWdtGetMode
 1906              	.LVL195:
 1907 000a 0328     		cmp	r0, #3
 1908 000c 03D1     		bne	.L169
1780:.\Generated_Source\PSoC4/CyLFClk.c ****             }
 1909              		.loc 1 1780 0
 1910 000e 0130     		add	r0, r0, #1
 1911 0010 FFF7FEFF 		bl	CySysWdtClearInterrupt
 1912              	.LVL196:
ARM GAS  C:\Users\g\AppData\Local\Temp\ccjVf3bh.s 			page 72


 1913 0014 23E0     		b	.L167
 1914              	.L169:
1782:.\Generated_Source\PSoC4/CyLFClk.c ****             {
 1915              		.loc 1 1782 0
 1916 0016 201C     		mov	r0, r4
 1917 0018 FFF7FEFF 		bl	CySysWdtGetMode
 1918              	.LVL197:
 1919 001c 0228     		cmp	r0, #2
 1920 001e 1ED1     		bne	.L167
1784:.\Generated_Source\PSoC4/CyLFClk.c ****                 CySysWdtClearInterrupt(CY_SYS_WDT_COUNTER0_INT);
 1921              		.loc 1 1784 0
 1922 0020 0630     		add	r0, r0, #6
 1923 0022 FFF7FEFF 		bl	CySysWdtResetCounters
 1924              	.LVL198:
1785:.\Generated_Source\PSoC4/CyLFClk.c ****             }
 1925              		.loc 1 1785 0
 1926 0026 0420     		mov	r0, #4
 1927 0028 FFF7FEFF 		bl	CySysWdtClearInterrupt
 1928              	.LVL199:
 1929 002c 17E0     		b	.L167
 1930              	.LVL200:
 1931              	.L168:
1792:.\Generated_Source\PSoC4/CyLFClk.c ****         {
 1932              		.loc 1 1792 0
 1933 002e 0128     		cmp	r0, #1
 1934 0030 15D1     		bne	.L167
1794:.\Generated_Source\PSoC4/CyLFClk.c ****             {
 1935              		.loc 1 1794 0
 1936 0032 FFF7FEFF 		bl	CySysWdtGetMode
 1937              	.LVL201:
 1938 0036 0328     		cmp	r0, #3
 1939 0038 04D1     		bne	.L171
1796:.\Generated_Source\PSoC4/CyLFClk.c ****             }
 1940              		.loc 1 1796 0
 1941 003a 8020     		mov	r0, #128
 1942 003c C000     		lsl	r0, r0, #3
 1943 003e FFF7FEFF 		bl	CySysWdtClearInterrupt
 1944              	.LVL202:
 1945 0042 0CE0     		b	.L167
 1946              	.L171:
1798:.\Generated_Source\PSoC4/CyLFClk.c ****             {
 1947              		.loc 1 1798 0
 1948 0044 201C     		mov	r0, r4
 1949 0046 FFF7FEFF 		bl	CySysWdtGetMode
 1950              	.LVL203:
 1951 004a 0228     		cmp	r0, #2
 1952 004c 07D1     		bne	.L167
1800:.\Generated_Source\PSoC4/CyLFClk.c ****                 CySysWdtClearInterrupt(CY_SYS_WDT_COUNTER1_INT);
 1953              		.loc 1 1800 0
 1954 004e 8020     		mov	r0, #128
 1955 0050 0001     		lsl	r0, r0, #4
 1956 0052 FFF7FEFF 		bl	CySysWdtResetCounters
 1957              	.LVL204:
1801:.\Generated_Source\PSoC4/CyLFClk.c ****             }
 1958              		.loc 1 1801 0
 1959 0056 8020     		mov	r0, #128
 1960 0058 C000     		lsl	r0, r0, #3
ARM GAS  C:\Users\g\AppData\Local\Temp\ccjVf3bh.s 			page 73


 1961 005a FFF7FEFF 		bl	CySysWdtClearInterrupt
 1962              	.LVL205:
 1963              	.L167:
1812:.\Generated_Source\PSoC4/CyLFClk.c **** 
 1964              		.loc 1 1812 0
 1965              		@ sp needed
 1966              	.LVL206:
 1967 005e 10BD     		pop	{r4, pc}
 1968              		.cfi_endproc
 1969              	.LFE31:
 1970              		.size	CySysWatchdogFeed, .-CySysWatchdogFeed
 1971              		.section	.text.CySysTimerDelayUntilMatch,"ax",%progbits
 1972              		.align	2
 1973              		.global	CySysTimerDelayUntilMatch
 1974              		.code	16
 1975              		.thumb_func
 1976              		.type	CySysTimerDelayUntilMatch, %function
 1977              	CySysTimerDelayUntilMatch:
 1978              	.LFB35:
1904:.\Generated_Source\PSoC4/CyLFClk.c **** 
1905:.\Generated_Source\PSoC4/CyLFClk.c **** #else
1906:.\Generated_Source\PSoC4/CyLFClk.c **** 
1907:.\Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
1908:.\Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysWdtGetEnabledStatus
1909:.\Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
1910:.\Generated_Source\PSoC4/CyLFClk.c ****     *
1911:.\Generated_Source\PSoC4/CyLFClk.c ****     * \brief Reads the enabled status of the WDT counter.
1912:.\Generated_Source\PSoC4/CyLFClk.c ****     *
1913:.\Generated_Source\PSoC4/CyLFClk.c ****     * \return The status of the WDT counter:
1914:.\Generated_Source\PSoC4/CyLFClk.c ****     * \return 0 - Counter is disabled
1915:.\Generated_Source\PSoC4/CyLFClk.c ****     * \return 1 - Counter is enabled
1916:.\Generated_Source\PSoC4/CyLFClk.c ****     *
1917:.\Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
1918:.\Generated_Source\PSoC4/CyLFClk.c ****     uint32 CySysWdtGetEnabledStatus(void)
1919:.\Generated_Source\PSoC4/CyLFClk.c ****     {
1920:.\Generated_Source\PSoC4/CyLFClk.c ****         return ((CY_SYS_WDT_DISABLE_KEY_REG == CY_SYS_WDT_KEY) ? (uint32) 0u : (uint32) 1u);
1921:.\Generated_Source\PSoC4/CyLFClk.c ****     }
1922:.\Generated_Source\PSoC4/CyLFClk.c **** 
1923:.\Generated_Source\PSoC4/CyLFClk.c **** 
1924:.\Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
1925:.\Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysWdtEnable
1926:.\Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
1927:.\Generated_Source\PSoC4/CyLFClk.c ****     *
1928:.\Generated_Source\PSoC4/CyLFClk.c ****     * \brief
1929:.\Generated_Source\PSoC4/CyLFClk.c ****     * Enables watchdog timer reset generation.
1930:.\Generated_Source\PSoC4/CyLFClk.c ****     *
1931:.\Generated_Source\PSoC4/CyLFClk.c ****     * CySysWdtClearInterrupt() feeds the watchdog. Two unserviced interrupts lead 
1932:.\Generated_Source\PSoC4/CyLFClk.c ****     * to a system reset (i.e. at the third match).
1933:.\Generated_Source\PSoC4/CyLFClk.c ****     *
1934:.\Generated_Source\PSoC4/CyLFClk.c ****     * ILO is enabled by the hardware once WDT is started.
1935:.\Generated_Source\PSoC4/CyLFClk.c ****     *
1936:.\Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
1937:.\Generated_Source\PSoC4/CyLFClk.c ****     void CySysWdtEnable(void)
1938:.\Generated_Source\PSoC4/CyLFClk.c ****     {
1939:.\Generated_Source\PSoC4/CyLFClk.c ****         CY_SYS_WDT_DISABLE_KEY_REG = 0u;
1940:.\Generated_Source\PSoC4/CyLFClk.c ****     }
1941:.\Generated_Source\PSoC4/CyLFClk.c **** 
ARM GAS  C:\Users\g\AppData\Local\Temp\ccjVf3bh.s 			page 74


1942:.\Generated_Source\PSoC4/CyLFClk.c **** 
1943:.\Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
1944:.\Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysWdtDisable
1945:.\Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
1946:.\Generated_Source\PSoC4/CyLFClk.c ****     *
1947:.\Generated_Source\PSoC4/CyLFClk.c ****     * \brief Disables the WDT reset generation.
1948:.\Generated_Source\PSoC4/CyLFClk.c ****     *
1949:.\Generated_Source\PSoC4/CyLFClk.c ****     * This function unlocks the ENABLE bit in the CLK_ILO_CONFIG registers and
1950:.\Generated_Source\PSoC4/CyLFClk.c ****     * enables the user to disable ILO.
1951:.\Generated_Source\PSoC4/CyLFClk.c ****     *
1952:.\Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
1953:.\Generated_Source\PSoC4/CyLFClk.c ****     void CySysWdtDisable(void)
1954:.\Generated_Source\PSoC4/CyLFClk.c ****     {
1955:.\Generated_Source\PSoC4/CyLFClk.c ****         CY_SYS_WDT_DISABLE_KEY_REG = CY_SYS_WDT_KEY;
1956:.\Generated_Source\PSoC4/CyLFClk.c ****     }
1957:.\Generated_Source\PSoC4/CyLFClk.c **** 
1958:.\Generated_Source\PSoC4/CyLFClk.c **** 
1959:.\Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
1960:.\Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysWdtSetMatch
1961:.\Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
1962:.\Generated_Source\PSoC4/CyLFClk.c ****     *
1963:.\Generated_Source\PSoC4/CyLFClk.c ****     * \brief Configures the WDT counter match comparison value.
1964:.\Generated_Source\PSoC4/CyLFClk.c ****     *
1965:.\Generated_Source\PSoC4/CyLFClk.c ****     * \param match Valid range [0-65535]. The value to be used to match against 
1966:.\Generated_Source\PSoC4/CyLFClk.c ****     * the counter.
1967:.\Generated_Source\PSoC4/CyLFClk.c ****     *
1968:.\Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
1969:.\Generated_Source\PSoC4/CyLFClk.c ****     void CySysWdtSetMatch(uint32 match)
1970:.\Generated_Source\PSoC4/CyLFClk.c ****     {
1971:.\Generated_Source\PSoC4/CyLFClk.c ****         match &= CY_SYS_WDT_MATCH_MASK;
1972:.\Generated_Source\PSoC4/CyLFClk.c ****         CY_SYS_WDT_MATCH_REG = (CY_SYS_WDT_MATCH_REG & (uint32)(~CY_SYS_WDT_MATCH_MASK)) | match;
1973:.\Generated_Source\PSoC4/CyLFClk.c ****     }
1974:.\Generated_Source\PSoC4/CyLFClk.c **** 
1975:.\Generated_Source\PSoC4/CyLFClk.c **** 
1976:.\Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
1977:.\Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysWdtGetMatch
1978:.\Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
1979:.\Generated_Source\PSoC4/CyLFClk.c ****     *
1980:.\Generated_Source\PSoC4/CyLFClk.c ****     * \brief Reads the WDT counter match comparison value.
1981:.\Generated_Source\PSoC4/CyLFClk.c ****     *
1982:.\Generated_Source\PSoC4/CyLFClk.c ****     * \return The counter match value.
1983:.\Generated_Source\PSoC4/CyLFClk.c ****     *
1984:.\Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
1985:.\Generated_Source\PSoC4/CyLFClk.c ****     uint32 CySysWdtGetMatch(void)
1986:.\Generated_Source\PSoC4/CyLFClk.c ****     {
1987:.\Generated_Source\PSoC4/CyLFClk.c ****         return (CY_SYS_WDT_MATCH_REG & CY_SYS_WDT_MATCH_MASK);
1988:.\Generated_Source\PSoC4/CyLFClk.c ****     }
1989:.\Generated_Source\PSoC4/CyLFClk.c **** 
1990:.\Generated_Source\PSoC4/CyLFClk.c **** 
1991:.\Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
1992:.\Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysWdtGetCount
1993:.\Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
1994:.\Generated_Source\PSoC4/CyLFClk.c ****     *
1995:.\Generated_Source\PSoC4/CyLFClk.c ****     * \brief Reads the current WDT counter value.
1996:.\Generated_Source\PSoC4/CyLFClk.c ****     *
1997:.\Generated_Source\PSoC4/CyLFClk.c ****     * \return A live counter value.
1998:.\Generated_Source\PSoC4/CyLFClk.c ****     *
ARM GAS  C:\Users\g\AppData\Local\Temp\ccjVf3bh.s 			page 75


1999:.\Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
2000:.\Generated_Source\PSoC4/CyLFClk.c ****     uint32 CySysWdtGetCount(void)
2001:.\Generated_Source\PSoC4/CyLFClk.c ****     {
2002:.\Generated_Source\PSoC4/CyLFClk.c ****         return ((uint32)CY_SYS_WDT_COUNTER_REG);
2003:.\Generated_Source\PSoC4/CyLFClk.c ****     }
2004:.\Generated_Source\PSoC4/CyLFClk.c **** 
2005:.\Generated_Source\PSoC4/CyLFClk.c **** 
2006:.\Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
2007:.\Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysWdtSetIgnoreBits
2008:.\Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
2009:.\Generated_Source\PSoC4/CyLFClk.c ****     *
2010:.\Generated_Source\PSoC4/CyLFClk.c ****     * \brief
2011:.\Generated_Source\PSoC4/CyLFClk.c ****     * Configures the number of the MSB bits of the watchdog timer that are not
2012:.\Generated_Source\PSoC4/CyLFClk.c ****     * checked against the match.
2013:.\Generated_Source\PSoC4/CyLFClk.c ****     *
2014:.\Generated_Source\PSoC4/CyLFClk.c ****     * \param bitsNum Valid range [0-15]. The number of the MSB bits.
2015:.\Generated_Source\PSoC4/CyLFClk.c ****     *
2016:.\Generated_Source\PSoC4/CyLFClk.c ****     * \details The value of bitsNum controls the time-to-reset of the watchdog
2017:.\Generated_Source\PSoC4/CyLFClk.c ****     * (which happens after 3 successive matches).
2018:.\Generated_Source\PSoC4/CyLFClk.c ****     *
2019:.\Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
2020:.\Generated_Source\PSoC4/CyLFClk.c ****     void CySysWdtSetIgnoreBits(uint32 bitsNum)
2021:.\Generated_Source\PSoC4/CyLFClk.c ****     {
2022:.\Generated_Source\PSoC4/CyLFClk.c ****         bitsNum = ((uint32)(bitsNum << CY_SYS_WDT_IGNORE_BITS_SHIFT) & CY_SYS_WDT_IGNORE_BITS_MASK)
2023:.\Generated_Source\PSoC4/CyLFClk.c ****         CY_SYS_WDT_MATCH_REG = (CY_SYS_WDT_MATCH_REG & (uint32)(~CY_SYS_WDT_IGNORE_BITS_MASK)) | bi
2024:.\Generated_Source\PSoC4/CyLFClk.c ****     }
2025:.\Generated_Source\PSoC4/CyLFClk.c **** 
2026:.\Generated_Source\PSoC4/CyLFClk.c **** 
2027:.\Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
2028:.\Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysWdtGetIgnoreBits
2029:.\Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
2030:.\Generated_Source\PSoC4/CyLFClk.c ****     *
2031:.\Generated_Source\PSoC4/CyLFClk.c ****     * \brief
2032:.\Generated_Source\PSoC4/CyLFClk.c ****     * Reads the number of the  MSB bits of the watchdog timer that are not
2033:.\Generated_Source\PSoC4/CyLFClk.c ****     * checked against the match.
2034:.\Generated_Source\PSoC4/CyLFClk.c ****     *
2035:.\Generated_Source\PSoC4/CyLFClk.c ****     * \return The number of the MSB bits.
2036:.\Generated_Source\PSoC4/CyLFClk.c ****     *
2037:.\Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
2038:.\Generated_Source\PSoC4/CyLFClk.c ****     uint32 CySysWdtGetIgnoreBits(void)
2039:.\Generated_Source\PSoC4/CyLFClk.c ****     {
2040:.\Generated_Source\PSoC4/CyLFClk.c ****         return((uint32)((CY_SYS_WDT_MATCH_REG & CY_SYS_WDT_IGNORE_BITS_MASK) >> CY_SYS_WDT_IGNORE_B
2041:.\Generated_Source\PSoC4/CyLFClk.c ****     }
2042:.\Generated_Source\PSoC4/CyLFClk.c **** 
2043:.\Generated_Source\PSoC4/CyLFClk.c **** 
2044:.\Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
2045:.\Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysWdtClearInterrupt
2046:.\Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
2047:.\Generated_Source\PSoC4/CyLFClk.c ****     *
2048:.\Generated_Source\PSoC4/CyLFClk.c ****     * \brief
2049:.\Generated_Source\PSoC4/CyLFClk.c ****     * Feeds the watchdog.
2050:.\Generated_Source\PSoC4/CyLFClk.c ****     * Cleans the WDT match flag which is set every time the WDT counter reaches a 
2051:.\Generated_Source\PSoC4/CyLFClk.c ****     * WDT match value. Two unserviced interrupts lead to a system reset 
2052:.\Generated_Source\PSoC4/CyLFClk.c ****     * (i.e. at the third match).
2053:.\Generated_Source\PSoC4/CyLFClk.c ****     *
2054:.\Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
2055:.\Generated_Source\PSoC4/CyLFClk.c ****     void CySysWdtClearInterrupt(void)
ARM GAS  C:\Users\g\AppData\Local\Temp\ccjVf3bh.s 			page 76


2056:.\Generated_Source\PSoC4/CyLFClk.c ****     {
2057:.\Generated_Source\PSoC4/CyLFClk.c ****         CY_SYS_SRSS_INTR_REG |= CY_SYS_WDT_LOWER_BIT_MASK;
2058:.\Generated_Source\PSoC4/CyLFClk.c ****     }
2059:.\Generated_Source\PSoC4/CyLFClk.c **** 
2060:.\Generated_Source\PSoC4/CyLFClk.c **** 
2061:.\Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
2062:.\Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysWdtMaskInterrupt
2063:.\Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
2064:.\Generated_Source\PSoC4/CyLFClk.c ****     *
2065:.\Generated_Source\PSoC4/CyLFClk.c ****     * \brief
2066:.\Generated_Source\PSoC4/CyLFClk.c ****     * After masking interrupts from WDT, they are not passed to CPU.
2067:.\Generated_Source\PSoC4/CyLFClk.c ****     * This function does not disable WDT reset generation.
2068:.\Generated_Source\PSoC4/CyLFClk.c ****     *
2069:.\Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
2070:.\Generated_Source\PSoC4/CyLFClk.c ****     void CySysWdtMaskInterrupt(void)
2071:.\Generated_Source\PSoC4/CyLFClk.c ****     {
2072:.\Generated_Source\PSoC4/CyLFClk.c ****         CY_SYS_SRSS_INTR_MASK_REG &= (uint32)(~ (uint32)CY_SYS_WDT_LOWER_BIT_MASK);
2073:.\Generated_Source\PSoC4/CyLFClk.c ****     }
2074:.\Generated_Source\PSoC4/CyLFClk.c **** 
2075:.\Generated_Source\PSoC4/CyLFClk.c **** 
2076:.\Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
2077:.\Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysWdtUnmaskInterrupt
2078:.\Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
2079:.\Generated_Source\PSoC4/CyLFClk.c ****     *
2080:.\Generated_Source\PSoC4/CyLFClk.c ****     * \brief
2081:.\Generated_Source\PSoC4/CyLFClk.c ****     * After unmasking interrupts from WDT, they are passed to CPU.
2082:.\Generated_Source\PSoC4/CyLFClk.c ****     * This function does not impact the reset generation.
2083:.\Generated_Source\PSoC4/CyLFClk.c ****     *
2084:.\Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
2085:.\Generated_Source\PSoC4/CyLFClk.c ****     void CySysWdtUnmaskInterrupt(void)
2086:.\Generated_Source\PSoC4/CyLFClk.c ****     {
2087:.\Generated_Source\PSoC4/CyLFClk.c ****         CY_SYS_SRSS_INTR_MASK_REG |= CY_SYS_WDT_LOWER_BIT_MASK;
2088:.\Generated_Source\PSoC4/CyLFClk.c ****     }
2089:.\Generated_Source\PSoC4/CyLFClk.c **** 
2090:.\Generated_Source\PSoC4/CyLFClk.c **** 
2091:.\Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
2092:.\Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysWdtSetIsrCallback
2093:.\Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
2094:.\Generated_Source\PSoC4/CyLFClk.c ****     *
2095:.\Generated_Source\PSoC4/CyLFClk.c ****     * \brief
2096:.\Generated_Source\PSoC4/CyLFClk.c ****     * Sets the ISR callback function for the WDT counter
2097:.\Generated_Source\PSoC4/CyLFClk.c ****     *
2098:.\Generated_Source\PSoC4/CyLFClk.c ****     * \param function The pointer to the callback function.
2099:.\Generated_Source\PSoC4/CyLFClk.c ****     *
2100:.\Generated_Source\PSoC4/CyLFClk.c ****     * \return The pointer to a previous callback function.
2101:.\Generated_Source\PSoC4/CyLFClk.c ****     *
2102:.\Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
2103:.\Generated_Source\PSoC4/CyLFClk.c ****     cyWdtCallback CySysWdtSetInterruptCallback(cyWdtCallback function)
2104:.\Generated_Source\PSoC4/CyLFClk.c ****     {
2105:.\Generated_Source\PSoC4/CyLFClk.c ****         cyWdtCallback prevCallback = (void *)0;
2106:.\Generated_Source\PSoC4/CyLFClk.c **** 
2107:.\Generated_Source\PSoC4/CyLFClk.c ****         prevCallback = cySysWdtCallback;
2108:.\Generated_Source\PSoC4/CyLFClk.c ****         cySysWdtCallback = function;
2109:.\Generated_Source\PSoC4/CyLFClk.c **** 
2110:.\Generated_Source\PSoC4/CyLFClk.c ****         return(prevCallback);
2111:.\Generated_Source\PSoC4/CyLFClk.c ****     }
2112:.\Generated_Source\PSoC4/CyLFClk.c **** 
ARM GAS  C:\Users\g\AppData\Local\Temp\ccjVf3bh.s 			page 77


2113:.\Generated_Source\PSoC4/CyLFClk.c **** 
2114:.\Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
2115:.\Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysWdtGetIsrCallback
2116:.\Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
2117:.\Generated_Source\PSoC4/CyLFClk.c ****     *
2118:.\Generated_Source\PSoC4/CyLFClk.c ****     * \brief
2119:.\Generated_Source\PSoC4/CyLFClk.c ****     * Gets the ISR callback function for the WDT counter
2120:.\Generated_Source\PSoC4/CyLFClk.c ****     *
2121:.\Generated_Source\PSoC4/CyLFClk.c ****     * \return The pointer to the callback function registered for WDT.
2122:.\Generated_Source\PSoC4/CyLFClk.c ****     *
2123:.\Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
2124:.\Generated_Source\PSoC4/CyLFClk.c ****     cyWdtCallback CySysWdtGetInterruptCallback(void)
2125:.\Generated_Source\PSoC4/CyLFClk.c ****     {
2126:.\Generated_Source\PSoC4/CyLFClk.c ****         return(cySysWdtCallback);
2127:.\Generated_Source\PSoC4/CyLFClk.c ****     }
2128:.\Generated_Source\PSoC4/CyLFClk.c **** 
2129:.\Generated_Source\PSoC4/CyLFClk.c **** 
2130:.\Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
2131:.\Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysWdtIsr
2132:.\Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
2133:.\Generated_Source\PSoC4/CyLFClk.c ****     *
2134:.\Generated_Source\PSoC4/CyLFClk.c ****     * \brief
2135:.\Generated_Source\PSoC4/CyLFClk.c ****     * This is the handler of the WDT interrupt in CPU NVIC.
2136:.\Generated_Source\PSoC4/CyLFClk.c ****     *
2137:.\Generated_Source\PSoC4/CyLFClk.c ****     * The handler calls the respective callback functions configured by the user 
2138:.\Generated_Source\PSoC4/CyLFClk.c ****     * by using CySysWdtSetIsrCallback() API.
2139:.\Generated_Source\PSoC4/CyLFClk.c ****     *
2140:.\Generated_Source\PSoC4/CyLFClk.c ****     *
2141:.\Generated_Source\PSoC4/CyLFClk.c ****     * \details
2142:.\Generated_Source\PSoC4/CyLFClk.c ****     * This function clears the WDT interrupt every time when it is called.
2143:.\Generated_Source\PSoC4/CyLFClk.c ****     * Reset after the 3rd interrupt does not happen if this function is registered
2144:.\Generated_Source\PSoC4/CyLFClk.c ****     * as the interrupt handler even if the "Watchdog with Interrupt" mode is
2145:.\Generated_Source\PSoC4/CyLFClk.c ****     * selected on the "Low Frequency Clocks" tab.
2146:.\Generated_Source\PSoC4/CyLFClk.c ****     *
2147:.\Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
2148:.\Generated_Source\PSoC4/CyLFClk.c ****     void CySysWdtIsr(void)
2149:.\Generated_Source\PSoC4/CyLFClk.c ****     {
2150:.\Generated_Source\PSoC4/CyLFClk.c ****         if(cySysWdtCallback != (void *) 0)
2151:.\Generated_Source\PSoC4/CyLFClk.c ****         {
2152:.\Generated_Source\PSoC4/CyLFClk.c ****             (void)(cySysWdtCallback)();
2153:.\Generated_Source\PSoC4/CyLFClk.c ****         }
2154:.\Generated_Source\PSoC4/CyLFClk.c **** 
2155:.\Generated_Source\PSoC4/CyLFClk.c ****         CySysWdtClearInterrupt();
2156:.\Generated_Source\PSoC4/CyLFClk.c ****     }
2157:.\Generated_Source\PSoC4/CyLFClk.c **** 
2158:.\Generated_Source\PSoC4/CyLFClk.c **** #endif /* (CY_IP_SRSSV2) */
2159:.\Generated_Source\PSoC4/CyLFClk.c **** 
2160:.\Generated_Source\PSoC4/CyLFClk.c **** 
2161:.\Generated_Source\PSoC4/CyLFClk.c **** #if(CY_IP_SRSSLT && CY_IP_WCO && CY_IP_WCO_WDT_EN)
2162:.\Generated_Source\PSoC4/CyLFClk.c **** 
2163:.\Generated_Source\PSoC4/CyLFClk.c **** /*******************************************************************************
2164:.\Generated_Source\PSoC4/CyLFClk.c **** * Function Name: CySysClkGetTimerSource
2165:.\Generated_Source\PSoC4/CyLFClk.c **** ********************************************************************************
2166:.\Generated_Source\PSoC4/CyLFClk.c **** *
2167:.\Generated_Source\PSoC4/CyLFClk.c **** * \brief Gets the clock source for the DeepSleep Timers.
2168:.\Generated_Source\PSoC4/CyLFClk.c **** *
2169:.\Generated_Source\PSoC4/CyLFClk.c **** * The function is applicable only for PSoC 4100S / PSoC Analog Coprocessor.
ARM GAS  C:\Users\g\AppData\Local\Temp\ccjVf3bh.s 			page 78


2170:.\Generated_Source\PSoC4/CyLFClk.c **** *
2171:.\Generated_Source\PSoC4/CyLFClk.c **** * \return The DeepSleep Timer source
2172:.\Generated_Source\PSoC4/CyLFClk.c **** * CY_SYS_CLK_TIMER_SRC_ILO Internal Low Frequency (32 kHz) Oscillator (ILO)
2173:.\Generated_Source\PSoC4/CyLFClk.c **** * CY_SYS_CLK_TIMER_SRC_WCO Low Frequency Watch Crystal Oscillator (WCO)
2174:.\Generated_Source\PSoC4/CyLFClk.c **** *
2175:.\Generated_Source\PSoC4/CyLFClk.c **** *******************************************************************************/
2176:.\Generated_Source\PSoC4/CyLFClk.c ****     static uint32 CySysClkGetTimerSource(void)
2177:.\Generated_Source\PSoC4/CyLFClk.c ****     {
2178:.\Generated_Source\PSoC4/CyLFClk.c ****         uint32 timerSource;
2179:.\Generated_Source\PSoC4/CyLFClk.c ****         timerSource = CY_SYS_WCO_WDT_CONFIG_REG & CY_SYS_CLK_TIMER_SEL_MASK;
2180:.\Generated_Source\PSoC4/CyLFClk.c ****         return (timerSource);
2181:.\Generated_Source\PSoC4/CyLFClk.c ****     }    
2182:.\Generated_Source\PSoC4/CyLFClk.c **** 
2183:.\Generated_Source\PSoC4/CyLFClk.c **** 
2184:.\Generated_Source\PSoC4/CyLFClk.c **** /*******************************************************************************
2185:.\Generated_Source\PSoC4/CyLFClk.c **** * Function Name: CySysClkSetTimerSource
2186:.\Generated_Source\PSoC4/CyLFClk.c **** ****************************************************************************//**
2187:.\Generated_Source\PSoC4/CyLFClk.c **** *
2188:.\Generated_Source\PSoC4/CyLFClk.c **** * \brief Sets the clock source for the DeepSleep Timers.
2189:.\Generated_Source\PSoC4/CyLFClk.c **** *
2190:.\Generated_Source\PSoC4/CyLFClk.c **** * The function is applicable only for PSoC 4100S / PSoC Analog Coprocessor 
2191:.\Generated_Source\PSoC4/CyLFClk.c **** * devices.
2192:.\Generated_Source\PSoC4/CyLFClk.c **** *
2193:.\Generated_Source\PSoC4/CyLFClk.c **** * \param source
2194:.\Generated_Source\PSoC4/CyLFClk.c **** *  CY_SYS_CLK_TIMER_SRC_ILO - Internal Low Frequency (32 kHz) Oscillator 
2195:.\Generated_Source\PSoC4/CyLFClk.c **** * (ILO).<br>
2196:.\Generated_Source\PSoC4/CyLFClk.c **** * CY_SYS_CLK_TIMER_SRC_WCO - Low Frequency Watch Crystal Oscillator 
2197:.\Generated_Source\PSoC4/CyLFClk.c **** * (WCO).
2198:.\Generated_Source\PSoC4/CyLFClk.c **** *
2199:.\Generated_Source\PSoC4/CyLFClk.c **** * \details Both the current source and the new source must be running and stable 
2200:.\Generated_Source\PSoC4/CyLFClk.c **** * before calling this function.
2201:.\Generated_Source\PSoC4/CyLFClk.c **** *
2202:.\Generated_Source\PSoC4/CyLFClk.c **** * \warning DeepSleep Timer reset is required if Timer source was switched while 
2203:.\Generated_Source\PSoC4/CyLFClk.c **** * DeepSleep Timers were running. Call CySysTimerResetCounters() API after 
2204:.\Generated_Source\PSoC4/CyLFClk.c **** * Timer source switching.
2205:.\Generated_Source\PSoC4/CyLFClk.c **** * It is highly recommended to disable DeepSleep Timers before Timer source 
2206:.\Generated_Source\PSoC4/CyLFClk.c **** * switching. Changing the Timer source may change the functionality that uses 
2207:.\Generated_Source\PSoC4/CyLFClk.c **** * this Timers as clock source.
2208:.\Generated_Source\PSoC4/CyLFClk.c **** *******************************************************************************/
2209:.\Generated_Source\PSoC4/CyLFClk.c ****     void CySysClkSetTimerSource(uint32 source)
2210:.\Generated_Source\PSoC4/CyLFClk.c ****     {
2211:.\Generated_Source\PSoC4/CyLFClk.c ****         uint8  interruptState;
2212:.\Generated_Source\PSoC4/CyLFClk.c **** 
2213:.\Generated_Source\PSoC4/CyLFClk.c ****         if (CySysClkGetTimerSource() != source)
2214:.\Generated_Source\PSoC4/CyLFClk.c ****         {
2215:.\Generated_Source\PSoC4/CyLFClk.c **** 
2216:.\Generated_Source\PSoC4/CyLFClk.c ****             /* Reset both _EN bits in WCO_WDT_CLKEN register */
2217:.\Generated_Source\PSoC4/CyLFClk.c ****             CY_SYS_WCO_WDT_CLKEN_REG &= ~CY_SYS_WCO_WDT_CLKEN_RESET_MASK;
2218:.\Generated_Source\PSoC4/CyLFClk.c ****             
2219:.\Generated_Source\PSoC4/CyLFClk.c ****             /* Wait 4 new clock source-cycles for change to come into effect */
2220:.\Generated_Source\PSoC4/CyLFClk.c ****             CyDelayUs(CY_SYS_4TIMER_DELAY_US);
2221:.\Generated_Source\PSoC4/CyLFClk.c **** 
2222:.\Generated_Source\PSoC4/CyLFClk.c ****             interruptState = CyEnterCriticalSection();
2223:.\Generated_Source\PSoC4/CyLFClk.c ****             CY_SYS_WCO_WDT_CONFIG_REG = (CY_SYS_WCO_WDT_CONFIG_REG & (uint32)(~CY_SYS_CLK_TIMER_SEL
2224:.\Generated_Source\PSoC4/CyLFClk.c ****                                     (source & CY_SYS_CLK_TIMER_SEL_MASK);
2225:.\Generated_Source\PSoC4/CyLFClk.c ****             CyExitCriticalSection(interruptState);
2226:.\Generated_Source\PSoC4/CyLFClk.c ****         }
ARM GAS  C:\Users\g\AppData\Local\Temp\ccjVf3bh.s 			page 79


2227:.\Generated_Source\PSoC4/CyLFClk.c **** 
2228:.\Generated_Source\PSoC4/CyLFClk.c ****         CY_SYS_WCO_WDT_CLKEN_REG = (CY_SYS_WCO_WDT_CLKEN_REG & (uint32)(~CY_SYS_WCO_WDT_CLKEN_RESET
2229:.\Generated_Source\PSoC4/CyLFClk.c ****                                     CY_SYS_SET_CURRENT_TIMER_SOURCE_BIT;
2230:.\Generated_Source\PSoC4/CyLFClk.c ****     }
2231:.\Generated_Source\PSoC4/CyLFClk.c **** 
2232:.\Generated_Source\PSoC4/CyLFClk.c **** 
2233:.\Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
2234:.\Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysTimerGetEnabledStatus
2235:.\Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
2236:.\Generated_Source\PSoC4/CyLFClk.c ****     *
2237:.\Generated_Source\PSoC4/CyLFClk.c ****     * \brief Reads the enabled status of one of the three DeepSleep Timer 
2238:.\Generated_Source\PSoC4/CyLFClk.c ****     * counters.
2239:.\Generated_Source\PSoC4/CyLFClk.c ****     *
2240:.\Generated_Source\PSoC4/CyLFClk.c ****     * \param counterNum: Valid range [0-2]. The number of the DeepSleep Timer 
2241:.\Generated_Source\PSoC4/CyLFClk.c ****     * counter.
2242:.\Generated_Source\PSoC4/CyLFClk.c ****     *
2243:.\Generated_Source\PSoC4/CyLFClk.c ****     * \return The status of the Timers counter:
2244:.\Generated_Source\PSoC4/CyLFClk.c ****     * \return 0 - If the Counter is disabled.
2245:.\Generated_Source\PSoC4/CyLFClk.c ****     * \return 1 - If the Counter is enabled.
2246:.\Generated_Source\PSoC4/CyLFClk.c ****     *
2247:.\Generated_Source\PSoC4/CyLFClk.c ****     * \details
2248:.\Generated_Source\PSoC4/CyLFClk.c ****     * This function returns an actual DeepSleep Timer counter status from the 
2249:.\Generated_Source\PSoC4/CyLFClk.c ****     * status register. It may take up to 3 LFCLK cycles for the Timer status 
2250:.\Generated_Source\PSoC4/CyLFClk.c ****     * register to contain actual data after the Timer counter is enabled.
2251:.\Generated_Source\PSoC4/CyLFClk.c ****     *
2252:.\Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
2253:.\Generated_Source\PSoC4/CyLFClk.c ****     uint32 CySysTimerGetEnabledStatus(uint32 counterNum)
2254:.\Generated_Source\PSoC4/CyLFClk.c ****     {
2255:.\Generated_Source\PSoC4/CyLFClk.c ****         CYASSERT(counterNum < CY_SYS_TIMER_COUNTERS_MAX);
2256:.\Generated_Source\PSoC4/CyLFClk.c ****         return ((CY_SYS_WCO_WDT_CONTROL_REG >> ((CY_SYS_TIMER_CNT_SHIFT * counterNum) + 
2257:.\Generated_Source\PSoC4/CyLFClk.c ****                                                  CY_SYS_TIMER_CNT_STTS_SHIFT)) & 0x01u);
2258:.\Generated_Source\PSoC4/CyLFClk.c ****     }
2259:.\Generated_Source\PSoC4/CyLFClk.c **** 
2260:.\Generated_Source\PSoC4/CyLFClk.c **** 
2261:.\Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
2262:.\Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysTimerSetMode
2263:.\Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
2264:.\Generated_Source\PSoC4/CyLFClk.c ****     *
2265:.\Generated_Source\PSoC4/CyLFClk.c ****     * \brief Writes the mode of one of the three DeepSleep Timer counters.
2266:.\Generated_Source\PSoC4/CyLFClk.c ****     *
2267:.\Generated_Source\PSoC4/CyLFClk.c ****     * \param counterNum: Valid range [0-2]. The number of the DeepSleep Timer 
2268:.\Generated_Source\PSoC4/CyLFClk.c ****     * counter.
2269:.\Generated_Source\PSoC4/CyLFClk.c ****     *
2270:.\Generated_Source\PSoC4/CyLFClk.c ****     * \param mode
2271:.\Generated_Source\PSoC4/CyLFClk.c ****     *  CY_SYS_TIMER_MODE_NONE - Free running.<br>
2272:.\Generated_Source\PSoC4/CyLFClk.c ****     * CY_SYS_TIMER_MODE_INT - The interrupt generated on match for counter 0
2273:.\Generated_Source\PSoC4/CyLFClk.c ****     * and 1, and on bit toggle for counter 2.
2274:.\Generated_Source\PSoC4/CyLFClk.c ****     *
2275:.\Generated_Source\PSoC4/CyLFClk.c ****     * \details
2276:.\Generated_Source\PSoC4/CyLFClk.c ****     * DeepSleep Timer counter counterNum should be disabled to set a mode. 
2277:.\Generated_Source\PSoC4/CyLFClk.c ****     * Otherwise, this function call has no effect. If the specified counter is 
2278:.\Generated_Source\PSoC4/CyLFClk.c ****     * enabled, call the CySysTimerDisable() function with the corresponding 
2279:.\Generated_Source\PSoC4/CyLFClk.c ****     * parameter to disable the specified counter and wait for it to stop.
2280:.\Generated_Source\PSoC4/CyLFClk.c ****     *
2281:.\Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
2282:.\Generated_Source\PSoC4/CyLFClk.c ****     void CySysTimerSetMode(uint32 counterNum, uint32 mode)
2283:.\Generated_Source\PSoC4/CyLFClk.c ****     {
ARM GAS  C:\Users\g\AppData\Local\Temp\ccjVf3bh.s 			page 80


2284:.\Generated_Source\PSoC4/CyLFClk.c ****         uint32 configRegValue;
2285:.\Generated_Source\PSoC4/CyLFClk.c **** 
2286:.\Generated_Source\PSoC4/CyLFClk.c ****         CYASSERT(counterNum < CY_SYS_TIMER_COUNTERS_MAX);
2287:.\Generated_Source\PSoC4/CyLFClk.c **** 
2288:.\Generated_Source\PSoC4/CyLFClk.c ****         CYASSERT(mode <= CY_SYS_TIMER_MODE_MASK);
2289:.\Generated_Source\PSoC4/CyLFClk.c **** 
2290:.\Generated_Source\PSoC4/CyLFClk.c ****         if(0u == CySysTimerGetEnabledStatus(counterNum))
2291:.\Generated_Source\PSoC4/CyLFClk.c ****         {
2292:.\Generated_Source\PSoC4/CyLFClk.c ****             configRegValue = CY_SYS_WCO_WDT_CONFIG_REG &
2293:.\Generated_Source\PSoC4/CyLFClk.c ****                                 (uint32)~((uint32)(CY_SYS_TIMER_MODE_MASK << (counterNum * CY_SYS_T
2294:.\Generated_Source\PSoC4/CyLFClk.c ****             configRegValue |= (uint32)((mode & CY_SYS_TIMER_MODE_MASK) << (counterNum * CY_SYS_TIME
2295:.\Generated_Source\PSoC4/CyLFClk.c ****             CY_SYS_WCO_WDT_CONFIG_REG = configRegValue;
2296:.\Generated_Source\PSoC4/CyLFClk.c ****         }
2297:.\Generated_Source\PSoC4/CyLFClk.c ****     }
2298:.\Generated_Source\PSoC4/CyLFClk.c **** 
2299:.\Generated_Source\PSoC4/CyLFClk.c **** 
2300:.\Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
2301:.\Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysTimerGetMode
2302:.\Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
2303:.\Generated_Source\PSoC4/CyLFClk.c ****     *
2304:.\Generated_Source\PSoC4/CyLFClk.c ****     * \brief Reads the mode of one of the three DeepSleep Timer counters.
2305:.\Generated_Source\PSoC4/CyLFClk.c ****     *
2306:.\Generated_Source\PSoC4/CyLFClk.c ****     * \param counterNum Valid range [0-2]. The number of the Timer counter.
2307:.\Generated_Source\PSoC4/CyLFClk.c ****     *
2308:.\Generated_Source\PSoC4/CyLFClk.c ****     * \return The mode of the counter. The same enumerated values as the mode 
2309:.\Generated_Source\PSoC4/CyLFClk.c ****     * parameter used in CySysTimerSetMode().
2310:.\Generated_Source\PSoC4/CyLFClk.c ****     *
2311:.\Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
2312:.\Generated_Source\PSoC4/CyLFClk.c ****     uint32 CySysTimerGetMode(uint32 counterNum)
2313:.\Generated_Source\PSoC4/CyLFClk.c ****     {
2314:.\Generated_Source\PSoC4/CyLFClk.c ****         return ((CY_SYS_WCO_WDT_CONFIG_REG >> (counterNum * CY_SYS_TIMER_CNT_SHIFT)) & CY_SYS_TIMER
2315:.\Generated_Source\PSoC4/CyLFClk.c ****     }
2316:.\Generated_Source\PSoC4/CyLFClk.c **** 
2317:.\Generated_Source\PSoC4/CyLFClk.c **** 
2318:.\Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
2319:.\Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysTimerSetClearOnMatch
2320:.\Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
2321:.\Generated_Source\PSoC4/CyLFClk.c ****     *
2322:.\Generated_Source\PSoC4/CyLFClk.c ****     * \brief Configures the DeepSleep Timer counter "clear on match" setting.
2323:.\Generated_Source\PSoC4/CyLFClk.c ****     *
2324:.\Generated_Source\PSoC4/CyLFClk.c ****     * If configured to "clear on match", the counter counts from 0 to MatchValue 
2325:.\Generated_Source\PSoC4/CyLFClk.c ****     * giving it a period of (MatchValue + 1).
2326:.\Generated_Source\PSoC4/CyLFClk.c ****     *
2327:.\Generated_Source\PSoC4/CyLFClk.c ****     * \param counterNum
2328:.\Generated_Source\PSoC4/CyLFClk.c ****     * Valid range [0-1]. The number of the Timer counter. The match values are not
2329:.\Generated_Source\PSoC4/CyLFClk.c ****     * supported by counter 2.
2330:.\Generated_Source\PSoC4/CyLFClk.c ****     * \param enable 0 to disable appropriate counter <br>
2331:.\Generated_Source\PSoC4/CyLFClk.c ****     * 1 to enable appropriate counter
2332:.\Generated_Source\PSoC4/CyLFClk.c ****     *
2333:.\Generated_Source\PSoC4/CyLFClk.c ****     * \details
2334:.\Generated_Source\PSoC4/CyLFClk.c ****     * Timer counter counterNum should be disabled. Otherwise this function call
2335:.\Generated_Source\PSoC4/CyLFClk.c ****     * has no effect. If the specified counter is enabled, call the CySysTimerDisable()
2336:.\Generated_Source\PSoC4/CyLFClk.c ****     * function with the corresponding parameter to disable the specified counter and
2337:.\Generated_Source\PSoC4/CyLFClk.c ****     * wait for it to stop. This may take up to three Timer source-cycles.
2338:.\Generated_Source\PSoC4/CyLFClk.c ****     *
2339:.\Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
2340:.\Generated_Source\PSoC4/CyLFClk.c ****     void CySysTimerSetClearOnMatch(uint32 counterNum, uint32 enable)
ARM GAS  C:\Users\g\AppData\Local\Temp\ccjVf3bh.s 			page 81


2341:.\Generated_Source\PSoC4/CyLFClk.c ****     {
2342:.\Generated_Source\PSoC4/CyLFClk.c ****         uint32 configRegValue;
2343:.\Generated_Source\PSoC4/CyLFClk.c **** 
2344:.\Generated_Source\PSoC4/CyLFClk.c ****         CYASSERT((counterNum == CY_SYS_TIMER0) ||
2345:.\Generated_Source\PSoC4/CyLFClk.c ****                  (counterNum == CY_SYS_TIMER1));
2346:.\Generated_Source\PSoC4/CyLFClk.c **** 
2347:.\Generated_Source\PSoC4/CyLFClk.c ****         if(0u == CySysTimerGetEnabledStatus(counterNum))
2348:.\Generated_Source\PSoC4/CyLFClk.c ****         {
2349:.\Generated_Source\PSoC4/CyLFClk.c ****             configRegValue = CY_SYS_WCO_WDT_CONFIG_REG & (uint32)~((uint32)((uint32)1u << 
2350:.\Generated_Source\PSoC4/CyLFClk.c ****              ((counterNum * CY_SYS_TIMER_CNT_SHIFT) + CY_SYS_TIMER_CNT_MATCH_CLR_SHIFT)));
2351:.\Generated_Source\PSoC4/CyLFClk.c **** 
2352:.\Generated_Source\PSoC4/CyLFClk.c ****             configRegValue
2353:.\Generated_Source\PSoC4/CyLFClk.c ****                 |= (uint32)(enable << ((counterNum * CY_SYS_TIMER_CNT_SHIFT) + CY_SYS_TIMER_CNT_MAT
2354:.\Generated_Source\PSoC4/CyLFClk.c **** 
2355:.\Generated_Source\PSoC4/CyLFClk.c ****             CY_SYS_WCO_WDT_CONFIG_REG = configRegValue;
2356:.\Generated_Source\PSoC4/CyLFClk.c ****         }
2357:.\Generated_Source\PSoC4/CyLFClk.c ****     }
2358:.\Generated_Source\PSoC4/CyLFClk.c **** 
2359:.\Generated_Source\PSoC4/CyLFClk.c **** 
2360:.\Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
2361:.\Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysTimerGetClearOnMatch
2362:.\Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
2363:.\Generated_Source\PSoC4/CyLFClk.c ****     *
2364:.\Generated_Source\PSoC4/CyLFClk.c ****     * \brief Reads the "clear on match" setting for the specified DeepSleep Timer 
2365:.\Generated_Source\PSoC4/CyLFClk.c ****     * counter.
2366:.\Generated_Source\PSoC4/CyLFClk.c ****     *
2367:.\Generated_Source\PSoC4/CyLFClk.c ****     * \param counterNum Valid range [0-1].  The number of the Timer counter. The 
2368:.\Generated_Source\PSoC4/CyLFClk.c ****     * match values are not supported by counter 2.
2369:.\Generated_Source\PSoC4/CyLFClk.c ****     *
2370:.\Generated_Source\PSoC4/CyLFClk.c ****     * \return The "clear on match" status: <br>1 if enabled <br>0 if disabled
2371:.\Generated_Source\PSoC4/CyLFClk.c ****     *
2372:.\Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
2373:.\Generated_Source\PSoC4/CyLFClk.c ****     uint32 CySysTimerGetClearOnMatch(uint32 counterNum)
2374:.\Generated_Source\PSoC4/CyLFClk.c ****     {
2375:.\Generated_Source\PSoC4/CyLFClk.c ****         CYASSERT((counterNum == CY_SYS_TIMER0) ||
2376:.\Generated_Source\PSoC4/CyLFClk.c ****                  (counterNum == CY_SYS_TIMER1));
2377:.\Generated_Source\PSoC4/CyLFClk.c **** 
2378:.\Generated_Source\PSoC4/CyLFClk.c ****         return (uint32)((CY_SYS_WCO_WDT_CONFIG_REG >>
2379:.\Generated_Source\PSoC4/CyLFClk.c ****                         ((counterNum * CY_SYS_TIMER_CNT_SHIFT) + CY_SYS_TIMER_CNT_MATCH_CLR_SHIFT))
2380:.\Generated_Source\PSoC4/CyLFClk.c ****     }
2381:.\Generated_Source\PSoC4/CyLFClk.c **** 
2382:.\Generated_Source\PSoC4/CyLFClk.c **** 
2383:.\Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
2384:.\Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysTimerEnable
2385:.\Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
2386:.\Generated_Source\PSoC4/CyLFClk.c ****     *
2387:.\Generated_Source\PSoC4/CyLFClk.c ****     * \brief Enables the specified DeepSleep Timer counters. All the counters 
2388:.\Generated_Source\PSoC4/CyLFClk.c ****     * specified in the mask are enabled.
2389:.\Generated_Source\PSoC4/CyLFClk.c ****     *
2390:.\Generated_Source\PSoC4/CyLFClk.c ****     * \param counterMask  CY_SYS_TIMER0_MASK - The mask for counter 0 to enable.<br>
2391:.\Generated_Source\PSoC4/CyLFClk.c ****     * CY_SYS_TIMER1_MASK - The mask for counter 1 to enable.<br>
2392:.\Generated_Source\PSoC4/CyLFClk.c ****     * CY_SYS_TIMER2_MASK - The mask for counter 2 to enable.
2393:.\Generated_Source\PSoC4/CyLFClk.c ****     *
2394:.\Generated_Source\PSoC4/CyLFClk.c ****     * \details
2395:.\Generated_Source\PSoC4/CyLFClk.c ****     * Enabling or disabling Timer requires 3 Timer source-cycles to come into effect.
2396:.\Generated_Source\PSoC4/CyLFClk.c ****     * Therefore, the Timer enable state must not be changed more than once in
2397:.\Generated_Source\PSoC4/CyLFClk.c ****     * that period.
ARM GAS  C:\Users\g\AppData\Local\Temp\ccjVf3bh.s 			page 82


2398:.\Generated_Source\PSoC4/CyLFClk.c ****     *
2399:.\Generated_Source\PSoC4/CyLFClk.c ****     * After Timer is enabled, it is illegal to write Timer configuration 
2400:.\Generated_Source\PSoC4/CyLFClk.c ****     * (WCO_WDT_CONFIG) and control (WCO_WDT_CONTROL) registers. This means that all
2401:.\Generated_Source\PSoC4/CyLFClk.c ****     * Timer functions that contain 'write' in the name (with the exception of 
2402:.\Generated_Source\PSoC4/CyLFClk.c ****     * CySysTimerSetMatch() function) are illegal to call once Timer enabled.
2403:.\Generated_Source\PSoC4/CyLFClk.c ****     *
2404:.\Generated_Source\PSoC4/CyLFClk.c ****     * Timer current source must be running and stable before calling this 
2405:.\Generated_Source\PSoC4/CyLFClk.c ****     * function.
2406:.\Generated_Source\PSoC4/CyLFClk.c ****     *
2407:.\Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
2408:.\Generated_Source\PSoC4/CyLFClk.c ****     void CySysTimerEnable(uint32 counterMask)
2409:.\Generated_Source\PSoC4/CyLFClk.c ****     {
2410:.\Generated_Source\PSoC4/CyLFClk.c ****         CY_SYS_WCO_WDT_CONTROL_REG |= counterMask;
2411:.\Generated_Source\PSoC4/CyLFClk.c **** 
2412:.\Generated_Source\PSoC4/CyLFClk.c ****         if(0u != (counterMask & CY_SYS_TIMER0_MASK))
2413:.\Generated_Source\PSoC4/CyLFClk.c ****         {
2414:.\Generated_Source\PSoC4/CyLFClk.c ****             while (0u == CySysTimerGetEnabledStatus(CY_SYS_TIMER0))
2415:.\Generated_Source\PSoC4/CyLFClk.c ****             {
2416:.\Generated_Source\PSoC4/CyLFClk.c ****                 /* Wait for changes to come into effect */
2417:.\Generated_Source\PSoC4/CyLFClk.c ****             }
2418:.\Generated_Source\PSoC4/CyLFClk.c ****         }
2419:.\Generated_Source\PSoC4/CyLFClk.c **** 
2420:.\Generated_Source\PSoC4/CyLFClk.c ****         if(0u != (counterMask & CY_SYS_TIMER1_MASK))
2421:.\Generated_Source\PSoC4/CyLFClk.c ****         {
2422:.\Generated_Source\PSoC4/CyLFClk.c ****             while (0u == CySysTimerGetEnabledStatus(CY_SYS_TIMER1))
2423:.\Generated_Source\PSoC4/CyLFClk.c ****             {
2424:.\Generated_Source\PSoC4/CyLFClk.c ****                 /* Wait for changes to come into effect */
2425:.\Generated_Source\PSoC4/CyLFClk.c ****             }
2426:.\Generated_Source\PSoC4/CyLFClk.c ****         }
2427:.\Generated_Source\PSoC4/CyLFClk.c **** 
2428:.\Generated_Source\PSoC4/CyLFClk.c ****         if(0u != (counterMask & CY_SYS_TIMER2_MASK))
2429:.\Generated_Source\PSoC4/CyLFClk.c ****         {
2430:.\Generated_Source\PSoC4/CyLFClk.c ****             while (0u == CySysTimerGetEnabledStatus(CY_SYS_TIMER2))
2431:.\Generated_Source\PSoC4/CyLFClk.c ****             {
2432:.\Generated_Source\PSoC4/CyLFClk.c ****                 /* Wait for changes to come into effect */
2433:.\Generated_Source\PSoC4/CyLFClk.c ****             }
2434:.\Generated_Source\PSoC4/CyLFClk.c ****         }
2435:.\Generated_Source\PSoC4/CyLFClk.c ****     }
2436:.\Generated_Source\PSoC4/CyLFClk.c **** 
2437:.\Generated_Source\PSoC4/CyLFClk.c **** 
2438:.\Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
2439:.\Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysTimerDisable
2440:.\Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
2441:.\Generated_Source\PSoC4/CyLFClk.c ****     *
2442:.\Generated_Source\PSoC4/CyLFClk.c ****     * \brief Disables the specified DeepSleep Timer counters.
2443:.\Generated_Source\PSoC4/CyLFClk.c ****     *
2444:.\Generated_Source\PSoC4/CyLFClk.c ****     * All the counters specified in the mask are disabled. The function waits for 
2445:.\Generated_Source\PSoC4/CyLFClk.c ****     * the changes to come into effect.
2446:.\Generated_Source\PSoC4/CyLFClk.c ****     *
2447:.\Generated_Source\PSoC4/CyLFClk.c ****     * \param counterMask
2448:.\Generated_Source\PSoC4/CyLFClk.c ****     *  CY_SYS_TIMER0_MASK - The mask for Counter 0 to disable.<br>
2449:.\Generated_Source\PSoC4/CyLFClk.c ****     * CY_SYS_TIMER1_MASK - The mask for Counter 1 to disable.<br>
2450:.\Generated_Source\PSoC4/CyLFClk.c ****     * CY_SYS_TIMER2_MASK - The mask for Counter 2 to disable.
2451:.\Generated_Source\PSoC4/CyLFClk.c ****     *
2452:.\Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
2453:.\Generated_Source\PSoC4/CyLFClk.c ****     void CySysTimerDisable(uint32 counterMask)
2454:.\Generated_Source\PSoC4/CyLFClk.c ****     {
ARM GAS  C:\Users\g\AppData\Local\Temp\ccjVf3bh.s 			page 83


2455:.\Generated_Source\PSoC4/CyLFClk.c **** 
2456:.\Generated_Source\PSoC4/CyLFClk.c ****         CY_SYS_WCO_WDT_CONTROL_REG &= ~counterMask;
2457:.\Generated_Source\PSoC4/CyLFClk.c **** 
2458:.\Generated_Source\PSoC4/CyLFClk.c ****         if(0u != (counterMask & CY_SYS_TIMER0_MASK))
2459:.\Generated_Source\PSoC4/CyLFClk.c ****         {
2460:.\Generated_Source\PSoC4/CyLFClk.c ****             while (0u != CySysTimerGetEnabledStatus(CY_SYS_TIMER0))
2461:.\Generated_Source\PSoC4/CyLFClk.c ****             {
2462:.\Generated_Source\PSoC4/CyLFClk.c ****                 /* Wait for changes to come into effect */
2463:.\Generated_Source\PSoC4/CyLFClk.c ****             }
2464:.\Generated_Source\PSoC4/CyLFClk.c ****         }
2465:.\Generated_Source\PSoC4/CyLFClk.c **** 
2466:.\Generated_Source\PSoC4/CyLFClk.c ****         if(0u != (counterMask & CY_SYS_TIMER1_MASK))
2467:.\Generated_Source\PSoC4/CyLFClk.c ****         {
2468:.\Generated_Source\PSoC4/CyLFClk.c ****             while (0u != CySysTimerGetEnabledStatus(CY_SYS_TIMER1))
2469:.\Generated_Source\PSoC4/CyLFClk.c ****             {
2470:.\Generated_Source\PSoC4/CyLFClk.c ****                 /* Wait for changes to come into effect */
2471:.\Generated_Source\PSoC4/CyLFClk.c ****             }
2472:.\Generated_Source\PSoC4/CyLFClk.c ****         }
2473:.\Generated_Source\PSoC4/CyLFClk.c **** 
2474:.\Generated_Source\PSoC4/CyLFClk.c ****         if(0u != (counterMask & CY_SYS_TIMER2_MASK))
2475:.\Generated_Source\PSoC4/CyLFClk.c ****         {
2476:.\Generated_Source\PSoC4/CyLFClk.c ****             while (0u != CySysTimerGetEnabledStatus(CY_SYS_TIMER2))
2477:.\Generated_Source\PSoC4/CyLFClk.c ****             {
2478:.\Generated_Source\PSoC4/CyLFClk.c ****                 /* Wait for changes to come into effect */
2479:.\Generated_Source\PSoC4/CyLFClk.c ****             }
2480:.\Generated_Source\PSoC4/CyLFClk.c ****         }
2481:.\Generated_Source\PSoC4/CyLFClk.c **** 
2482:.\Generated_Source\PSoC4/CyLFClk.c ****     }
2483:.\Generated_Source\PSoC4/CyLFClk.c **** 
2484:.\Generated_Source\PSoC4/CyLFClk.c **** 
2485:.\Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
2486:.\Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysTimerSetCascade
2487:.\Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
2488:.\Generated_Source\PSoC4/CyLFClk.c ****     *
2489:.\Generated_Source\PSoC4/CyLFClk.c ****     * \brief
2490:.\Generated_Source\PSoC4/CyLFClk.c ****     * Writes the two DeepSleep Timers cascade values based on the combination of 
2491:.\Generated_Source\PSoC4/CyLFClk.c ****     * mask values specified.
2492:.\Generated_Source\PSoC4/CyLFClk.c ****     *
2493:.\Generated_Source\PSoC4/CyLFClk.c ****     * \param cascadeMask The mask value used to set or clear the cascade values:
2494:.\Generated_Source\PSoC4/CyLFClk.c ****     * CY_SYS_TIMER_CASCADE_NONE - Neither<br>
2495:.\Generated_Source\PSoC4/CyLFClk.c ****     * CY_SYS_TIMER_CASCADE_01 - Cascade 01<br>
2496:.\Generated_Source\PSoC4/CyLFClk.c ****     * CY_SYS_TIMER_CASCADE_12 - Cascade 12
2497:.\Generated_Source\PSoC4/CyLFClk.c ****     *
2498:.\Generated_Source\PSoC4/CyLFClk.c ****     * If only one cascade mask is specified, the second cascade is disabled.
2499:.\Generated_Source\PSoC4/CyLFClk.c ****     * To set both cascade modes, two defines should be ORed:
2500:.\Generated_Source\PSoC4/CyLFClk.c ****     * (CY_SYS_TIMER_CASCADE_01 | CY_SYS_TIMER_CASCADE_12).
2501:.\Generated_Source\PSoC4/CyLFClk.c ****     * \note If CySysTimerSetCascade() was called with ORed defines it is necessary 
2502:.\Generated_Source\PSoC4/CyLFClk.c ****     * to call CySysTimeSetClearOnMatch(1,1). It is needed to make sure that 
2503:.\Generated_Source\PSoC4/CyLFClk.c ****     * Counter 2 will be updated in the expected way.
2504:.\Generated_Source\PSoC4/CyLFClk.c ****     *
2505:.\Generated_Source\PSoC4/CyLFClk.c ****     * Timer counters that are part of the specified cascade should be disabled.
2506:.\Generated_Source\PSoC4/CyLFClk.c ****     * Otherwise this function call has no effect. If the specified
2507:.\Generated_Source\PSoC4/CyLFClk.c ****     * counter is enabled, call CySysTimerDisable() function with the corresponding
2508:.\Generated_Source\PSoC4/CyLFClk.c ****     * parameter to disable the specified counter and wait for it to stop. This may
2509:.\Generated_Source\PSoC4/CyLFClk.c ****     * take up to 3 Timers source-cycles.
2510:.\Generated_Source\PSoC4/CyLFClk.c ****     *
2511:.\Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
ARM GAS  C:\Users\g\AppData\Local\Temp\ccjVf3bh.s 			page 84


2512:.\Generated_Source\PSoC4/CyLFClk.c ****     void CySysTimerSetCascade(uint32 cascadeMask)
2513:.\Generated_Source\PSoC4/CyLFClk.c ****     {
2514:.\Generated_Source\PSoC4/CyLFClk.c ****         uint32 configRegValue;
2515:.\Generated_Source\PSoC4/CyLFClk.c ****         uint32 countersEnableStatus;
2516:.\Generated_Source\PSoC4/CyLFClk.c **** 
2517:.\Generated_Source\PSoC4/CyLFClk.c ****         countersEnableStatus = CySysTimerGetEnabledStatus(CY_SYS_TIMER0) |
2518:.\Generated_Source\PSoC4/CyLFClk.c ****                             CySysTimerGetEnabledStatus(CY_SYS_TIMER1) |
2519:.\Generated_Source\PSoC4/CyLFClk.c ****                             CySysTimerGetEnabledStatus(CY_SYS_TIMER2);
2520:.\Generated_Source\PSoC4/CyLFClk.c **** 
2521:.\Generated_Source\PSoC4/CyLFClk.c ****         if (0u == countersEnableStatus)
2522:.\Generated_Source\PSoC4/CyLFClk.c ****         {
2523:.\Generated_Source\PSoC4/CyLFClk.c ****             configRegValue = CY_SYS_WCO_WDT_CONFIG_REG;
2524:.\Generated_Source\PSoC4/CyLFClk.c ****             configRegValue &= ((uint32)(~(CY_SYS_TIMER_CASCADE_01|CY_SYS_TIMER_CASCADE_12)));
2525:.\Generated_Source\PSoC4/CyLFClk.c ****             configRegValue |= cascadeMask;
2526:.\Generated_Source\PSoC4/CyLFClk.c ****             CY_SYS_WCO_WDT_CONFIG_REG = configRegValue;
2527:.\Generated_Source\PSoC4/CyLFClk.c ****         }
2528:.\Generated_Source\PSoC4/CyLFClk.c ****     }
2529:.\Generated_Source\PSoC4/CyLFClk.c **** 
2530:.\Generated_Source\PSoC4/CyLFClk.c **** 
2531:.\Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
2532:.\Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysTimerGetCascade
2533:.\Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
2534:.\Generated_Source\PSoC4/CyLFClk.c ****     *
2535:.\Generated_Source\PSoC4/CyLFClk.c ****     * \brief Reads the two DeepSleep Timer cascade values returning a mask of the 
2536:.\Generated_Source\PSoC4/CyLFClk.c ****     * bits set.
2537:.\Generated_Source\PSoC4/CyLFClk.c ****     *
2538:.\Generated_Source\PSoC4/CyLFClk.c ****     * \return The mask of the cascade values set.
2539:.\Generated_Source\PSoC4/CyLFClk.c ****     * \return CY_SYS_TIMER_CASCADE_NONE - Neither
2540:.\Generated_Source\PSoC4/CyLFClk.c ****     * \return CY_SYS_TIMER_CASCADE_01 - Cascade 01
2541:.\Generated_Source\PSoC4/CyLFClk.c ****     * \return CY_SYS_TIMER_CASCADE_12 - Cascade 12
2542:.\Generated_Source\PSoC4/CyLFClk.c ****     *
2543:.\Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
2544:.\Generated_Source\PSoC4/CyLFClk.c ****     uint32 CySysTimerGetCascade(void)
2545:.\Generated_Source\PSoC4/CyLFClk.c ****     {
2546:.\Generated_Source\PSoC4/CyLFClk.c ****         return (CY_SYS_WCO_WDT_CONFIG_REG & (CY_SYS_TIMER_CASCADE_01 | CY_SYS_TIMER_CASCADE_12));
2547:.\Generated_Source\PSoC4/CyLFClk.c ****     }
2548:.\Generated_Source\PSoC4/CyLFClk.c **** 
2549:.\Generated_Source\PSoC4/CyLFClk.c **** 
2550:.\Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
2551:.\Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysTimerSetMatch
2552:.\Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
2553:.\Generated_Source\PSoC4/CyLFClk.c ****     *
2554:.\Generated_Source\PSoC4/CyLFClk.c ****     * \brief Configures the Timer counter match comparison value.
2555:.\Generated_Source\PSoC4/CyLFClk.c ****     *
2556:.\Generated_Source\PSoC4/CyLFClk.c ****     * \param counterNum Valid range [0-1]. The number of the Timer counter. The 
2557:.\Generated_Source\PSoC4/CyLFClk.c ****     * match values are not supported by counter 2.
2558:.\Generated_Source\PSoC4/CyLFClk.c ****     *
2559:.\Generated_Source\PSoC4/CyLFClk.c ****     * \param match Valid range [0-65535]. The value to be used to match against 
2560:.\Generated_Source\PSoC4/CyLFClk.c ****     * the counter.
2561:.\Generated_Source\PSoC4/CyLFClk.c ****     *
2562:.\Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
2563:.\Generated_Source\PSoC4/CyLFClk.c ****     void CySysTimerSetMatch(uint32 counterNum, uint32 match)
2564:.\Generated_Source\PSoC4/CyLFClk.c ****     {
2565:.\Generated_Source\PSoC4/CyLFClk.c ****         uint32 regValue;
2566:.\Generated_Source\PSoC4/CyLFClk.c **** 
2567:.\Generated_Source\PSoC4/CyLFClk.c ****         CYASSERT((counterNum == CY_SYS_TIMER0) ||
2568:.\Generated_Source\PSoC4/CyLFClk.c ****                  (counterNum == CY_SYS_TIMER1));
ARM GAS  C:\Users\g\AppData\Local\Temp\ccjVf3bh.s 			page 85


2569:.\Generated_Source\PSoC4/CyLFClk.c **** 
2570:.\Generated_Source\PSoC4/CyLFClk.c ****         /* Wait for previous changes to come into effect */
2571:.\Generated_Source\PSoC4/CyLFClk.c ****         CyDelayUs(CY_SYS_3TIMER_DELAY_US);
2572:.\Generated_Source\PSoC4/CyLFClk.c **** 
2573:.\Generated_Source\PSoC4/CyLFClk.c ****         regValue = CY_SYS_WCO_WDT_MATCH_REG;
2574:.\Generated_Source\PSoC4/CyLFClk.c ****         regValue &= (uint32)~((uint32)(CY_SYS_TIMER_LOWER_16BITS_MASK << (counterNum * CY_SYS_TIMER
2575:.\Generated_Source\PSoC4/CyLFClk.c ****         CY_SYS_WCO_WDT_MATCH_REG = (regValue | (match << (counterNum * CY_SYS_TIMER_CNT_MATCH_SHIFT
2576:.\Generated_Source\PSoC4/CyLFClk.c **** 
2577:.\Generated_Source\PSoC4/CyLFClk.c ****         /* Make sure match synchronization has started */
2578:.\Generated_Source\PSoC4/CyLFClk.c ****         CyDelayUs(CY_SYS_1TIMER_DELAY_US);
2579:.\Generated_Source\PSoC4/CyLFClk.c ****     }
2580:.\Generated_Source\PSoC4/CyLFClk.c **** 
2581:.\Generated_Source\PSoC4/CyLFClk.c **** 
2582:.\Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
2583:.\Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysTimerSetToggleBit
2584:.\Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
2585:.\Generated_Source\PSoC4/CyLFClk.c ****     *
2586:.\Generated_Source\PSoC4/CyLFClk.c ****     * \brief Configures which bit in Timer counter 2 to monitor for a toggle.
2587:.\Generated_Source\PSoC4/CyLFClk.c ****     *
2588:.\Generated_Source\PSoC4/CyLFClk.c ****     * When that bit toggles, an interrupt is generated if mode for counter 2 has
2589:.\Generated_Source\PSoC4/CyLFClk.c ****     * enabled interrupts.
2590:.\Generated_Source\PSoC4/CyLFClk.c ****     *
2591:.\Generated_Source\PSoC4/CyLFClk.c ****     * \param bits Valid range [0-31]. Counter 2 bit to monitor for a toggle.
2592:.\Generated_Source\PSoC4/CyLFClk.c ****     *
2593:.\Generated_Source\PSoC4/CyLFClk.c ****     * \details Timer counter 2 should be disabled. Otherwise this function call has
2594:.\Generated_Source\PSoC4/CyLFClk.c ****     * no effect.
2595:.\Generated_Source\PSoC4/CyLFClk.c ****     *
2596:.\Generated_Source\PSoC4/CyLFClk.c ****     * If the specified counter is enabled, call the CySysTimerDisable() function with
2597:.\Generated_Source\PSoC4/CyLFClk.c ****     * the corresponding parameter to disable the specified counter and wait for it to
2598:.\Generated_Source\PSoC4/CyLFClk.c ****     * stop. This may take up to three Timer source-cycles.
2599:.\Generated_Source\PSoC4/CyLFClk.c ****     *
2600:.\Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
2601:.\Generated_Source\PSoC4/CyLFClk.c ****     void CySysTimerSetToggleBit(uint32 bits)
2602:.\Generated_Source\PSoC4/CyLFClk.c ****     {
2603:.\Generated_Source\PSoC4/CyLFClk.c ****         uint32 configRegValue;
2604:.\Generated_Source\PSoC4/CyLFClk.c **** 
2605:.\Generated_Source\PSoC4/CyLFClk.c ****         if (0u == CySysTimerGetEnabledStatus(CY_SYS_TIMER2))
2606:.\Generated_Source\PSoC4/CyLFClk.c ****         {
2607:.\Generated_Source\PSoC4/CyLFClk.c ****             configRegValue = CY_SYS_WCO_WDT_CONFIG_REG;
2608:.\Generated_Source\PSoC4/CyLFClk.c ****             configRegValue &= (uint32)(~((uint32)(CY_SYS_TIMER_CONFIG_BITS2_MASK << CY_SYS_TIMER_CO
2609:.\Generated_Source\PSoC4/CyLFClk.c ****             configRegValue |= ((bits & CY_SYS_TIMER_CONFIG_BITS2_MASK) << CY_SYS_TIMER_CONFIG_BITS2
2610:.\Generated_Source\PSoC4/CyLFClk.c ****             CY_SYS_WCO_WDT_CONFIG_REG = configRegValue;
2611:.\Generated_Source\PSoC4/CyLFClk.c ****         }
2612:.\Generated_Source\PSoC4/CyLFClk.c ****     }
2613:.\Generated_Source\PSoC4/CyLFClk.c **** 
2614:.\Generated_Source\PSoC4/CyLFClk.c **** 
2615:.\Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
2616:.\Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysTimerGetToggleBit
2617:.\Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
2618:.\Generated_Source\PSoC4/CyLFClk.c ****     *
2619:.\Generated_Source\PSoC4/CyLFClk.c ****     * \brief Reads which bit in Timer counter 2 is monitored for a toggle.
2620:.\Generated_Source\PSoC4/CyLFClk.c ****     *
2621:.\Generated_Source\PSoC4/CyLFClk.c ****     * \return The bit that is monitored (range of 0 to 31)
2622:.\Generated_Source\PSoC4/CyLFClk.c ****     *
2623:.\Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
2624:.\Generated_Source\PSoC4/CyLFClk.c ****     uint32 CySysTimerGetToggleBit(void)
2625:.\Generated_Source\PSoC4/CyLFClk.c ****     {
ARM GAS  C:\Users\g\AppData\Local\Temp\ccjVf3bh.s 			page 86


2626:.\Generated_Source\PSoC4/CyLFClk.c ****         return ((CY_SYS_WCO_WDT_CONFIG_REG >> CY_SYS_TIMER_CONFIG_BITS2_POS) & CY_SYS_TIMER_CONFIG_
2627:.\Generated_Source\PSoC4/CyLFClk.c ****     }
2628:.\Generated_Source\PSoC4/CyLFClk.c **** 
2629:.\Generated_Source\PSoC4/CyLFClk.c **** 
2630:.\Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
2631:.\Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysTimerGetMatch
2632:.\Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
2633:.\Generated_Source\PSoC4/CyLFClk.c ****     *
2634:.\Generated_Source\PSoC4/CyLFClk.c ****     * \brief Reads the Timer counter match comparison value.
2635:.\Generated_Source\PSoC4/CyLFClk.c ****     *
2636:.\Generated_Source\PSoC4/CyLFClk.c ****     * \param counterNum Valid range [0-1]. The number of the DeepSleep Timer 
2637:.\Generated_Source\PSoC4/CyLFClk.c ****     * counter. The match values are not supported by counter 2.
2638:.\Generated_Source\PSoC4/CyLFClk.c ****     *
2639:.\Generated_Source\PSoC4/CyLFClk.c ****     * \return A 16-bit match value.
2640:.\Generated_Source\PSoC4/CyLFClk.c ****     *
2641:.\Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
2642:.\Generated_Source\PSoC4/CyLFClk.c ****     uint32 CySysTimerGetMatch(uint32 counterNum)
2643:.\Generated_Source\PSoC4/CyLFClk.c ****     {
2644:.\Generated_Source\PSoC4/CyLFClk.c ****         CYASSERT((counterNum == CY_SYS_TIMER0) ||
2645:.\Generated_Source\PSoC4/CyLFClk.c ****                  (counterNum == CY_SYS_TIMER1));
2646:.\Generated_Source\PSoC4/CyLFClk.c **** 
2647:.\Generated_Source\PSoC4/CyLFClk.c ****         return ((uint32)(CY_SYS_WCO_WDT_MATCH_REG >> (counterNum * CY_SYS_TIMER_CNT_MATCH_SHIFT)) &
2648:.\Generated_Source\PSoC4/CyLFClk.c ****                                                                   CY_SYS_TIMER_LOWER_16BITS_MASK);
2649:.\Generated_Source\PSoC4/CyLFClk.c ****     }
2650:.\Generated_Source\PSoC4/CyLFClk.c **** 
2651:.\Generated_Source\PSoC4/CyLFClk.c **** 
2652:.\Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
2653:.\Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysTimerGetCount
2654:.\Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
2655:.\Generated_Source\PSoC4/CyLFClk.c ****     *
2656:.\Generated_Source\PSoC4/CyLFClk.c ****     * \brief Reads the current DeepSleep Timer counter value.
2657:.\Generated_Source\PSoC4/CyLFClk.c ****     *
2658:.\Generated_Source\PSoC4/CyLFClk.c ****     * \param counterNum Valid range [0-2]. The number of the Timer counter.
2659:.\Generated_Source\PSoC4/CyLFClk.c ****     *
2660:.\Generated_Source\PSoC4/CyLFClk.c ****     * \return A live counter value. Counter 0 and Counter 1 are 16 bit counters 
2661:.\Generated_Source\PSoC4/CyLFClk.c ****     * and counter 2 is a 32 bit counter.
2662:.\Generated_Source\PSoC4/CyLFClk.c ****     *
2663:.\Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
2664:.\Generated_Source\PSoC4/CyLFClk.c ****     uint32 CySysTimerGetCount(uint32 counterNum)
2665:.\Generated_Source\PSoC4/CyLFClk.c ****     {
2666:.\Generated_Source\PSoC4/CyLFClk.c ****         uint32 regValue = 0u;
2667:.\Generated_Source\PSoC4/CyLFClk.c **** 
2668:.\Generated_Source\PSoC4/CyLFClk.c ****         switch(counterNum)
2669:.\Generated_Source\PSoC4/CyLFClk.c ****         {
2670:.\Generated_Source\PSoC4/CyLFClk.c ****             /* Timer Counter 0 */
2671:.\Generated_Source\PSoC4/CyLFClk.c ****             case 0u:
2672:.\Generated_Source\PSoC4/CyLFClk.c ****                 regValue = CY_SYS_WCO_WDT_CTRLOW_REG & CY_SYS_TIMER_LOWER_16BITS_MASK;
2673:.\Generated_Source\PSoC4/CyLFClk.c ****             break;
2674:.\Generated_Source\PSoC4/CyLFClk.c **** 
2675:.\Generated_Source\PSoC4/CyLFClk.c ****             /* Timer Counter 1 */
2676:.\Generated_Source\PSoC4/CyLFClk.c ****             case 1u:
2677:.\Generated_Source\PSoC4/CyLFClk.c ****                 regValue = (CY_SYS_WCO_WDT_CTRLOW_REG >> CY_SYS_TIMER_CNT_MATCH_SHIFT) & CY_SYS_TIM
2678:.\Generated_Source\PSoC4/CyLFClk.c ****             break;
2679:.\Generated_Source\PSoC4/CyLFClk.c **** 
2680:.\Generated_Source\PSoC4/CyLFClk.c ****             /* Timer Counter 2 */
2681:.\Generated_Source\PSoC4/CyLFClk.c ****             case 2u:
2682:.\Generated_Source\PSoC4/CyLFClk.c ****                 regValue = CY_SYS_WCO_WDT_CTRHIGH_REG;
ARM GAS  C:\Users\g\AppData\Local\Temp\ccjVf3bh.s 			page 87


2683:.\Generated_Source\PSoC4/CyLFClk.c ****             break;
2684:.\Generated_Source\PSoC4/CyLFClk.c **** 
2685:.\Generated_Source\PSoC4/CyLFClk.c ****             default:
2686:.\Generated_Source\PSoC4/CyLFClk.c ****                 CYASSERT(0u != 0u);
2687:.\Generated_Source\PSoC4/CyLFClk.c ****             break;
2688:.\Generated_Source\PSoC4/CyLFClk.c ****         }
2689:.\Generated_Source\PSoC4/CyLFClk.c **** 
2690:.\Generated_Source\PSoC4/CyLFClk.c ****         return (regValue);
2691:.\Generated_Source\PSoC4/CyLFClk.c ****     }
2692:.\Generated_Source\PSoC4/CyLFClk.c **** 
2693:.\Generated_Source\PSoC4/CyLFClk.c **** 
2694:.\Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
2695:.\Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysTimerGetInterruptSource
2696:.\Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
2697:.\Generated_Source\PSoC4/CyLFClk.c ****     *
2698:.\Generated_Source\PSoC4/CyLFClk.c ****     * \brief
2699:.\Generated_Source\PSoC4/CyLFClk.c ****     * Reads a mask containing all the DeepSleep Timer counters interrupts that are 
2700:.\Generated_Source\PSoC4/CyLFClk.c ****     * currently set by the hardware, if a corresponding mode is selected.
2701:.\Generated_Source\PSoC4/CyLFClk.c ****     *
2702:.\Generated_Source\PSoC4/CyLFClk.c ****     * \return The mask of interrupts set
2703:.\Generated_Source\PSoC4/CyLFClk.c ****     * \return CY_SYS_TIMER0_INT - Set interrupt for Counter 0
2704:.\Generated_Source\PSoC4/CyLFClk.c ****     * \return CY_SYS_TIMER1_INT - Set interrupt for Counter 1
2705:.\Generated_Source\PSoC4/CyLFClk.c ****     * \return CY_SYS_TIMER2_INT - Set interrupt for Counter 2
2706:.\Generated_Source\PSoC4/CyLFClk.c ****     *
2707:.\Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
2708:.\Generated_Source\PSoC4/CyLFClk.c ****     uint32 CySysTimerGetInterruptSource(void)
2709:.\Generated_Source\PSoC4/CyLFClk.c ****     {
2710:.\Generated_Source\PSoC4/CyLFClk.c ****         return (CY_SYS_WCO_WDT_CONTROL_REG & (CY_SYS_TIMER0_INT | CY_SYS_TIMER1_INT | CY_SYS_TIMER2
2711:.\Generated_Source\PSoC4/CyLFClk.c ****     }
2712:.\Generated_Source\PSoC4/CyLFClk.c **** 
2713:.\Generated_Source\PSoC4/CyLFClk.c **** 
2714:.\Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
2715:.\Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysTimerClearInterrupt
2716:.\Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
2717:.\Generated_Source\PSoC4/CyLFClk.c ****     *
2718:.\Generated_Source\PSoC4/CyLFClk.c ****     * \brief Clears all the DeepSleep Timer counter interrupts set in the mask.
2719:.\Generated_Source\PSoC4/CyLFClk.c ****     *
2720:.\Generated_Source\PSoC4/CyLFClk.c ****     * All the Timer interrupts are to be cleared by the firmware, otherwise
2721:.\Generated_Source\PSoC4/CyLFClk.c ****     * interrupts are generated continuously.
2722:.\Generated_Source\PSoC4/CyLFClk.c ****     *
2723:.\Generated_Source\PSoC4/CyLFClk.c ****     * \param counterMask
2724:.\Generated_Source\PSoC4/CyLFClk.c ****     *  CY_SYS_TIMER0_INT - Clear counter 0<br>
2725:.\Generated_Source\PSoC4/CyLFClk.c ****     * CY_SYS_TIMER1_INT - Clear counter 1<br>
2726:.\Generated_Source\PSoC4/CyLFClk.c ****     * CY_SYS_TIMER2_INT - Clear counter 2
2727:.\Generated_Source\PSoC4/CyLFClk.c ****     *
2728:.\Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
2729:.\Generated_Source\PSoC4/CyLFClk.c ****     void CySysTimerClearInterrupt(uint32 counterMask)
2730:.\Generated_Source\PSoC4/CyLFClk.c ****     {
2731:.\Generated_Source\PSoC4/CyLFClk.c ****         uint8 interruptState;
2732:.\Generated_Source\PSoC4/CyLFClk.c ****         interruptState = CyEnterCriticalSection();
2733:.\Generated_Source\PSoC4/CyLFClk.c **** 
2734:.\Generated_Source\PSoC4/CyLFClk.c ****         /* Set new WCO_TIMER control register value */
2735:.\Generated_Source\PSoC4/CyLFClk.c ****         counterMask &= (CY_SYS_TIMER0_INT |
2736:.\Generated_Source\PSoC4/CyLFClk.c ****                         CY_SYS_TIMER1_INT |
2737:.\Generated_Source\PSoC4/CyLFClk.c ****                         CY_SYS_TIMER2_INT);
2738:.\Generated_Source\PSoC4/CyLFClk.c **** 
2739:.\Generated_Source\PSoC4/CyLFClk.c ****         CY_SYS_WCO_WDT_CONTROL_REG = counterMask | (CY_SYS_WCO_WDT_CONTROL_REG & ~(CY_SYS_TIMER0_IN
ARM GAS  C:\Users\g\AppData\Local\Temp\ccjVf3bh.s 			page 88


2740:.\Generated_Source\PSoC4/CyLFClk.c ****                                                                            CY_SYS_TIMER1_INT |
2741:.\Generated_Source\PSoC4/CyLFClk.c ****                                                                            CY_SYS_TIMER2_INT));
2742:.\Generated_Source\PSoC4/CyLFClk.c **** 
2743:.\Generated_Source\PSoC4/CyLFClk.c ****         /* Read the CY_SYS_WDT_CONTROL_REG to clear the interrupt request.
2744:.\Generated_Source\PSoC4/CyLFClk.c ****          * Cypress ID #207093, #206231
2745:.\Generated_Source\PSoC4/CyLFClk.c ****         */
2746:.\Generated_Source\PSoC4/CyLFClk.c ****         (void)CY_SYS_WCO_WDT_CONTROL_REG;
2747:.\Generated_Source\PSoC4/CyLFClk.c **** 
2748:.\Generated_Source\PSoC4/CyLFClk.c ****         CyExitCriticalSection(interruptState);
2749:.\Generated_Source\PSoC4/CyLFClk.c ****     }
2750:.\Generated_Source\PSoC4/CyLFClk.c **** 
2751:.\Generated_Source\PSoC4/CyLFClk.c **** 
2752:.\Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
2753:.\Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysTimerSetInterruptCallback
2754:.\Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
2755:.\Generated_Source\PSoC4/CyLFClk.c ****     *
2756:.\Generated_Source\PSoC4/CyLFClk.c ****     * \brief
2757:.\Generated_Source\PSoC4/CyLFClk.c ****     * Sets the ISR callback function for the particular DeepSleep Timer counter.
2758:.\Generated_Source\PSoC4/CyLFClk.c ****     *
2759:.\Generated_Source\PSoC4/CyLFClk.c ****     * These functions are called on the Timer interrupt.
2760:.\Generated_Source\PSoC4/CyLFClk.c ****     *
2761:.\Generated_Source\PSoC4/CyLFClk.c ****     * \param counterNum The number of the Timer counter.
2762:.\Generated_Source\PSoC4/CyLFClk.c ****     * \param function The pointer to the callback function.
2763:.\Generated_Source\PSoC4/CyLFClk.c ****     *
2764:.\Generated_Source\PSoC4/CyLFClk.c ****     * \return  The pointer to the previous callback function. 
2765:.\Generated_Source\PSoC4/CyLFClk.c ****     * \return NULL is returned if the specified address is not set.
2766:.\Generated_Source\PSoC4/CyLFClk.c ****     *
2767:.\Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
2768:.\Generated_Source\PSoC4/CyLFClk.c ****     cyTimerCallback CySysTimerSetInterruptCallback(uint32 counterNum, cyTimerCallback function)
2769:.\Generated_Source\PSoC4/CyLFClk.c ****     {
2770:.\Generated_Source\PSoC4/CyLFClk.c ****         cyTimerCallback prevCallback = (void *)0;
2771:.\Generated_Source\PSoC4/CyLFClk.c **** 
2772:.\Generated_Source\PSoC4/CyLFClk.c ****         if(counterNum < CY_SYS_NUM_OF_TIMERS)
2773:.\Generated_Source\PSoC4/CyLFClk.c ****         {
2774:.\Generated_Source\PSoC4/CyLFClk.c ****             prevCallback = cySysTimerCallback[counterNum];
2775:.\Generated_Source\PSoC4/CyLFClk.c ****             cySysTimerCallback[counterNum] = function;
2776:.\Generated_Source\PSoC4/CyLFClk.c ****         }
2777:.\Generated_Source\PSoC4/CyLFClk.c ****         else
2778:.\Generated_Source\PSoC4/CyLFClk.c ****         {
2779:.\Generated_Source\PSoC4/CyLFClk.c ****             CYASSERT(0u != 0u);
2780:.\Generated_Source\PSoC4/CyLFClk.c ****         }
2781:.\Generated_Source\PSoC4/CyLFClk.c **** 
2782:.\Generated_Source\PSoC4/CyLFClk.c ****         return((cyTimerCallback)prevCallback);
2783:.\Generated_Source\PSoC4/CyLFClk.c ****     }
2784:.\Generated_Source\PSoC4/CyLFClk.c **** 
2785:.\Generated_Source\PSoC4/CyLFClk.c **** 
2786:.\Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
2787:.\Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysTimerGetInterruptCallback
2788:.\Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
2789:.\Generated_Source\PSoC4/CyLFClk.c ****     *
2790:.\Generated_Source\PSoC4/CyLFClk.c ****     * \brief Gets the ISR callback function for the particular DeepSleep Timer 
2791:.\Generated_Source\PSoC4/CyLFClk.c ****     * counter.
2792:.\Generated_Source\PSoC4/CyLFClk.c ****     *
2793:.\Generated_Source\PSoC4/CyLFClk.c ****     * \param counterNum The number of the Timer counter.
2794:.\Generated_Source\PSoC4/CyLFClk.c ****     *
2795:.\Generated_Source\PSoC4/CyLFClk.c ****     * \return
2796:.\Generated_Source\PSoC4/CyLFClk.c ****     * The pointer to the callback function registered for a particular Timer by
ARM GAS  C:\Users\g\AppData\Local\Temp\ccjVf3bh.s 			page 89


2797:.\Generated_Source\PSoC4/CyLFClk.c ****     * a particular address that are passed through arguments.
2798:.\Generated_Source\PSoC4/CyLFClk.c ****     *
2799:.\Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
2800:.\Generated_Source\PSoC4/CyLFClk.c ****     cyTimerCallback CySysTimerGetInterruptCallback(uint32 counterNum)
2801:.\Generated_Source\PSoC4/CyLFClk.c ****     {
2802:.\Generated_Source\PSoC4/CyLFClk.c ****         cyTimerCallback retCallback = (void *)0;
2803:.\Generated_Source\PSoC4/CyLFClk.c **** 
2804:.\Generated_Source\PSoC4/CyLFClk.c ****         if(counterNum < CY_SYS_NUM_OF_TIMERS)
2805:.\Generated_Source\PSoC4/CyLFClk.c ****         {
2806:.\Generated_Source\PSoC4/CyLFClk.c ****             retCallback = (cyTimerCallback)cySysTimerCallback[counterNum];
2807:.\Generated_Source\PSoC4/CyLFClk.c ****         }
2808:.\Generated_Source\PSoC4/CyLFClk.c ****         else
2809:.\Generated_Source\PSoC4/CyLFClk.c ****         {
2810:.\Generated_Source\PSoC4/CyLFClk.c ****             CYASSERT(0u != 0u);
2811:.\Generated_Source\PSoC4/CyLFClk.c ****         }
2812:.\Generated_Source\PSoC4/CyLFClk.c **** 
2813:.\Generated_Source\PSoC4/CyLFClk.c ****         return(retCallback);
2814:.\Generated_Source\PSoC4/CyLFClk.c ****     }
2815:.\Generated_Source\PSoC4/CyLFClk.c **** 
2816:.\Generated_Source\PSoC4/CyLFClk.c **** 
2817:.\Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
2818:.\Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysTimerEnableIsr
2819:.\Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
2820:.\Generated_Source\PSoC4/CyLFClk.c ****     *
2821:.\Generated_Source\PSoC4/CyLFClk.c ****     * \brief Enables the ISR callback servicing for the particular Timer counter
2822:.\Generated_Source\PSoC4/CyLFClk.c ****     *
2823:.\Generated_Source\PSoC4/CyLFClk.c ****     * \param counterNum Valid range [0-2]. The number of the Timer counter.
2824:.\Generated_Source\PSoC4/CyLFClk.c ****     *
2825:.\Generated_Source\PSoC4/CyLFClk.c ****     * Value corresponds to appropriate Timer counter. For example value 1 
2826:.\Generated_Source\PSoC4/CyLFClk.c ****     * corresponds to second Timer counter.
2827:.\Generated_Source\PSoC4/CyLFClk.c ****     *
2828:.\Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
2829:.\Generated_Source\PSoC4/CyLFClk.c ****     void CySysTimerEnableIsr(uint32 counterNum)
2830:.\Generated_Source\PSoC4/CyLFClk.c ****     {
2831:.\Generated_Source\PSoC4/CyLFClk.c ****         if(counterNum <= CY_SYS_TIMER2)
2832:.\Generated_Source\PSoC4/CyLFClk.c ****         {
2833:.\Generated_Source\PSoC4/CyLFClk.c ****             disableTimerServicedIsr &= ~counterTimerIntMaskTbl[counterNum];
2834:.\Generated_Source\PSoC4/CyLFClk.c ****             timerIsrMask |= counterTimerIntMaskTbl[counterNum];
2835:.\Generated_Source\PSoC4/CyLFClk.c ****         }
2836:.\Generated_Source\PSoC4/CyLFClk.c ****         else
2837:.\Generated_Source\PSoC4/CyLFClk.c ****         {
2838:.\Generated_Source\PSoC4/CyLFClk.c ****             CYASSERT(0u != 0u);
2839:.\Generated_Source\PSoC4/CyLFClk.c ****         }
2840:.\Generated_Source\PSoC4/CyLFClk.c ****     }
2841:.\Generated_Source\PSoC4/CyLFClk.c **** 
2842:.\Generated_Source\PSoC4/CyLFClk.c **** 
2843:.\Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
2844:.\Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysTimerDisableIsr
2845:.\Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
2846:.\Generated_Source\PSoC4/CyLFClk.c ****     *
2847:.\Generated_Source\PSoC4/CyLFClk.c ****     * \brief Disables the ISR callback servicing for the particular Timer counter
2848:.\Generated_Source\PSoC4/CyLFClk.c ****     *
2849:.\Generated_Source\PSoC4/CyLFClk.c ****     * \param counterNum Valid range [0-2]. The number of the Timer counter.
2850:.\Generated_Source\PSoC4/CyLFClk.c ****     *
2851:.\Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
2852:.\Generated_Source\PSoC4/CyLFClk.c ****     void CySysTimerDisableIsr(uint32 counterNum)
2853:.\Generated_Source\PSoC4/CyLFClk.c ****     {
ARM GAS  C:\Users\g\AppData\Local\Temp\ccjVf3bh.s 			page 90


2854:.\Generated_Source\PSoC4/CyLFClk.c ****         if(counterNum <= CY_SYS_TIMER2)
2855:.\Generated_Source\PSoC4/CyLFClk.c ****         {
2856:.\Generated_Source\PSoC4/CyLFClk.c ****             timerIsrMask &= ~counterTimerIntMaskTbl[counterNum];
2857:.\Generated_Source\PSoC4/CyLFClk.c ****         }
2858:.\Generated_Source\PSoC4/CyLFClk.c ****         else
2859:.\Generated_Source\PSoC4/CyLFClk.c ****         {
2860:.\Generated_Source\PSoC4/CyLFClk.c ****             CYASSERT(0u != 0u);
2861:.\Generated_Source\PSoC4/CyLFClk.c ****         }
2862:.\Generated_Source\PSoC4/CyLFClk.c ****     }
2863:.\Generated_Source\PSoC4/CyLFClk.c **** 
2864:.\Generated_Source\PSoC4/CyLFClk.c **** 
2865:.\Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
2866:.\Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysTimerIsr
2867:.\Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
2868:.\Generated_Source\PSoC4/CyLFClk.c ****     *
2869:.\Generated_Source\PSoC4/CyLFClk.c ****     * \brief This is the handler of the DeepSleep Timer interrupt in CPU NVIC.
2870:.\Generated_Source\PSoC4/CyLFClk.c ****     *
2871:.\Generated_Source\PSoC4/CyLFClk.c ****     * The handler checks which Timer triggered in the interrupt and calls the 
2872:.\Generated_Source\PSoC4/CyLFClk.c ****     * respective callback functions configured by the user by using 
2873:.\Generated_Source\PSoC4/CyLFClk.c ****     * CySysTimerSetIsrCallback() API.
2874:.\Generated_Source\PSoC4/CyLFClk.c ****     *
2875:.\Generated_Source\PSoC4/CyLFClk.c ****     * The order of the callback execution is incremental. Callback-0 is
2876:.\Generated_Source\PSoC4/CyLFClk.c ****     * run as the first one and callback-2 is called as the last one.
2877:.\Generated_Source\PSoC4/CyLFClk.c ****     *
2878:.\Generated_Source\PSoC4/CyLFClk.c ****     * \details This function clears the DeepSleep Timer interrupt every time when 
2879:.\Generated_Source\PSoC4/CyLFClk.c ****     * it is called.
2880:.\Generated_Source\PSoC4/CyLFClk.c ****     *
2881:.\Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
2882:.\Generated_Source\PSoC4/CyLFClk.c ****     void CySysTimerIsr(void)
2883:.\Generated_Source\PSoC4/CyLFClk.c ****     {
2884:.\Generated_Source\PSoC4/CyLFClk.c ****         if(0u != (CY_SYS_TIMER0_INT & CY_SYS_WCO_WDT_CONTROL_REG))
2885:.\Generated_Source\PSoC4/CyLFClk.c ****         {
2886:.\Generated_Source\PSoC4/CyLFClk.c ****             if(0u != (CY_SYS_TIMER0_INT & timerIsrMask))
2887:.\Generated_Source\PSoC4/CyLFClk.c ****             {
2888:.\Generated_Source\PSoC4/CyLFClk.c ****                 timerIsrMask &= ~(disableTimerServicedIsr & CY_SYS_TIMER0_INT);
2889:.\Generated_Source\PSoC4/CyLFClk.c ****                 disableTimerServicedIsr  &= ~CY_SYS_TIMER0_INT;
2890:.\Generated_Source\PSoC4/CyLFClk.c ****                 if(cySysTimerCallback[CY_SYS_TIMER0] != (void *) 0)
2891:.\Generated_Source\PSoC4/CyLFClk.c ****                 {
2892:.\Generated_Source\PSoC4/CyLFClk.c ****                     (void)(cySysTimerCallback[CY_SYS_TIMER0])();
2893:.\Generated_Source\PSoC4/CyLFClk.c ****                 }
2894:.\Generated_Source\PSoC4/CyLFClk.c ****             }
2895:.\Generated_Source\PSoC4/CyLFClk.c ****             CySysTimerClearInterrupt(CY_SYS_TIMER0_INT);
2896:.\Generated_Source\PSoC4/CyLFClk.c ****         }
2897:.\Generated_Source\PSoC4/CyLFClk.c **** 
2898:.\Generated_Source\PSoC4/CyLFClk.c ****         if(0u != (CY_SYS_TIMER1_INT & CY_SYS_WCO_WDT_CONTROL_REG))
2899:.\Generated_Source\PSoC4/CyLFClk.c ****         {
2900:.\Generated_Source\PSoC4/CyLFClk.c ****             if(0u != (CY_SYS_TIMER1_INT & timerIsrMask))
2901:.\Generated_Source\PSoC4/CyLFClk.c ****             {
2902:.\Generated_Source\PSoC4/CyLFClk.c ****                 timerIsrMask &= ~(disableTimerServicedIsr & CY_SYS_TIMER1_INT);
2903:.\Generated_Source\PSoC4/CyLFClk.c ****                 disableTimerServicedIsr  &= ~CY_SYS_TIMER1_INT;
2904:.\Generated_Source\PSoC4/CyLFClk.c ****                 if(cySysTimerCallback[CY_SYS_TIMER1] != (void *) 0)
2905:.\Generated_Source\PSoC4/CyLFClk.c ****                 {
2906:.\Generated_Source\PSoC4/CyLFClk.c ****                     (void)(cySysTimerCallback[CY_SYS_TIMER1])();
2907:.\Generated_Source\PSoC4/CyLFClk.c ****                 }
2908:.\Generated_Source\PSoC4/CyLFClk.c ****             }
2909:.\Generated_Source\PSoC4/CyLFClk.c ****             CySysTimerClearInterrupt(CY_SYS_TIMER1_INT);
2910:.\Generated_Source\PSoC4/CyLFClk.c ****         }
ARM GAS  C:\Users\g\AppData\Local\Temp\ccjVf3bh.s 			page 91


2911:.\Generated_Source\PSoC4/CyLFClk.c **** 
2912:.\Generated_Source\PSoC4/CyLFClk.c ****         if(0u != (CY_SYS_TIMER2_INT & CY_SYS_WCO_WDT_CONTROL_REG))
2913:.\Generated_Source\PSoC4/CyLFClk.c ****         {
2914:.\Generated_Source\PSoC4/CyLFClk.c ****             if(0u != (CY_SYS_TIMER2_INT & timerIsrMask))
2915:.\Generated_Source\PSoC4/CyLFClk.c ****             {
2916:.\Generated_Source\PSoC4/CyLFClk.c ****                 if(cySysTimerCallback[CY_SYS_TIMER2] != (void *) 0)
2917:.\Generated_Source\PSoC4/CyLFClk.c ****                 {
2918:.\Generated_Source\PSoC4/CyLFClk.c ****                     (void)(cySysTimerCallback[CY_SYS_TIMER2])();
2919:.\Generated_Source\PSoC4/CyLFClk.c ****                 }
2920:.\Generated_Source\PSoC4/CyLFClk.c ****             }
2921:.\Generated_Source\PSoC4/CyLFClk.c ****             CySysTimerClearInterrupt(CY_SYS_TIMER2_INT);
2922:.\Generated_Source\PSoC4/CyLFClk.c ****         }
2923:.\Generated_Source\PSoC4/CyLFClk.c ****     }
2924:.\Generated_Source\PSoC4/CyLFClk.c **** 
2925:.\Generated_Source\PSoC4/CyLFClk.c **** 
2926:.\Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
2927:.\Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysTimerResetCounters
2928:.\Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
2929:.\Generated_Source\PSoC4/CyLFClk.c ****     *
2930:.\Generated_Source\PSoC4/CyLFClk.c ****     * \brief Resets all the Timer counters set in the mask.
2931:.\Generated_Source\PSoC4/CyLFClk.c ****     *
2932:.\Generated_Source\PSoC4/CyLFClk.c ****     * \param countersMask
2933:.\Generated_Source\PSoC4/CyLFClk.c ****     * CY_SYS_TIMER0_RESET - Reset the Counter 0<br>
2934:.\Generated_Source\PSoC4/CyLFClk.c ****     * CY_SYS_TIMER1_RESET - Reset the Counter 1<br>
2935:.\Generated_Source\PSoC4/CyLFClk.c ****     * CY_SYS_TIMER2_RESET - Reset the Counter 2
2936:.\Generated_Source\PSoC4/CyLFClk.c ****     *
2937:.\Generated_Source\PSoC4/CyLFClk.c ****     * \details
2938:.\Generated_Source\PSoC4/CyLFClk.c ****     * This function waits while corresponding counters will be reset. This may
2939:.\Generated_Source\PSoC4/CyLFClk.c ****     * take up to 3 DeepSleep Timer source-cycles. DeepSleep Timer source must be 
2940:.\Generated_Source\PSoC4/CyLFClk.c ****     * enabled. Otherwise, the function will never exit.
2941:.\Generated_Source\PSoC4/CyLFClk.c ****     *
2942:.\Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
2943:.\Generated_Source\PSoC4/CyLFClk.c ****     void CySysTimerResetCounters(uint32 countersMask)
2944:.\Generated_Source\PSoC4/CyLFClk.c ****     {
2945:.\Generated_Source\PSoC4/CyLFClk.c ****         /* Set new Timer reset value */
2946:.\Generated_Source\PSoC4/CyLFClk.c ****         CY_SYS_WCO_WDT_CONTROL_REG |= (countersMask & CY_SYS_TIMER_RESET);
2947:.\Generated_Source\PSoC4/CyLFClk.c **** 
2948:.\Generated_Source\PSoC4/CyLFClk.c ****         while (0uL != (CY_SYS_WCO_WDT_CONTROL_REG & CY_SYS_TIMER_RESET))
2949:.\Generated_Source\PSoC4/CyLFClk.c ****         {
2950:.\Generated_Source\PSoC4/CyLFClk.c ****             /* Wait for reset to come into effect */
2951:.\Generated_Source\PSoC4/CyLFClk.c ****         }
2952:.\Generated_Source\PSoC4/CyLFClk.c ****     }
2953:.\Generated_Source\PSoC4/CyLFClk.c **** #endif /* (CY_IP_SRSSLT && CY_IP_WCO && CY_IP_WCO_WDT_EN) */
2954:.\Generated_Source\PSoC4/CyLFClk.c **** 
2955:.\Generated_Source\PSoC4/CyLFClk.c **** 
2956:.\Generated_Source\PSoC4/CyLFClk.c **** #if(CY_IP_SRSSV2 || (CY_IP_WCO_WDT_EN && CY_IP_SRSSLT))
2957:.\Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
2958:.\Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysTimerDelay
2959:.\Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
2960:.\Generated_Source\PSoC4/CyLFClk.c ****     *
2961:.\Generated_Source\PSoC4/CyLFClk.c ****     * \brief
2962:.\Generated_Source\PSoC4/CyLFClk.c ****     * The function implements the delay specified in the LFCLK clock ticks.
2963:.\Generated_Source\PSoC4/CyLFClk.c ****     *
2964:.\Generated_Source\PSoC4/CyLFClk.c ****     * This API is applicable for PSoC 4100 / PSoC 4200 / PSoC 4100 BLE / 
2965:.\Generated_Source\PSoC4/CyLFClk.c ****     * PSoC 4200 BLE / PRoC BLE / PSoC 4200L / PSoC 4100M / PSoC 4200M devices to 
2966:.\Generated_Source\PSoC4/CyLFClk.c ****     * use WDT. Also this API is available to use for PSoC4100S and / PSoC Analog 
2967:.\Generated_Source\PSoC4/CyLFClk.c ****     * Coprocessor devices to use DeepSleep Timers.
ARM GAS  C:\Users\g\AppData\Local\Temp\ccjVf3bh.s 			page 92


2968:.\Generated_Source\PSoC4/CyLFClk.c ****     *
2969:.\Generated_Source\PSoC4/CyLFClk.c ****     * For PSoC 4100 / PSoC 4200 / PSoC 4100 BLE / PSoC 4200 BLE / PRoC BLE / PSoC 
2970:.\Generated_Source\PSoC4/CyLFClk.c ****     * 4200L / PSoC 4100M / PSoC 4200M devices:
2971:.\Generated_Source\PSoC4/CyLFClk.c ****     * The specified WDT counter should be configured as described below and started.
2972:.\Generated_Source\PSoC4/CyLFClk.c ****     *
2973:.\Generated_Source\PSoC4/CyLFClk.c ****     * For PSoC 4100S / PSoC Analog Coprocessor devices:
2974:.\Generated_Source\PSoC4/CyLFClk.c ****     * The specified DeepSleep Timer counter should be configured as described below
2975:.\Generated_Source\PSoC4/CyLFClk.c ****     * and started.
2976:.\Generated_Source\PSoC4/CyLFClk.c ****     *
2977:.\Generated_Source\PSoC4/CyLFClk.c ****     * This function can operate in two modes: the "WAIT" and "INTERRUPT" modes. In
2978:.\Generated_Source\PSoC4/CyLFClk.c ****     * the "WAIT" mode, the function waits for the specified number of ticks. In the
2979:.\Generated_Source\PSoC4/CyLFClk.c ****     * "INTERRUPT" mode, the interrupt is generated after the specified number of
2980:.\Generated_Source\PSoC4/CyLFClk.c ****     * ticks.
2981:.\Generated_Source\PSoC4/CyLFClk.c ****     *
2982:.\Generated_Source\PSoC4/CyLFClk.c ****     * For the correct function operation, the "Clear On Match" option should be
2983:.\Generated_Source\PSoC4/CyLFClk.c ****     * disabled for the specified WDT or DeepSleep Timer counter. Use 
2984:.\Generated_Source\PSoC4/CyLFClk.c ****     * CySysWdtSetClearOnMatch() for WDT or CySysTimerSetClearOnMatch() for DeepSleep
2985:.\Generated_Source\PSoC4/CyLFClk.c ****     * Timer function with the "enable" parameter equal to zero for the used WDT 
2986:.\Generated_Source\PSoC4/CyLFClk.c ****     * counter or DeepSleep Timer counter.
2987:.\Generated_Source\PSoC4/CyLFClk.c ****     *
2988:.\Generated_Source\PSoC4/CyLFClk.c ****     * The corresponding WDT counter should be configured to match the selected
2989:.\Generated_Source\PSoC4/CyLFClk.c ****     * mode: "Free running Timer" for the "WAIT" mode, and
2990:.\Generated_Source\PSoC4/CyLFClk.c ****     * "Periodic Timer" / "Watchdog (w/Interrupt)" for the "INTERRUPT" mode.
2991:.\Generated_Source\PSoC4/CyLFClk.c ****     *
2992:.\Generated_Source\PSoC4/CyLFClk.c ****     * Or the corresponding DeepSleep Timer counter should be configured to match the
2993:.\Generated_Source\PSoC4/CyLFClk.c ****     * selected mode: "Free running Timer" for the "WAIT" mode, and
2994:.\Generated_Source\PSoC4/CyLFClk.c ****     * "Periodic Timer" for the "INTERRUPT" mode.
2995:.\Generated_Source\PSoC4/CyLFClk.c ****     *
2996:.\Generated_Source\PSoC4/CyLFClk.c ****     * This can be configured in two ways:
2997:.\Generated_Source\PSoC4/CyLFClk.c ****     * - Through the DWR page. Open the "Clocks" tab, click the "Edit Clocks..."
2998:.\Generated_Source\PSoC4/CyLFClk.c ****     * button, in the "Configure System Clocks" window click on the
2999:.\Generated_Source\PSoC4/CyLFClk.c ****     * "Low Frequency Clocks" tab and choose the appropriate option for the used
3000:.\Generated_Source\PSoC4/CyLFClk.c ****     * WDT or DeepSleep Timer counter.
3001:.\Generated_Source\PSoC4/CyLFClk.c ****     *
3002:.\Generated_Source\PSoC4/CyLFClk.c ****     * - Through the CySysWdtSetMode() for WDT or CySysTimerSetMode() for DeepSleep
3003:.\Generated_Source\PSoC4/CyLFClk.c ****     * Timer function. Call it with the appropriate "mode" parameter for the 
3004:.\Generated_Source\PSoC4/CyLFClk.c ****     * used WDT or DeepSleep Timer counter.
3005:.\Generated_Source\PSoC4/CyLFClk.c ****     *
3006:.\Generated_Source\PSoC4/CyLFClk.c ****     * For the "INTERRUPT" mode, the recommended sequence is the following:
3007:.\Generated_Source\PSoC4/CyLFClk.c ****     * - Call the CySysWdtDisableCounterIsr() for WDT or 
3008:.\Generated_Source\PSoC4/CyLFClk.c ****     * CySysTimerDisableIsr() for DeepSleep Timer function to disable servicing
3009:.\Generated_Source\PSoC4/CyLFClk.c ****     * interrupts of the specified WDT or DeepSleep Timer counter.
3010:.\Generated_Source\PSoC4/CyLFClk.c ****     *
3011:.\Generated_Source\PSoC4/CyLFClk.c ****     * - Call the CySysWdtSetInterruptCallback() for WDT or 
3012:.\Generated_Source\PSoC4/CyLFClk.c ****     * CySysTimerSetIsrCallback() for DeepSleep Timer function to register 
3013:.\Generated_Source\PSoC4/CyLFClk.c ****     * the callback function for the corresponding WDT or DeepSleep Timer counter.
3014:.\Generated_Source\PSoC4/CyLFClk.c ****     *
3015:.\Generated_Source\PSoC4/CyLFClk.c ****     * - Call the CySysTimerDelay() function.
3016:.\Generated_Source\PSoC4/CyLFClk.c ****     *
3017:.\Generated_Source\PSoC4/CyLFClk.c ****     * \param counterNum Valid range [0-1]. The number of the counter 
3018:.\Generated_Source\PSoC4/CyLFClk.c ****     * (Timer0 or Timer1).
3019:.\Generated_Source\PSoC4/CyLFClk.c ****     * \param delayType
3020:.\Generated_Source\PSoC4/CyLFClk.c ****     * CY_SYS_TIMER_WAIT - "WAIT" mode. <br>
3021:.\Generated_Source\PSoC4/CyLFClk.c ****     * CY_SYS_TIMER_INTERRUPT - "INTERRUPT" mode.
3022:.\Generated_Source\PSoC4/CyLFClk.c ****     * \param delay The delay value in the LFCLK ticks 
3023:.\Generated_Source\PSoC4/CyLFClk.c ****     * (allowable range - 16-bit value).
3024:.\Generated_Source\PSoC4/CyLFClk.c ****     *
ARM GAS  C:\Users\g\AppData\Local\Temp\ccjVf3bh.s 			page 93


3025:.\Generated_Source\PSoC4/CyLFClk.c ****     * \details
3026:.\Generated_Source\PSoC4/CyLFClk.c ****     * In the "INTERRUPT" mode, this function enables ISR callback servicing
3027:.\Generated_Source\PSoC4/CyLFClk.c ****     * from the corresponding WDT or DeepSleep Timer counter. Servicing of this ISR 
3028:.\Generated_Source\PSoC4/CyLFClk.c ****     * callback will be disabled after the expiration of the delay time.
3029:.\Generated_Source\PSoC4/CyLFClk.c ****     *
3030:.\Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
3031:.\Generated_Source\PSoC4/CyLFClk.c ****     void CySysTimerDelay(uint32 counterNum, cy_sys_timer_delaytype_enum delayType, uint32 delay)
3032:.\Generated_Source\PSoC4/CyLFClk.c ****     {
3033:.\Generated_Source\PSoC4/CyLFClk.c ****         uint32 regValue;
3034:.\Generated_Source\PSoC4/CyLFClk.c ****         uint32 matchValue;
3035:.\Generated_Source\PSoC4/CyLFClk.c **** 
3036:.\Generated_Source\PSoC4/CyLFClk.c ****         #if(CY_IP_SRSSV2)
3037:.\Generated_Source\PSoC4/CyLFClk.c ****             if((counterNum < CY_SYS_WDT_COUNTER2) && (0uL == CySysWdtGetClearOnMatch(counterNum)) &
3038:.\Generated_Source\PSoC4/CyLFClk.c ****                                                                 (delay <= CY_SYS_UINT16_MAX_VAL))
3039:.\Generated_Source\PSoC4/CyLFClk.c ****             {
3040:.\Generated_Source\PSoC4/CyLFClk.c ****                 regValue   = CySysWdtGetCount(counterNum);
3041:.\Generated_Source\PSoC4/CyLFClk.c ****                 matchValue = (regValue + delay) & (uint32)CY_SYS_UINT16_MAX_VAL;
3042:.\Generated_Source\PSoC4/CyLFClk.c **** 
3043:.\Generated_Source\PSoC4/CyLFClk.c ****                 CySysTimerDelayUntilMatch(counterNum, delayType, matchValue);
3044:.\Generated_Source\PSoC4/CyLFClk.c ****             }
3045:.\Generated_Source\PSoC4/CyLFClk.c ****             else
3046:.\Generated_Source\PSoC4/CyLFClk.c ****             {
3047:.\Generated_Source\PSoC4/CyLFClk.c ****                 CYASSERT(0u != 0u);
3048:.\Generated_Source\PSoC4/CyLFClk.c ****             }
3049:.\Generated_Source\PSoC4/CyLFClk.c ****         #endif /* (CY_IP_SRSSV2) */
3050:.\Generated_Source\PSoC4/CyLFClk.c **** 
3051:.\Generated_Source\PSoC4/CyLFClk.c ****         #if(CY_IP_WCO_WDT_EN && CY_IP_SRSSLT)
3052:.\Generated_Source\PSoC4/CyLFClk.c ****             if((counterNum < CY_SYS_TIMER2) && (0uL == CySysTimerGetClearOnMatch(counterNum)) && 
3053:.\Generated_Source\PSoC4/CyLFClk.c ****                                                             (delay <= CY_SYS_UINT16_MAX_VAL))
3054:.\Generated_Source\PSoC4/CyLFClk.c ****             {
3055:.\Generated_Source\PSoC4/CyLFClk.c ****                 regValue   = CySysTimerGetCount(counterNum);
3056:.\Generated_Source\PSoC4/CyLFClk.c ****                 matchValue = (regValue + delay) & (uint32)CY_SYS_UINT16_MAX_VAL;
3057:.\Generated_Source\PSoC4/CyLFClk.c **** 
3058:.\Generated_Source\PSoC4/CyLFClk.c ****                 CySysTimerDelayUntilMatch(counterNum, delayType, matchValue);
3059:.\Generated_Source\PSoC4/CyLFClk.c ****             }
3060:.\Generated_Source\PSoC4/CyLFClk.c ****             else
3061:.\Generated_Source\PSoC4/CyLFClk.c ****             {
3062:.\Generated_Source\PSoC4/CyLFClk.c ****                 CYASSERT(0u != 0u);
3063:.\Generated_Source\PSoC4/CyLFClk.c ****             }
3064:.\Generated_Source\PSoC4/CyLFClk.c ****         #endif /* (CY_IP_WCO_WDT_EN) */
3065:.\Generated_Source\PSoC4/CyLFClk.c ****     }
3066:.\Generated_Source\PSoC4/CyLFClk.c **** 
3067:.\Generated_Source\PSoC4/CyLFClk.c **** 
3068:.\Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
3069:.\Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysTimerDelayUntilMatch
3070:.\Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
3071:.\Generated_Source\PSoC4/CyLFClk.c ****     *
3072:.\Generated_Source\PSoC4/CyLFClk.c ****     * \brief
3073:.\Generated_Source\PSoC4/CyLFClk.c ****     * The function implements the delay specified as the number of WDT or DeepSleep
3074:.\Generated_Source\PSoC4/CyLFClk.c ****     * Timer clock source ticks between WDT or DeepSleep Timer current value and 
3075:.\Generated_Source\PSoC4/CyLFClk.c ****     * match" value.
3076:.\Generated_Source\PSoC4/CyLFClk.c ****     *
3077:.\Generated_Source\PSoC4/CyLFClk.c ****     * This API is applicable for PSoC 4100 / PSoC 4200 / PRoC BLE / PSoC 4100 BLE /
3078:.\Generated_Source\PSoC4/CyLFClk.c ****     * PSoC 4200 BLE / PSoC 4200L / PSoC 4100M / PSoC 4200M devices to use WDT.
3079:.\Generated_Source\PSoC4/CyLFClk.c ****     * Also this API is available to use for PSoC4100S / Analog Coprocessor devices
3080:.\Generated_Source\PSoC4/CyLFClk.c ****     * to use DeepSleep Timers.
3081:.\Generated_Source\PSoC4/CyLFClk.c ****     * 
ARM GAS  C:\Users\g\AppData\Local\Temp\ccjVf3bh.s 			page 94


3082:.\Generated_Source\PSoC4/CyLFClk.c ****     * For PSoC 4100 / PSoC 4200 / PSoC 4100 BLE / PSoC 4200 BLE / PRoC BLE / PSoC 
3083:.\Generated_Source\PSoC4/CyLFClk.c ****     * 4200L / PSoC 4100M / PSoC 4200M devices:
3084:.\Generated_Source\PSoC4/CyLFClk.c ****     * The function implements the delay specified as the number of LFCLK ticks
3085:.\Generated_Source\PSoC4/CyLFClk.c ****     * between the specified WDT counter's current value and the "match"
3086:.\Generated_Source\PSoC4/CyLFClk.c ****     * passed as the parameter to this function. The current WDT counter value can 
3087:.\Generated_Source\PSoC4/CyLFClk.c ****     * be obtained using the CySysWdtGetCount() function.
3088:.\Generated_Source\PSoC4/CyLFClk.c ****     *
3089:.\Generated_Source\PSoC4/CyLFClk.c ****     * For PSoC4100 S and Analog Coprocessor devices:
3090:.\Generated_Source\PSoC4/CyLFClk.c ****     * The function implements the delay specified as the number of DeepSleep Timer 
3091:.\Generated_Source\PSoC4/CyLFClk.c ****     * input clock ticks for Timer0/Timer1 counter's current value and the "match" 
3092:.\Generated_Source\PSoC4/CyLFClk.c ****     * passed as the parameter to this function. The current DeepSleep Timer counter
3093:.\Generated_Source\PSoC4/CyLFClk.c ****     * value can be obtained using the CySysWdtGetCount() function.
3094:.\Generated_Source\PSoC4/CyLFClk.c ****     *
3095:.\Generated_Source\PSoC4/CyLFClk.c ****     * For PSoC 4100 / PSoC 4200 / PSoC 4100 BLE / PSoC 4200 BLE / PRoC BLE / PSoC 
3096:.\Generated_Source\PSoC4/CyLFClk.c ****     * 4200L / PSoC 4100M / PSoC 4200M devices:
3097:.\Generated_Source\PSoC4/CyLFClk.c ****     * The specified WDT counter should be configured as described below and started.
3098:.\Generated_Source\PSoC4/CyLFClk.c ****     *
3099:.\Generated_Source\PSoC4/CyLFClk.c ****     * For PSoC PSoC 4100S / PSoC Analog Coprocessor devices:
3100:.\Generated_Source\PSoC4/CyLFClk.c ****     * The specified DeepSleep Timer counter should be configured as described below
3101:.\Generated_Source\PSoC4/CyLFClk.c ****     * and started.
3102:.\Generated_Source\PSoC4/CyLFClk.c ****     *
3103:.\Generated_Source\PSoC4/CyLFClk.c ****     * This function can operate in two modes: the "WAIT" and "INTERRUPT" modes. In
3104:.\Generated_Source\PSoC4/CyLFClk.c ****     * the "WAIT" mode, the function waits for the specified number of ticks. In the
3105:.\Generated_Source\PSoC4/CyLFClk.c ****     * "INTERRUPT" mode, the interrupt is generated after the specified number of
3106:.\Generated_Source\PSoC4/CyLFClk.c ****     * ticks.
3107:.\Generated_Source\PSoC4/CyLFClk.c ****     *
3108:.\Generated_Source\PSoC4/CyLFClk.c ****     * For the correct function operation, the "Clear On Match" option should be
3109:.\Generated_Source\PSoC4/CyLFClk.c ****     * disabled for the specified WDT or DeepSleep Timer counter. Use 
3110:.\Generated_Source\PSoC4/CyLFClk.c ****     * CySysWdtSetClearOnMatch() for WDT or CySysTimerSetClearOnMatch() for DeepSleep
3111:.\Generated_Source\PSoC4/CyLFClk.c ****     * Timer function with the "enable" parameter equal to zero for the used WDT 
3112:.\Generated_Source\PSoC4/CyLFClk.c ****     * or DeepSleep Timer counter.
3113:.\Generated_Source\PSoC4/CyLFClk.c ****     *
3114:.\Generated_Source\PSoC4/CyLFClk.c ****     * For PSoC 4100 / PSoC 4200 / PSoC 4100 BLE / PSoC 4200 BLE / PRoC BLE / PSoC 
3115:.\Generated_Source\PSoC4/CyLFClk.c ****     * 4200L / PSoC 4100M/PSoC 4200M devices:
3116:.\Generated_Source\PSoC4/CyLFClk.c ****     * The corresponding WDT counter should be configured to match the selected
3117:.\Generated_Source\PSoC4/CyLFClk.c ****     * mode: "Free running Timer" for the "WAIT" mode, and
3118:.\Generated_Source\PSoC4/CyLFClk.c ****     * "Periodic Timer" / "Watchdog (w/Interrupt)" for the "INTERRUPT" mode.
3119:.\Generated_Source\PSoC4/CyLFClk.c ****     *
3120:.\Generated_Source\PSoC4/CyLFClk.c ****     * For PSoC 4100S / PSoC Analog Coprocessor devices:
3121:.\Generated_Source\PSoC4/CyLFClk.c ****     * Corresponding DeepSleep Timer counter should be configured to match the 
3122:.\Generated_Source\PSoC4/CyLFClk.c ****     * selected mode: "Free running Timer" for the "WAIT" mode, and
3123:.\Generated_Source\PSoC4/CyLFClk.c ****     * "Periodic Timer" for the "INTERRUPT" mode.
3124:.\Generated_Source\PSoC4/CyLFClk.c ****     *
3125:.\Generated_Source\PSoC4/CyLFClk.c ****     * This can be configured in two ways:
3126:.\Generated_Source\PSoC4/CyLFClk.c ****     * - Through the DWR page. Open the "Clocks" tab, click the "Edit Clocks..."
3127:.\Generated_Source\PSoC4/CyLFClk.c ****     * button, in the "Configure System Clocks" window click on the
3128:.\Generated_Source\PSoC4/CyLFClk.c ****     * "Low Frequency Clocks" tab and choose the appropriate option for the used
3129:.\Generated_Source\PSoC4/CyLFClk.c ****     * WDT or DeepSleep Timer counter.
3130:.\Generated_Source\PSoC4/CyLFClk.c ****     *
3131:.\Generated_Source\PSoC4/CyLFClk.c ****     * - Through the CySysWdtSetMode() for WDT or CySysTimerSetMode() for DeepSleep
3132:.\Generated_Source\PSoC4/CyLFClk.c ****     * Timer function. Call it with the appropriate "mode" parameter for the 
3133:.\Generated_Source\PSoC4/CyLFClk.c ****     * used WDT or DeepSleep Timer counter.
3134:.\Generated_Source\PSoC4/CyLFClk.c ****     *
3135:.\Generated_Source\PSoC4/CyLFClk.c ****     * For the "INTERRUPT" mode, the recommended sequence is the following:
3136:.\Generated_Source\PSoC4/CyLFClk.c ****     * - Call the CySysWdtDisableCounterIsr() for WDT or 
3137:.\Generated_Source\PSoC4/CyLFClk.c ****     * CySysTimerDisableIsr() for DeepSleep Timer function to disable servicing
3138:.\Generated_Source\PSoC4/CyLFClk.c ****     * interrupts of the specified WDT or DeepSleep Timer counter.
ARM GAS  C:\Users\g\AppData\Local\Temp\ccjVf3bh.s 			page 95


3139:.\Generated_Source\PSoC4/CyLFClk.c ****     *
3140:.\Generated_Source\PSoC4/CyLFClk.c ****     * - Call the CySysWdtSetInterruptCallback() for WDT or 
3141:.\Generated_Source\PSoC4/CyLFClk.c ****     * CySysTimerSetInterruptCallback() for DeepSleep Timer function to register 
3142:.\Generated_Source\PSoC4/CyLFClk.c ****     * the callback function for the corresponding WDT or DeepSleep Timer counter.
3143:.\Generated_Source\PSoC4/CyLFClk.c ****     *
3144:.\Generated_Source\PSoC4/CyLFClk.c ****     * - Call the CySysTimerDelay() function.
3145:.\Generated_Source\PSoC4/CyLFClk.c ****     *
3146:.\Generated_Source\PSoC4/CyLFClk.c ****     * \param counterNum Valid range [0-1]. The number of the WDT or DeepSleep 
3147:.\Generated_Source\PSoC4/CyLFClk.c ****     * Timer.
3148:.\Generated_Source\PSoC4/CyLFClk.c ****     * counter (Timer0 or Timer1).
3149:.\Generated_Source\PSoC4/CyLFClk.c ****     * \param delayType  CY_SYS_TIMER_WAIT - "WAIT" mode.<br>
3150:.\Generated_Source\PSoC4/CyLFClk.c ****     * CY_SYS_TIMER_INTERRUPT - "INTERRUPT" mode.
3151:.\Generated_Source\PSoC4/CyLFClk.c ****     * \param delay The delay value in the LFCLK ticks
3152:.\Generated_Source\PSoC4/CyLFClk.c ****     * (allowable range - 16-bit value).
3153:.\Generated_Source\PSoC4/CyLFClk.c ****     *
3154:.\Generated_Source\PSoC4/CyLFClk.c ****     * \details
3155:.\Generated_Source\PSoC4/CyLFClk.c ****     * In the "INTERRUPT" mode, this function enables ISR callback servicing
3156:.\Generated_Source\PSoC4/CyLFClk.c ****     * from the corresponding WDT counter. Servicing of this ISR callback will be
3157:.\Generated_Source\PSoC4/CyLFClk.c ****     * disabled after the expiration of the delay time.
3158:.\Generated_Source\PSoC4/CyLFClk.c ****     *
3159:.\Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
3160:.\Generated_Source\PSoC4/CyLFClk.c ****     void CySysTimerDelayUntilMatch(uint32 counterNum, cy_sys_timer_delaytype_enum delayType, uint32
3161:.\Generated_Source\PSoC4/CyLFClk.c ****     {
 1979              		.loc 1 3161 0
 1980              		.cfi_startproc
 1981              	.LVL207:
 1982 0000 70B5     		push	{r4, r5, r6, lr}
 1983              		.cfi_def_cfa_offset 16
 1984              		.cfi_offset 4, -16
 1985              		.cfi_offset 5, -12
 1986              		.cfi_offset 6, -8
 1987              		.cfi_offset 14, -4
 1988 0002 041C     		mov	r4, r0
 1989 0004 0E1C     		mov	r6, r1
 1990 0006 151C     		mov	r5, r2
3162:.\Generated_Source\PSoC4/CyLFClk.c ****         uint32 tmpValue;
3163:.\Generated_Source\PSoC4/CyLFClk.c **** 
3164:.\Generated_Source\PSoC4/CyLFClk.c ****         #if(CY_IP_SRSSV2)
3165:.\Generated_Source\PSoC4/CyLFClk.c ****             if((counterNum < CY_SYS_WDT_COUNTER2) && (0uL == CySysWdtGetClearOnMatch(counterNum)) &
 1991              		.loc 1 3165 0
 1992 0008 0128     		cmp	r0, #1
 1993 000a 23D8     		bhi	.L173
 1994              		.loc 1 3165 0 is_stmt 0 discriminator 1
 1995 000c FFF7FEFF 		bl	CySysWdtGetClearOnMatch
 1996              	.LVL208:
 1997 0010 0028     		cmp	r0, #0
 1998 0012 1FD1     		bne	.L173
 1999              		.loc 1 3165 0 discriminator 2
 2000 0014 114B     		ldr	r3, .L178
 2001 0016 9D42     		cmp	r5, r3
 2002 0018 1CD8     		bhi	.L173
3166:.\Generated_Source\PSoC4/CyLFClk.c ****                                                                 (match <= CY_SYS_UINT16_MAX_VAL))
3167:.\Generated_Source\PSoC4/CyLFClk.c ****             {
3168:.\Generated_Source\PSoC4/CyLFClk.c ****                 if(delayType == CY_SYS_TIMER_WAIT)
 2003              		.loc 1 3168 0 is_stmt 1
 2004 001a 002E     		cmp	r6, #0
 2005 001c 0AD1     		bne	.L174
ARM GAS  C:\Users\g\AppData\Local\Temp\ccjVf3bh.s 			page 96


 2006              	.L175:
3169:.\Generated_Source\PSoC4/CyLFClk.c ****                 {
3170:.\Generated_Source\PSoC4/CyLFClk.c ****                     do
3171:.\Generated_Source\PSoC4/CyLFClk.c ****                     {
3172:.\Generated_Source\PSoC4/CyLFClk.c ****                         tmpValue = CySysWdtGetCount(counterNum);
 2007              		.loc 1 3172 0 discriminator 1
 2008 001e 201C     		mov	r0, r4
 2009 0020 FFF7FEFF 		bl	CySysWdtGetCount
 2010              	.LVL209:
3173:.\Generated_Source\PSoC4/CyLFClk.c ****                     }while(tmpValue > match);
 2011              		.loc 1 3173 0 discriminator 1
 2012 0024 A842     		cmp	r0, r5
 2013 0026 FAD8     		bhi	.L175
 2014              	.L176:
3174:.\Generated_Source\PSoC4/CyLFClk.c **** 
3175:.\Generated_Source\PSoC4/CyLFClk.c ****                     do
3176:.\Generated_Source\PSoC4/CyLFClk.c ****                     {
3177:.\Generated_Source\PSoC4/CyLFClk.c ****                         tmpValue = CySysWdtGetCount(counterNum);
 2015              		.loc 1 3177 0 discriminator 1
 2016 0028 201C     		mov	r0, r4
 2017              	.LVL210:
 2018 002a FFF7FEFF 		bl	CySysWdtGetCount
 2019              	.LVL211:
3178:.\Generated_Source\PSoC4/CyLFClk.c ****                     }while(tmpValue < match);
 2020              		.loc 1 3178 0 discriminator 1
 2021 002e A842     		cmp	r0, r5
 2022 0030 FAD3     		bcc	.L176
 2023 0032 12E0     		b	.L172
 2024              	.LVL212:
 2025              	.L174:
3179:.\Generated_Source\PSoC4/CyLFClk.c ****                 }
3180:.\Generated_Source\PSoC4/CyLFClk.c ****                 else
3181:.\Generated_Source\PSoC4/CyLFClk.c ****                 {
3182:.\Generated_Source\PSoC4/CyLFClk.c ****                     tmpValue = counterIntMaskTbl[counterNum];
 2026              		.loc 1 3182 0
 2027 0034 A200     		lsl	r2, r4, #2
 2028 0036 0A4B     		ldr	r3, .L178+4
 2029 0038 D658     		ldr	r6, [r2, r3]
 2030              	.LVL213:
3183:.\Generated_Source\PSoC4/CyLFClk.c ****                     CySysWdtSetMatch(counterNum, match);
 2031              		.loc 1 3183 0
 2032 003a 201C     		mov	r0, r4
 2033 003c 291C     		mov	r1, r5
 2034 003e FFF7FEFF 		bl	CySysWdtSetMatch
 2035              	.LVL214:
3184:.\Generated_Source\PSoC4/CyLFClk.c **** 
3185:.\Generated_Source\PSoC4/CyLFClk.c ****                     disableServicedIsr  |= tmpValue;
 2036              		.loc 1 3185 0
 2037 0042 084A     		ldr	r2, .L178+8
 2038 0044 D369     		ldr	r3, [r2, #28]
 2039 0046 3343     		orr	r3, r6
 2040 0048 D361     		str	r3, [r2, #28]
3186:.\Generated_Source\PSoC4/CyLFClk.c ****                     wdtIsrMask |= tmpValue;
 2041              		.loc 1 3186 0
 2042 004a 074B     		ldr	r3, .L178+12
 2043 004c 1A68     		ldr	r2, [r3]
 2044 004e 1643     		orr	r6, r2
ARM GAS  C:\Users\g\AppData\Local\Temp\ccjVf3bh.s 			page 97


 2045              	.LVL215:
 2046 0050 1E60     		str	r6, [r3]
 2047 0052 02E0     		b	.L172
 2048              	.LVL216:
 2049              	.L173:
3187:.\Generated_Source\PSoC4/CyLFClk.c ****                 }
3188:.\Generated_Source\PSoC4/CyLFClk.c ****             }
3189:.\Generated_Source\PSoC4/CyLFClk.c ****             else
3190:.\Generated_Source\PSoC4/CyLFClk.c ****             {
3191:.\Generated_Source\PSoC4/CyLFClk.c ****                 CYASSERT(0u != 0u);
 2050              		.loc 1 3191 0 discriminator 1
 2051 0054 0020     		mov	r0, #0
 2052 0056 FFF7FEFF 		bl	CyHalt
 2053              	.LVL217:
 2054              	.L172:
3192:.\Generated_Source\PSoC4/CyLFClk.c ****             }
3193:.\Generated_Source\PSoC4/CyLFClk.c **** 
3194:.\Generated_Source\PSoC4/CyLFClk.c ****         #endif /* (CY_IP_SRSSV2) */  
3195:.\Generated_Source\PSoC4/CyLFClk.c **** 
3196:.\Generated_Source\PSoC4/CyLFClk.c ****         #if(CY_IP_WCO_WDT_EN && CY_IP_SRSSLT)
3197:.\Generated_Source\PSoC4/CyLFClk.c ****         if((counterNum < CY_SYS_TIMER2) && (0uL == CySysTimerGetClearOnMatch(counterNum)) &&
3198:.\Generated_Source\PSoC4/CyLFClk.c ****                                                         (match <= CY_SYS_UINT16_MAX_VAL))
3199:.\Generated_Source\PSoC4/CyLFClk.c ****         {
3200:.\Generated_Source\PSoC4/CyLFClk.c ****             if(delayType == CY_SYS_TIMER_WAIT)
3201:.\Generated_Source\PSoC4/CyLFClk.c ****             {
3202:.\Generated_Source\PSoC4/CyLFClk.c ****                 do
3203:.\Generated_Source\PSoC4/CyLFClk.c ****                 {
3204:.\Generated_Source\PSoC4/CyLFClk.c ****                     tmpValue = CySysTimerGetCount(counterNum);
3205:.\Generated_Source\PSoC4/CyLFClk.c ****                 }while(tmpValue > match);
3206:.\Generated_Source\PSoC4/CyLFClk.c **** 
3207:.\Generated_Source\PSoC4/CyLFClk.c ****                 do
3208:.\Generated_Source\PSoC4/CyLFClk.c ****                 {
3209:.\Generated_Source\PSoC4/CyLFClk.c ****                     tmpValue = CySysTimerGetCount(counterNum);
3210:.\Generated_Source\PSoC4/CyLFClk.c ****                 }while(tmpValue < match);
3211:.\Generated_Source\PSoC4/CyLFClk.c ****             }
3212:.\Generated_Source\PSoC4/CyLFClk.c ****             else
3213:.\Generated_Source\PSoC4/CyLFClk.c ****             {
3214:.\Generated_Source\PSoC4/CyLFClk.c ****                 tmpValue = counterTimerIntMaskTbl[counterNum];
3215:.\Generated_Source\PSoC4/CyLFClk.c ****                 CySysTimerSetMatch(counterNum, match);
3216:.\Generated_Source\PSoC4/CyLFClk.c **** 
3217:.\Generated_Source\PSoC4/CyLFClk.c ****                 disableTimerServicedIsr  |= tmpValue;
3218:.\Generated_Source\PSoC4/CyLFClk.c ****                 timerIsrMask |= tmpValue;
3219:.\Generated_Source\PSoC4/CyLFClk.c ****             }
3220:.\Generated_Source\PSoC4/CyLFClk.c ****         }
3221:.\Generated_Source\PSoC4/CyLFClk.c ****         else
3222:.\Generated_Source\PSoC4/CyLFClk.c ****         {
3223:.\Generated_Source\PSoC4/CyLFClk.c ****             CYASSERT(0u != 0u);
3224:.\Generated_Source\PSoC4/CyLFClk.c ****         }
3225:.\Generated_Source\PSoC4/CyLFClk.c ****         #endif /* (CY_IP_WCO_WDT_EN && CY_IP_SRSSLT) */
3226:.\Generated_Source\PSoC4/CyLFClk.c ****     }
 2055              		.loc 1 3226 0
 2056              		@ sp needed
 2057              	.LVL218:
 2058              	.LVL219:
 2059 005a 70BD     		pop	{r4, r5, r6, pc}
 2060              	.L179:
 2061              		.align	2
ARM GAS  C:\Users\g\AppData\Local\Temp\ccjVf3bh.s 			page 98


 2062              	.L178:
 2063 005c FFFF0000 		.word	65535
 2064 0060 00000000 		.word	.LANCHOR1
 2065 0064 00000000 		.word	.LANCHOR0
 2066 0068 00000000 		.word	.LANCHOR2
 2067              		.cfi_endproc
 2068              	.LFE35:
 2069              		.size	CySysTimerDelayUntilMatch, .-CySysTimerDelayUntilMatch
 2070              		.section	.text.CySysTimerDelay,"ax",%progbits
 2071              		.align	2
 2072              		.global	CySysTimerDelay
 2073              		.code	16
 2074              		.thumb_func
 2075              		.type	CySysTimerDelay, %function
 2076              	CySysTimerDelay:
 2077              	.LFB34:
3032:.\Generated_Source\PSoC4/CyLFClk.c ****         uint32 regValue;
 2078              		.loc 1 3032 0
 2079              		.cfi_startproc
 2080              	.LVL220:
 2081 0000 70B5     		push	{r4, r5, r6, lr}
 2082              		.cfi_def_cfa_offset 16
 2083              		.cfi_offset 4, -16
 2084              		.cfi_offset 5, -12
 2085              		.cfi_offset 6, -8
 2086              		.cfi_offset 14, -4
 2087 0002 041C     		mov	r4, r0
 2088 0004 0E1C     		mov	r6, r1
 2089 0006 151C     		mov	r5, r2
3037:.\Generated_Source\PSoC4/CyLFClk.c ****                                                                 (delay <= CY_SYS_UINT16_MAX_VAL))
 2090              		.loc 1 3037 0
 2091 0008 0128     		cmp	r0, #1
 2092 000a 11D8     		bhi	.L181
3037:.\Generated_Source\PSoC4/CyLFClk.c ****                                                                 (delay <= CY_SYS_UINT16_MAX_VAL))
 2093              		.loc 1 3037 0 is_stmt 0 discriminator 1
 2094 000c FFF7FEFF 		bl	CySysWdtGetClearOnMatch
 2095              	.LVL221:
 2096 0010 0028     		cmp	r0, #0
 2097 0012 0DD1     		bne	.L181
3037:.\Generated_Source\PSoC4/CyLFClk.c ****                                                                 (delay <= CY_SYS_UINT16_MAX_VAL))
 2098              		.loc 1 3037 0 discriminator 2
 2099 0014 084B     		ldr	r3, .L183
 2100 0016 9D42     		cmp	r5, r3
 2101 0018 0AD8     		bhi	.L181
3040:.\Generated_Source\PSoC4/CyLFClk.c ****                 matchValue = (regValue + delay) & (uint32)CY_SYS_UINT16_MAX_VAL;
 2102              		.loc 1 3040 0 is_stmt 1
 2103 001a 201C     		mov	r0, r4
 2104 001c FFF7FEFF 		bl	CySysWdtGetCount
 2105              	.LVL222:
3041:.\Generated_Source\PSoC4/CyLFClk.c **** 
 2106              		.loc 1 3041 0
 2107 0020 4219     		add	r2, r0, r5
 2108 0022 1204     		lsl	r2, r2, #16
 2109 0024 120C     		lsr	r2, r2, #16
 2110              	.LVL223:
3043:.\Generated_Source\PSoC4/CyLFClk.c ****             }
 2111              		.loc 1 3043 0
ARM GAS  C:\Users\g\AppData\Local\Temp\ccjVf3bh.s 			page 99


 2112 0026 201C     		mov	r0, r4
 2113              	.LVL224:
 2114 0028 311C     		mov	r1, r6
 2115 002a FFF7FEFF 		bl	CySysTimerDelayUntilMatch
 2116              	.LVL225:
 2117 002e 02E0     		b	.L180
 2118              	.L181:
3047:.\Generated_Source\PSoC4/CyLFClk.c ****             }
 2119              		.loc 1 3047 0 discriminator 1
 2120 0030 0020     		mov	r0, #0
 2121 0032 FFF7FEFF 		bl	CyHalt
 2122              	.LVL226:
 2123              	.L180:
3065:.\Generated_Source\PSoC4/CyLFClk.c **** 
 2124              		.loc 1 3065 0
 2125              		@ sp needed
 2126              	.LVL227:
 2127              	.LVL228:
 2128 0036 70BD     		pop	{r4, r5, r6, pc}
 2129              	.L184:
 2130              		.align	2
 2131              	.L183:
 2132 0038 FFFF0000 		.word	65535
 2133              		.cfi_endproc
 2134              	.LFE34:
 2135              		.size	CySysTimerDelay, .-CySysTimerDelay
 2136              		.section	.rodata
 2137              		.align	2
 2138              		.set	.LANCHOR1,. + 0
 2139              		.type	counterIntMaskTbl, %object
 2140              		.size	counterIntMaskTbl, 12
 2141              	counterIntMaskTbl:
 2142 0000 04000000 		.word	4
 2143 0004 00040000 		.word	1024
 2144 0008 00000400 		.word	262144
 2145              		.data
 2146              		.align	2
 2147              		.set	.LANCHOR2,. + 0
 2148              		.type	wdtIsrMask, %object
 2149              		.size	wdtIsrMask, 4
 2150              	wdtIsrMask:
 2151 0000 04040400 		.word	263172
 2152              		.bss
 2153              		.align	2
 2154              		.set	.LANCHOR0,. + 0
 2155              		.type	compensateRunningStatus.4712, %object
 2156              		.size	compensateRunningStatus.4712, 4
 2157              	compensateRunningStatus.4712:
 2158 0000 00000000 		.space	4
 2159              		.type	lfclkPosedgeWdtCounter0Enabled, %object
 2160              		.size	lfclkPosedgeWdtCounter0Enabled, 4
 2161              	lfclkPosedgeWdtCounter0Enabled:
 2162 0004 00000000 		.space	4
 2163              		.type	lfclkPosedgeWdtCounter0Mode, %object
 2164              		.size	lfclkPosedgeWdtCounter0Mode, 4
 2165              	lfclkPosedgeWdtCounter0Mode:
 2166 0008 00000000 		.space	4
ARM GAS  C:\Users\g\AppData\Local\Temp\ccjVf3bh.s 			page 100


 2167              		.type	lfclkPosedgeEnabledWdtCounter.4843, %object
 2168              		.size	lfclkPosedgeEnabledWdtCounter.4843, 4
 2169              	lfclkPosedgeEnabledWdtCounter.4843:
 2170 000c 00000000 		.space	4
 2171              		.type	cySysWdtCallback, %object
 2172              		.size	cySysWdtCallback, 12
 2173              	cySysWdtCallback:
 2174 0010 00000000 		.space	12
 2174      00000000 
 2174      00000000 
 2175              		.type	disableServicedIsr, %object
 2176              		.size	disableServicedIsr, 4
 2177              	disableServicedIsr:
 2178 001c 00000000 		.space	4
 2179              		.text
 2180              	.Letext0:
 2181              		.file 2 ".\\Generated_Source\\PSoC4\\cytypes.h"
 2182              		.file 3 ".\\Generated_Source\\PSoC4\\CyLFClk.h"
 2183              		.file 4 ".\\Generated_Source\\PSoC4\\CyLib.h"
 2184              		.section	.debug_info,"",%progbits
 2185              	.Ldebug_info0:
 2186 0000 F80C0000 		.4byte	0xcf8
 2187 0004 0400     		.2byte	0x4
 2188 0006 00000000 		.4byte	.Ldebug_abbrev0
 2189 000a 04       		.byte	0x4
 2190 000b 01       		.uleb128 0x1
 2191 000c FB000000 		.4byte	.LASF95
 2192 0010 01       		.byte	0x1
 2193 0011 24040000 		.4byte	.LASF96
 2194 0015 48060000 		.4byte	.LASF97
 2195 0019 00000000 		.4byte	.Ldebug_ranges0+0
 2196 001d 00000000 		.4byte	0
 2197 0021 00000000 		.4byte	.Ldebug_line0
 2198 0025 02       		.uleb128 0x2
 2199 0026 01       		.byte	0x1
 2200 0027 06       		.byte	0x6
 2201 0028 A2010000 		.4byte	.LASF0
 2202 002c 02       		.uleb128 0x2
 2203 002d 01       		.byte	0x1
 2204 002e 08       		.byte	0x8
 2205 002f 39050000 		.4byte	.LASF1
 2206 0033 02       		.uleb128 0x2
 2207 0034 02       		.byte	0x2
 2208 0035 05       		.byte	0x5
 2209 0036 83050000 		.4byte	.LASF2
 2210 003a 02       		.uleb128 0x2
 2211 003b 02       		.byte	0x2
 2212 003c 07       		.byte	0x7
 2213 003d A9030000 		.4byte	.LASF3
 2214 0041 02       		.uleb128 0x2
 2215 0042 04       		.byte	0x4
 2216 0043 05       		.byte	0x5
 2217 0044 FD010000 		.4byte	.LASF4
 2218 0048 02       		.uleb128 0x2
 2219 0049 04       		.byte	0x4
 2220 004a 07       		.byte	0x7
 2221 004b 48030000 		.4byte	.LASF5
ARM GAS  C:\Users\g\AppData\Local\Temp\ccjVf3bh.s 			page 101


 2222 004f 02       		.uleb128 0x2
 2223 0050 08       		.byte	0x8
 2224 0051 05       		.byte	0x5
 2225 0052 94010000 		.4byte	.LASF6
 2226 0056 02       		.uleb128 0x2
 2227 0057 08       		.byte	0x8
 2228 0058 07       		.byte	0x7
 2229 0059 E4000000 		.4byte	.LASF7
 2230 005d 03       		.uleb128 0x3
 2231 005e 04       		.byte	0x4
 2232 005f 05       		.byte	0x5
 2233 0060 696E7400 		.ascii	"int\000"
 2234 0064 02       		.uleb128 0x2
 2235 0065 04       		.byte	0x4
 2236 0066 07       		.byte	0x7
 2237 0067 17030000 		.4byte	.LASF8
 2238 006b 04       		.uleb128 0x4
 2239 006c 0F020000 		.4byte	.LASF9
 2240 0070 02       		.byte	0x2
 2241 0071 9801     		.2byte	0x198
 2242 0073 2C000000 		.4byte	0x2c
 2243 0077 04       		.uleb128 0x4
 2244 0078 00000000 		.4byte	.LASF10
 2245 007c 02       		.byte	0x2
 2246 007d 9901     		.2byte	0x199
 2247 007f 3A000000 		.4byte	0x3a
 2248 0083 04       		.uleb128 0x4
 2249 0084 67020000 		.4byte	.LASF11
 2250 0088 02       		.byte	0x2
 2251 0089 9A01     		.2byte	0x19a
 2252 008b 48000000 		.4byte	0x48
 2253 008f 02       		.uleb128 0x2
 2254 0090 04       		.byte	0x4
 2255 0091 04       		.byte	0x4
 2256 0092 F3040000 		.4byte	.LASF12
 2257 0096 02       		.uleb128 0x2
 2258 0097 08       		.byte	0x8
 2259 0098 04       		.byte	0x4
 2260 0099 1C020000 		.4byte	.LASF13
 2261 009d 02       		.uleb128 0x2
 2262 009e 01       		.byte	0x1
 2263 009f 08       		.byte	0x8
 2264 00a0 EF050000 		.4byte	.LASF14
 2265 00a4 04       		.uleb128 0x4
 2266 00a5 D8060000 		.4byte	.LASF15
 2267 00a9 02       		.byte	0x2
 2268 00aa 3A02     		.2byte	0x23a
 2269 00ac 48000000 		.4byte	0x48
 2270 00b0 04       		.uleb128 0x4
 2271 00b1 47040000 		.4byte	.LASF16
 2272 00b5 02       		.byte	0x2
 2273 00b6 4402     		.2byte	0x244
 2274 00b8 BC000000 		.4byte	0xbc
 2275 00bc 05       		.uleb128 0x5
 2276 00bd 83000000 		.4byte	0x83
 2277 00c1 06       		.uleb128 0x6
 2278 00c2 04       		.byte	0x4
ARM GAS  C:\Users\g\AppData\Local\Temp\ccjVf3bh.s 			page 102


 2279 00c3 C7000000 		.4byte	0xc7
 2280 00c7 07       		.uleb128 0x7
 2281 00c8 08       		.uleb128 0x8
 2282 00c9 01       		.byte	0x1
 2283 00ca 03       		.byte	0x3
 2284 00cb 1B       		.byte	0x1b
 2285 00cc DD000000 		.4byte	0xdd
 2286 00d0 09       		.uleb128 0x9
 2287 00d1 9A040000 		.4byte	.LASF17
 2288 00d5 00       		.sleb128 0
 2289 00d6 09       		.uleb128 0x9
 2290 00d7 0C070000 		.4byte	.LASF18
 2291 00db 01       		.sleb128 1
 2292 00dc 00       		.byte	0
 2293 00dd 0A       		.uleb128 0xa
 2294 00de DC010000 		.4byte	.LASF19
 2295 00e2 03       		.byte	0x3
 2296 00e3 1E       		.byte	0x1e
 2297 00e4 C8000000 		.4byte	0xc8
 2298 00e8 0A       		.uleb128 0xa
 2299 00e9 C4010000 		.4byte	.LASF20
 2300 00ed 03       		.byte	0x3
 2301 00ee 58       		.byte	0x58
 2302 00ef C1000000 		.4byte	0xc1
 2303 00f3 02       		.uleb128 0x2
 2304 00f4 04       		.byte	0x4
 2305 00f5 07       		.byte	0x7
 2306 00f6 7A040000 		.4byte	.LASF21
 2307 00fa 0B       		.uleb128 0xb
 2308 00fb A7050000 		.4byte	.LASF22
 2309 00ff 01       		.byte	0x1
 2310 0100 7201     		.2byte	0x172
 2311 0102 83000000 		.4byte	0x83
 2312 0106 00000000 		.4byte	.LFB5
 2313 010a 14000000 		.4byte	.LFE5-.LFB5
 2314 010e 01       		.uleb128 0x1
 2315 010f 9C       		.byte	0x9c
 2316 0110 0B       		.uleb128 0xb
 2317 0111 23050000 		.4byte	.LASF23
 2318 0115 01       		.byte	0x1
 2319 0116 C903     		.2byte	0x3c9
 2320 0118 83000000 		.4byte	0x83
 2321 011c 00000000 		.4byte	.LFB7
 2322 0120 14000000 		.4byte	.LFE7-.LFB7
 2323 0124 01       		.uleb128 0x1
 2324 0125 9C       		.byte	0x9c
 2325 0126 0C       		.uleb128 0xc
 2326 0127 FE030000 		.4byte	.LASF24
 2327 012b 01       		.byte	0x1
 2328 012c 53       		.byte	0x53
 2329 012d 00000000 		.4byte	.LFB0
 2330 0131 14000000 		.4byte	.LFE0-.LFB0
 2331 0135 01       		.uleb128 0x1
 2332 0136 9C       		.byte	0x9c
 2333 0137 0C       		.uleb128 0xc
 2334 0138 A9000000 		.4byte	.LASF25
 2335 013c 01       		.byte	0x1
ARM GAS  C:\Users\g\AppData\Local\Temp\ccjVf3bh.s 			page 103


 2336 013d A8       		.byte	0xa8
 2337 013e 00000000 		.4byte	.LFB2
 2338 0142 34000000 		.4byte	.LFE2-.LFB2
 2339 0146 01       		.uleb128 0x1
 2340 0147 9C       		.byte	0x9c
 2341 0148 0C       		.uleb128 0xc
 2342 0149 6E020000 		.4byte	.LASF26
 2343 014d 01       		.byte	0x1
 2344 014e C9       		.byte	0xc9
 2345 014f 00000000 		.4byte	.LFB3
 2346 0153 14000000 		.4byte	.LFE3-.LFB3
 2347 0157 01       		.uleb128 0x1
 2348 0158 9C       		.byte	0x9c
 2349 0159 0D       		.uleb128 0xd
 2350 015a F6060000 		.4byte	.LASF37
 2351 015e 01       		.byte	0x1
 2352 015f 0B01     		.2byte	0x10b
 2353 0161 A4000000 		.4byte	0xa4
 2354 0165 00000000 		.4byte	.LFB4
 2355 0169 08010000 		.4byte	.LFE4-.LFB4
 2356 016d 01       		.uleb128 0x1
 2357 016e 9C       		.byte	0x9c
 2358 016f E6010000 		.4byte	0x1e6
 2359 0173 0E       		.uleb128 0xe
 2360 0174 3B030000 		.4byte	.LASF27
 2361 0178 01       		.byte	0x1
 2362 0179 0B01     		.2byte	0x10b
 2363 017b 83000000 		.4byte	0x83
 2364 017f 00000000 		.4byte	.LLST0
 2365 0183 0E       		.uleb128 0xe
 2366 0184 23020000 		.4byte	.LASF28
 2367 0188 01       		.byte	0x1
 2368 0189 0B01     		.2byte	0x10b
 2369 018b E6010000 		.4byte	0x1e6
 2370 018f 02010000 		.4byte	.LLST1
 2371 0193 0F       		.uleb128 0xf
 2372 0194 45020000 		.4byte	.LASF29
 2373 0198 01       		.byte	0x1
 2374 0199 0D01     		.2byte	0x10d
 2375 019b 83000000 		.4byte	0x83
 2376 019f 4F010000 		.4byte	.LLST2
 2377 01a3 0F       		.uleb128 0xf
 2378 01a4 7F060000 		.4byte	.LASF30
 2379 01a8 01       		.byte	0x1
 2380 01a9 0E01     		.2byte	0x10e
 2381 01ab 83000000 		.4byte	0x83
 2382 01af 79010000 		.4byte	.LLST3
 2383 01b3 10       		.uleb128 0x10
 2384 01b4 47050000 		.4byte	.LASF31
 2385 01b8 01       		.byte	0x1
 2386 01b9 0F01     		.2byte	0x10f
 2387 01bb 83000000 		.4byte	0x83
 2388 01bf 05       		.uleb128 0x5
 2389 01c0 03       		.byte	0x3
 2390 01c1 00000000 		.4byte	compensateRunningStatus.4712
 2391 01c5 0F       		.uleb128 0xf
 2392 01c6 AC040000 		.4byte	.LASF32
ARM GAS  C:\Users\g\AppData\Local\Temp\ccjVf3bh.s 			page 104


 2393 01ca 01       		.byte	0x1
 2394 01cb 1001     		.2byte	0x110
 2395 01cd 83000000 		.4byte	0x83
 2396 01d1 AD010000 		.4byte	.LLST4
 2397 01d5 0F       		.uleb128 0xf
 2398 01d6 6D040000 		.4byte	.LASF33
 2399 01da 01       		.byte	0x1
 2400 01db 1101     		.2byte	0x111
 2401 01dd A4000000 		.4byte	0xa4
 2402 01e1 CB010000 		.4byte	.LLST5
 2403 01e5 00       		.byte	0
 2404 01e6 06       		.uleb128 0x6
 2405 01e7 04       		.byte	0x4
 2406 01e8 83000000 		.4byte	0x83
 2407 01ec 11       		.uleb128 0x11
 2408 01ed B7010000 		.4byte	.LASF35
 2409 01f1 01       		.byte	0x1
 2410 01f2 B403     		.2byte	0x3b4
 2411 01f4 00000000 		.4byte	.LFB6
 2412 01f8 1C000000 		.4byte	.LFE6-.LFB6
 2413 01fc 01       		.uleb128 0x1
 2414 01fd 9C       		.byte	0x9c
 2415 01fe 25020000 		.4byte	0x225
 2416 0202 0F       		.uleb128 0xf
 2417 0203 5A030000 		.4byte	.LASF34
 2418 0207 01       		.byte	0x1
 2419 0208 B603     		.2byte	0x3b6
 2420 020a 6B000000 		.4byte	0x6b
 2421 020e F6010000 		.4byte	.LLST6
 2422 0212 12       		.uleb128 0x12
 2423 0213 06000000 		.4byte	.LVL37
 2424 0217 C10C0000 		.4byte	0xcc1
 2425 021b 12       		.uleb128 0x12
 2426 021c 16000000 		.4byte	.LVL38
 2427 0220 CC0C0000 		.4byte	0xccc
 2428 0224 00       		.byte	0
 2429 0225 11       		.uleb128 0x11
 2430 0226 50000000 		.4byte	.LASF36
 2431 022a 01       		.byte	0x1
 2432 022b D703     		.2byte	0x3d7
 2433 022d 00000000 		.4byte	.LFB8
 2434 0231 30000000 		.4byte	.LFE8-.LFB8
 2435 0235 01       		.uleb128 0x1
 2436 0236 9C       		.byte	0x9c
 2437 0237 5E020000 		.4byte	0x25e
 2438 023b 0F       		.uleb128 0xf
 2439 023c 5A030000 		.4byte	.LASF34
 2440 0240 01       		.byte	0x1
 2441 0241 D903     		.2byte	0x3d9
 2442 0243 6B000000 		.4byte	0x6b
 2443 0247 09020000 		.4byte	.LLST7
 2444 024b 12       		.uleb128 0x12
 2445 024c 06000000 		.4byte	.LVL39
 2446 0250 C10C0000 		.4byte	0xcc1
 2447 0254 12       		.uleb128 0x12
 2448 0255 26000000 		.4byte	.LVL40
 2449 0259 CC0C0000 		.4byte	0xccc
ARM GAS  C:\Users\g\AppData\Local\Temp\ccjVf3bh.s 			page 105


 2450 025d 00       		.byte	0
 2451 025e 13       		.uleb128 0x13
 2452 025f BC030000 		.4byte	.LASF38
 2453 0263 01       		.byte	0x1
 2454 0264 F903     		.2byte	0x3f9
 2455 0266 83000000 		.4byte	0x83
 2456 026a 00000000 		.4byte	.LFB9
 2457 026e 24000000 		.4byte	.LFE9-.LFB9
 2458 0272 01       		.uleb128 0x1
 2459 0273 9C       		.byte	0x9c
 2460 0274 98020000 		.4byte	0x298
 2461 0278 0E       		.uleb128 0xe
 2462 0279 71000000 		.4byte	.LASF39
 2463 027d 01       		.byte	0x1
 2464 027e F903     		.2byte	0x3f9
 2465 0280 83000000 		.4byte	0x83
 2466 0284 1C020000 		.4byte	.LLST8
 2467 0288 14       		.uleb128 0x14
 2468 0289 0E000000 		.4byte	.LVL43
 2469 028d DD0C0000 		.4byte	0xcdd
 2470 0291 15       		.uleb128 0x15
 2471 0292 01       		.uleb128 0x1
 2472 0293 50       		.byte	0x50
 2473 0294 01       		.uleb128 0x1
 2474 0295 30       		.byte	0x30
 2475 0296 00       		.byte	0
 2476 0297 00       		.byte	0
 2477 0298 11       		.uleb128 0x11
 2478 0299 40000000 		.4byte	.LASF40
 2479 029d 01       		.byte	0x1
 2480 029e 1704     		.2byte	0x417
 2481 02a0 00000000 		.4byte	.LFB10
 2482 02a4 38000000 		.4byte	.LFE10-.LFB10
 2483 02a8 01       		.uleb128 0x1
 2484 02a9 9C       		.byte	0x9c
 2485 02aa 02030000 		.4byte	0x302
 2486 02ae 0E       		.uleb128 0xe
 2487 02af 71000000 		.4byte	.LASF39
 2488 02b3 01       		.byte	0x1
 2489 02b4 1704     		.2byte	0x417
 2490 02b6 83000000 		.4byte	0x83
 2491 02ba 48020000 		.4byte	.LLST9
 2492 02be 0E       		.uleb128 0xe
 2493 02bf F4050000 		.4byte	.LASF41
 2494 02c3 01       		.byte	0x1
 2495 02c4 1704     		.2byte	0x417
 2496 02c6 83000000 		.4byte	0x83
 2497 02ca 74020000 		.4byte	.LLST10
 2498 02ce 0F       		.uleb128 0xf
 2499 02cf 94060000 		.4byte	.LASF42
 2500 02d3 01       		.byte	0x1
 2501 02d4 1904     		.2byte	0x419
 2502 02d6 83000000 		.4byte	0x83
 2503 02da A0020000 		.4byte	.LLST11
 2504 02de 16       		.uleb128 0x16
 2505 02df 10000000 		.4byte	.LVL47
 2506 02e3 DD0C0000 		.4byte	0xcdd
ARM GAS  C:\Users\g\AppData\Local\Temp\ccjVf3bh.s 			page 106


 2507 02e7 F1020000 		.4byte	0x2f1
 2508 02eb 15       		.uleb128 0x15
 2509 02ec 01       		.uleb128 0x1
 2510 02ed 50       		.byte	0x50
 2511 02ee 01       		.uleb128 0x1
 2512 02ef 30       		.byte	0x30
 2513 02f0 00       		.byte	0
 2514 02f1 14       		.uleb128 0x14
 2515 02f2 16000000 		.4byte	.LVL48
 2516 02f6 5E020000 		.4byte	0x25e
 2517 02fa 15       		.uleb128 0x15
 2518 02fb 01       		.uleb128 0x1
 2519 02fc 50       		.byte	0x50
 2520 02fd 02       		.uleb128 0x2
 2521 02fe 74       		.byte	0x74
 2522 02ff 00       		.sleb128 0
 2523 0300 00       		.byte	0
 2524 0301 00       		.byte	0
 2525 0302 17       		.uleb128 0x17
 2526 0303 74030000 		.4byte	.LASF62
 2527 0307 01       		.byte	0x1
 2528 0308 6607     		.2byte	0x766
 2529 030a 00000000 		.4byte	.LFB33
 2530 030e 2C000000 		.4byte	.LFE33-.LFB33
 2531 0312 01       		.uleb128 0x1
 2532 0313 9C       		.byte	0x9c
 2533 0314 28030000 		.4byte	0x328
 2534 0318 14       		.uleb128 0x14
 2535 0319 1E000000 		.4byte	.LVL54
 2536 031d 98020000 		.4byte	0x298
 2537 0321 15       		.uleb128 0x15
 2538 0322 01       		.uleb128 0x1
 2539 0323 50       		.byte	0x50
 2540 0324 01       		.uleb128 0x1
 2541 0325 30       		.byte	0x30
 2542 0326 00       		.byte	0
 2543 0327 00       		.byte	0
 2544 0328 13       		.uleb128 0x13
 2545 0329 6F060000 		.4byte	.LASF43
 2546 032d 01       		.byte	0x1
 2547 032e 3304     		.2byte	0x433
 2548 0330 83000000 		.4byte	0x83
 2549 0334 00000000 		.4byte	.LFB11
 2550 0338 14000000 		.4byte	.LFE11-.LFB11
 2551 033c 01       		.uleb128 0x1
 2552 033d 9C       		.byte	0x9c
 2553 033e 53030000 		.4byte	0x353
 2554 0342 0E       		.uleb128 0xe
 2555 0343 71000000 		.4byte	.LASF39
 2556 0347 01       		.byte	0x1
 2557 0348 3304     		.2byte	0x433
 2558 034a 83000000 		.4byte	0x83
 2559 034e BE020000 		.4byte	.LLST12
 2560 0352 00       		.byte	0
 2561 0353 11       		.uleb128 0x11
 2562 0354 1D060000 		.4byte	.LASF44
 2563 0358 01       		.byte	0x1
ARM GAS  C:\Users\g\AppData\Local\Temp\ccjVf3bh.s 			page 107


 2564 0359 5004     		.2byte	0x450
 2565 035b 00000000 		.4byte	.LFB12
 2566 035f 38000000 		.4byte	.LFE12-.LFB12
 2567 0363 01       		.uleb128 0x1
 2568 0364 9C       		.byte	0x9c
 2569 0365 BD030000 		.4byte	0x3bd
 2570 0369 0E       		.uleb128 0xe
 2571 036a 71000000 		.4byte	.LASF39
 2572 036e 01       		.byte	0x1
 2573 036f 5004     		.2byte	0x450
 2574 0371 83000000 		.4byte	0x83
 2575 0375 DF020000 		.4byte	.LLST13
 2576 0379 0E       		.uleb128 0xe
 2577 037a 15020000 		.4byte	.LASF45
 2578 037e 01       		.byte	0x1
 2579 037f 5004     		.2byte	0x450
 2580 0381 83000000 		.4byte	0x83
 2581 0385 0B030000 		.4byte	.LLST14
 2582 0389 0F       		.uleb128 0xf
 2583 038a 94060000 		.4byte	.LASF42
 2584 038e 01       		.byte	0x1
 2585 038f 5204     		.2byte	0x452
 2586 0391 83000000 		.4byte	0x83
 2587 0395 37030000 		.4byte	.LLST15
 2588 0399 16       		.uleb128 0x16
 2589 039a 10000000 		.4byte	.LVL59
 2590 039e DD0C0000 		.4byte	0xcdd
 2591 03a2 AC030000 		.4byte	0x3ac
 2592 03a6 15       		.uleb128 0x15
 2593 03a7 01       		.uleb128 0x1
 2594 03a8 50       		.byte	0x50
 2595 03a9 01       		.uleb128 0x1
 2596 03aa 30       		.byte	0x30
 2597 03ab 00       		.byte	0
 2598 03ac 14       		.uleb128 0x14
 2599 03ad 16000000 		.4byte	.LVL60
 2600 03b1 5E020000 		.4byte	0x25e
 2601 03b5 15       		.uleb128 0x15
 2602 03b6 01       		.uleb128 0x1
 2603 03b7 50       		.byte	0x50
 2604 03b8 02       		.uleb128 0x2
 2605 03b9 74       		.byte	0x74
 2606 03ba 00       		.sleb128 0
 2607 03bb 00       		.byte	0
 2608 03bc 00       		.byte	0
 2609 03bd 13       		.uleb128 0x13
 2610 03be FF020000 		.4byte	.LASF46
 2611 03c2 01       		.byte	0x1
 2612 03c3 7104     		.2byte	0x471
 2613 03c5 83000000 		.4byte	0x83
 2614 03c9 00000000 		.4byte	.LFB13
 2615 03cd 24000000 		.4byte	.LFE13-.LFB13
 2616 03d1 01       		.uleb128 0x1
 2617 03d2 9C       		.byte	0x9c
 2618 03d3 F7030000 		.4byte	0x3f7
 2619 03d7 0E       		.uleb128 0xe
 2620 03d8 71000000 		.4byte	.LASF39
ARM GAS  C:\Users\g\AppData\Local\Temp\ccjVf3bh.s 			page 108


 2621 03dc 01       		.byte	0x1
 2622 03dd 7104     		.2byte	0x471
 2623 03df 83000000 		.4byte	0x83
 2624 03e3 55030000 		.4byte	.LLST16
 2625 03e7 14       		.uleb128 0x14
 2626 03e8 0E000000 		.4byte	.LVL68
 2627 03ec DD0C0000 		.4byte	0xcdd
 2628 03f0 15       		.uleb128 0x15
 2629 03f1 01       		.uleb128 0x1
 2630 03f2 50       		.byte	0x50
 2631 03f3 01       		.uleb128 0x1
 2632 03f4 30       		.byte	0x30
 2633 03f5 00       		.byte	0
 2634 03f6 00       		.byte	0
 2635 03f7 11       		.uleb128 0x11
 2636 03f8 C7020000 		.4byte	.LASF47
 2637 03fc 01       		.byte	0x1
 2638 03fd 9A04     		.2byte	0x49a
 2639 03ff 00000000 		.4byte	.LFB14
 2640 0403 40000000 		.4byte	.LFE14-.LFB14
 2641 0407 01       		.uleb128 0x1
 2642 0408 9C       		.byte	0x9c
 2643 0409 5C040000 		.4byte	0x45c
 2644 040d 0E       		.uleb128 0xe
 2645 040e F3020000 		.4byte	.LASF48
 2646 0412 01       		.byte	0x1
 2647 0413 9A04     		.2byte	0x49a
 2648 0415 83000000 		.4byte	0x83
 2649 0419 81030000 		.4byte	.LLST17
 2650 041d 12       		.uleb128 0x12
 2651 041e 08000000 		.4byte	.LVL71
 2652 0422 26010000 		.4byte	0x126
 2653 0426 16       		.uleb128 0x16
 2654 0427 1A000000 		.4byte	.LVL72
 2655 042b 5E020000 		.4byte	0x25e
 2656 042f 39040000 		.4byte	0x439
 2657 0433 15       		.uleb128 0x15
 2658 0434 01       		.uleb128 0x1
 2659 0435 50       		.byte	0x50
 2660 0436 01       		.uleb128 0x1
 2661 0437 30       		.byte	0x30
 2662 0438 00       		.byte	0
 2663 0439 16       		.uleb128 0x16
 2664 043a 28000000 		.4byte	.LVL73
 2665 043e 5E020000 		.4byte	0x25e
 2666 0442 4C040000 		.4byte	0x44c
 2667 0446 15       		.uleb128 0x15
 2668 0447 01       		.uleb128 0x1
 2669 0448 50       		.byte	0x50
 2670 0449 01       		.uleb128 0x1
 2671 044a 31       		.byte	0x31
 2672 044b 00       		.byte	0
 2673 044c 14       		.uleb128 0x14
 2674 044d 36000000 		.4byte	.LVL74
 2675 0451 5E020000 		.4byte	0x25e
 2676 0455 15       		.uleb128 0x15
 2677 0456 01       		.uleb128 0x1
ARM GAS  C:\Users\g\AppData\Local\Temp\ccjVf3bh.s 			page 109


 2678 0457 50       		.byte	0x50
 2679 0458 01       		.uleb128 0x1
 2680 0459 32       		.byte	0x32
 2681 045a 00       		.byte	0
 2682 045b 00       		.byte	0
 2683 045c 11       		.uleb128 0x11
 2684 045d 97050000 		.4byte	.LASF49
 2685 0461 01       		.byte	0x1
 2686 0462 CA04     		.2byte	0x4ca
 2687 0464 00000000 		.4byte	.LFB15
 2688 0468 44000000 		.4byte	.LFE15-.LFB15
 2689 046c 01       		.uleb128 0x1
 2690 046d 9C       		.byte	0x9c
 2691 046e C1040000 		.4byte	0x4c1
 2692 0472 0E       		.uleb128 0xe
 2693 0473 F3020000 		.4byte	.LASF48
 2694 0477 01       		.byte	0x1
 2695 0478 CA04     		.2byte	0x4ca
 2696 047a 83000000 		.4byte	0x83
 2697 047e AD030000 		.4byte	.LLST18
 2698 0482 12       		.uleb128 0x12
 2699 0483 08000000 		.4byte	.LVL77
 2700 0487 10010000 		.4byte	0x110
 2701 048b 16       		.uleb128 0x16
 2702 048c 1E000000 		.4byte	.LVL78
 2703 0490 5E020000 		.4byte	0x25e
 2704 0494 9E040000 		.4byte	0x49e
 2705 0498 15       		.uleb128 0x15
 2706 0499 01       		.uleb128 0x1
 2707 049a 50       		.byte	0x50
 2708 049b 01       		.uleb128 0x1
 2709 049c 30       		.byte	0x30
 2710 049d 00       		.byte	0
 2711 049e 16       		.uleb128 0x16
 2712 049f 2C000000 		.4byte	.LVL79
 2713 04a3 5E020000 		.4byte	0x25e
 2714 04a7 B1040000 		.4byte	0x4b1
 2715 04ab 15       		.uleb128 0x15
 2716 04ac 01       		.uleb128 0x1
 2717 04ad 50       		.byte	0x50
 2718 04ae 01       		.uleb128 0x1
 2719 04af 31       		.byte	0x31
 2720 04b0 00       		.byte	0
 2721 04b1 14       		.uleb128 0x14
 2722 04b2 3A000000 		.4byte	.LVL80
 2723 04b6 5E020000 		.4byte	0x25e
 2724 04ba 15       		.uleb128 0x15
 2725 04bb 01       		.uleb128 0x1
 2726 04bc 50       		.byte	0x50
 2727 04bd 01       		.uleb128 0x1
 2728 04be 32       		.byte	0x32
 2729 04bf 00       		.byte	0
 2730 04c0 00       		.byte	0
 2731 04c1 11       		.uleb128 0x11
 2732 04c2 35060000 		.4byte	.LASF50
 2733 04c6 01       		.byte	0x1
 2734 04c7 0505     		.2byte	0x505
ARM GAS  C:\Users\g\AppData\Local\Temp\ccjVf3bh.s 			page 110


 2735 04c9 00000000 		.4byte	.LFB16
 2736 04cd 34000000 		.4byte	.LFE16-.LFB16
 2737 04d1 01       		.uleb128 0x1
 2738 04d2 9C       		.byte	0x9c
 2739 04d3 3B050000 		.4byte	0x53b
 2740 04d7 0E       		.uleb128 0xe
 2741 04d8 CC060000 		.4byte	.LASF51
 2742 04dc 01       		.byte	0x1
 2743 04dd 0505     		.2byte	0x505
 2744 04df 83000000 		.4byte	0x83
 2745 04e3 D9030000 		.4byte	.LLST19
 2746 04e7 0F       		.uleb128 0xf
 2747 04e8 94060000 		.4byte	.LASF42
 2748 04ec 01       		.byte	0x1
 2749 04ed 0705     		.2byte	0x507
 2750 04ef 83000000 		.4byte	0x83
 2751 04f3 05040000 		.4byte	.LLST20
 2752 04f7 10       		.uleb128 0x10
 2753 04f8 A7020000 		.4byte	.LASF52
 2754 04fc 01       		.byte	0x1
 2755 04fd 0805     		.2byte	0x508
 2756 04ff 83000000 		.4byte	0x83
 2757 0503 01       		.uleb128 0x1
 2758 0504 50       		.byte	0x50
 2759 0505 16       		.uleb128 0x16
 2760 0506 0A000000 		.4byte	.LVL84
 2761 050a 5E020000 		.4byte	0x25e
 2762 050e 18050000 		.4byte	0x518
 2763 0512 15       		.uleb128 0x15
 2764 0513 01       		.uleb128 0x1
 2765 0514 50       		.byte	0x50
 2766 0515 01       		.uleb128 0x1
 2767 0516 30       		.byte	0x30
 2768 0517 00       		.byte	0
 2769 0518 16       		.uleb128 0x16
 2770 0519 12000000 		.4byte	.LVL85
 2771 051d 5E020000 		.4byte	0x25e
 2772 0521 2B050000 		.4byte	0x52b
 2773 0525 15       		.uleb128 0x15
 2774 0526 01       		.uleb128 0x1
 2775 0527 50       		.byte	0x50
 2776 0528 01       		.uleb128 0x1
 2777 0529 31       		.byte	0x31
 2778 052a 00       		.byte	0
 2779 052b 14       		.uleb128 0x14
 2780 052c 1A000000 		.4byte	.LVL86
 2781 0530 5E020000 		.4byte	0x25e
 2782 0534 15       		.uleb128 0x15
 2783 0535 01       		.uleb128 0x1
 2784 0536 50       		.byte	0x50
 2785 0537 01       		.uleb128 0x1
 2786 0538 32       		.byte	0x32
 2787 0539 00       		.byte	0
 2788 053a 00       		.byte	0
 2789 053b 18       		.uleb128 0x18
 2790 053c 96000000 		.4byte	.LASF58
 2791 0540 01       		.byte	0x1
ARM GAS  C:\Users\g\AppData\Local\Temp\ccjVf3bh.s 			page 111


 2792 0541 2405     		.2byte	0x524
 2793 0543 83000000 		.4byte	0x83
 2794 0547 00000000 		.4byte	.LFB17
 2795 054b 14000000 		.4byte	.LFE17-.LFB17
 2796 054f 01       		.uleb128 0x1
 2797 0550 9C       		.byte	0x9c
 2798 0551 11       		.uleb128 0x11
 2799 0552 96020000 		.4byte	.LASF53
 2800 0556 01       		.byte	0x1
 2801 0557 3805     		.2byte	0x538
 2802 0559 00000000 		.4byte	.LFB18
 2803 055d 3C000000 		.4byte	.LFE18-.LFB18
 2804 0561 01       		.uleb128 0x1
 2805 0562 9C       		.byte	0x9c
 2806 0563 CF050000 		.4byte	0x5cf
 2807 0567 0E       		.uleb128 0xe
 2808 0568 71000000 		.4byte	.LASF39
 2809 056c 01       		.byte	0x1
 2810 056d 3805     		.2byte	0x538
 2811 056f 83000000 		.4byte	0x83
 2812 0573 2E040000 		.4byte	.LLST21
 2813 0577 0E       		.uleb128 0xe
 2814 0578 94040000 		.4byte	.LASF54
 2815 057c 01       		.byte	0x1
 2816 057d 3805     		.2byte	0x538
 2817 057f 83000000 		.4byte	0x83
 2818 0583 5A040000 		.4byte	.LLST22
 2819 0587 0F       		.uleb128 0xf
 2820 0588 06020000 		.4byte	.LASF55
 2821 058c 01       		.byte	0x1
 2822 058d 3A05     		.2byte	0x53a
 2823 058f 83000000 		.4byte	0x83
 2824 0593 86040000 		.4byte	.LLST23
 2825 0597 16       		.uleb128 0x16
 2826 0598 10000000 		.4byte	.LVL94
 2827 059c DD0C0000 		.4byte	0xcdd
 2828 05a0 AA050000 		.4byte	0x5aa
 2829 05a4 15       		.uleb128 0x15
 2830 05a5 01       		.uleb128 0x1
 2831 05a6 50       		.byte	0x50
 2832 05a7 01       		.uleb128 0x1
 2833 05a8 30       		.byte	0x30
 2834 05a9 00       		.byte	0
 2835 05aa 16       		.uleb128 0x16
 2836 05ab 16000000 		.4byte	.LVL95
 2837 05af EE0C0000 		.4byte	0xcee
 2838 05b3 BE050000 		.4byte	0x5be
 2839 05b7 15       		.uleb128 0x15
 2840 05b8 01       		.uleb128 0x1
 2841 05b9 50       		.byte	0x50
 2842 05ba 02       		.uleb128 0x2
 2843 05bb 08       		.byte	0x8
 2844 05bc C9       		.byte	0xc9
 2845 05bd 00       		.byte	0
 2846 05be 14       		.uleb128 0x14
 2847 05bf 32000000 		.4byte	.LVL101
 2848 05c3 EE0C0000 		.4byte	0xcee
ARM GAS  C:\Users\g\AppData\Local\Temp\ccjVf3bh.s 			page 112


 2849 05c7 15       		.uleb128 0x15
 2850 05c8 01       		.uleb128 0x1
 2851 05c9 50       		.byte	0x50
 2852 05ca 02       		.uleb128 0x2
 2853 05cb 08       		.byte	0x8
 2854 05cc 43       		.byte	0x43
 2855 05cd 00       		.byte	0
 2856 05ce 00       		.byte	0
 2857 05cf 11       		.uleb128 0x11
 2858 05d0 0F040000 		.4byte	.LASF56
 2859 05d4 01       		.byte	0x1
 2860 05d5 5F05     		.2byte	0x55f
 2861 05d7 00000000 		.4byte	.LFB19
 2862 05db 2C000000 		.4byte	.LFE19-.LFB19
 2863 05df 01       		.uleb128 0x1
 2864 05e0 9C       		.byte	0x9c
 2865 05e1 15060000 		.4byte	0x615
 2866 05e5 0E       		.uleb128 0xe
 2867 05e6 F8010000 		.4byte	.LASF57
 2868 05ea 01       		.byte	0x1
 2869 05eb 5F05     		.2byte	0x55f
 2870 05ed 83000000 		.4byte	0x83
 2871 05f1 AF040000 		.4byte	.LLST24
 2872 05f5 0F       		.uleb128 0xf
 2873 05f6 94060000 		.4byte	.LASF42
 2874 05fa 01       		.byte	0x1
 2875 05fb 6105     		.2byte	0x561
 2876 05fd 83000000 		.4byte	0x83
 2877 0601 DB040000 		.4byte	.LLST25
 2878 0605 14       		.uleb128 0x14
 2879 0606 0A000000 		.4byte	.LVL105
 2880 060a 5E020000 		.4byte	0x25e
 2881 060e 15       		.uleb128 0x15
 2882 060f 01       		.uleb128 0x1
 2883 0610 50       		.byte	0x50
 2884 0611 01       		.uleb128 0x1
 2885 0612 32       		.byte	0x32
 2886 0613 00       		.byte	0
 2887 0614 00       		.byte	0
 2888 0615 18       		.uleb128 0x18
 2889 0616 E1060000 		.4byte	.LASF59
 2890 061a 01       		.byte	0x1
 2891 061b 7605     		.2byte	0x576
 2892 061d 83000000 		.4byte	0x83
 2893 0621 00000000 		.4byte	.LFB20
 2894 0625 10000000 		.4byte	.LFE20-.LFB20
 2895 0629 01       		.uleb128 0x1
 2896 062a 9C       		.byte	0x9c
 2897 062b 13       		.uleb128 0x13
 2898 062c 83040000 		.4byte	.LASF60
 2899 0630 01       		.byte	0x1
 2900 0631 8805     		.2byte	0x588
 2901 0633 83000000 		.4byte	0x83
 2902 0637 00000000 		.4byte	.LFB21
 2903 063b 20000000 		.4byte	.LFE21-.LFB21
 2904 063f 01       		.uleb128 0x1
 2905 0640 9C       		.byte	0x9c
ARM GAS  C:\Users\g\AppData\Local\Temp\ccjVf3bh.s 			page 113


 2906 0641 65060000 		.4byte	0x665
 2907 0645 0E       		.uleb128 0xe
 2908 0646 71000000 		.4byte	.LASF39
 2909 064a 01       		.byte	0x1
 2910 064b 8805     		.2byte	0x588
 2911 064d 83000000 		.4byte	0x83
 2912 0651 04050000 		.4byte	.LLST26
 2913 0655 14       		.uleb128 0x14
 2914 0656 0E000000 		.4byte	.LVL113
 2915 065a DD0C0000 		.4byte	0xcdd
 2916 065e 15       		.uleb128 0x15
 2917 065f 01       		.uleb128 0x1
 2918 0660 50       		.byte	0x50
 2919 0661 01       		.uleb128 0x1
 2920 0662 30       		.byte	0x30
 2921 0663 00       		.byte	0
 2922 0664 00       		.byte	0
 2923 0665 13       		.uleb128 0x13
 2924 0666 F9050000 		.4byte	.LASF61
 2925 066a 01       		.byte	0x1
 2926 066b 9E05     		.2byte	0x59e
 2927 066d 83000000 		.4byte	0x83
 2928 0671 00000000 		.4byte	.LFB22
 2929 0675 3C000000 		.4byte	.LFE22-.LFB22
 2930 0679 01       		.uleb128 0x1
 2931 067a 9C       		.byte	0x9c
 2932 067b AF060000 		.4byte	0x6af
 2933 067f 0E       		.uleb128 0xe
 2934 0680 71000000 		.4byte	.LASF39
 2935 0684 01       		.byte	0x1
 2936 0685 9E05     		.2byte	0x59e
 2937 0687 83000000 		.4byte	0x83
 2938 068b 30050000 		.4byte	.LLST27
 2939 068f 0F       		.uleb128 0xf
 2940 0690 06020000 		.4byte	.LASF55
 2941 0694 01       		.byte	0x1
 2942 0695 A005     		.2byte	0x5a0
 2943 0697 83000000 		.4byte	0x83
 2944 069b 9C050000 		.4byte	.LLST28
 2945 069f 14       		.uleb128 0x14
 2946 06a0 2E000000 		.4byte	.LVL126
 2947 06a4 DD0C0000 		.4byte	0xcdd
 2948 06a8 15       		.uleb128 0x15
 2949 06a9 01       		.uleb128 0x1
 2950 06aa 50       		.byte	0x50
 2951 06ab 01       		.uleb128 0x1
 2952 06ac 30       		.byte	0x30
 2953 06ad 00       		.byte	0
 2954 06ae 00       		.byte	0
 2955 06af 17       		.uleb128 0x17
 2956 06b0 7C000000 		.4byte	.LASF63
 2957 06b4 01       		.byte	0x1
 2958 06b5 3007     		.2byte	0x730
 2959 06b7 00000000 		.4byte	.LFB32
 2960 06bb 74000000 		.4byte	.LFE32-.LFB32
 2961 06bf 01       		.uleb128 0x1
 2962 06c0 9C       		.byte	0x9c
ARM GAS  C:\Users\g\AppData\Local\Temp\ccjVf3bh.s 			page 114


 2963 06c1 71070000 		.4byte	0x771
 2964 06c5 0F       		.uleb128 0xf
 2965 06c6 24030000 		.4byte	.LASF64
 2966 06ca 01       		.byte	0x1
 2967 06cb 3207     		.2byte	0x732
 2968 06cd 83000000 		.4byte	0x83
 2969 06d1 00060000 		.4byte	.LLST29
 2970 06d5 10       		.uleb128 0x10
 2971 06d6 5F050000 		.4byte	.LASF65
 2972 06da 01       		.byte	0x1
 2973 06db 3307     		.2byte	0x733
 2974 06dd 83000000 		.4byte	0x83
 2975 06e1 05       		.uleb128 0x5
 2976 06e2 03       		.byte	0x3
 2977 06e3 0C000000 		.4byte	lfclkPosedgeEnabledWdtCounter.4843
 2978 06e7 16       		.uleb128 0x16
 2979 06e8 08000000 		.4byte	.LVL128
 2980 06ec 5E020000 		.4byte	0x25e
 2981 06f0 FA060000 		.4byte	0x6fa
 2982 06f4 15       		.uleb128 0x15
 2983 06f5 01       		.uleb128 0x1
 2984 06f6 50       		.byte	0x50
 2985 06f7 01       		.uleb128 0x1
 2986 06f8 30       		.byte	0x30
 2987 06f9 00       		.byte	0
 2988 06fa 16       		.uleb128 0x16
 2989 06fb 1A000000 		.4byte	.LVL129
 2990 06ff 5E020000 		.4byte	0x25e
 2991 0703 0D070000 		.4byte	0x70d
 2992 0707 15       		.uleb128 0x15
 2993 0708 01       		.uleb128 0x1
 2994 0709 50       		.byte	0x50
 2995 070a 01       		.uleb128 0x1
 2996 070b 31       		.byte	0x31
 2997 070c 00       		.byte	0
 2998 070d 16       		.uleb128 0x16
 2999 070e 2C000000 		.4byte	.LVL130
 3000 0712 5E020000 		.4byte	0x25e
 3001 0716 20070000 		.4byte	0x720
 3002 071a 15       		.uleb128 0x15
 3003 071b 01       		.uleb128 0x1
 3004 071c 50       		.byte	0x50
 3005 071d 01       		.uleb128 0x1
 3006 071e 32       		.byte	0x32
 3007 071f 00       		.byte	0
 3008 0720 16       		.uleb128 0x16
 3009 0721 48000000 		.4byte	.LVL131
 3010 0725 28030000 		.4byte	0x328
 3011 0729 33070000 		.4byte	0x733
 3012 072d 15       		.uleb128 0x15
 3013 072e 01       		.uleb128 0x1
 3014 072f 50       		.byte	0x50
 3015 0730 01       		.uleb128 0x1
 3016 0731 30       		.byte	0x30
 3017 0732 00       		.byte	0
 3018 0733 16       		.uleb128 0x16
 3019 0734 52000000 		.4byte	.LVL132
ARM GAS  C:\Users\g\AppData\Local\Temp\ccjVf3bh.s 			page 115


 3020 0738 98020000 		.4byte	0x298
 3021 073c 4B070000 		.4byte	0x74b
 3022 0740 15       		.uleb128 0x15
 3023 0741 01       		.uleb128 0x1
 3024 0742 51       		.byte	0x51
 3025 0743 01       		.uleb128 0x1
 3026 0744 30       		.byte	0x30
 3027 0745 15       		.uleb128 0x15
 3028 0746 01       		.uleb128 0x1
 3029 0747 50       		.byte	0x50
 3030 0748 01       		.uleb128 0x1
 3031 0749 30       		.byte	0x30
 3032 074a 00       		.byte	0
 3033 074b 16       		.uleb128 0x16
 3034 074c 58000000 		.4byte	.LVL133
 3035 0750 F7030000 		.4byte	0x3f7
 3036 0754 5E070000 		.4byte	0x75e
 3037 0758 15       		.uleb128 0x15
 3038 0759 01       		.uleb128 0x1
 3039 075a 50       		.byte	0x50
 3040 075b 01       		.uleb128 0x1
 3041 075c 31       		.byte	0x31
 3042 075d 00       		.byte	0
 3043 075e 12       		.uleb128 0x12
 3044 075f 60000000 		.4byte	.LVL134
 3045 0763 65060000 		.4byte	0x665
 3046 0767 12       		.uleb128 0x12
 3047 0768 6A000000 		.4byte	.LVL136
 3048 076c 65060000 		.4byte	0x665
 3049 0770 00       		.byte	0
 3050 0771 19       		.uleb128 0x19
 3051 0772 35020000 		.4byte	.LASF66
 3052 0776 01       		.byte	0x1
 3053 0777 6C       		.byte	0x6c
 3054 0778 00000000 		.4byte	.LFB1
 3055 077c 38000000 		.4byte	.LFE1-.LFB1
 3056 0780 01       		.uleb128 0x1
 3057 0781 9C       		.byte	0x9c
 3058 0782 D3070000 		.4byte	0x7d3
 3059 0786 1A       		.uleb128 0x1a
 3060 0787 5A030000 		.4byte	.LASF34
 3061 078b 01       		.byte	0x1
 3062 078c 6F       		.byte	0x6f
 3063 078d 6B000000 		.4byte	0x6b
 3064 0791 13060000 		.4byte	.LLST30
 3065 0795 12       		.uleb128 0x12
 3066 0796 06000000 		.4byte	.LVL138
 3067 079a 10010000 		.4byte	0x110
 3068 079e 12       		.uleb128 0x12
 3069 079f 0E000000 		.4byte	.LVL139
 3070 07a3 FA000000 		.4byte	0xfa
 3071 07a7 12       		.uleb128 0x12
 3072 07a8 16000000 		.4byte	.LVL140
 3073 07ac C10C0000 		.4byte	0xcc1
 3074 07b0 12       		.uleb128 0x12
 3075 07b1 1C000000 		.4byte	.LVL142
 3076 07b5 AF060000 		.4byte	0x6af
ARM GAS  C:\Users\g\AppData\Local\Temp\ccjVf3bh.s 			page 116


 3077 07b9 12       		.uleb128 0x12
 3078 07ba 2A000000 		.4byte	.LVL143
 3079 07be 02030000 		.4byte	0x302
 3080 07c2 14       		.uleb128 0x14
 3081 07c3 30000000 		.4byte	.LVL144
 3082 07c7 CC0C0000 		.4byte	0xccc
 3083 07cb 15       		.uleb128 0x15
 3084 07cc 01       		.uleb128 0x1
 3085 07cd 50       		.byte	0x50
 3086 07ce 02       		.uleb128 0x2
 3087 07cf 74       		.byte	0x74
 3088 07d0 00       		.sleb128 0
 3089 07d1 00       		.byte	0
 3090 07d2 00       		.byte	0
 3091 07d3 18       		.uleb128 0x18
 3092 07d4 BA050000 		.4byte	.LASF67
 3093 07d8 01       		.byte	0x1
 3094 07d9 C905     		.2byte	0x5c9
 3095 07db 83000000 		.4byte	0x83
 3096 07df 00000000 		.4byte	.LFB23
 3097 07e3 14000000 		.4byte	.LFE23-.LFB23
 3098 07e7 01       		.uleb128 0x1
 3099 07e8 9C       		.byte	0x9c
 3100 07e9 11       		.uleb128 0x11
 3101 07ea DC040000 		.4byte	.LASF68
 3102 07ee 01       		.byte	0x1
 3103 07ef E605     		.2byte	0x5e6
 3104 07f1 00000000 		.4byte	.LFB24
 3105 07f5 4C000000 		.4byte	.LFE24-.LFB24
 3106 07f9 01       		.uleb128 0x1
 3107 07fa 9C       		.byte	0x9c
 3108 07fb 64080000 		.4byte	0x864
 3109 07ff 0E       		.uleb128 0xe
 3110 0800 F3020000 		.4byte	.LASF48
 3111 0804 01       		.byte	0x1
 3112 0805 E605     		.2byte	0x5e6
 3113 0807 83000000 		.4byte	0x83
 3114 080b 26060000 		.4byte	.LLST31
 3115 080f 0F       		.uleb128 0xf
 3116 0810 5A030000 		.4byte	.LASF34
 3117 0814 01       		.byte	0x1
 3118 0815 E805     		.2byte	0x5e8
 3119 0817 6B000000 		.4byte	0x6b
 3120 081b 76060000 		.4byte	.LLST32
 3121 081f 0F       		.uleb128 0xf
 3122 0820 A3060000 		.4byte	.LASF69
 3123 0824 01       		.byte	0x1
 3124 0825 E905     		.2byte	0x5e9
 3125 0827 83000000 		.4byte	0x83
 3126 082b 89060000 		.4byte	.LLST33
 3127 082f 12       		.uleb128 0x12
 3128 0830 08000000 		.4byte	.LVL146
 3129 0834 C10C0000 		.4byte	0xcc1
 3130 0838 12       		.uleb128 0x12
 3131 0839 0E000000 		.4byte	.LVL148
 3132 083d 10010000 		.4byte	0x110
 3133 0841 12       		.uleb128 0x12
ARM GAS  C:\Users\g\AppData\Local\Temp\ccjVf3bh.s 			page 117


 3134 0842 16000000 		.4byte	.LVL150
 3135 0846 25020000 		.4byte	0x225
 3136 084a 12       		.uleb128 0x12
 3137 084b 38000000 		.4byte	.LVL155
 3138 084f EC010000 		.4byte	0x1ec
 3139 0853 14       		.uleb128 0x14
 3140 0854 3E000000 		.4byte	.LVL156
 3141 0858 CC0C0000 		.4byte	0xccc
 3142 085c 15       		.uleb128 0x15
 3143 085d 01       		.uleb128 0x1
 3144 085e 50       		.byte	0x50
 3145 085f 02       		.uleb128 0x2
 3146 0860 74       		.byte	0x74
 3147 0861 00       		.sleb128 0
 3148 0862 00       		.byte	0
 3149 0863 00       		.byte	0
 3150 0864 11       		.uleb128 0x11
 3151 0865 C6040000 		.4byte	.LASF70
 3152 0869 01       		.byte	0x1
 3153 086a 2006     		.2byte	0x620
 3154 086c 00000000 		.4byte	.LFB25
 3155 0870 20000000 		.4byte	.LFE25-.LFB25
 3156 0874 01       		.uleb128 0x1
 3157 0875 9C       		.byte	0x9c
 3158 0876 8B080000 		.4byte	0x88b
 3159 087a 0E       		.uleb128 0xe
 3160 087b 5A020000 		.4byte	.LASF71
 3161 087f 01       		.byte	0x1
 3162 0880 2006     		.2byte	0x620
 3163 0882 83000000 		.4byte	0x83
 3164 0886 A8060000 		.4byte	.LLST34
 3165 088a 00       		.byte	0
 3166 088b 13       		.uleb128 0x13
 3167 088c D6020000 		.4byte	.LASF72
 3168 0890 01       		.byte	0x1
 3169 0891 3A06     		.2byte	0x63a
 3170 0893 E8000000 		.4byte	0xe8
 3171 0897 00000000 		.4byte	.LFB26
 3172 089b 20000000 		.4byte	.LFE26-.LFB26
 3173 089f 01       		.uleb128 0x1
 3174 08a0 9C       		.byte	0x9c
 3175 08a1 E5080000 		.4byte	0x8e5
 3176 08a5 0E       		.uleb128 0xe
 3177 08a6 71000000 		.4byte	.LASF39
 3178 08aa 01       		.byte	0x1
 3179 08ab 3A06     		.2byte	0x63a
 3180 08ad 83000000 		.4byte	0x83
 3181 08b1 C9060000 		.4byte	.LLST35
 3182 08b5 0E       		.uleb128 0xe
 3183 08b6 AE010000 		.4byte	.LASF73
 3184 08ba 01       		.byte	0x1
 3185 08bb 3A06     		.2byte	0x63a
 3186 08bd E8000000 		.4byte	0xe8
 3187 08c1 03070000 		.4byte	.LLST36
 3188 08c5 0F       		.uleb128 0xf
 3189 08c6 89020000 		.4byte	.LASF74
 3190 08ca 01       		.byte	0x1
ARM GAS  C:\Users\g\AppData\Local\Temp\ccjVf3bh.s 			page 118


 3191 08cb 3C06     		.2byte	0x63c
 3192 08cd E8000000 		.4byte	0xe8
 3193 08d1 24070000 		.4byte	.LLST37
 3194 08d5 14       		.uleb128 0x14
 3195 08d6 18000000 		.4byte	.LVL168
 3196 08da DD0C0000 		.4byte	0xcdd
 3197 08de 15       		.uleb128 0x15
 3198 08df 01       		.uleb128 0x1
 3199 08e0 50       		.byte	0x50
 3200 08e1 01       		.uleb128 0x1
 3201 08e2 30       		.byte	0x30
 3202 08e3 00       		.byte	0
 3203 08e4 00       		.byte	0
 3204 08e5 13       		.uleb128 0x13
 3205 08e6 D5030000 		.4byte	.LASF75
 3206 08ea 01       		.byte	0x1
 3207 08eb 5806     		.2byte	0x658
 3208 08ed E8000000 		.4byte	0xe8
 3209 08f1 00000000 		.4byte	.LFB27
 3210 08f5 20000000 		.4byte	.LFE27-.LFB27
 3211 08f9 01       		.uleb128 0x1
 3212 08fa 9C       		.byte	0x9c
 3213 08fb 2F090000 		.4byte	0x92f
 3214 08ff 0E       		.uleb128 0xe
 3215 0900 71000000 		.4byte	.LASF39
 3216 0904 01       		.byte	0x1
 3217 0905 5806     		.2byte	0x658
 3218 0907 83000000 		.4byte	0x83
 3219 090b 5A070000 		.4byte	.LLST38
 3220 090f 0F       		.uleb128 0xf
 3221 0910 2F030000 		.4byte	.LASF76
 3222 0914 01       		.byte	0x1
 3223 0915 5A06     		.2byte	0x65a
 3224 0917 E8000000 		.4byte	0xe8
 3225 091b 94070000 		.4byte	.LLST39
 3226 091f 14       		.uleb128 0x14
 3227 0920 16000000 		.4byte	.LVL176
 3228 0924 DD0C0000 		.4byte	0xcdd
 3229 0928 15       		.uleb128 0x15
 3230 0929 01       		.uleb128 0x1
 3231 092a 50       		.byte	0x50
 3232 092b 01       		.uleb128 0x1
 3233 092c 30       		.byte	0x30
 3234 092d 00       		.byte	0
 3235 092e 00       		.byte	0
 3236 092f 11       		.uleb128 0x11
 3237 0930 90030000 		.4byte	.LASF77
 3238 0934 01       		.byte	0x1
 3239 0935 7506     		.2byte	0x675
 3240 0937 00000000 		.4byte	.LFB28
 3241 093b 34000000 		.4byte	.LFE28-.LFB28
 3242 093f 01       		.uleb128 0x1
 3243 0940 9C       		.byte	0x9c
 3244 0941 65090000 		.4byte	0x965
 3245 0945 0E       		.uleb128 0xe
 3246 0946 71000000 		.4byte	.LASF39
 3247 094a 01       		.byte	0x1
ARM GAS  C:\Users\g\AppData\Local\Temp\ccjVf3bh.s 			page 119


 3248 094b 7506     		.2byte	0x675
 3249 094d 83000000 		.4byte	0x83
 3250 0951 CA070000 		.4byte	.LLST40
 3251 0955 14       		.uleb128 0x14
 3252 0956 24000000 		.4byte	.LVL182
 3253 095a DD0C0000 		.4byte	0xcdd
 3254 095e 15       		.uleb128 0x15
 3255 095f 01       		.uleb128 0x1
 3256 0960 50       		.byte	0x50
 3257 0961 01       		.uleb128 0x1
 3258 0962 30       		.byte	0x30
 3259 0963 00       		.byte	0
 3260 0964 00       		.byte	0
 3261 0965 11       		.uleb128 0x11
 3262 0966 D5050000 		.4byte	.LASF78
 3263 096a 01       		.byte	0x1
 3264 096b 8C06     		.2byte	0x68c
 3265 096d 00000000 		.4byte	.LFB29
 3266 0971 28000000 		.4byte	.LFE29-.LFB29
 3267 0975 01       		.uleb128 0x1
 3268 0976 9C       		.byte	0x9c
 3269 0977 9B090000 		.4byte	0x99b
 3270 097b 0E       		.uleb128 0xe
 3271 097c 71000000 		.4byte	.LASF39
 3272 0980 01       		.byte	0x1
 3273 0981 8C06     		.2byte	0x68c
 3274 0983 83000000 		.4byte	0x83
 3275 0987 04080000 		.4byte	.LLST41
 3276 098b 14       		.uleb128 0x14
 3277 098c 1C000000 		.4byte	.LVL187
 3278 0990 DD0C0000 		.4byte	0xcdd
 3279 0994 15       		.uleb128 0x15
 3280 0995 01       		.uleb128 0x1
 3281 0996 50       		.byte	0x50
 3282 0997 01       		.uleb128 0x1
 3283 0998 30       		.byte	0x30
 3284 0999 00       		.byte	0
 3285 099a 00       		.byte	0
 3286 099b 1B       		.uleb128 0x1b
 3287 099c F2030000 		.4byte	.LASF79
 3288 09a0 01       		.byte	0x1
 3289 09a1 AD06     		.2byte	0x6ad
 3290 09a3 00000000 		.4byte	.LFB30
 3291 09a7 A4000000 		.4byte	.LFE30-.LFB30
 3292 09ab 01       		.uleb128 0x1
 3293 09ac 9C       		.byte	0x9c
 3294 09ad EB090000 		.4byte	0x9eb
 3295 09b1 16       		.uleb128 0x16
 3296 09b2 36000000 		.4byte	.LVL189
 3297 09b6 E9070000 		.4byte	0x7e9
 3298 09ba C4090000 		.4byte	0x9c4
 3299 09be 15       		.uleb128 0x15
 3300 09bf 01       		.uleb128 0x1
 3301 09c0 50       		.byte	0x50
 3302 09c1 01       		.uleb128 0x1
 3303 09c2 34       		.byte	0x34
 3304 09c3 00       		.byte	0
ARM GAS  C:\Users\g\AppData\Local\Temp\ccjVf3bh.s 			page 120


 3305 09c4 16       		.uleb128 0x16
 3306 09c5 70000000 		.4byte	.LVL191
 3307 09c9 E9070000 		.4byte	0x7e9
 3308 09cd D9090000 		.4byte	0x9d9
 3309 09d1 15       		.uleb128 0x15
 3310 09d2 01       		.uleb128 0x1
 3311 09d3 50       		.byte	0x50
 3312 09d4 03       		.uleb128 0x3
 3313 09d5 0A       		.byte	0xa
 3314 09d6 0004     		.2byte	0x400
 3315 09d8 00       		.byte	0
 3316 09d9 14       		.uleb128 0x14
 3317 09da 92000000 		.4byte	.LVL193
 3318 09de E9070000 		.4byte	0x7e9
 3319 09e2 15       		.uleb128 0x15
 3320 09e3 01       		.uleb128 0x1
 3321 09e4 50       		.byte	0x50
 3322 09e5 03       		.uleb128 0x3
 3323 09e6 40       		.byte	0x40
 3324 09e7 3E       		.byte	0x3e
 3325 09e8 24       		.byte	0x24
 3326 09e9 00       		.byte	0
 3327 09ea 00       		.byte	0
 3328 09eb 11       		.uleb128 0x11
 3329 09ec 5F000000 		.4byte	.LASF80
 3330 09f0 01       		.byte	0x1
 3331 09f1 EE06     		.2byte	0x6ee
 3332 09f3 00000000 		.4byte	.LFB31
 3333 09f7 60000000 		.4byte	.LFE31-.LFB31
 3334 09fb 01       		.uleb128 0x1
 3335 09fc 9C       		.byte	0x9c
 3336 09fd B70A0000 		.4byte	0xab7
 3337 0a01 0E       		.uleb128 0xe
 3338 0a02 71000000 		.4byte	.LASF39
 3339 0a06 01       		.byte	0x1
 3340 0a07 EE06     		.2byte	0x6ee
 3341 0a09 83000000 		.4byte	0x83
 3342 0a0d 3E080000 		.4byte	.LLST42
 3343 0a11 16       		.uleb128 0x16
 3344 0a12 0A000000 		.4byte	.LVL195
 3345 0a16 28030000 		.4byte	0x328
 3346 0a1a 250A0000 		.4byte	0xa25
 3347 0a1e 15       		.uleb128 0x15
 3348 0a1f 01       		.uleb128 0x1
 3349 0a20 50       		.byte	0x50
 3350 0a21 02       		.uleb128 0x2
 3351 0a22 74       		.byte	0x74
 3352 0a23 00       		.sleb128 0
 3353 0a24 00       		.byte	0
 3354 0a25 12       		.uleb128 0x12
 3355 0a26 14000000 		.4byte	.LVL196
 3356 0a2a E9070000 		.4byte	0x7e9
 3357 0a2e 16       		.uleb128 0x16
 3358 0a2f 1C000000 		.4byte	.LVL197
 3359 0a33 28030000 		.4byte	0x328
 3360 0a37 420A0000 		.4byte	0xa42
 3361 0a3b 15       		.uleb128 0x15
ARM GAS  C:\Users\g\AppData\Local\Temp\ccjVf3bh.s 			page 121


 3362 0a3c 01       		.uleb128 0x1
 3363 0a3d 50       		.byte	0x50
 3364 0a3e 02       		.uleb128 0x2
 3365 0a3f 74       		.byte	0x74
 3366 0a40 00       		.sleb128 0
 3367 0a41 00       		.byte	0
 3368 0a42 12       		.uleb128 0x12
 3369 0a43 26000000 		.4byte	.LVL198
 3370 0a47 64080000 		.4byte	0x864
 3371 0a4b 16       		.uleb128 0x16
 3372 0a4c 2C000000 		.4byte	.LVL199
 3373 0a50 E9070000 		.4byte	0x7e9
 3374 0a54 5E0A0000 		.4byte	0xa5e
 3375 0a58 15       		.uleb128 0x15
 3376 0a59 01       		.uleb128 0x1
 3377 0a5a 50       		.byte	0x50
 3378 0a5b 01       		.uleb128 0x1
 3379 0a5c 34       		.byte	0x34
 3380 0a5d 00       		.byte	0
 3381 0a5e 12       		.uleb128 0x12
 3382 0a5f 36000000 		.4byte	.LVL201
 3383 0a63 28030000 		.4byte	0x328
 3384 0a67 16       		.uleb128 0x16
 3385 0a68 42000000 		.4byte	.LVL202
 3386 0a6c E9070000 		.4byte	0x7e9
 3387 0a70 7C0A0000 		.4byte	0xa7c
 3388 0a74 15       		.uleb128 0x15
 3389 0a75 01       		.uleb128 0x1
 3390 0a76 50       		.byte	0x50
 3391 0a77 03       		.uleb128 0x3
 3392 0a78 0A       		.byte	0xa
 3393 0a79 0004     		.2byte	0x400
 3394 0a7b 00       		.byte	0
 3395 0a7c 16       		.uleb128 0x16
 3396 0a7d 4A000000 		.4byte	.LVL203
 3397 0a81 28030000 		.4byte	0x328
 3398 0a85 900A0000 		.4byte	0xa90
 3399 0a89 15       		.uleb128 0x15
 3400 0a8a 01       		.uleb128 0x1
 3401 0a8b 50       		.byte	0x50
 3402 0a8c 02       		.uleb128 0x2
 3403 0a8d 74       		.byte	0x74
 3404 0a8e 00       		.sleb128 0
 3405 0a8f 00       		.byte	0
 3406 0a90 16       		.uleb128 0x16
 3407 0a91 56000000 		.4byte	.LVL204
 3408 0a95 64080000 		.4byte	0x864
 3409 0a99 A50A0000 		.4byte	0xaa5
 3410 0a9d 15       		.uleb128 0x15
 3411 0a9e 01       		.uleb128 0x1
 3412 0a9f 50       		.byte	0x50
 3413 0aa0 03       		.uleb128 0x3
 3414 0aa1 0A       		.byte	0xa
 3415 0aa2 0008     		.2byte	0x800
 3416 0aa4 00       		.byte	0
 3417 0aa5 14       		.uleb128 0x14
 3418 0aa6 5E000000 		.4byte	.LVL205
ARM GAS  C:\Users\g\AppData\Local\Temp\ccjVf3bh.s 			page 122


 3419 0aaa E9070000 		.4byte	0x7e9
 3420 0aae 15       		.uleb128 0x15
 3421 0aaf 01       		.uleb128 0x1
 3422 0ab0 50       		.byte	0x50
 3423 0ab1 03       		.uleb128 0x3
 3424 0ab2 0A       		.byte	0xa
 3425 0ab3 0004     		.2byte	0x400
 3426 0ab5 00       		.byte	0
 3427 0ab6 00       		.byte	0
 3428 0ab7 11       		.uleb128 0x11
 3429 0ab8 F9040000 		.4byte	.LASF81
 3430 0abc 01       		.byte	0x1
 3431 0abd 580C     		.2byte	0xc58
 3432 0abf 00000000 		.4byte	.LFB35
 3433 0ac3 6C000000 		.4byte	.LFE35-.LFB35
 3434 0ac7 01       		.uleb128 0x1
 3435 0ac8 9C       		.byte	0x9c
 3436 0ac9 730B0000 		.4byte	0xb73
 3437 0acd 0E       		.uleb128 0xe
 3438 0ace 71000000 		.4byte	.LASF39
 3439 0ad2 01       		.byte	0x1
 3440 0ad3 580C     		.2byte	0xc58
 3441 0ad5 83000000 		.4byte	0x83
 3442 0ad9 80080000 		.4byte	.LLST43
 3443 0add 0E       		.uleb128 0xe
 3444 0ade 8D050000 		.4byte	.LASF82
 3445 0ae2 01       		.byte	0x1
 3446 0ae3 580C     		.2byte	0xc58
 3447 0ae5 DD000000 		.4byte	0xdd
 3448 0ae9 AC080000 		.4byte	.LLST44
 3449 0aed 0E       		.uleb128 0xe
 3450 0aee 94040000 		.4byte	.LASF54
 3451 0af2 01       		.byte	0x1
 3452 0af3 580C     		.2byte	0xc58
 3453 0af5 83000000 		.4byte	0x83
 3454 0af9 CD080000 		.4byte	.LLST45
 3455 0afd 0F       		.uleb128 0xf
 3456 0afe 64040000 		.4byte	.LASF83
 3457 0b02 01       		.byte	0x1
 3458 0b03 5A0C     		.2byte	0xc5a
 3459 0b05 83000000 		.4byte	0x83
 3460 0b09 F9080000 		.4byte	.LLST46
 3461 0b0d 16       		.uleb128 0x16
 3462 0b0e 10000000 		.4byte	.LVL208
 3463 0b12 BD030000 		.4byte	0x3bd
 3464 0b16 210B0000 		.4byte	0xb21
 3465 0b1a 15       		.uleb128 0x15
 3466 0b1b 01       		.uleb128 0x1
 3467 0b1c 50       		.byte	0x50
 3468 0b1d 02       		.uleb128 0x2
 3469 0b1e 74       		.byte	0x74
 3470 0b1f 00       		.sleb128 0
 3471 0b20 00       		.byte	0
 3472 0b21 16       		.uleb128 0x16
 3473 0b22 24000000 		.4byte	.LVL209
 3474 0b26 65060000 		.4byte	0x665
 3475 0b2a 350B0000 		.4byte	0xb35
ARM GAS  C:\Users\g\AppData\Local\Temp\ccjVf3bh.s 			page 123


 3476 0b2e 15       		.uleb128 0x15
 3477 0b2f 01       		.uleb128 0x1
 3478 0b30 50       		.byte	0x50
 3479 0b31 02       		.uleb128 0x2
 3480 0b32 74       		.byte	0x74
 3481 0b33 00       		.sleb128 0
 3482 0b34 00       		.byte	0
 3483 0b35 16       		.uleb128 0x16
 3484 0b36 2E000000 		.4byte	.LVL211
 3485 0b3a 65060000 		.4byte	0x665
 3486 0b3e 490B0000 		.4byte	0xb49
 3487 0b42 15       		.uleb128 0x15
 3488 0b43 01       		.uleb128 0x1
 3489 0b44 50       		.byte	0x50
 3490 0b45 02       		.uleb128 0x2
 3491 0b46 74       		.byte	0x74
 3492 0b47 00       		.sleb128 0
 3493 0b48 00       		.byte	0
 3494 0b49 16       		.uleb128 0x16
 3495 0b4a 42000000 		.4byte	.LVL214
 3496 0b4e 51050000 		.4byte	0x551
 3497 0b52 630B0000 		.4byte	0xb63
 3498 0b56 15       		.uleb128 0x15
 3499 0b57 01       		.uleb128 0x1
 3500 0b58 51       		.byte	0x51
 3501 0b59 02       		.uleb128 0x2
 3502 0b5a 75       		.byte	0x75
 3503 0b5b 00       		.sleb128 0
 3504 0b5c 15       		.uleb128 0x15
 3505 0b5d 01       		.uleb128 0x1
 3506 0b5e 50       		.byte	0x50
 3507 0b5f 02       		.uleb128 0x2
 3508 0b60 74       		.byte	0x74
 3509 0b61 00       		.sleb128 0
 3510 0b62 00       		.byte	0
 3511 0b63 14       		.uleb128 0x14
 3512 0b64 5A000000 		.4byte	.LVL217
 3513 0b68 DD0C0000 		.4byte	0xcdd
 3514 0b6c 15       		.uleb128 0x15
 3515 0b6d 01       		.uleb128 0x1
 3516 0b6e 50       		.byte	0x50
 3517 0b6f 01       		.uleb128 0x1
 3518 0b70 30       		.byte	0x30
 3519 0b71 00       		.byte	0
 3520 0b72 00       		.byte	0
 3521 0b73 11       		.uleb128 0x11
 3522 0b74 13050000 		.4byte	.LASF84
 3523 0b78 01       		.byte	0x1
 3524 0b79 D70B     		.2byte	0xbd7
 3525 0b7b 00000000 		.4byte	.LFB34
 3526 0b7f 3C000000 		.4byte	.LFE34-.LFB34
 3527 0b83 01       		.uleb128 0x1
 3528 0b84 9C       		.byte	0x9c
 3529 0b85 2B0C0000 		.4byte	0xc2b
 3530 0b89 0E       		.uleb128 0xe
 3531 0b8a 71000000 		.4byte	.LASF39
 3532 0b8e 01       		.byte	0x1
ARM GAS  C:\Users\g\AppData\Local\Temp\ccjVf3bh.s 			page 124


 3533 0b8f D70B     		.2byte	0xbd7
 3534 0b91 83000000 		.4byte	0x83
 3535 0b95 36090000 		.4byte	.LLST47
 3536 0b99 0E       		.uleb128 0xe
 3537 0b9a 8D050000 		.4byte	.LASF82
 3538 0b9e 01       		.byte	0x1
 3539 0b9f D70B     		.2byte	0xbd7
 3540 0ba1 DD000000 		.4byte	0xdd
 3541 0ba5 62090000 		.4byte	.LLST48
 3542 0ba9 0E       		.uleb128 0xe
 3543 0baa 7D050000 		.4byte	.LASF85
 3544 0bae 01       		.byte	0x1
 3545 0baf D70B     		.2byte	0xbd7
 3546 0bb1 83000000 		.4byte	0x83
 3547 0bb5 83090000 		.4byte	.LLST49
 3548 0bb9 0F       		.uleb128 0xf
 3549 0bba 06020000 		.4byte	.LASF55
 3550 0bbe 01       		.byte	0x1
 3551 0bbf D90B     		.2byte	0xbd9
 3552 0bc1 83000000 		.4byte	0x83
 3553 0bc5 AF090000 		.4byte	.LLST50
 3554 0bc9 0F       		.uleb128 0xf
 3555 0bca 69030000 		.4byte	.LASF86
 3556 0bce 01       		.byte	0x1
 3557 0bcf DA0B     		.2byte	0xbda
 3558 0bd1 83000000 		.4byte	0x83
 3559 0bd5 C2090000 		.4byte	.LLST51
 3560 0bd9 16       		.uleb128 0x16
 3561 0bda 10000000 		.4byte	.LVL221
 3562 0bde BD030000 		.4byte	0x3bd
 3563 0be2 ED0B0000 		.4byte	0xbed
 3564 0be6 15       		.uleb128 0x15
 3565 0be7 01       		.uleb128 0x1
 3566 0be8 50       		.byte	0x50
 3567 0be9 02       		.uleb128 0x2
 3568 0bea 74       		.byte	0x74
 3569 0beb 00       		.sleb128 0
 3570 0bec 00       		.byte	0
 3571 0bed 16       		.uleb128 0x16
 3572 0bee 20000000 		.4byte	.LVL222
 3573 0bf2 65060000 		.4byte	0x665
 3574 0bf6 010C0000 		.4byte	0xc01
 3575 0bfa 15       		.uleb128 0x15
 3576 0bfb 01       		.uleb128 0x1
 3577 0bfc 50       		.byte	0x50
 3578 0bfd 02       		.uleb128 0x2
 3579 0bfe 74       		.byte	0x74
 3580 0bff 00       		.sleb128 0
 3581 0c00 00       		.byte	0
 3582 0c01 16       		.uleb128 0x16
 3583 0c02 2E000000 		.4byte	.LVL225
 3584 0c06 B70A0000 		.4byte	0xab7
 3585 0c0a 1B0C0000 		.4byte	0xc1b
 3586 0c0e 15       		.uleb128 0x15
 3587 0c0f 01       		.uleb128 0x1
 3588 0c10 51       		.byte	0x51
 3589 0c11 02       		.uleb128 0x2
ARM GAS  C:\Users\g\AppData\Local\Temp\ccjVf3bh.s 			page 125


 3590 0c12 76       		.byte	0x76
 3591 0c13 00       		.sleb128 0
 3592 0c14 15       		.uleb128 0x15
 3593 0c15 01       		.uleb128 0x1
 3594 0c16 50       		.byte	0x50
 3595 0c17 02       		.uleb128 0x2
 3596 0c18 74       		.byte	0x74
 3597 0c19 00       		.sleb128 0
 3598 0c1a 00       		.byte	0
 3599 0c1b 14       		.uleb128 0x14
 3600 0c1c 36000000 		.4byte	.LVL226
 3601 0c20 DD0C0000 		.4byte	0xcdd
 3602 0c24 15       		.uleb128 0x15
 3603 0c25 01       		.uleb128 0x1
 3604 0c26 50       		.byte	0x50
 3605 0c27 01       		.uleb128 0x1
 3606 0c28 30       		.byte	0x30
 3607 0c29 00       		.byte	0
 3608 0c2a 00       		.byte	0
 3609 0c2b 1C       		.uleb128 0x1c
 3610 0c2c C5000000 		.4byte	.LASF87
 3611 0c30 01       		.byte	0x1
 3612 0c31 22       		.byte	0x22
 3613 0c32 83000000 		.4byte	0x83
 3614 0c36 05       		.uleb128 0x5
 3615 0c37 03       		.byte	0x3
 3616 0c38 04000000 		.4byte	lfclkPosedgeWdtCounter0Enabled
 3617 0c3c 1C       		.uleb128 0x1c
 3618 0c3d B0060000 		.4byte	.LASF88
 3619 0c41 01       		.byte	0x1
 3620 0c42 23       		.byte	0x23
 3621 0c43 83000000 		.4byte	0x83
 3622 0c47 05       		.uleb128 0x5
 3623 0c48 03       		.byte	0x3
 3624 0c49 08000000 		.4byte	lfclkPosedgeWdtCounter0Mode
 3625 0c4d 1C       		.uleb128 0x1c
 3626 0c4e 0A060000 		.4byte	.LASF89
 3627 0c52 01       		.byte	0x1
 3628 0c53 25       		.byte	0x25
 3629 0c54 BC000000 		.4byte	0xbc
 3630 0c58 05       		.uleb128 0x5
 3631 0c59 03       		.byte	0x3
 3632 0c5a 1C000000 		.4byte	disableServicedIsr
 3633 0c5e 1C       		.uleb128 0x1c
 3634 0c5f BC020000 		.4byte	.LASF90
 3635 0c63 01       		.byte	0x1
 3636 0c64 26       		.byte	0x26
 3637 0c65 BC000000 		.4byte	0xbc
 3638 0c69 05       		.uleb128 0x5
 3639 0c6a 03       		.byte	0x3
 3640 0c6b 00000000 		.4byte	wdtIsrMask
 3641 0c6f 1D       		.uleb128 0x1d
 3642 0c70 83000000 		.4byte	0x83
 3643 0c74 7F0C0000 		.4byte	0xc7f
 3644 0c78 1E       		.uleb128 0x1e
 3645 0c79 F3000000 		.4byte	0xf3
 3646 0c7d 02       		.byte	0x2
ARM GAS  C:\Users\g\AppData\Local\Temp\ccjVf3bh.s 			page 126


 3647 0c7e 00       		.byte	0
 3648 0c7f 1C       		.uleb128 0x1c
 3649 0c80 1D000000 		.4byte	.LASF91
 3650 0c84 01       		.byte	0x1
 3651 0c85 2A       		.byte	0x2a
 3652 0c86 900C0000 		.4byte	0xc90
 3653 0c8a 05       		.uleb128 0x5
 3654 0c8b 03       		.byte	0x3
 3655 0c8c 00000000 		.4byte	counterIntMaskTbl
 3656 0c90 1F       		.uleb128 0x1f
 3657 0c91 6F0C0000 		.4byte	0xc6f
 3658 0c95 1D       		.uleb128 0x1d
 3659 0c96 E8000000 		.4byte	0xe8
 3660 0c9a A50C0000 		.4byte	0xca5
 3661 0c9e 1E       		.uleb128 0x1e
 3662 0c9f F3000000 		.4byte	0xf3
 3663 0ca3 02       		.byte	0x2
 3664 0ca4 00       		.byte	0
 3665 0ca5 1C       		.uleb128 0x1c
 3666 0ca6 2F000000 		.4byte	.LASF92
 3667 0caa 01       		.byte	0x1
 3668 0cab 44       		.byte	0x44
 3669 0cac 950C0000 		.4byte	0xc95
 3670 0cb0 05       		.uleb128 0x5
 3671 0cb1 03       		.byte	0x3
 3672 0cb2 10000000 		.4byte	cySysWdtCallback
 3673 0cb6 20       		.uleb128 0x20
 3674 0cb7 B8040000 		.4byte	.LASF98
 3675 0cbb 04       		.byte	0x4
 3676 0cbc D2       		.byte	0xd2
 3677 0cbd 83000000 		.4byte	0x83
 3678 0cc1 21       		.uleb128 0x21
 3679 0cc2 4D040000 		.4byte	.LASF99
 3680 0cc6 04       		.byte	0x4
 3681 0cc7 E3       		.byte	0xe3
 3682 0cc8 6B000000 		.4byte	0x6b
 3683 0ccc 22       		.uleb128 0x22
 3684 0ccd 07000000 		.4byte	.LASF93
 3685 0cd1 04       		.byte	0x4
 3686 0cd2 E4       		.byte	0xe4
 3687 0cd3 DD0C0000 		.4byte	0xcdd
 3688 0cd7 23       		.uleb128 0x23
 3689 0cd8 6B000000 		.4byte	0x6b
 3690 0cdc 00       		.byte	0
 3691 0cdd 22       		.uleb128 0x22
 3692 0cde 32050000 		.4byte	.LASF94
 3693 0ce2 04       		.byte	0x4
 3694 0ce3 E5       		.byte	0xe5
 3695 0ce4 EE0C0000 		.4byte	0xcee
 3696 0ce8 23       		.uleb128 0x23
 3697 0ce9 6B000000 		.4byte	0x6b
 3698 0ced 00       		.byte	0
 3699 0cee 24       		.uleb128 0x24
 3700 0cef D2010000 		.4byte	.LASF100
 3701 0cf3 04       		.byte	0x4
 3702 0cf4 D8       		.byte	0xd8
 3703 0cf5 23       		.uleb128 0x23
ARM GAS  C:\Users\g\AppData\Local\Temp\ccjVf3bh.s 			page 127


 3704 0cf6 77000000 		.4byte	0x77
 3705 0cfa 00       		.byte	0
 3706 0cfb 00       		.byte	0
 3707              		.section	.debug_abbrev,"",%progbits
 3708              	.Ldebug_abbrev0:
 3709 0000 01       		.uleb128 0x1
 3710 0001 11       		.uleb128 0x11
 3711 0002 01       		.byte	0x1
 3712 0003 25       		.uleb128 0x25
 3713 0004 0E       		.uleb128 0xe
 3714 0005 13       		.uleb128 0x13
 3715 0006 0B       		.uleb128 0xb
 3716 0007 03       		.uleb128 0x3
 3717 0008 0E       		.uleb128 0xe
 3718 0009 1B       		.uleb128 0x1b
 3719 000a 0E       		.uleb128 0xe
 3720 000b 55       		.uleb128 0x55
 3721 000c 17       		.uleb128 0x17
 3722 000d 11       		.uleb128 0x11
 3723 000e 01       		.uleb128 0x1
 3724 000f 10       		.uleb128 0x10
 3725 0010 17       		.uleb128 0x17
 3726 0011 00       		.byte	0
 3727 0012 00       		.byte	0
 3728 0013 02       		.uleb128 0x2
 3729 0014 24       		.uleb128 0x24
 3730 0015 00       		.byte	0
 3731 0016 0B       		.uleb128 0xb
 3732 0017 0B       		.uleb128 0xb
 3733 0018 3E       		.uleb128 0x3e
 3734 0019 0B       		.uleb128 0xb
 3735 001a 03       		.uleb128 0x3
 3736 001b 0E       		.uleb128 0xe
 3737 001c 00       		.byte	0
 3738 001d 00       		.byte	0
 3739 001e 03       		.uleb128 0x3
 3740 001f 24       		.uleb128 0x24
 3741 0020 00       		.byte	0
 3742 0021 0B       		.uleb128 0xb
 3743 0022 0B       		.uleb128 0xb
 3744 0023 3E       		.uleb128 0x3e
 3745 0024 0B       		.uleb128 0xb
 3746 0025 03       		.uleb128 0x3
 3747 0026 08       		.uleb128 0x8
 3748 0027 00       		.byte	0
 3749 0028 00       		.byte	0
 3750 0029 04       		.uleb128 0x4
 3751 002a 16       		.uleb128 0x16
 3752 002b 00       		.byte	0
 3753 002c 03       		.uleb128 0x3
 3754 002d 0E       		.uleb128 0xe
 3755 002e 3A       		.uleb128 0x3a
 3756 002f 0B       		.uleb128 0xb
 3757 0030 3B       		.uleb128 0x3b
 3758 0031 05       		.uleb128 0x5
 3759 0032 49       		.uleb128 0x49
 3760 0033 13       		.uleb128 0x13
ARM GAS  C:\Users\g\AppData\Local\Temp\ccjVf3bh.s 			page 128


 3761 0034 00       		.byte	0
 3762 0035 00       		.byte	0
 3763 0036 05       		.uleb128 0x5
 3764 0037 35       		.uleb128 0x35
 3765 0038 00       		.byte	0
 3766 0039 49       		.uleb128 0x49
 3767 003a 13       		.uleb128 0x13
 3768 003b 00       		.byte	0
 3769 003c 00       		.byte	0
 3770 003d 06       		.uleb128 0x6
 3771 003e 0F       		.uleb128 0xf
 3772 003f 00       		.byte	0
 3773 0040 0B       		.uleb128 0xb
 3774 0041 0B       		.uleb128 0xb
 3775 0042 49       		.uleb128 0x49
 3776 0043 13       		.uleb128 0x13
 3777 0044 00       		.byte	0
 3778 0045 00       		.byte	0
 3779 0046 07       		.uleb128 0x7
 3780 0047 15       		.uleb128 0x15
 3781 0048 00       		.byte	0
 3782 0049 27       		.uleb128 0x27
 3783 004a 19       		.uleb128 0x19
 3784 004b 00       		.byte	0
 3785 004c 00       		.byte	0
 3786 004d 08       		.uleb128 0x8
 3787 004e 04       		.uleb128 0x4
 3788 004f 01       		.byte	0x1
 3789 0050 0B       		.uleb128 0xb
 3790 0051 0B       		.uleb128 0xb
 3791 0052 3A       		.uleb128 0x3a
 3792 0053 0B       		.uleb128 0xb
 3793 0054 3B       		.uleb128 0x3b
 3794 0055 0B       		.uleb128 0xb
 3795 0056 01       		.uleb128 0x1
 3796 0057 13       		.uleb128 0x13
 3797 0058 00       		.byte	0
 3798 0059 00       		.byte	0
 3799 005a 09       		.uleb128 0x9
 3800 005b 28       		.uleb128 0x28
 3801 005c 00       		.byte	0
 3802 005d 03       		.uleb128 0x3
 3803 005e 0E       		.uleb128 0xe
 3804 005f 1C       		.uleb128 0x1c
 3805 0060 0D       		.uleb128 0xd
 3806 0061 00       		.byte	0
 3807 0062 00       		.byte	0
 3808 0063 0A       		.uleb128 0xa
 3809 0064 16       		.uleb128 0x16
 3810 0065 00       		.byte	0
 3811 0066 03       		.uleb128 0x3
 3812 0067 0E       		.uleb128 0xe
 3813 0068 3A       		.uleb128 0x3a
 3814 0069 0B       		.uleb128 0xb
 3815 006a 3B       		.uleb128 0x3b
 3816 006b 0B       		.uleb128 0xb
 3817 006c 49       		.uleb128 0x49
ARM GAS  C:\Users\g\AppData\Local\Temp\ccjVf3bh.s 			page 129


 3818 006d 13       		.uleb128 0x13
 3819 006e 00       		.byte	0
 3820 006f 00       		.byte	0
 3821 0070 0B       		.uleb128 0xb
 3822 0071 2E       		.uleb128 0x2e
 3823 0072 00       		.byte	0
 3824 0073 03       		.uleb128 0x3
 3825 0074 0E       		.uleb128 0xe
 3826 0075 3A       		.uleb128 0x3a
 3827 0076 0B       		.uleb128 0xb
 3828 0077 3B       		.uleb128 0x3b
 3829 0078 05       		.uleb128 0x5
 3830 0079 27       		.uleb128 0x27
 3831 007a 19       		.uleb128 0x19
 3832 007b 49       		.uleb128 0x49
 3833 007c 13       		.uleb128 0x13
 3834 007d 11       		.uleb128 0x11
 3835 007e 01       		.uleb128 0x1
 3836 007f 12       		.uleb128 0x12
 3837 0080 06       		.uleb128 0x6
 3838 0081 40       		.uleb128 0x40
 3839 0082 18       		.uleb128 0x18
 3840 0083 9742     		.uleb128 0x2117
 3841 0085 19       		.uleb128 0x19
 3842 0086 00       		.byte	0
 3843 0087 00       		.byte	0
 3844 0088 0C       		.uleb128 0xc
 3845 0089 2E       		.uleb128 0x2e
 3846 008a 00       		.byte	0
 3847 008b 3F       		.uleb128 0x3f
 3848 008c 19       		.uleb128 0x19
 3849 008d 03       		.uleb128 0x3
 3850 008e 0E       		.uleb128 0xe
 3851 008f 3A       		.uleb128 0x3a
 3852 0090 0B       		.uleb128 0xb
 3853 0091 3B       		.uleb128 0x3b
 3854 0092 0B       		.uleb128 0xb
 3855 0093 27       		.uleb128 0x27
 3856 0094 19       		.uleb128 0x19
 3857 0095 11       		.uleb128 0x11
 3858 0096 01       		.uleb128 0x1
 3859 0097 12       		.uleb128 0x12
 3860 0098 06       		.uleb128 0x6
 3861 0099 40       		.uleb128 0x40
 3862 009a 18       		.uleb128 0x18
 3863 009b 9742     		.uleb128 0x2117
 3864 009d 19       		.uleb128 0x19
 3865 009e 00       		.byte	0
 3866 009f 00       		.byte	0
 3867 00a0 0D       		.uleb128 0xd
 3868 00a1 2E       		.uleb128 0x2e
 3869 00a2 01       		.byte	0x1
 3870 00a3 3F       		.uleb128 0x3f
 3871 00a4 19       		.uleb128 0x19
 3872 00a5 03       		.uleb128 0x3
 3873 00a6 0E       		.uleb128 0xe
 3874 00a7 3A       		.uleb128 0x3a
ARM GAS  C:\Users\g\AppData\Local\Temp\ccjVf3bh.s 			page 130


 3875 00a8 0B       		.uleb128 0xb
 3876 00a9 3B       		.uleb128 0x3b
 3877 00aa 05       		.uleb128 0x5
 3878 00ab 27       		.uleb128 0x27
 3879 00ac 19       		.uleb128 0x19
 3880 00ad 49       		.uleb128 0x49
 3881 00ae 13       		.uleb128 0x13
 3882 00af 11       		.uleb128 0x11
 3883 00b0 01       		.uleb128 0x1
 3884 00b1 12       		.uleb128 0x12
 3885 00b2 06       		.uleb128 0x6
 3886 00b3 40       		.uleb128 0x40
 3887 00b4 18       		.uleb128 0x18
 3888 00b5 9642     		.uleb128 0x2116
 3889 00b7 19       		.uleb128 0x19
 3890 00b8 01       		.uleb128 0x1
 3891 00b9 13       		.uleb128 0x13
 3892 00ba 00       		.byte	0
 3893 00bb 00       		.byte	0
 3894 00bc 0E       		.uleb128 0xe
 3895 00bd 05       		.uleb128 0x5
 3896 00be 00       		.byte	0
 3897 00bf 03       		.uleb128 0x3
 3898 00c0 0E       		.uleb128 0xe
 3899 00c1 3A       		.uleb128 0x3a
 3900 00c2 0B       		.uleb128 0xb
 3901 00c3 3B       		.uleb128 0x3b
 3902 00c4 05       		.uleb128 0x5
 3903 00c5 49       		.uleb128 0x49
 3904 00c6 13       		.uleb128 0x13
 3905 00c7 02       		.uleb128 0x2
 3906 00c8 17       		.uleb128 0x17
 3907 00c9 00       		.byte	0
 3908 00ca 00       		.byte	0
 3909 00cb 0F       		.uleb128 0xf
 3910 00cc 34       		.uleb128 0x34
 3911 00cd 00       		.byte	0
 3912 00ce 03       		.uleb128 0x3
 3913 00cf 0E       		.uleb128 0xe
 3914 00d0 3A       		.uleb128 0x3a
 3915 00d1 0B       		.uleb128 0xb
 3916 00d2 3B       		.uleb128 0x3b
 3917 00d3 05       		.uleb128 0x5
 3918 00d4 49       		.uleb128 0x49
 3919 00d5 13       		.uleb128 0x13
 3920 00d6 02       		.uleb128 0x2
 3921 00d7 17       		.uleb128 0x17
 3922 00d8 00       		.byte	0
 3923 00d9 00       		.byte	0
 3924 00da 10       		.uleb128 0x10
 3925 00db 34       		.uleb128 0x34
 3926 00dc 00       		.byte	0
 3927 00dd 03       		.uleb128 0x3
 3928 00de 0E       		.uleb128 0xe
 3929 00df 3A       		.uleb128 0x3a
 3930 00e0 0B       		.uleb128 0xb
 3931 00e1 3B       		.uleb128 0x3b
ARM GAS  C:\Users\g\AppData\Local\Temp\ccjVf3bh.s 			page 131


 3932 00e2 05       		.uleb128 0x5
 3933 00e3 49       		.uleb128 0x49
 3934 00e4 13       		.uleb128 0x13
 3935 00e5 02       		.uleb128 0x2
 3936 00e6 18       		.uleb128 0x18
 3937 00e7 00       		.byte	0
 3938 00e8 00       		.byte	0
 3939 00e9 11       		.uleb128 0x11
 3940 00ea 2E       		.uleb128 0x2e
 3941 00eb 01       		.byte	0x1
 3942 00ec 3F       		.uleb128 0x3f
 3943 00ed 19       		.uleb128 0x19
 3944 00ee 03       		.uleb128 0x3
 3945 00ef 0E       		.uleb128 0xe
 3946 00f0 3A       		.uleb128 0x3a
 3947 00f1 0B       		.uleb128 0xb
 3948 00f2 3B       		.uleb128 0x3b
 3949 00f3 05       		.uleb128 0x5
 3950 00f4 27       		.uleb128 0x27
 3951 00f5 19       		.uleb128 0x19
 3952 00f6 11       		.uleb128 0x11
 3953 00f7 01       		.uleb128 0x1
 3954 00f8 12       		.uleb128 0x12
 3955 00f9 06       		.uleb128 0x6
 3956 00fa 40       		.uleb128 0x40
 3957 00fb 18       		.uleb128 0x18
 3958 00fc 9742     		.uleb128 0x2117
 3959 00fe 19       		.uleb128 0x19
 3960 00ff 01       		.uleb128 0x1
 3961 0100 13       		.uleb128 0x13
 3962 0101 00       		.byte	0
 3963 0102 00       		.byte	0
 3964 0103 12       		.uleb128 0x12
 3965 0104 898201   		.uleb128 0x4109
 3966 0107 00       		.byte	0
 3967 0108 11       		.uleb128 0x11
 3968 0109 01       		.uleb128 0x1
 3969 010a 31       		.uleb128 0x31
 3970 010b 13       		.uleb128 0x13
 3971 010c 00       		.byte	0
 3972 010d 00       		.byte	0
 3973 010e 13       		.uleb128 0x13
 3974 010f 2E       		.uleb128 0x2e
 3975 0110 01       		.byte	0x1
 3976 0111 3F       		.uleb128 0x3f
 3977 0112 19       		.uleb128 0x19
 3978 0113 03       		.uleb128 0x3
 3979 0114 0E       		.uleb128 0xe
 3980 0115 3A       		.uleb128 0x3a
 3981 0116 0B       		.uleb128 0xb
 3982 0117 3B       		.uleb128 0x3b
 3983 0118 05       		.uleb128 0x5
 3984 0119 27       		.uleb128 0x27
 3985 011a 19       		.uleb128 0x19
 3986 011b 49       		.uleb128 0x49
 3987 011c 13       		.uleb128 0x13
 3988 011d 11       		.uleb128 0x11
ARM GAS  C:\Users\g\AppData\Local\Temp\ccjVf3bh.s 			page 132


 3989 011e 01       		.uleb128 0x1
 3990 011f 12       		.uleb128 0x12
 3991 0120 06       		.uleb128 0x6
 3992 0121 40       		.uleb128 0x40
 3993 0122 18       		.uleb128 0x18
 3994 0123 9742     		.uleb128 0x2117
 3995 0125 19       		.uleb128 0x19
 3996 0126 01       		.uleb128 0x1
 3997 0127 13       		.uleb128 0x13
 3998 0128 00       		.byte	0
 3999 0129 00       		.byte	0
 4000 012a 14       		.uleb128 0x14
 4001 012b 898201   		.uleb128 0x4109
 4002 012e 01       		.byte	0x1
 4003 012f 11       		.uleb128 0x11
 4004 0130 01       		.uleb128 0x1
 4005 0131 31       		.uleb128 0x31
 4006 0132 13       		.uleb128 0x13
 4007 0133 00       		.byte	0
 4008 0134 00       		.byte	0
 4009 0135 15       		.uleb128 0x15
 4010 0136 8A8201   		.uleb128 0x410a
 4011 0139 00       		.byte	0
 4012 013a 02       		.uleb128 0x2
 4013 013b 18       		.uleb128 0x18
 4014 013c 9142     		.uleb128 0x2111
 4015 013e 18       		.uleb128 0x18
 4016 013f 00       		.byte	0
 4017 0140 00       		.byte	0
 4018 0141 16       		.uleb128 0x16
 4019 0142 898201   		.uleb128 0x4109
 4020 0145 01       		.byte	0x1
 4021 0146 11       		.uleb128 0x11
 4022 0147 01       		.uleb128 0x1
 4023 0148 31       		.uleb128 0x31
 4024 0149 13       		.uleb128 0x13
 4025 014a 01       		.uleb128 0x1
 4026 014b 13       		.uleb128 0x13
 4027 014c 00       		.byte	0
 4028 014d 00       		.byte	0
 4029 014e 17       		.uleb128 0x17
 4030 014f 2E       		.uleb128 0x2e
 4031 0150 01       		.byte	0x1
 4032 0151 03       		.uleb128 0x3
 4033 0152 0E       		.uleb128 0xe
 4034 0153 3A       		.uleb128 0x3a
 4035 0154 0B       		.uleb128 0xb
 4036 0155 3B       		.uleb128 0x3b
 4037 0156 05       		.uleb128 0x5
 4038 0157 27       		.uleb128 0x27
 4039 0158 19       		.uleb128 0x19
 4040 0159 11       		.uleb128 0x11
 4041 015a 01       		.uleb128 0x1
 4042 015b 12       		.uleb128 0x12
 4043 015c 06       		.uleb128 0x6
 4044 015d 40       		.uleb128 0x40
 4045 015e 18       		.uleb128 0x18
ARM GAS  C:\Users\g\AppData\Local\Temp\ccjVf3bh.s 			page 133


 4046 015f 9742     		.uleb128 0x2117
 4047 0161 19       		.uleb128 0x19
 4048 0162 01       		.uleb128 0x1
 4049 0163 13       		.uleb128 0x13
 4050 0164 00       		.byte	0
 4051 0165 00       		.byte	0
 4052 0166 18       		.uleb128 0x18
 4053 0167 2E       		.uleb128 0x2e
 4054 0168 00       		.byte	0
 4055 0169 3F       		.uleb128 0x3f
 4056 016a 19       		.uleb128 0x19
 4057 016b 03       		.uleb128 0x3
 4058 016c 0E       		.uleb128 0xe
 4059 016d 3A       		.uleb128 0x3a
 4060 016e 0B       		.uleb128 0xb
 4061 016f 3B       		.uleb128 0x3b
 4062 0170 05       		.uleb128 0x5
 4063 0171 27       		.uleb128 0x27
 4064 0172 19       		.uleb128 0x19
 4065 0173 49       		.uleb128 0x49
 4066 0174 13       		.uleb128 0x13
 4067 0175 11       		.uleb128 0x11
 4068 0176 01       		.uleb128 0x1
 4069 0177 12       		.uleb128 0x12
 4070 0178 06       		.uleb128 0x6
 4071 0179 40       		.uleb128 0x40
 4072 017a 18       		.uleb128 0x18
 4073 017b 9742     		.uleb128 0x2117
 4074 017d 19       		.uleb128 0x19
 4075 017e 00       		.byte	0
 4076 017f 00       		.byte	0
 4077 0180 19       		.uleb128 0x19
 4078 0181 2E       		.uleb128 0x2e
 4079 0182 01       		.byte	0x1
 4080 0183 3F       		.uleb128 0x3f
 4081 0184 19       		.uleb128 0x19
 4082 0185 03       		.uleb128 0x3
 4083 0186 0E       		.uleb128 0xe
 4084 0187 3A       		.uleb128 0x3a
 4085 0188 0B       		.uleb128 0xb
 4086 0189 3B       		.uleb128 0x3b
 4087 018a 0B       		.uleb128 0xb
 4088 018b 27       		.uleb128 0x27
 4089 018c 19       		.uleb128 0x19
 4090 018d 11       		.uleb128 0x11
 4091 018e 01       		.uleb128 0x1
 4092 018f 12       		.uleb128 0x12
 4093 0190 06       		.uleb128 0x6
 4094 0191 40       		.uleb128 0x40
 4095 0192 18       		.uleb128 0x18
 4096 0193 9742     		.uleb128 0x2117
 4097 0195 19       		.uleb128 0x19
 4098 0196 01       		.uleb128 0x1
 4099 0197 13       		.uleb128 0x13
 4100 0198 00       		.byte	0
 4101 0199 00       		.byte	0
 4102 019a 1A       		.uleb128 0x1a
ARM GAS  C:\Users\g\AppData\Local\Temp\ccjVf3bh.s 			page 134


 4103 019b 34       		.uleb128 0x34
 4104 019c 00       		.byte	0
 4105 019d 03       		.uleb128 0x3
 4106 019e 0E       		.uleb128 0xe
 4107 019f 3A       		.uleb128 0x3a
 4108 01a0 0B       		.uleb128 0xb
 4109 01a1 3B       		.uleb128 0x3b
 4110 01a2 0B       		.uleb128 0xb
 4111 01a3 49       		.uleb128 0x49
 4112 01a4 13       		.uleb128 0x13
 4113 01a5 02       		.uleb128 0x2
 4114 01a6 17       		.uleb128 0x17
 4115 01a7 00       		.byte	0
 4116 01a8 00       		.byte	0
 4117 01a9 1B       		.uleb128 0x1b
 4118 01aa 2E       		.uleb128 0x2e
 4119 01ab 01       		.byte	0x1
 4120 01ac 3F       		.uleb128 0x3f
 4121 01ad 19       		.uleb128 0x19
 4122 01ae 03       		.uleb128 0x3
 4123 01af 0E       		.uleb128 0xe
 4124 01b0 3A       		.uleb128 0x3a
 4125 01b1 0B       		.uleb128 0xb
 4126 01b2 3B       		.uleb128 0x3b
 4127 01b3 05       		.uleb128 0x5
 4128 01b4 27       		.uleb128 0x27
 4129 01b5 19       		.uleb128 0x19
 4130 01b6 11       		.uleb128 0x11
 4131 01b7 01       		.uleb128 0x1
 4132 01b8 12       		.uleb128 0x12
 4133 01b9 06       		.uleb128 0x6
 4134 01ba 40       		.uleb128 0x40
 4135 01bb 18       		.uleb128 0x18
 4136 01bc 9642     		.uleb128 0x2116
 4137 01be 19       		.uleb128 0x19
 4138 01bf 01       		.uleb128 0x1
 4139 01c0 13       		.uleb128 0x13
 4140 01c1 00       		.byte	0
 4141 01c2 00       		.byte	0
 4142 01c3 1C       		.uleb128 0x1c
 4143 01c4 34       		.uleb128 0x34
 4144 01c5 00       		.byte	0
 4145 01c6 03       		.uleb128 0x3
 4146 01c7 0E       		.uleb128 0xe
 4147 01c8 3A       		.uleb128 0x3a
 4148 01c9 0B       		.uleb128 0xb
 4149 01ca 3B       		.uleb128 0x3b
 4150 01cb 0B       		.uleb128 0xb
 4151 01cc 49       		.uleb128 0x49
 4152 01cd 13       		.uleb128 0x13
 4153 01ce 02       		.uleb128 0x2
 4154 01cf 18       		.uleb128 0x18
 4155 01d0 00       		.byte	0
 4156 01d1 00       		.byte	0
 4157 01d2 1D       		.uleb128 0x1d
 4158 01d3 01       		.uleb128 0x1
 4159 01d4 01       		.byte	0x1
ARM GAS  C:\Users\g\AppData\Local\Temp\ccjVf3bh.s 			page 135


 4160 01d5 49       		.uleb128 0x49
 4161 01d6 13       		.uleb128 0x13
 4162 01d7 01       		.uleb128 0x1
 4163 01d8 13       		.uleb128 0x13
 4164 01d9 00       		.byte	0
 4165 01da 00       		.byte	0
 4166 01db 1E       		.uleb128 0x1e
 4167 01dc 21       		.uleb128 0x21
 4168 01dd 00       		.byte	0
 4169 01de 49       		.uleb128 0x49
 4170 01df 13       		.uleb128 0x13
 4171 01e0 2F       		.uleb128 0x2f
 4172 01e1 0B       		.uleb128 0xb
 4173 01e2 00       		.byte	0
 4174 01e3 00       		.byte	0
 4175 01e4 1F       		.uleb128 0x1f
 4176 01e5 26       		.uleb128 0x26
 4177 01e6 00       		.byte	0
 4178 01e7 49       		.uleb128 0x49
 4179 01e8 13       		.uleb128 0x13
 4180 01e9 00       		.byte	0
 4181 01ea 00       		.byte	0
 4182 01eb 20       		.uleb128 0x20
 4183 01ec 34       		.uleb128 0x34
 4184 01ed 00       		.byte	0
 4185 01ee 03       		.uleb128 0x3
 4186 01ef 0E       		.uleb128 0xe
 4187 01f0 3A       		.uleb128 0x3a
 4188 01f1 0B       		.uleb128 0xb
 4189 01f2 3B       		.uleb128 0x3b
 4190 01f3 0B       		.uleb128 0xb
 4191 01f4 49       		.uleb128 0x49
 4192 01f5 13       		.uleb128 0x13
 4193 01f6 3F       		.uleb128 0x3f
 4194 01f7 19       		.uleb128 0x19
 4195 01f8 3C       		.uleb128 0x3c
 4196 01f9 19       		.uleb128 0x19
 4197 01fa 00       		.byte	0
 4198 01fb 00       		.byte	0
 4199 01fc 21       		.uleb128 0x21
 4200 01fd 2E       		.uleb128 0x2e
 4201 01fe 00       		.byte	0
 4202 01ff 3F       		.uleb128 0x3f
 4203 0200 19       		.uleb128 0x19
 4204 0201 03       		.uleb128 0x3
 4205 0202 0E       		.uleb128 0xe
 4206 0203 3A       		.uleb128 0x3a
 4207 0204 0B       		.uleb128 0xb
 4208 0205 3B       		.uleb128 0x3b
 4209 0206 0B       		.uleb128 0xb
 4210 0207 27       		.uleb128 0x27
 4211 0208 19       		.uleb128 0x19
 4212 0209 49       		.uleb128 0x49
 4213 020a 13       		.uleb128 0x13
 4214 020b 3C       		.uleb128 0x3c
 4215 020c 19       		.uleb128 0x19
 4216 020d 00       		.byte	0
ARM GAS  C:\Users\g\AppData\Local\Temp\ccjVf3bh.s 			page 136


 4217 020e 00       		.byte	0
 4218 020f 22       		.uleb128 0x22
 4219 0210 2E       		.uleb128 0x2e
 4220 0211 01       		.byte	0x1
 4221 0212 3F       		.uleb128 0x3f
 4222 0213 19       		.uleb128 0x19
 4223 0214 03       		.uleb128 0x3
 4224 0215 0E       		.uleb128 0xe
 4225 0216 3A       		.uleb128 0x3a
 4226 0217 0B       		.uleb128 0xb
 4227 0218 3B       		.uleb128 0x3b
 4228 0219 0B       		.uleb128 0xb
 4229 021a 27       		.uleb128 0x27
 4230 021b 19       		.uleb128 0x19
 4231 021c 3C       		.uleb128 0x3c
 4232 021d 19       		.uleb128 0x19
 4233 021e 01       		.uleb128 0x1
 4234 021f 13       		.uleb128 0x13
 4235 0220 00       		.byte	0
 4236 0221 00       		.byte	0
 4237 0222 23       		.uleb128 0x23
 4238 0223 05       		.uleb128 0x5
 4239 0224 00       		.byte	0
 4240 0225 49       		.uleb128 0x49
 4241 0226 13       		.uleb128 0x13
 4242 0227 00       		.byte	0
 4243 0228 00       		.byte	0
 4244 0229 24       		.uleb128 0x24
 4245 022a 2E       		.uleb128 0x2e
 4246 022b 01       		.byte	0x1
 4247 022c 3F       		.uleb128 0x3f
 4248 022d 19       		.uleb128 0x19
 4249 022e 03       		.uleb128 0x3
 4250 022f 0E       		.uleb128 0xe
 4251 0230 3A       		.uleb128 0x3a
 4252 0231 0B       		.uleb128 0xb
 4253 0232 3B       		.uleb128 0x3b
 4254 0233 0B       		.uleb128 0xb
 4255 0234 27       		.uleb128 0x27
 4256 0235 19       		.uleb128 0x19
 4257 0236 3C       		.uleb128 0x3c
 4258 0237 19       		.uleb128 0x19
 4259 0238 00       		.byte	0
 4260 0239 00       		.byte	0
 4261 023a 00       		.byte	0
 4262              		.section	.debug_loc,"",%progbits
 4263              	.Ldebug_loc0:
 4264              	.LLST0:
 4265 0000 00000000 		.4byte	.LVL0
 4266 0004 4F000000 		.4byte	.LVL4-1
 4267 0008 0100     		.2byte	0x1
 4268 000a 50       		.byte	0x50
 4269 000b 4F000000 		.4byte	.LVL4-1
 4270 000f 72000000 		.4byte	.LVL10
 4271 0013 0400     		.2byte	0x4
 4272 0015 F3       		.byte	0xf3
 4273 0016 01       		.uleb128 0x1
ARM GAS  C:\Users\g\AppData\Local\Temp\ccjVf3bh.s 			page 137


 4274 0017 50       		.byte	0x50
 4275 0018 9F       		.byte	0x9f
 4276 0019 72000000 		.4byte	.LVL10
 4277 001d 76000000 		.4byte	.LVL11
 4278 0021 0100     		.2byte	0x1
 4279 0023 50       		.byte	0x50
 4280 0024 76000000 		.4byte	.LVL11
 4281 0028 A8000000 		.4byte	.LVL20
 4282 002c 0400     		.2byte	0x4
 4283 002e F3       		.byte	0xf3
 4284 002f 01       		.uleb128 0x1
 4285 0030 50       		.byte	0x50
 4286 0031 9F       		.byte	0x9f
 4287 0032 A8000000 		.4byte	.LVL20
 4288 0036 BA000000 		.4byte	.LVL22
 4289 003a 0100     		.2byte	0x1
 4290 003c 50       		.byte	0x50
 4291 003d BA000000 		.4byte	.LVL22
 4292 0041 BC000000 		.4byte	.LVL23
 4293 0045 0400     		.2byte	0x4
 4294 0047 F3       		.byte	0xf3
 4295 0048 01       		.uleb128 0x1
 4296 0049 50       		.byte	0x50
 4297 004a 9F       		.byte	0x9f
 4298 004b BC000000 		.4byte	.LVL23
 4299 004f BE000000 		.4byte	.LVL24
 4300 0053 0100     		.2byte	0x1
 4301 0055 50       		.byte	0x50
 4302 0056 BE000000 		.4byte	.LVL24
 4303 005a C0000000 		.4byte	.LVL25
 4304 005e 0400     		.2byte	0x4
 4305 0060 F3       		.byte	0xf3
 4306 0061 01       		.uleb128 0x1
 4307 0062 50       		.byte	0x50
 4308 0063 9F       		.byte	0x9f
 4309 0064 C0000000 		.4byte	.LVL25
 4310 0068 C2000000 		.4byte	.LVL26
 4311 006c 0100     		.2byte	0x1
 4312 006e 50       		.byte	0x50
 4313 006f C2000000 		.4byte	.LVL26
 4314 0073 C4000000 		.4byte	.LVL27
 4315 0077 0400     		.2byte	0x4
 4316 0079 F3       		.byte	0xf3
 4317 007a 01       		.uleb128 0x1
 4318 007b 50       		.byte	0x50
 4319 007c 9F       		.byte	0x9f
 4320 007d C4000000 		.4byte	.LVL27
 4321 0081 C6000000 		.4byte	.LVL28
 4322 0085 0100     		.2byte	0x1
 4323 0087 50       		.byte	0x50
 4324 0088 C6000000 		.4byte	.LVL28
 4325 008c C8000000 		.4byte	.LVL29
 4326 0090 0400     		.2byte	0x4
 4327 0092 F3       		.byte	0xf3
 4328 0093 01       		.uleb128 0x1
 4329 0094 50       		.byte	0x50
 4330 0095 9F       		.byte	0x9f
ARM GAS  C:\Users\g\AppData\Local\Temp\ccjVf3bh.s 			page 138


 4331 0096 C8000000 		.4byte	.LVL29
 4332 009a CA000000 		.4byte	.LVL30
 4333 009e 0100     		.2byte	0x1
 4334 00a0 50       		.byte	0x50
 4335 00a1 CA000000 		.4byte	.LVL30
 4336 00a5 CC000000 		.4byte	.LVL31
 4337 00a9 0400     		.2byte	0x4
 4338 00ab F3       		.byte	0xf3
 4339 00ac 01       		.uleb128 0x1
 4340 00ad 50       		.byte	0x50
 4341 00ae 9F       		.byte	0x9f
 4342 00af CC000000 		.4byte	.LVL31
 4343 00b3 CE000000 		.4byte	.LVL32
 4344 00b7 0100     		.2byte	0x1
 4345 00b9 50       		.byte	0x50
 4346 00ba CE000000 		.4byte	.LVL32
 4347 00be D0000000 		.4byte	.LVL33
 4348 00c2 0400     		.2byte	0x4
 4349 00c4 F3       		.byte	0xf3
 4350 00c5 01       		.uleb128 0x1
 4351 00c6 50       		.byte	0x50
 4352 00c7 9F       		.byte	0x9f
 4353 00c8 D0000000 		.4byte	.LVL33
 4354 00cc D2000000 		.4byte	.LVL34
 4355 00d0 0100     		.2byte	0x1
 4356 00d2 50       		.byte	0x50
 4357 00d3 D2000000 		.4byte	.LVL34
 4358 00d7 D4000000 		.4byte	.LVL35
 4359 00db 0400     		.2byte	0x4
 4360 00dd F3       		.byte	0xf3
 4361 00de 01       		.uleb128 0x1
 4362 00df 50       		.byte	0x50
 4363 00e0 9F       		.byte	0x9f
 4364 00e1 D4000000 		.4byte	.LVL35
 4365 00e5 D6000000 		.4byte	.LVL36
 4366 00e9 0100     		.2byte	0x1
 4367 00eb 50       		.byte	0x50
 4368 00ec D6000000 		.4byte	.LVL36
 4369 00f0 08010000 		.4byte	.LFE4
 4370 00f4 0400     		.2byte	0x4
 4371 00f6 F3       		.byte	0xf3
 4372 00f7 01       		.uleb128 0x1
 4373 00f8 50       		.byte	0x50
 4374 00f9 9F       		.byte	0x9f
 4375 00fa 00000000 		.4byte	0
 4376 00fe 00000000 		.4byte	0
 4377              	.LLST1:
 4378 0102 00000000 		.4byte	.LVL0
 4379 0106 4C000000 		.4byte	.LVL3
 4380 010a 0100     		.2byte	0x1
 4381 010c 51       		.byte	0x51
 4382 010d 4C000000 		.4byte	.LVL3
 4383 0111 72000000 		.4byte	.LVL10
 4384 0115 0100     		.2byte	0x1
 4385 0117 54       		.byte	0x54
 4386 0118 72000000 		.4byte	.LVL10
 4387 011c 7E000000 		.4byte	.LVL12
ARM GAS  C:\Users\g\AppData\Local\Temp\ccjVf3bh.s 			page 139


 4388 0120 0100     		.2byte	0x1
 4389 0122 51       		.byte	0x51
 4390 0123 7E000000 		.4byte	.LVL12
 4391 0127 A8000000 		.4byte	.LVL20
 4392 012b 0100     		.2byte	0x1
 4393 012d 54       		.byte	0x54
 4394 012e A8000000 		.4byte	.LVL20
 4395 0132 D6000000 		.4byte	.LVL36
 4396 0136 0100     		.2byte	0x1
 4397 0138 51       		.byte	0x51
 4398 0139 D6000000 		.4byte	.LVL36
 4399 013d 08010000 		.4byte	.LFE4
 4400 0141 0400     		.2byte	0x4
 4401 0143 F3       		.byte	0xf3
 4402 0144 01       		.uleb128 0x1
 4403 0145 51       		.byte	0x51
 4404 0146 9F       		.byte	0x9f
 4405 0147 00000000 		.4byte	0
 4406 014b 00000000 		.4byte	0
 4407              	.LLST2:
 4408 014f 70000000 		.4byte	.LVL9
 4409 0153 72000000 		.4byte	.LVL10
 4410 0157 0100     		.2byte	0x1
 4411 0159 50       		.byte	0x50
 4412 015a 9E000000 		.4byte	.LVL17
 4413 015e A2000000 		.4byte	.LVL18
 4414 0162 0100     		.2byte	0x1
 4415 0164 50       		.byte	0x50
 4416 0165 A2000000 		.4byte	.LVL18
 4417 0169 A8000000 		.4byte	.LVL20
 4418 016d 0200     		.2byte	0x2
 4419 016f 74       		.byte	0x74
 4420 0170 00       		.sleb128 0
 4421 0171 00000000 		.4byte	0
 4422 0175 00000000 		.4byte	0
 4423              	.LLST3:
 4424 0179 52000000 		.4byte	.LVL5
 4425 017d 56000000 		.4byte	.LVL6
 4426 0181 0100     		.2byte	0x1
 4427 0183 50       		.byte	0x50
 4428 0184 56000000 		.4byte	.LVL6
 4429 0188 72000000 		.4byte	.LVL10
 4430 018c 0100     		.2byte	0x1
 4431 018e 55       		.byte	0x55
 4432 018f 84000000 		.4byte	.LVL14
 4433 0193 88000000 		.4byte	.LVL15
 4434 0197 0100     		.2byte	0x1
 4435 0199 50       		.byte	0x50
 4436 019a 88000000 		.4byte	.LVL15
 4437 019e A8000000 		.4byte	.LVL20
 4438 01a2 0100     		.2byte	0x1
 4439 01a4 55       		.byte	0x55
 4440 01a5 00000000 		.4byte	0
 4441 01a9 00000000 		.4byte	0
 4442              	.LLST4:
 4443 01ad 0A000000 		.4byte	.LVL1
 4444 01b1 14000000 		.4byte	.LVL2
ARM GAS  C:\Users\g\AppData\Local\Temp\ccjVf3bh.s 			page 140


 4445 01b5 0100     		.2byte	0x1
 4446 01b7 53       		.byte	0x53
 4447 01b8 BC000000 		.4byte	.LVL23
 4448 01bc C0000000 		.4byte	.LVL25
 4449 01c0 0100     		.2byte	0x1
 4450 01c2 53       		.byte	0x53
 4451 01c3 00000000 		.4byte	0
 4452 01c7 00000000 		.4byte	0
 4453              	.LLST5:
 4454 01cb A6000000 		.4byte	.LVL19
 4455 01cf A8000000 		.4byte	.LVL20
 4456 01d3 0200     		.2byte	0x2
 4457 01d5 30       		.byte	0x30
 4458 01d6 9F       		.byte	0x9f
 4459 01d7 B8000000 		.4byte	.LVL21
 4460 01db BC000000 		.4byte	.LVL23
 4461 01df 0200     		.2byte	0x2
 4462 01e1 37       		.byte	0x37
 4463 01e2 9F       		.byte	0x9f
 4464 01e3 D6000000 		.4byte	.LVL36
 4465 01e7 08010000 		.4byte	.LFE4
 4466 01eb 0100     		.2byte	0x1
 4467 01ed 50       		.byte	0x50
 4468 01ee 00000000 		.4byte	0
 4469 01f2 00000000 		.4byte	0
 4470              	.LLST6:
 4471 01f6 06000000 		.4byte	.LVL37
 4472 01fa 15000000 		.4byte	.LVL38-1
 4473 01fe 0100     		.2byte	0x1
 4474 0200 50       		.byte	0x50
 4475 0201 00000000 		.4byte	0
 4476 0205 00000000 		.4byte	0
 4477              	.LLST7:
 4478 0209 06000000 		.4byte	.LVL39
 4479 020d 25000000 		.4byte	.LVL40-1
 4480 0211 0100     		.2byte	0x1
 4481 0213 50       		.byte	0x50
 4482 0214 00000000 		.4byte	0
 4483 0218 00000000 		.4byte	0
 4484              	.LLST8:
 4485 021c 00000000 		.4byte	.LVL41
 4486 0220 0A000000 		.4byte	.LVL42
 4487 0224 0100     		.2byte	0x1
 4488 0226 50       		.byte	0x50
 4489 0227 0A000000 		.4byte	.LVL42
 4490 022b 14000000 		.4byte	.LVL44
 4491 022f 0100     		.2byte	0x1
 4492 0231 54       		.byte	0x54
 4493 0232 14000000 		.4byte	.LVL44
 4494 0236 24000000 		.4byte	.LFE9
 4495 023a 0400     		.2byte	0x4
 4496 023c F3       		.byte	0xf3
 4497 023d 01       		.uleb128 0x1
 4498 023e 50       		.byte	0x50
 4499 023f 9F       		.byte	0x9f
 4500 0240 00000000 		.4byte	0
 4501 0244 00000000 		.4byte	0
ARM GAS  C:\Users\g\AppData\Local\Temp\ccjVf3bh.s 			page 141


 4502              	.LLST9:
 4503 0248 00000000 		.4byte	.LVL45
 4504 024c 0C000000 		.4byte	.LVL46
 4505 0250 0100     		.2byte	0x1
 4506 0252 50       		.byte	0x50
 4507 0253 0C000000 		.4byte	.LVL46
 4508 0257 20000000 		.4byte	.LVL49
 4509 025b 0100     		.2byte	0x1
 4510 025d 54       		.byte	0x54
 4511 025e 20000000 		.4byte	.LVL49
 4512 0262 38000000 		.4byte	.LFE10
 4513 0266 0400     		.2byte	0x4
 4514 0268 F3       		.byte	0xf3
 4515 0269 01       		.uleb128 0x1
 4516 026a 50       		.byte	0x50
 4517 026b 9F       		.byte	0x9f
 4518 026c 00000000 		.4byte	0
 4519 0270 00000000 		.4byte	0
 4520              	.LLST10:
 4521 0274 00000000 		.4byte	.LVL45
 4522 0278 0F000000 		.4byte	.LVL47-1
 4523 027c 0100     		.2byte	0x1
 4524 027e 51       		.byte	0x51
 4525 027f 0F000000 		.4byte	.LVL47-1
 4526 0283 2A000000 		.4byte	.LVL51
 4527 0287 0100     		.2byte	0x1
 4528 0289 55       		.byte	0x55
 4529 028a 2A000000 		.4byte	.LVL51
 4530 028e 38000000 		.4byte	.LFE10
 4531 0292 0400     		.2byte	0x4
 4532 0294 F3       		.byte	0xf3
 4533 0295 01       		.uleb128 0x1
 4534 0296 51       		.byte	0x51
 4535 0297 9F       		.byte	0x9f
 4536 0298 00000000 		.4byte	0
 4537 029c 00000000 		.4byte	0
 4538              	.LLST11:
 4539 02a0 28000000 		.4byte	.LVL50
 4540 02a4 30000000 		.4byte	.LVL52
 4541 02a8 0100     		.2byte	0x1
 4542 02aa 53       		.byte	0x53
 4543 02ab 30000000 		.4byte	.LVL52
 4544 02af 32000000 		.4byte	.LVL53
 4545 02b3 0100     		.2byte	0x1
 4546 02b5 54       		.byte	0x54
 4547 02b6 00000000 		.4byte	0
 4548 02ba 00000000 		.4byte	0
 4549              	.LLST12:
 4550 02be 00000000 		.4byte	.LVL55
 4551 02c2 06000000 		.4byte	.LVL56
 4552 02c6 0100     		.2byte	0x1
 4553 02c8 50       		.byte	0x50
 4554 02c9 06000000 		.4byte	.LVL56
 4555 02cd 14000000 		.4byte	.LFE11
 4556 02d1 0400     		.2byte	0x4
 4557 02d3 F3       		.byte	0xf3
 4558 02d4 01       		.uleb128 0x1
ARM GAS  C:\Users\g\AppData\Local\Temp\ccjVf3bh.s 			page 142


 4559 02d5 50       		.byte	0x50
 4560 02d6 9F       		.byte	0x9f
 4561 02d7 00000000 		.4byte	0
 4562 02db 00000000 		.4byte	0
 4563              	.LLST13:
 4564 02df 00000000 		.4byte	.LVL57
 4565 02e3 0C000000 		.4byte	.LVL58
 4566 02e7 0100     		.2byte	0x1
 4567 02e9 50       		.byte	0x50
 4568 02ea 0C000000 		.4byte	.LVL58
 4569 02ee 20000000 		.4byte	.LVL61
 4570 02f2 0100     		.2byte	0x1
 4571 02f4 54       		.byte	0x54
 4572 02f5 20000000 		.4byte	.LVL61
 4573 02f9 38000000 		.4byte	.LFE12
 4574 02fd 0400     		.2byte	0x4
 4575 02ff F3       		.byte	0xf3
 4576 0300 01       		.uleb128 0x1
 4577 0301 50       		.byte	0x50
 4578 0302 9F       		.byte	0x9f
 4579 0303 00000000 		.4byte	0
 4580 0307 00000000 		.4byte	0
 4581              	.LLST14:
 4582 030b 00000000 		.4byte	.LVL57
 4583 030f 0F000000 		.4byte	.LVL59-1
 4584 0313 0100     		.2byte	0x1
 4585 0315 51       		.byte	0x51
 4586 0316 0F000000 		.4byte	.LVL59-1
 4587 031a 2A000000 		.4byte	.LVL63
 4588 031e 0100     		.2byte	0x1
 4589 0320 55       		.byte	0x55
 4590 0321 2A000000 		.4byte	.LVL63
 4591 0325 38000000 		.4byte	.LFE12
 4592 0329 0400     		.2byte	0x4
 4593 032b F3       		.byte	0xf3
 4594 032c 01       		.uleb128 0x1
 4595 032d 51       		.byte	0x51
 4596 032e 9F       		.byte	0x9f
 4597 032f 00000000 		.4byte	0
 4598 0333 00000000 		.4byte	0
 4599              	.LLST15:
 4600 0337 28000000 		.4byte	.LVL62
 4601 033b 2E000000 		.4byte	.LVL64
 4602 033f 0100     		.2byte	0x1
 4603 0341 53       		.byte	0x53
 4604 0342 2E000000 		.4byte	.LVL64
 4605 0346 30000000 		.4byte	.LVL65
 4606 034a 0100     		.2byte	0x1
 4607 034c 54       		.byte	0x54
 4608 034d 00000000 		.4byte	0
 4609 0351 00000000 		.4byte	0
 4610              	.LLST16:
 4611 0355 00000000 		.4byte	.LVL66
 4612 0359 0A000000 		.4byte	.LVL67
 4613 035d 0100     		.2byte	0x1
 4614 035f 50       		.byte	0x50
 4615 0360 0A000000 		.4byte	.LVL67
ARM GAS  C:\Users\g\AppData\Local\Temp\ccjVf3bh.s 			page 143


 4616 0364 14000000 		.4byte	.LVL69
 4617 0368 0100     		.2byte	0x1
 4618 036a 54       		.byte	0x54
 4619 036b 14000000 		.4byte	.LVL69
 4620 036f 24000000 		.4byte	.LFE13
 4621 0373 0400     		.2byte	0x4
 4622 0375 F3       		.byte	0xf3
 4623 0376 01       		.uleb128 0x1
 4624 0377 50       		.byte	0x50
 4625 0378 9F       		.byte	0x9f
 4626 0379 00000000 		.4byte	0
 4627 037d 00000000 		.4byte	0
 4628              	.LLST17:
 4629 0381 00000000 		.4byte	.LVL70
 4630 0385 07000000 		.4byte	.LVL71-1
 4631 0389 0100     		.2byte	0x1
 4632 038b 50       		.byte	0x50
 4633 038c 07000000 		.4byte	.LVL71-1
 4634 0390 3A000000 		.4byte	.LVL75
 4635 0394 0100     		.2byte	0x1
 4636 0396 54       		.byte	0x54
 4637 0397 3A000000 		.4byte	.LVL75
 4638 039b 40000000 		.4byte	.LFE14
 4639 039f 0400     		.2byte	0x4
 4640 03a1 F3       		.byte	0xf3
 4641 03a2 01       		.uleb128 0x1
 4642 03a3 50       		.byte	0x50
 4643 03a4 9F       		.byte	0x9f
 4644 03a5 00000000 		.4byte	0
 4645 03a9 00000000 		.4byte	0
 4646              	.LLST18:
 4647 03ad 00000000 		.4byte	.LVL76
 4648 03b1 07000000 		.4byte	.LVL77-1
 4649 03b5 0100     		.2byte	0x1
 4650 03b7 50       		.byte	0x50
 4651 03b8 07000000 		.4byte	.LVL77-1
 4652 03bc 3E000000 		.4byte	.LVL81
 4653 03c0 0100     		.2byte	0x1
 4654 03c2 54       		.byte	0x54
 4655 03c3 3E000000 		.4byte	.LVL81
 4656 03c7 44000000 		.4byte	.LFE15
 4657 03cb 0400     		.2byte	0x4
 4658 03cd F3       		.byte	0xf3
 4659 03ce 01       		.uleb128 0x1
 4660 03cf 50       		.byte	0x50
 4661 03d0 9F       		.byte	0x9f
 4662 03d1 00000000 		.4byte	0
 4663 03d5 00000000 		.4byte	0
 4664              	.LLST19:
 4665 03d9 00000000 		.4byte	.LVL82
 4666 03dd 06000000 		.4byte	.LVL83
 4667 03e1 0100     		.2byte	0x1
 4668 03e3 50       		.byte	0x50
 4669 03e4 06000000 		.4byte	.LVL83
 4670 03e8 28000000 		.4byte	.LVL90
 4671 03ec 0100     		.2byte	0x1
 4672 03ee 55       		.byte	0x55
ARM GAS  C:\Users\g\AppData\Local\Temp\ccjVf3bh.s 			page 144


 4673 03ef 28000000 		.4byte	.LVL90
 4674 03f3 34000000 		.4byte	.LFE16
 4675 03f7 0400     		.2byte	0x4
 4676 03f9 F3       		.byte	0xf3
 4677 03fa 01       		.uleb128 0x1
 4678 03fb 50       		.byte	0x50
 4679 03fc 9F       		.byte	0x9f
 4680 03fd 00000000 		.4byte	0
 4681 0401 00000000 		.4byte	0
 4682              	.LLST20:
 4683 0405 22000000 		.4byte	.LVL88
 4684 0409 26000000 		.4byte	.LVL89
 4685 040d 0100     		.2byte	0x1
 4686 040f 51       		.byte	0x51
 4687 0410 26000000 		.4byte	.LVL89
 4688 0414 28000000 		.4byte	.LVL90
 4689 0418 0100     		.2byte	0x1
 4690 041a 53       		.byte	0x53
 4691 041b 28000000 		.4byte	.LVL90
 4692 041f 2A000000 		.4byte	.LVL91
 4693 0423 0100     		.2byte	0x1
 4694 0425 55       		.byte	0x55
 4695 0426 00000000 		.4byte	0
 4696 042a 00000000 		.4byte	0
 4697              	.LLST21:
 4698 042e 00000000 		.4byte	.LVL92
 4699 0432 0C000000 		.4byte	.LVL93
 4700 0436 0100     		.2byte	0x1
 4701 0438 50       		.byte	0x50
 4702 0439 0C000000 		.4byte	.LVL93
 4703 043d 1C000000 		.4byte	.LVL97
 4704 0441 0100     		.2byte	0x1
 4705 0443 54       		.byte	0x54
 4706 0444 1C000000 		.4byte	.LVL97
 4707 0448 3C000000 		.4byte	.LFE18
 4708 044c 0400     		.2byte	0x4
 4709 044e F3       		.byte	0xf3
 4710 044f 01       		.uleb128 0x1
 4711 0450 50       		.byte	0x50
 4712 0451 9F       		.byte	0x9f
 4713 0452 00000000 		.4byte	0
 4714 0456 00000000 		.4byte	0
 4715              	.LLST22:
 4716 045a 00000000 		.4byte	.LVL92
 4717 045e 0F000000 		.4byte	.LVL94-1
 4718 0462 0100     		.2byte	0x1
 4719 0464 51       		.byte	0x51
 4720 0465 0F000000 		.4byte	.LVL94-1
 4721 0469 32000000 		.4byte	.LVL102
 4722 046d 0100     		.2byte	0x1
 4723 046f 55       		.byte	0x55
 4724 0470 32000000 		.4byte	.LVL102
 4725 0474 3C000000 		.4byte	.LFE18
 4726 0478 0400     		.2byte	0x4
 4727 047a F3       		.byte	0xf3
 4728 047b 01       		.uleb128 0x1
 4729 047c 51       		.byte	0x51
ARM GAS  C:\Users\g\AppData\Local\Temp\ccjVf3bh.s 			page 145


 4730 047d 9F       		.byte	0x9f
 4731 047e 00000000 		.4byte	0
 4732 0482 00000000 		.4byte	0
 4733              	.LLST23:
 4734 0486 1A000000 		.4byte	.LVL96
 4735 048a 22000000 		.4byte	.LVL98
 4736 048e 0100     		.2byte	0x1
 4737 0490 50       		.byte	0x50
 4738 0491 24000000 		.4byte	.LVL99
 4739 0495 26000000 		.4byte	.LVL100
 4740 0499 0100     		.2byte	0x1
 4741 049b 50       		.byte	0x50
 4742 049c 26000000 		.4byte	.LVL100
 4743 04a0 31000000 		.4byte	.LVL101-1
 4744 04a4 0100     		.2byte	0x1
 4745 04a6 53       		.byte	0x53
 4746 04a7 00000000 		.4byte	0
 4747 04ab 00000000 		.4byte	0
 4748              	.LLST24:
 4749 04af 00000000 		.4byte	.LVL103
 4750 04b3 06000000 		.4byte	.LVL104
 4751 04b7 0100     		.2byte	0x1
 4752 04b9 50       		.byte	0x50
 4753 04ba 06000000 		.4byte	.LVL104
 4754 04be 1A000000 		.4byte	.LVL108
 4755 04c2 0100     		.2byte	0x1
 4756 04c4 54       		.byte	0x54
 4757 04c5 1A000000 		.4byte	.LVL108
 4758 04c9 2C000000 		.4byte	.LFE19
 4759 04cd 0400     		.2byte	0x4
 4760 04cf F3       		.byte	0xf3
 4761 04d0 01       		.uleb128 0x1
 4762 04d1 50       		.byte	0x50
 4763 04d2 9F       		.byte	0x9f
 4764 04d3 00000000 		.4byte	0
 4765 04d7 00000000 		.4byte	0
 4766              	.LLST25:
 4767 04db 12000000 		.4byte	.LVL106
 4768 04df 16000000 		.4byte	.LVL107
 4769 04e3 0100     		.2byte	0x1
 4770 04e5 51       		.byte	0x51
 4771 04e6 16000000 		.4byte	.LVL107
 4772 04ea 1E000000 		.4byte	.LVL109
 4773 04ee 0100     		.2byte	0x1
 4774 04f0 53       		.byte	0x53
 4775 04f1 1E000000 		.4byte	.LVL109
 4776 04f5 20000000 		.4byte	.LVL110
 4777 04f9 0100     		.2byte	0x1
 4778 04fb 54       		.byte	0x54
 4779 04fc 00000000 		.4byte	0
 4780 0500 00000000 		.4byte	0
 4781              	.LLST26:
 4782 0504 00000000 		.4byte	.LVL111
 4783 0508 0A000000 		.4byte	.LVL112
 4784 050c 0100     		.2byte	0x1
 4785 050e 50       		.byte	0x50
 4786 050f 0A000000 		.4byte	.LVL112
ARM GAS  C:\Users\g\AppData\Local\Temp\ccjVf3bh.s 			page 146


 4787 0513 14000000 		.4byte	.LVL114
 4788 0517 0100     		.2byte	0x1
 4789 0519 54       		.byte	0x54
 4790 051a 14000000 		.4byte	.LVL114
 4791 051e 20000000 		.4byte	.LFE21
 4792 0522 0400     		.2byte	0x4
 4793 0524 F3       		.byte	0xf3
 4794 0525 01       		.uleb128 0x1
 4795 0526 50       		.byte	0x50
 4796 0527 9F       		.byte	0x9f
 4797 0528 00000000 		.4byte	0
 4798 052c 00000000 		.4byte	0
 4799              	.LLST27:
 4800 0530 00000000 		.4byte	.LVL115
 4801 0534 14000000 		.4byte	.LVL117
 4802 0538 0100     		.2byte	0x1
 4803 053a 50       		.byte	0x50
 4804 053b 14000000 		.4byte	.LVL117
 4805 053f 1A000000 		.4byte	.LVL119
 4806 0543 0400     		.2byte	0x4
 4807 0545 F3       		.byte	0xf3
 4808 0546 01       		.uleb128 0x1
 4809 0547 50       		.byte	0x50
 4810 0548 9F       		.byte	0x9f
 4811 0549 1A000000 		.4byte	.LVL119
 4812 054d 1E000000 		.4byte	.LVL120
 4813 0551 0100     		.2byte	0x1
 4814 0553 50       		.byte	0x50
 4815 0554 1E000000 		.4byte	.LVL120
 4816 0558 22000000 		.4byte	.LVL122
 4817 055c 0400     		.2byte	0x4
 4818 055e F3       		.byte	0xf3
 4819 055f 01       		.uleb128 0x1
 4820 0560 50       		.byte	0x50
 4821 0561 9F       		.byte	0x9f
 4822 0562 22000000 		.4byte	.LVL122
 4823 0566 26000000 		.4byte	.LVL123
 4824 056a 0100     		.2byte	0x1
 4825 056c 50       		.byte	0x50
 4826 056d 26000000 		.4byte	.LVL123
 4827 0571 28000000 		.4byte	.LVL124
 4828 0575 0400     		.2byte	0x4
 4829 0577 F3       		.byte	0xf3
 4830 0578 01       		.uleb128 0x1
 4831 0579 50       		.byte	0x50
 4832 057a 9F       		.byte	0x9f
 4833 057b 28000000 		.4byte	.LVL124
 4834 057f 2A000000 		.4byte	.LVL125
 4835 0583 0100     		.2byte	0x1
 4836 0585 50       		.byte	0x50
 4837 0586 2A000000 		.4byte	.LVL125
 4838 058a 3C000000 		.4byte	.LFE22
 4839 058e 0400     		.2byte	0x4
 4840 0590 F3       		.byte	0xf3
 4841 0591 01       		.uleb128 0x1
 4842 0592 50       		.byte	0x50
 4843 0593 9F       		.byte	0x9f
ARM GAS  C:\Users\g\AppData\Local\Temp\ccjVf3bh.s 			page 147


 4844 0594 00000000 		.4byte	0
 4845 0598 00000000 		.4byte	0
 4846              	.LLST28:
 4847 059c 02000000 		.4byte	.LVL116
 4848 05a0 18000000 		.4byte	.LVL118
 4849 05a4 0200     		.2byte	0x2
 4850 05a6 30       		.byte	0x30
 4851 05a7 9F       		.byte	0x9f
 4852 05a8 18000000 		.4byte	.LVL118
 4853 05ac 1A000000 		.4byte	.LVL119
 4854 05b0 0100     		.2byte	0x1
 4855 05b2 50       		.byte	0x50
 4856 05b3 1A000000 		.4byte	.LVL119
 4857 05b7 20000000 		.4byte	.LVL121
 4858 05bb 0200     		.2byte	0x2
 4859 05bd 30       		.byte	0x30
 4860 05be 9F       		.byte	0x9f
 4861 05bf 20000000 		.4byte	.LVL121
 4862 05c3 22000000 		.4byte	.LVL122
 4863 05c7 0100     		.2byte	0x1
 4864 05c9 50       		.byte	0x50
 4865 05ca 22000000 		.4byte	.LVL122
 4866 05ce 26000000 		.4byte	.LVL123
 4867 05d2 0200     		.2byte	0x2
 4868 05d4 30       		.byte	0x30
 4869 05d5 9F       		.byte	0x9f
 4870 05d6 26000000 		.4byte	.LVL123
 4871 05da 28000000 		.4byte	.LVL124
 4872 05de 0100     		.2byte	0x1
 4873 05e0 50       		.byte	0x50
 4874 05e1 28000000 		.4byte	.LVL124
 4875 05e5 30000000 		.4byte	.LVL127
 4876 05e9 0200     		.2byte	0x2
 4877 05eb 30       		.byte	0x30
 4878 05ec 9F       		.byte	0x9f
 4879 05ed 30000000 		.4byte	.LVL127
 4880 05f1 3C000000 		.4byte	.LFE22
 4881 05f5 0100     		.2byte	0x1
 4882 05f7 50       		.byte	0x50
 4883 05f8 00000000 		.4byte	0
 4884 05fc 00000000 		.4byte	0
 4885              	.LLST29:
 4886 0600 62000000 		.4byte	.LVL135
 4887 0604 6E000000 		.4byte	.LVL137
 4888 0608 0100     		.2byte	0x1
 4889 060a 54       		.byte	0x54
 4890 060b 00000000 		.4byte	0
 4891 060f 00000000 		.4byte	0
 4892              	.LLST30:
 4893 0613 18000000 		.4byte	.LVL141
 4894 0617 30000000 		.4byte	.LVL144
 4895 061b 0100     		.2byte	0x1
 4896 061d 54       		.byte	0x54
 4897 061e 00000000 		.4byte	0
 4898 0622 00000000 		.4byte	0
 4899              	.LLST31:
 4900 0626 00000000 		.4byte	.LVL145
ARM GAS  C:\Users\g\AppData\Local\Temp\ccjVf3bh.s 			page 148


 4901 062a 07000000 		.4byte	.LVL146-1
 4902 062e 0100     		.2byte	0x1
 4903 0630 50       		.byte	0x50
 4904 0631 07000000 		.4byte	.LVL146-1
 4905 0635 22000000 		.4byte	.LVL153
 4906 0639 0100     		.2byte	0x1
 4907 063b 56       		.byte	0x56
 4908 063c 22000000 		.4byte	.LVL153
 4909 0640 30000000 		.4byte	.LVL154
 4910 0644 0100     		.2byte	0x1
 4911 0646 53       		.byte	0x53
 4912 0647 30000000 		.4byte	.LVL154
 4913 064b 3E000000 		.4byte	.LVL159
 4914 064f 0900     		.2byte	0x9
 4915 0651 76       		.byte	0x76
 4916 0652 00       		.sleb128 0
 4917 0653 0C       		.byte	0xc
 4918 0654 04040400 		.4byte	0x40404
 4919 0658 1A       		.byte	0x1a
 4920 0659 9F       		.byte	0x9f
 4921 065a 3E000000 		.4byte	.LVL159
 4922 065e 4C000000 		.4byte	.LFE24
 4923 0662 0A00     		.2byte	0xa
 4924 0664 F3       		.byte	0xf3
 4925 0665 01       		.uleb128 0x1
 4926 0666 50       		.byte	0x50
 4927 0667 0C       		.byte	0xc
 4928 0668 04040400 		.4byte	0x40404
 4929 066c 1A       		.byte	0x1a
 4930 066d 9F       		.byte	0x9f
 4931 066e 00000000 		.4byte	0
 4932 0672 00000000 		.4byte	0
 4933              	.LLST32:
 4934 0676 0A000000 		.4byte	.LVL147
 4935 067a 3E000000 		.4byte	.LVL157
 4936 067e 0100     		.2byte	0x1
 4937 0680 54       		.byte	0x54
 4938 0681 00000000 		.4byte	0
 4939 0685 00000000 		.4byte	0
 4940              	.LLST33:
 4941 0689 12000000 		.4byte	.LVL149
 4942 068d 1A000000 		.4byte	.LVL151
 4943 0691 0200     		.2byte	0x2
 4944 0693 31       		.byte	0x31
 4945 0694 9F       		.byte	0x9f
 4946 0695 1C000000 		.4byte	.LVL152
 4947 0699 3E000000 		.4byte	.LVL158
 4948 069d 0100     		.2byte	0x1
 4949 069f 55       		.byte	0x55
 4950 06a0 00000000 		.4byte	0
 4951 06a4 00000000 		.4byte	0
 4952              	.LLST34:
 4953 06a8 00000000 		.4byte	.LVL160
 4954 06ac 08000000 		.4byte	.LVL161
 4955 06b0 0100     		.2byte	0x1
 4956 06b2 50       		.byte	0x50
 4957 06b3 08000000 		.4byte	.LVL161
ARM GAS  C:\Users\g\AppData\Local\Temp\ccjVf3bh.s 			page 149


 4958 06b7 20000000 		.4byte	.LFE25
 4959 06bb 0400     		.2byte	0x4
 4960 06bd F3       		.byte	0xf3
 4961 06be 01       		.uleb128 0x1
 4962 06bf 50       		.byte	0x50
 4963 06c0 9F       		.byte	0x9f
 4964 06c1 00000000 		.4byte	0
 4965 06c5 00000000 		.4byte	0
 4966              	.LLST35:
 4967 06c9 00000000 		.4byte	.LVL162
 4968 06cd 08000000 		.4byte	.LVL164
 4969 06d1 0100     		.2byte	0x1
 4970 06d3 50       		.byte	0x50
 4971 06d4 08000000 		.4byte	.LVL164
 4972 06d8 12000000 		.4byte	.LVL166
 4973 06dc 0400     		.2byte	0x4
 4974 06de F3       		.byte	0xf3
 4975 06df 01       		.uleb128 0x1
 4976 06e0 50       		.byte	0x50
 4977 06e1 9F       		.byte	0x9f
 4978 06e2 12000000 		.4byte	.LVL166
 4979 06e6 14000000 		.4byte	.LVL167
 4980 06ea 0100     		.2byte	0x1
 4981 06ec 50       		.byte	0x50
 4982 06ed 14000000 		.4byte	.LVL167
 4983 06f1 20000000 		.4byte	.LFE26
 4984 06f5 0400     		.2byte	0x4
 4985 06f7 F3       		.byte	0xf3
 4986 06f8 01       		.uleb128 0x1
 4987 06f9 50       		.byte	0x50
 4988 06fa 9F       		.byte	0x9f
 4989 06fb 00000000 		.4byte	0
 4990 06ff 00000000 		.4byte	0
 4991              	.LLST36:
 4992 0703 00000000 		.4byte	.LVL162
 4993 0707 17000000 		.4byte	.LVL168-1
 4994 070b 0100     		.2byte	0x1
 4995 070d 51       		.byte	0x51
 4996 070e 17000000 		.4byte	.LVL168-1
 4997 0712 20000000 		.4byte	.LFE26
 4998 0716 0400     		.2byte	0x4
 4999 0718 F3       		.byte	0xf3
 5000 0719 01       		.uleb128 0x1
 5001 071a 51       		.byte	0x51
 5002 071b 9F       		.byte	0x9f
 5003 071c 00000000 		.4byte	0
 5004 0720 00000000 		.4byte	0
 5005              	.LLST37:
 5006 0724 02000000 		.4byte	.LVL163
 5007 0728 0E000000 		.4byte	.LVL165
 5008 072c 0200     		.2byte	0x2
 5009 072e 30       		.byte	0x30
 5010 072f 9F       		.byte	0x9f
 5011 0730 0E000000 		.4byte	.LVL165
 5012 0734 12000000 		.4byte	.LVL166
 5013 0738 0100     		.2byte	0x1
 5014 073a 50       		.byte	0x50
ARM GAS  C:\Users\g\AppData\Local\Temp\ccjVf3bh.s 			page 150


 5015 073b 12000000 		.4byte	.LVL166
 5016 073f 1A000000 		.4byte	.LVL169
 5017 0743 0200     		.2byte	0x2
 5018 0745 30       		.byte	0x30
 5019 0746 9F       		.byte	0x9f
 5020 0747 1A000000 		.4byte	.LVL169
 5021 074b 20000000 		.4byte	.LFE26
 5022 074f 0100     		.2byte	0x1
 5023 0751 50       		.byte	0x50
 5024 0752 00000000 		.4byte	0
 5025 0756 00000000 		.4byte	0
 5026              	.LLST38:
 5027 075a 00000000 		.4byte	.LVL170
 5028 075e 08000000 		.4byte	.LVL172
 5029 0762 0100     		.2byte	0x1
 5030 0764 50       		.byte	0x50
 5031 0765 08000000 		.4byte	.LVL172
 5032 0769 10000000 		.4byte	.LVL174
 5033 076d 0400     		.2byte	0x4
 5034 076f F3       		.byte	0xf3
 5035 0770 01       		.uleb128 0x1
 5036 0771 50       		.byte	0x50
 5037 0772 9F       		.byte	0x9f
 5038 0773 10000000 		.4byte	.LVL174
 5039 0777 12000000 		.4byte	.LVL175
 5040 077b 0100     		.2byte	0x1
 5041 077d 50       		.byte	0x50
 5042 077e 12000000 		.4byte	.LVL175
 5043 0782 20000000 		.4byte	.LFE27
 5044 0786 0400     		.2byte	0x4
 5045 0788 F3       		.byte	0xf3
 5046 0789 01       		.uleb128 0x1
 5047 078a 50       		.byte	0x50
 5048 078b 9F       		.byte	0x9f
 5049 078c 00000000 		.4byte	0
 5050 0790 00000000 		.4byte	0
 5051              	.LLST39:
 5052 0794 02000000 		.4byte	.LVL171
 5053 0798 0E000000 		.4byte	.LVL173
 5054 079c 0200     		.2byte	0x2
 5055 079e 30       		.byte	0x30
 5056 079f 9F       		.byte	0x9f
 5057 07a0 0E000000 		.4byte	.LVL173
 5058 07a4 10000000 		.4byte	.LVL174
 5059 07a8 0100     		.2byte	0x1
 5060 07aa 50       		.byte	0x50
 5061 07ab 10000000 		.4byte	.LVL174
 5062 07af 18000000 		.4byte	.LVL177
 5063 07b3 0200     		.2byte	0x2
 5064 07b5 30       		.byte	0x30
 5065 07b6 9F       		.byte	0x9f
 5066 07b7 18000000 		.4byte	.LVL177
 5067 07bb 20000000 		.4byte	.LFE27
 5068 07bf 0100     		.2byte	0x1
 5069 07c1 50       		.byte	0x50
 5070 07c2 00000000 		.4byte	0
 5071 07c6 00000000 		.4byte	0
ARM GAS  C:\Users\g\AppData\Local\Temp\ccjVf3bh.s 			page 151


 5072              	.LLST40:
 5073 07ca 00000000 		.4byte	.LVL178
 5074 07ce 08000000 		.4byte	.LVL179
 5075 07d2 0100     		.2byte	0x1
 5076 07d4 50       		.byte	0x50
 5077 07d5 08000000 		.4byte	.LVL179
 5078 07d9 1E000000 		.4byte	.LVL180
 5079 07dd 0400     		.2byte	0x4
 5080 07df F3       		.byte	0xf3
 5081 07e0 01       		.uleb128 0x1
 5082 07e1 50       		.byte	0x50
 5083 07e2 9F       		.byte	0x9f
 5084 07e3 1E000000 		.4byte	.LVL180
 5085 07e7 20000000 		.4byte	.LVL181
 5086 07eb 0100     		.2byte	0x1
 5087 07ed 50       		.byte	0x50
 5088 07ee 20000000 		.4byte	.LVL181
 5089 07f2 34000000 		.4byte	.LFE28
 5090 07f6 0400     		.2byte	0x4
 5091 07f8 F3       		.byte	0xf3
 5092 07f9 01       		.uleb128 0x1
 5093 07fa 50       		.byte	0x50
 5094 07fb 9F       		.byte	0x9f
 5095 07fc 00000000 		.4byte	0
 5096 0800 00000000 		.4byte	0
 5097              	.LLST41:
 5098 0804 00000000 		.4byte	.LVL183
 5099 0808 08000000 		.4byte	.LVL184
 5100 080c 0100     		.2byte	0x1
 5101 080e 50       		.byte	0x50
 5102 080f 08000000 		.4byte	.LVL184
 5103 0813 16000000 		.4byte	.LVL185
 5104 0817 0400     		.2byte	0x4
 5105 0819 F3       		.byte	0xf3
 5106 081a 01       		.uleb128 0x1
 5107 081b 50       		.byte	0x50
 5108 081c 9F       		.byte	0x9f
 5109 081d 16000000 		.4byte	.LVL185
 5110 0821 18000000 		.4byte	.LVL186
 5111 0825 0100     		.2byte	0x1
 5112 0827 50       		.byte	0x50
 5113 0828 18000000 		.4byte	.LVL186
 5114 082c 28000000 		.4byte	.LFE29
 5115 0830 0400     		.2byte	0x4
 5116 0832 F3       		.byte	0xf3
 5117 0833 01       		.uleb128 0x1
 5118 0834 50       		.byte	0x50
 5119 0835 9F       		.byte	0x9f
 5120 0836 00000000 		.4byte	0
 5121 083a 00000000 		.4byte	0
 5122              	.LLST42:
 5123 083e 00000000 		.4byte	.LVL194
 5124 0842 09000000 		.4byte	.LVL195-1
 5125 0846 0100     		.2byte	0x1
 5126 0848 50       		.byte	0x50
 5127 0849 09000000 		.4byte	.LVL195-1
 5128 084d 2E000000 		.4byte	.LVL200
ARM GAS  C:\Users\g\AppData\Local\Temp\ccjVf3bh.s 			page 152


 5129 0851 0100     		.2byte	0x1
 5130 0853 54       		.byte	0x54
 5131 0854 2E000000 		.4byte	.LVL200
 5132 0858 35000000 		.4byte	.LVL201-1
 5133 085c 0100     		.2byte	0x1
 5134 085e 50       		.byte	0x50
 5135 085f 35000000 		.4byte	.LVL201-1
 5136 0863 5E000000 		.4byte	.LVL206
 5137 0867 0100     		.2byte	0x1
 5138 0869 54       		.byte	0x54
 5139 086a 5E000000 		.4byte	.LVL206
 5140 086e 60000000 		.4byte	.LFE31
 5141 0872 0400     		.2byte	0x4
 5142 0874 F3       		.byte	0xf3
 5143 0875 01       		.uleb128 0x1
 5144 0876 50       		.byte	0x50
 5145 0877 9F       		.byte	0x9f
 5146 0878 00000000 		.4byte	0
 5147 087c 00000000 		.4byte	0
 5148              	.LLST43:
 5149 0880 00000000 		.4byte	.LVL207
 5150 0884 0F000000 		.4byte	.LVL208-1
 5151 0888 0100     		.2byte	0x1
 5152 088a 50       		.byte	0x50
 5153 088b 0F000000 		.4byte	.LVL208-1
 5154 088f 5A000000 		.4byte	.LVL218
 5155 0893 0100     		.2byte	0x1
 5156 0895 54       		.byte	0x54
 5157 0896 5A000000 		.4byte	.LVL218
 5158 089a 6C000000 		.4byte	.LFE35
 5159 089e 0400     		.2byte	0x4
 5160 08a0 F3       		.byte	0xf3
 5161 08a1 01       		.uleb128 0x1
 5162 08a2 50       		.byte	0x50
 5163 08a3 9F       		.byte	0x9f
 5164 08a4 00000000 		.4byte	0
 5165 08a8 00000000 		.4byte	0
 5166              	.LLST44:
 5167 08ac 00000000 		.4byte	.LVL207
 5168 08b0 0F000000 		.4byte	.LVL208-1
 5169 08b4 0100     		.2byte	0x1
 5170 08b6 51       		.byte	0x51
 5171 08b7 0F000000 		.4byte	.LVL208-1
 5172 08bb 6C000000 		.4byte	.LFE35
 5173 08bf 0400     		.2byte	0x4
 5174 08c1 F3       		.byte	0xf3
 5175 08c2 01       		.uleb128 0x1
 5176 08c3 51       		.byte	0x51
 5177 08c4 9F       		.byte	0x9f
 5178 08c5 00000000 		.4byte	0
 5179 08c9 00000000 		.4byte	0
 5180              	.LLST45:
 5181 08cd 00000000 		.4byte	.LVL207
 5182 08d1 0F000000 		.4byte	.LVL208-1
 5183 08d5 0100     		.2byte	0x1
 5184 08d7 52       		.byte	0x52
 5185 08d8 0F000000 		.4byte	.LVL208-1
ARM GAS  C:\Users\g\AppData\Local\Temp\ccjVf3bh.s 			page 153


 5186 08dc 5A000000 		.4byte	.LVL219
 5187 08e0 0100     		.2byte	0x1
 5188 08e2 55       		.byte	0x55
 5189 08e3 5A000000 		.4byte	.LVL219
 5190 08e7 6C000000 		.4byte	.LFE35
 5191 08eb 0400     		.2byte	0x4
 5192 08ed F3       		.byte	0xf3
 5193 08ee 01       		.uleb128 0x1
 5194 08ef 52       		.byte	0x52
 5195 08f0 9F       		.byte	0x9f
 5196 08f1 00000000 		.4byte	0
 5197 08f5 00000000 		.4byte	0
 5198              	.LLST46:
 5199 08f9 24000000 		.4byte	.LVL209
 5200 08fd 2A000000 		.4byte	.LVL210
 5201 0901 0100     		.2byte	0x1
 5202 0903 50       		.byte	0x50
 5203 0904 2E000000 		.4byte	.LVL211
 5204 0908 34000000 		.4byte	.LVL212
 5205 090c 0100     		.2byte	0x1
 5206 090e 50       		.byte	0x50
 5207 090f 3A000000 		.4byte	.LVL213
 5208 0913 50000000 		.4byte	.LVL215
 5209 0917 0100     		.2byte	0x1
 5210 0919 56       		.byte	0x56
 5211 091a 50000000 		.4byte	.LVL215
 5212 091e 54000000 		.4byte	.LVL216
 5213 0922 0A00     		.2byte	0xa
 5214 0924 74       		.byte	0x74
 5215 0925 00       		.sleb128 0
 5216 0926 32       		.byte	0x32
 5217 0927 24       		.byte	0x24
 5218 0928 03       		.byte	0x3
 5219 0929 00000000 		.4byte	.LANCHOR1
 5220 092d 22       		.byte	0x22
 5221 092e 00000000 		.4byte	0
 5222 0932 00000000 		.4byte	0
 5223              	.LLST47:
 5224 0936 00000000 		.4byte	.LVL220
 5225 093a 0F000000 		.4byte	.LVL221-1
 5226 093e 0100     		.2byte	0x1
 5227 0940 50       		.byte	0x50
 5228 0941 0F000000 		.4byte	.LVL221-1
 5229 0945 36000000 		.4byte	.LVL227
 5230 0949 0100     		.2byte	0x1
 5231 094b 54       		.byte	0x54
 5232 094c 36000000 		.4byte	.LVL227
 5233 0950 3C000000 		.4byte	.LFE34
 5234 0954 0400     		.2byte	0x4
 5235 0956 F3       		.byte	0xf3
 5236 0957 01       		.uleb128 0x1
 5237 0958 50       		.byte	0x50
 5238 0959 9F       		.byte	0x9f
 5239 095a 00000000 		.4byte	0
 5240 095e 00000000 		.4byte	0
 5241              	.LLST48:
 5242 0962 00000000 		.4byte	.LVL220
ARM GAS  C:\Users\g\AppData\Local\Temp\ccjVf3bh.s 			page 154


 5243 0966 0F000000 		.4byte	.LVL221-1
 5244 096a 0100     		.2byte	0x1
 5245 096c 51       		.byte	0x51
 5246 096d 0F000000 		.4byte	.LVL221-1
 5247 0971 3C000000 		.4byte	.LFE34
 5248 0975 0400     		.2byte	0x4
 5249 0977 F3       		.byte	0xf3
 5250 0978 01       		.uleb128 0x1
 5251 0979 51       		.byte	0x51
 5252 097a 9F       		.byte	0x9f
 5253 097b 00000000 		.4byte	0
 5254 097f 00000000 		.4byte	0
 5255              	.LLST49:
 5256 0983 00000000 		.4byte	.LVL220
 5257 0987 0F000000 		.4byte	.LVL221-1
 5258 098b 0100     		.2byte	0x1
 5259 098d 52       		.byte	0x52
 5260 098e 0F000000 		.4byte	.LVL221-1
 5261 0992 36000000 		.4byte	.LVL228
 5262 0996 0100     		.2byte	0x1
 5263 0998 55       		.byte	0x55
 5264 0999 36000000 		.4byte	.LVL228
 5265 099d 3C000000 		.4byte	.LFE34
 5266 09a1 0400     		.2byte	0x4
 5267 09a3 F3       		.byte	0xf3
 5268 09a4 01       		.uleb128 0x1
 5269 09a5 52       		.byte	0x52
 5270 09a6 9F       		.byte	0x9f
 5271 09a7 00000000 		.4byte	0
 5272 09ab 00000000 		.4byte	0
 5273              	.LLST50:
 5274 09af 20000000 		.4byte	.LVL222
 5275 09b3 28000000 		.4byte	.LVL224
 5276 09b7 0100     		.2byte	0x1
 5277 09b9 50       		.byte	0x50
 5278 09ba 00000000 		.4byte	0
 5279 09be 00000000 		.4byte	0
 5280              	.LLST51:
 5281 09c2 26000000 		.4byte	.LVL223
 5282 09c6 2D000000 		.4byte	.LVL225-1
 5283 09ca 0100     		.2byte	0x1
 5284 09cc 52       		.byte	0x52
 5285 09cd 00000000 		.4byte	0
 5286 09d1 00000000 		.4byte	0
 5287              		.section	.debug_aranges,"",%progbits
 5288 0000 34010000 		.4byte	0x134
 5289 0004 0200     		.2byte	0x2
 5290 0006 00000000 		.4byte	.Ldebug_info0
 5291 000a 04       		.byte	0x4
 5292 000b 00       		.byte	0
 5293 000c 0000     		.2byte	0
 5294 000e 0000     		.2byte	0
 5295 0010 00000000 		.4byte	.LFB5
 5296 0014 14000000 		.4byte	.LFE5-.LFB5
 5297 0018 00000000 		.4byte	.LFB7
 5298 001c 14000000 		.4byte	.LFE7-.LFB7
 5299 0020 00000000 		.4byte	.LFB0
ARM GAS  C:\Users\g\AppData\Local\Temp\ccjVf3bh.s 			page 155


 5300 0024 14000000 		.4byte	.LFE0-.LFB0
 5301 0028 00000000 		.4byte	.LFB2
 5302 002c 34000000 		.4byte	.LFE2-.LFB2
 5303 0030 00000000 		.4byte	.LFB3
 5304 0034 14000000 		.4byte	.LFE3-.LFB3
 5305 0038 00000000 		.4byte	.LFB4
 5306 003c 08010000 		.4byte	.LFE4-.LFB4
 5307 0040 00000000 		.4byte	.LFB6
 5308 0044 1C000000 		.4byte	.LFE6-.LFB6
 5309 0048 00000000 		.4byte	.LFB8
 5310 004c 30000000 		.4byte	.LFE8-.LFB8
 5311 0050 00000000 		.4byte	.LFB9
 5312 0054 24000000 		.4byte	.LFE9-.LFB9
 5313 0058 00000000 		.4byte	.LFB10
 5314 005c 38000000 		.4byte	.LFE10-.LFB10
 5315 0060 00000000 		.4byte	.LFB33
 5316 0064 2C000000 		.4byte	.LFE33-.LFB33
 5317 0068 00000000 		.4byte	.LFB11
 5318 006c 14000000 		.4byte	.LFE11-.LFB11
 5319 0070 00000000 		.4byte	.LFB12
 5320 0074 38000000 		.4byte	.LFE12-.LFB12
 5321 0078 00000000 		.4byte	.LFB13
 5322 007c 24000000 		.4byte	.LFE13-.LFB13
 5323 0080 00000000 		.4byte	.LFB14
 5324 0084 40000000 		.4byte	.LFE14-.LFB14
 5325 0088 00000000 		.4byte	.LFB15
 5326 008c 44000000 		.4byte	.LFE15-.LFB15
 5327 0090 00000000 		.4byte	.LFB16
 5328 0094 34000000 		.4byte	.LFE16-.LFB16
 5329 0098 00000000 		.4byte	.LFB17
 5330 009c 14000000 		.4byte	.LFE17-.LFB17
 5331 00a0 00000000 		.4byte	.LFB18
 5332 00a4 3C000000 		.4byte	.LFE18-.LFB18
 5333 00a8 00000000 		.4byte	.LFB19
 5334 00ac 2C000000 		.4byte	.LFE19-.LFB19
 5335 00b0 00000000 		.4byte	.LFB20
 5336 00b4 10000000 		.4byte	.LFE20-.LFB20
 5337 00b8 00000000 		.4byte	.LFB21
 5338 00bc 20000000 		.4byte	.LFE21-.LFB21
 5339 00c0 00000000 		.4byte	.LFB22
 5340 00c4 3C000000 		.4byte	.LFE22-.LFB22
 5341 00c8 00000000 		.4byte	.LFB32
 5342 00cc 74000000 		.4byte	.LFE32-.LFB32
 5343 00d0 00000000 		.4byte	.LFB1
 5344 00d4 38000000 		.4byte	.LFE1-.LFB1
 5345 00d8 00000000 		.4byte	.LFB23
 5346 00dc 14000000 		.4byte	.LFE23-.LFB23
 5347 00e0 00000000 		.4byte	.LFB24
 5348 00e4 4C000000 		.4byte	.LFE24-.LFB24
 5349 00e8 00000000 		.4byte	.LFB25
 5350 00ec 20000000 		.4byte	.LFE25-.LFB25
 5351 00f0 00000000 		.4byte	.LFB26
 5352 00f4 20000000 		.4byte	.LFE26-.LFB26
 5353 00f8 00000000 		.4byte	.LFB27
 5354 00fc 20000000 		.4byte	.LFE27-.LFB27
 5355 0100 00000000 		.4byte	.LFB28
 5356 0104 34000000 		.4byte	.LFE28-.LFB28
ARM GAS  C:\Users\g\AppData\Local\Temp\ccjVf3bh.s 			page 156


 5357 0108 00000000 		.4byte	.LFB29
 5358 010c 28000000 		.4byte	.LFE29-.LFB29
 5359 0110 00000000 		.4byte	.LFB30
 5360 0114 A4000000 		.4byte	.LFE30-.LFB30
 5361 0118 00000000 		.4byte	.LFB31
 5362 011c 60000000 		.4byte	.LFE31-.LFB31
 5363 0120 00000000 		.4byte	.LFB35
 5364 0124 6C000000 		.4byte	.LFE35-.LFB35
 5365 0128 00000000 		.4byte	.LFB34
 5366 012c 3C000000 		.4byte	.LFE34-.LFB34
 5367 0130 00000000 		.4byte	0
 5368 0134 00000000 		.4byte	0
 5369              		.section	.debug_ranges,"",%progbits
 5370              	.Ldebug_ranges0:
 5371 0000 00000000 		.4byte	.LFB5
 5372 0004 14000000 		.4byte	.LFE5
 5373 0008 00000000 		.4byte	.LFB7
 5374 000c 14000000 		.4byte	.LFE7
 5375 0010 00000000 		.4byte	.LFB0
 5376 0014 14000000 		.4byte	.LFE0
 5377 0018 00000000 		.4byte	.LFB2
 5378 001c 34000000 		.4byte	.LFE2
 5379 0020 00000000 		.4byte	.LFB3
 5380 0024 14000000 		.4byte	.LFE3
 5381 0028 00000000 		.4byte	.LFB4
 5382 002c 08010000 		.4byte	.LFE4
 5383 0030 00000000 		.4byte	.LFB6
 5384 0034 1C000000 		.4byte	.LFE6
 5385 0038 00000000 		.4byte	.LFB8
 5386 003c 30000000 		.4byte	.LFE8
 5387 0040 00000000 		.4byte	.LFB9
 5388 0044 24000000 		.4byte	.LFE9
 5389 0048 00000000 		.4byte	.LFB10
 5390 004c 38000000 		.4byte	.LFE10
 5391 0050 00000000 		.4byte	.LFB33
 5392 0054 2C000000 		.4byte	.LFE33
 5393 0058 00000000 		.4byte	.LFB11
 5394 005c 14000000 		.4byte	.LFE11
 5395 0060 00000000 		.4byte	.LFB12
 5396 0064 38000000 		.4byte	.LFE12
 5397 0068 00000000 		.4byte	.LFB13
 5398 006c 24000000 		.4byte	.LFE13
 5399 0070 00000000 		.4byte	.LFB14
 5400 0074 40000000 		.4byte	.LFE14
 5401 0078 00000000 		.4byte	.LFB15
 5402 007c 44000000 		.4byte	.LFE15
 5403 0080 00000000 		.4byte	.LFB16
 5404 0084 34000000 		.4byte	.LFE16
 5405 0088 00000000 		.4byte	.LFB17
 5406 008c 14000000 		.4byte	.LFE17
 5407 0090 00000000 		.4byte	.LFB18
 5408 0094 3C000000 		.4byte	.LFE18
 5409 0098 00000000 		.4byte	.LFB19
 5410 009c 2C000000 		.4byte	.LFE19
 5411 00a0 00000000 		.4byte	.LFB20
 5412 00a4 10000000 		.4byte	.LFE20
 5413 00a8 00000000 		.4byte	.LFB21
ARM GAS  C:\Users\g\AppData\Local\Temp\ccjVf3bh.s 			page 157


 5414 00ac 20000000 		.4byte	.LFE21
 5415 00b0 00000000 		.4byte	.LFB22
 5416 00b4 3C000000 		.4byte	.LFE22
 5417 00b8 00000000 		.4byte	.LFB32
 5418 00bc 74000000 		.4byte	.LFE32
 5419 00c0 00000000 		.4byte	.LFB1
 5420 00c4 38000000 		.4byte	.LFE1
 5421 00c8 00000000 		.4byte	.LFB23
 5422 00cc 14000000 		.4byte	.LFE23
 5423 00d0 00000000 		.4byte	.LFB24
 5424 00d4 4C000000 		.4byte	.LFE24
 5425 00d8 00000000 		.4byte	.LFB25
 5426 00dc 20000000 		.4byte	.LFE25
 5427 00e0 00000000 		.4byte	.LFB26
 5428 00e4 20000000 		.4byte	.LFE26
 5429 00e8 00000000 		.4byte	.LFB27
 5430 00ec 20000000 		.4byte	.LFE27
 5431 00f0 00000000 		.4byte	.LFB28
 5432 00f4 34000000 		.4byte	.LFE28
 5433 00f8 00000000 		.4byte	.LFB29
 5434 00fc 28000000 		.4byte	.LFE29
 5435 0100 00000000 		.4byte	.LFB30
 5436 0104 A4000000 		.4byte	.LFE30
 5437 0108 00000000 		.4byte	.LFB31
 5438 010c 60000000 		.4byte	.LFE31
 5439 0110 00000000 		.4byte	.LFB35
 5440 0114 6C000000 		.4byte	.LFE35
 5441 0118 00000000 		.4byte	.LFB34
 5442 011c 3C000000 		.4byte	.LFE34
 5443 0120 00000000 		.4byte	0
 5444 0124 00000000 		.4byte	0
 5445              		.section	.debug_line,"",%progbits
 5446              	.Ldebug_line0:
 5447 0000 65040000 		.section	.debug_str,"MS",%progbits,1
 5447      02005E00 
 5447      00000201 
 5447      FB0E0D00 
 5447      01010101 
 5448              	.LASF10:
 5449 0000 75696E74 		.ascii	"uint16\000"
 5449      313600
 5450              	.LASF93:
 5451 0007 43794578 		.ascii	"CyExitCriticalSection\000"
 5451      69744372 
 5451      69746963 
 5451      616C5365 
 5451      6374696F 
 5452              	.LASF91:
 5453 001d 636F756E 		.ascii	"counterIntMaskTbl\000"
 5453      74657249 
 5453      6E744D61 
 5453      736B5462 
 5453      6C00
 5454              	.LASF92:
 5455 002f 63795379 		.ascii	"cySysWdtCallback\000"
 5455      73576474 
 5455      43616C6C 
ARM GAS  C:\Users\g\AppData\Local\Temp\ccjVf3bh.s 			page 158


 5455      6261636B 
 5455      00
 5456              	.LASF40:
 5457 0040 43795379 		.ascii	"CySysWdtSetMode\000"
 5457      73576474 
 5457      5365744D 
 5457      6F646500 
 5458              	.LASF36:
 5459 0050 43795379 		.ascii	"CySysWdtUnlock\000"
 5459      73576474 
 5459      556E6C6F 
 5459      636B00
 5460              	.LASF80:
 5461 005f 43795379 		.ascii	"CySysWatchdogFeed\000"
 5461      73576174 
 5461      6368646F 
 5461      67466565 
 5461      6400
 5462              	.LASF39:
 5463 0071 636F756E 		.ascii	"counterNum\000"
 5463      7465724E 
 5463      756D00
 5464              	.LASF63:
 5465 007c 43795379 		.ascii	"CySysClkLfclkPosedgeCatch\000"
 5465      73436C6B 
 5465      4C66636C 
 5465      6B506F73 
 5465      65646765 
 5466              	.LASF58:
 5467 0096 43795379 		.ascii	"CySysWdtGetCascade\000"
 5467      73576474 
 5467      47657443 
 5467      61736361 
 5467      646500
 5468              	.LASF25:
 5469 00a9 43795379 		.ascii	"CySysClkIloStartMeasurement\000"
 5469      73436C6B 
 5469      496C6F53 
 5469      74617274 
 5469      4D656173 
 5470              	.LASF87:
 5471 00c5 6C66636C 		.ascii	"lfclkPosedgeWdtCounter0Enabled\000"
 5471      6B506F73 
 5471      65646765 
 5471      57647443 
 5471      6F756E74 
 5472              	.LASF7:
 5473 00e4 6C6F6E67 		.ascii	"long long unsigned int\000"
 5473      206C6F6E 
 5473      6720756E 
 5473      7369676E 
 5473      65642069 
 5474              	.LASF95:
 5475 00fb 474E5520 		.ascii	"GNU C 4.9.3 20150303 (release) [ARM/embedded-4_9-br"
 5475      4320342E 
 5475      392E3320 
 5475      32303135 
ARM GAS  C:\Users\g\AppData\Local\Temp\ccjVf3bh.s 			page 159


 5475      30333033 
 5476 012e 616E6368 		.ascii	"anch revision 221220] -mcpu=cortex-m0 -mthumb -g -O"
 5476      20726576 
 5476      6973696F 
 5476      6E203232 
 5476      31323230 
 5477 0161 67202D73 		.ascii	"g -std=gnu99 -ffunction-sections -ffat-lto-objects\000"
 5477      74643D67 
 5477      6E753939 
 5477      202D6666 
 5477      756E6374 
 5478              	.LASF6:
 5479 0194 6C6F6E67 		.ascii	"long long int\000"
 5479      206C6F6E 
 5479      6720696E 
 5479      7400
 5480              	.LASF0:
 5481 01a2 7369676E 		.ascii	"signed char\000"
 5481      65642063 
 5481      68617200 
 5482              	.LASF73:
 5483 01ae 66756E63 		.ascii	"function\000"
 5483      74696F6E 
 5483      00
 5484              	.LASF35:
 5485 01b7 43795379 		.ascii	"CySysWdtLock\000"
 5485      73576474 
 5485      4C6F636B 
 5485      00
 5486              	.LASF20:
 5487 01c4 63795764 		.ascii	"cyWdtCallback\000"
 5487      7443616C 
 5487      6C626163 
 5487      6B00
 5488              	.LASF100:
 5489 01d2 43794465 		.ascii	"CyDelayUs\000"
 5489      6C617955 
 5489      7300
 5490              	.LASF19:
 5491 01dc 63795F73 		.ascii	"cy_sys_timer_delaytype_enum\000"
 5491      79735F74 
 5491      696D6572 
 5491      5F64656C 
 5491      61797479 
 5492              	.LASF57:
 5493 01f8 62697473 		.ascii	"bits\000"
 5493      00
 5494              	.LASF4:
 5495 01fd 6C6F6E67 		.ascii	"long int\000"
 5495      20696E74 
 5495      00
 5496              	.LASF55:
 5497 0206 72656756 		.ascii	"regValue\000"
 5497      616C7565 
 5497      00
 5498              	.LASF9:
 5499 020f 75696E74 		.ascii	"uint8\000"
ARM GAS  C:\Users\g\AppData\Local\Temp\ccjVf3bh.s 			page 160


 5499      3800
 5500              	.LASF45:
 5501 0215 656E6162 		.ascii	"enable\000"
 5501      6C6500
 5502              	.LASF13:
 5503 021c 646F7562 		.ascii	"double\000"
 5503      6C6500
 5504              	.LASF28:
 5505 0223 636F6D70 		.ascii	"compensatedCycles\000"
 5505      656E7361 
 5505      74656443 
 5505      79636C65 
 5505      7300
 5506              	.LASF66:
 5507 0235 43795379 		.ascii	"CySysClkIloStop\000"
 5507      73436C6B 
 5507      496C6F53 
 5507      746F7000 
 5508              	.LASF29:
 5509 0245 696C6F43 		.ascii	"iloCompensatedCycles\000"
 5509      6F6D7065 
 5509      6E736174 
 5509      65644379 
 5509      636C6573 
 5510              	.LASF71:
 5511 025a 636F756E 		.ascii	"countersMask\000"
 5511      74657273 
 5511      4D61736B 
 5511      00
 5512              	.LASF11:
 5513 0267 75696E74 		.ascii	"uint32\000"
 5513      333200
 5514              	.LASF26:
 5515 026e 43795379 		.ascii	"CySysClkIloStopMeasurement\000"
 5515      73436C6B 
 5515      496C6F53 
 5515      746F704D 
 5515      65617375 
 5516              	.LASF74:
 5517 0289 70726576 		.ascii	"prevCallback\000"
 5517      43616C6C 
 5517      6261636B 
 5517      00
 5518              	.LASF53:
 5519 0296 43795379 		.ascii	"CySysWdtSetMatch\000"
 5519      73576474 
 5519      5365744D 
 5519      61746368 
 5519      00
 5520              	.LASF52:
 5521 02a7 636F756E 		.ascii	"countersEnableStatus\000"
 5521      74657273 
 5521      456E6162 
 5521      6C655374 
 5521      61747573 
 5522              	.LASF90:
 5523 02bc 77647449 		.ascii	"wdtIsrMask\000"
ARM GAS  C:\Users\g\AppData\Local\Temp\ccjVf3bh.s 			page 161


 5523      73724D61 
 5523      736B00
 5524              	.LASF47:
 5525 02c7 43795379 		.ascii	"CySysWdtEnable\000"
 5525      73576474 
 5525      456E6162 
 5525      6C6500
 5526              	.LASF72:
 5527 02d6 43795379 		.ascii	"CySysWdtSetInterruptCallback\000"
 5527      73576474 
 5527      53657449 
 5527      6E746572 
 5527      72757074 
 5528              	.LASF48:
 5529 02f3 636F756E 		.ascii	"counterMask\000"
 5529      7465724D 
 5529      61736B00 
 5530              	.LASF46:
 5531 02ff 43795379 		.ascii	"CySysWdtGetClearOnMatch\000"
 5531      73576474 
 5531      47657443 
 5531      6C656172 
 5531      4F6E4D61 
 5532              	.LASF8:
 5533 0317 756E7369 		.ascii	"unsigned int\000"
 5533      676E6564 
 5533      20696E74 
 5533      00
 5534              	.LASF64:
 5535 0324 66697273 		.ascii	"firstCount\000"
 5535      74436F75 
 5535      6E7400
 5536              	.LASF76:
 5537 032f 72657443 		.ascii	"retCallback\000"
 5537      616C6C62 
 5537      61636B00 
 5538              	.LASF27:
 5539 033b 64657369 		.ascii	"desiredDelay\000"
 5539      72656444 
 5539      656C6179 
 5539      00
 5540              	.LASF5:
 5541 0348 6C6F6E67 		.ascii	"long unsigned int\000"
 5541      20756E73 
 5541      69676E65 
 5541      6420696E 
 5541      7400
 5542              	.LASF34:
 5543 035a 696E7465 		.ascii	"interruptState\000"
 5543      72727570 
 5543      74537461 
 5543      746500
 5544              	.LASF86:
 5545 0369 6D617463 		.ascii	"matchValue\000"
 5545      6856616C 
 5545      756500
 5546              	.LASF62:
ARM GAS  C:\Users\g\AppData\Local\Temp\ccjVf3bh.s 			page 162


 5547 0374 43795379 		.ascii	"CySysClkLfclkPosedgeRestore\000"
 5547      73436C6B 
 5547      4C66636C 
 5547      6B506F73 
 5547      65646765 
 5548              	.LASF77:
 5549 0390 43795379 		.ascii	"CySysWdtEnableCounterIsr\000"
 5549      73576474 
 5549      456E6162 
 5549      6C65436F 
 5549      756E7465 
 5550              	.LASF3:
 5551 03a9 73686F72 		.ascii	"short unsigned int\000"
 5551      7420756E 
 5551      7369676E 
 5551      65642069 
 5551      6E7400
 5552              	.LASF38:
 5553 03bc 43795379 		.ascii	"CySysWdtGetEnabledStatus\000"
 5553      73576474 
 5553      47657445 
 5553      6E61626C 
 5553      65645374 
 5554              	.LASF75:
 5555 03d5 43795379 		.ascii	"CySysWdtGetInterruptCallback\000"
 5555      73576474 
 5555      47657449 
 5555      6E746572 
 5555      72757074 
 5556              	.LASF79:
 5557 03f2 43795379 		.ascii	"CySysWdtIsr\000"
 5557      73576474 
 5557      49737200 
 5558              	.LASF24:
 5559 03fe 43795379 		.ascii	"CySysClkIloStart\000"
 5559      73436C6B 
 5559      496C6F53 
 5559      74617274 
 5559      00
 5560              	.LASF56:
 5561 040f 43795379 		.ascii	"CySysWdtSetToggleBit\000"
 5561      73576474 
 5561      53657454 
 5561      6F67676C 
 5561      65426974 
 5562              	.LASF96:
 5563 0424 2E5C4765 		.ascii	".\\Generated_Source\\PSoC4\\CyLFClk.c\000"
 5563      6E657261 
 5563      7465645F 
 5563      536F7572 
 5563      63655C50 
 5564              	.LASF16:
 5565 0447 72656733 		.ascii	"reg32\000"
 5565      3200
 5566              	.LASF99:
 5567 044d 4379456E 		.ascii	"CyEnterCriticalSection\000"
 5567      74657243 
ARM GAS  C:\Users\g\AppData\Local\Temp\ccjVf3bh.s 			page 163


 5567      72697469 
 5567      63616C53 
 5567      65637469 
 5568              	.LASF83:
 5569 0464 746D7056 		.ascii	"tmpValue\000"
 5569      616C7565 
 5569      00
 5570              	.LASF33:
 5571 046d 72657475 		.ascii	"returnStatus\000"
 5571      726E5374 
 5571      61747573 
 5571      00
 5572              	.LASF21:
 5573 047a 73697A65 		.ascii	"sizetype\000"
 5573      74797065 
 5573      00
 5574              	.LASF60:
 5575 0483 43795379 		.ascii	"CySysWdtGetMatch\000"
 5575      73576474 
 5575      4765744D 
 5575      61746368 
 5575      00
 5576              	.LASF54:
 5577 0494 6D617463 		.ascii	"match\000"
 5577      6800
 5578              	.LASF17:
 5579 049a 43595F53 		.ascii	"CY_SYS_TIMER_WAIT\000"
 5579      59535F54 
 5579      494D4552 
 5579      5F574149 
 5579      5400
 5580              	.LASF32:
 5581 04ac 63686563 		.ascii	"checkStatus\000"
 5581      6B537461 
 5581      74757300 
 5582              	.LASF98:
 5583 04b8 63796465 		.ascii	"cydelayFreqHz\000"
 5583      6C617946 
 5583      72657148 
 5583      7A00
 5584              	.LASF70:
 5585 04c6 43795379 		.ascii	"CySysWdtResetCounters\000"
 5585      73576474 
 5585      52657365 
 5585      74436F75 
 5585      6E746572 
 5586              	.LASF68:
 5587 04dc 43795379 		.ascii	"CySysWdtClearInterrupt\000"
 5587      73576474 
 5587      436C6561 
 5587      72496E74 
 5587      65727275 
 5588              	.LASF12:
 5589 04f3 666C6F61 		.ascii	"float\000"
 5589      7400
 5590              	.LASF81:
 5591 04f9 43795379 		.ascii	"CySysTimerDelayUntilMatch\000"
ARM GAS  C:\Users\g\AppData\Local\Temp\ccjVf3bh.s 			page 164


 5591      7354696D 
 5591      65724465 
 5591      6C617955 
 5591      6E74696C 
 5592              	.LASF84:
 5593 0513 43795379 		.ascii	"CySysTimerDelay\000"
 5593      7354696D 
 5593      65724465 
 5593      6C617900 
 5594              	.LASF23:
 5595 0523 43795379 		.ascii	"CySysWdtLocked\000"
 5595      73576474 
 5595      4C6F636B 
 5595      656400
 5596              	.LASF94:
 5597 0532 43794861 		.ascii	"CyHalt\000"
 5597      6C7400
 5598              	.LASF1:
 5599 0539 756E7369 		.ascii	"unsigned char\000"
 5599      676E6564 
 5599      20636861 
 5599      7200
 5600              	.LASF31:
 5601 0547 636F6D70 		.ascii	"compensateRunningStatus\000"
 5601      656E7361 
 5601      74655275 
 5601      6E6E696E 
 5601      67537461 
 5602              	.LASF65:
 5603 055f 6C66636C 		.ascii	"lfclkPosedgeEnabledWdtCounter\000"
 5603      6B506F73 
 5603      65646765 
 5603      456E6162 
 5603      6C656457 
 5604              	.LASF85:
 5605 057d 64656C61 		.ascii	"delay\000"
 5605      7900
 5606              	.LASF2:
 5607 0583 73686F72 		.ascii	"short int\000"
 5607      7420696E 
 5607      7400
 5608              	.LASF82:
 5609 058d 64656C61 		.ascii	"delayType\000"
 5609      79547970 
 5609      6500
 5610              	.LASF49:
 5611 0597 43795379 		.ascii	"CySysWdtDisable\000"
 5611      73576474 
 5611      44697361 
 5611      626C6500 
 5612              	.LASF22:
 5613 05a7 43795379 		.ascii	"CySysClkIloEnabled\000"
 5613      73436C6B 
 5613      496C6F45 
 5613      6E61626C 
 5613      656400
 5614              	.LASF67:
ARM GAS  C:\Users\g\AppData\Local\Temp\ccjVf3bh.s 			page 165


 5615 05ba 43795379 		.ascii	"CySysWdtGetInterruptSource\000"
 5615      73576474 
 5615      47657449 
 5615      6E746572 
 5615      72757074 
 5616              	.LASF78:
 5617 05d5 43795379 		.ascii	"CySysWdtDisableCounterIsr\000"
 5617      73576474 
 5617      44697361 
 5617      626C6543 
 5617      6F756E74 
 5618              	.LASF14:
 5619 05ef 63686172 		.ascii	"char\000"
 5619      00
 5620              	.LASF41:
 5621 05f4 6D6F6465 		.ascii	"mode\000"
 5621      00
 5622              	.LASF61:
 5623 05f9 43795379 		.ascii	"CySysWdtGetCount\000"
 5623      73576474 
 5623      47657443 
 5623      6F756E74 
 5623      00
 5624              	.LASF89:
 5625 060a 64697361 		.ascii	"disableServicedIsr\000"
 5625      626C6553 
 5625      65727669 
 5625      63656449 
 5625      737200
 5626              	.LASF44:
 5627 061d 43795379 		.ascii	"CySysWdtSetClearOnMatch\000"
 5627      73576474 
 5627      53657443 
 5627      6C656172 
 5627      4F6E4D61 
 5628              	.LASF50:
 5629 0635 43795379 		.ascii	"CySysWdtSetCascade\000"
 5629      73576474 
 5629      53657443 
 5629      61736361 
 5629      646500
 5630              	.LASF97:
 5631 0648 443A5C63 		.ascii	"D:\\code\\cypress\\controllers\\bldc.cydsn\000"
 5631      6F64655C 
 5631      63797072 
 5631      6573735C 
 5631      636F6E74 
 5632              	.LASF43:
 5633 066f 43795379 		.ascii	"CySysWdtGetMode\000"
 5633      73576474 
 5633      4765744D 
 5633      6F646500 
 5634              	.LASF30:
 5635 067f 64657369 		.ascii	"desiredDelayInCounts\000"
 5635      72656444 
 5635      656C6179 
 5635      496E436F 
ARM GAS  C:\Users\g\AppData\Local\Temp\ccjVf3bh.s 			page 166


 5635      756E7473 
 5636              	.LASF42:
 5637 0694 636F6E66 		.ascii	"configRegValue\000"
 5637      69675265 
 5637      6756616C 
 5637      756500
 5638              	.LASF69:
 5639 06a3 7764744C 		.ascii	"wdtLockState\000"
 5639      6F636B53 
 5639      74617465 
 5639      00
 5640              	.LASF88:
 5641 06b0 6C66636C 		.ascii	"lfclkPosedgeWdtCounter0Mode\000"
 5641      6B506F73 
 5641      65646765 
 5641      57647443 
 5641      6F756E74 
 5642              	.LASF51:
 5643 06cc 63617363 		.ascii	"cascadeMask\000"
 5643      6164654D 
 5643      61736B00 
 5644              	.LASF15:
 5645 06d8 63797374 		.ascii	"cystatus\000"
 5645      61747573 
 5645      00
 5646              	.LASF59:
 5647 06e1 43795379 		.ascii	"CySysWdtGetToggleBit\000"
 5647      73576474 
 5647      47657454 
 5647      6F67676C 
 5647      65426974 
 5648              	.LASF37:
 5649 06f6 43795379 		.ascii	"CySysClkIloCompensate\000"
 5649      73436C6B 
 5649      496C6F43 
 5649      6F6D7065 
 5649      6E736174 
 5650              	.LASF18:
 5651 070c 43595F53 		.ascii	"CY_SYS_TIMER_INTERRUPT\000"
 5651      59535F54 
 5651      494D4552 
 5651      5F494E54 
 5651      45525255 
 5652              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 4.9.3 20150303 (release) [ARM/embedded-4_9-br
