ARM GAS  C:\Users\g\AppData\Local\Temp\ccNCqeMN.s 			page 1


   1              		.cpu cortex-m0
   2              		.fpu softvfp
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 1
  10              		.eabi_attribute 34, 0
  11              		.eabi_attribute 18, 4
  12              		.code	16
  13              		.file	"TX_SEND.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.TX_SEND_Stop,"ax",%progbits
  18              		.align	2
  19              		.global	TX_SEND_Stop
  20              		.code	16
  21              		.thumb_func
  22              		.type	TX_SEND_Stop, %function
  23              	TX_SEND_Stop:
  24              	.LFB3:
  25              		.file 1 ".\\Generated_Source\\PSoC4\\TX_SEND.c"
   1:.\Generated_Source\PSoC4/TX_SEND.c **** /*******************************************************************************
   2:.\Generated_Source\PSoC4/TX_SEND.c **** * File Name: TX_SEND.c
   3:.\Generated_Source\PSoC4/TX_SEND.c **** * Version 2.10
   4:.\Generated_Source\PSoC4/TX_SEND.c **** *
   5:.\Generated_Source\PSoC4/TX_SEND.c **** * Description:
   6:.\Generated_Source\PSoC4/TX_SEND.c **** *  This file provides the source code to the API for the TX_SEND
   7:.\Generated_Source\PSoC4/TX_SEND.c **** *  component
   8:.\Generated_Source\PSoC4/TX_SEND.c **** *
   9:.\Generated_Source\PSoC4/TX_SEND.c **** * Note:
  10:.\Generated_Source\PSoC4/TX_SEND.c **** *  None
  11:.\Generated_Source\PSoC4/TX_SEND.c **** *
  12:.\Generated_Source\PSoC4/TX_SEND.c **** ********************************************************************************
  13:.\Generated_Source\PSoC4/TX_SEND.c **** * Copyright 2013-2015, Cypress Semiconductor Corporation.  All rights reserved.
  14:.\Generated_Source\PSoC4/TX_SEND.c **** * You may use this file only in accordance with the license, terms, conditions,
  15:.\Generated_Source\PSoC4/TX_SEND.c **** * disclaimers, and limitations in the end user license agreement accompanying
  16:.\Generated_Source\PSoC4/TX_SEND.c **** * the software package with which this file was provided.
  17:.\Generated_Source\PSoC4/TX_SEND.c **** *******************************************************************************/
  18:.\Generated_Source\PSoC4/TX_SEND.c **** 
  19:.\Generated_Source\PSoC4/TX_SEND.c **** #include "TX_SEND.h"
  20:.\Generated_Source\PSoC4/TX_SEND.c **** 
  21:.\Generated_Source\PSoC4/TX_SEND.c **** uint8 TX_SEND_initVar = 0u;
  22:.\Generated_Source\PSoC4/TX_SEND.c **** 
  23:.\Generated_Source\PSoC4/TX_SEND.c **** 
  24:.\Generated_Source\PSoC4/TX_SEND.c **** /*******************************************************************************
  25:.\Generated_Source\PSoC4/TX_SEND.c **** * Function Name: TX_SEND_Init
  26:.\Generated_Source\PSoC4/TX_SEND.c **** ********************************************************************************
  27:.\Generated_Source\PSoC4/TX_SEND.c **** *
  28:.\Generated_Source\PSoC4/TX_SEND.c **** * Summary:
  29:.\Generated_Source\PSoC4/TX_SEND.c **** *  Initialize/Restore default TX_SEND configuration.
  30:.\Generated_Source\PSoC4/TX_SEND.c **** *
  31:.\Generated_Source\PSoC4/TX_SEND.c **** * Parameters:
  32:.\Generated_Source\PSoC4/TX_SEND.c **** *  None
ARM GAS  C:\Users\g\AppData\Local\Temp\ccNCqeMN.s 			page 2


  33:.\Generated_Source\PSoC4/TX_SEND.c **** *
  34:.\Generated_Source\PSoC4/TX_SEND.c **** * Return:
  35:.\Generated_Source\PSoC4/TX_SEND.c **** *  None
  36:.\Generated_Source\PSoC4/TX_SEND.c **** *
  37:.\Generated_Source\PSoC4/TX_SEND.c **** *******************************************************************************/
  38:.\Generated_Source\PSoC4/TX_SEND.c **** void TX_SEND_Init(void)
  39:.\Generated_Source\PSoC4/TX_SEND.c **** {
  40:.\Generated_Source\PSoC4/TX_SEND.c **** 
  41:.\Generated_Source\PSoC4/TX_SEND.c ****     /* Set values from customizer to CTRL */
  42:.\Generated_Source\PSoC4/TX_SEND.c ****     #if (TX_SEND__QUAD == TX_SEND_CONFIG)
  43:.\Generated_Source\PSoC4/TX_SEND.c ****         TX_SEND_CONTROL_REG = TX_SEND_CTRL_QUAD_BASE_CONFIG;
  44:.\Generated_Source\PSoC4/TX_SEND.c ****         
  45:.\Generated_Source\PSoC4/TX_SEND.c ****         /* Set values from customizer to CTRL1 */
  46:.\Generated_Source\PSoC4/TX_SEND.c ****         TX_SEND_TRIG_CONTROL1_REG  = TX_SEND_QUAD_SIGNALS_MODES;
  47:.\Generated_Source\PSoC4/TX_SEND.c **** 
  48:.\Generated_Source\PSoC4/TX_SEND.c ****         /* Set values from customizer to INTR */
  49:.\Generated_Source\PSoC4/TX_SEND.c ****         TX_SEND_SetInterruptMode(TX_SEND_QUAD_INTERRUPT_MASK);
  50:.\Generated_Source\PSoC4/TX_SEND.c ****         
  51:.\Generated_Source\PSoC4/TX_SEND.c ****          /* Set other values */
  52:.\Generated_Source\PSoC4/TX_SEND.c ****         TX_SEND_SetCounterMode(TX_SEND_COUNT_DOWN);
  53:.\Generated_Source\PSoC4/TX_SEND.c ****         TX_SEND_WritePeriod(TX_SEND_QUAD_PERIOD_INIT_VALUE);
  54:.\Generated_Source\PSoC4/TX_SEND.c ****         TX_SEND_WriteCounter(TX_SEND_QUAD_PERIOD_INIT_VALUE);
  55:.\Generated_Source\PSoC4/TX_SEND.c ****     #endif  /* (TX_SEND__QUAD == TX_SEND_CONFIG) */
  56:.\Generated_Source\PSoC4/TX_SEND.c **** 
  57:.\Generated_Source\PSoC4/TX_SEND.c ****     #if (TX_SEND__TIMER == TX_SEND_CONFIG)
  58:.\Generated_Source\PSoC4/TX_SEND.c ****         TX_SEND_CONTROL_REG = TX_SEND_CTRL_TIMER_BASE_CONFIG;
  59:.\Generated_Source\PSoC4/TX_SEND.c ****         
  60:.\Generated_Source\PSoC4/TX_SEND.c ****         /* Set values from customizer to CTRL1 */
  61:.\Generated_Source\PSoC4/TX_SEND.c ****         TX_SEND_TRIG_CONTROL1_REG  = TX_SEND_TIMER_SIGNALS_MODES;
  62:.\Generated_Source\PSoC4/TX_SEND.c ****     
  63:.\Generated_Source\PSoC4/TX_SEND.c ****         /* Set values from customizer to INTR */
  64:.\Generated_Source\PSoC4/TX_SEND.c ****         TX_SEND_SetInterruptMode(TX_SEND_TC_INTERRUPT_MASK);
  65:.\Generated_Source\PSoC4/TX_SEND.c ****         
  66:.\Generated_Source\PSoC4/TX_SEND.c ****         /* Set other values from customizer */
  67:.\Generated_Source\PSoC4/TX_SEND.c ****         TX_SEND_WritePeriod(TX_SEND_TC_PERIOD_VALUE );
  68:.\Generated_Source\PSoC4/TX_SEND.c **** 
  69:.\Generated_Source\PSoC4/TX_SEND.c ****         #if (TX_SEND__COMPARE == TX_SEND_TC_COMP_CAP_MODE)
  70:.\Generated_Source\PSoC4/TX_SEND.c ****             TX_SEND_WriteCompare(TX_SEND_TC_COMPARE_VALUE);
  71:.\Generated_Source\PSoC4/TX_SEND.c **** 
  72:.\Generated_Source\PSoC4/TX_SEND.c ****             #if (1u == TX_SEND_TC_COMPARE_SWAP)
  73:.\Generated_Source\PSoC4/TX_SEND.c ****                 TX_SEND_SetCompareSwap(1u);
  74:.\Generated_Source\PSoC4/TX_SEND.c ****                 TX_SEND_WriteCompareBuf(TX_SEND_TC_COMPARE_BUF_VALUE);
  75:.\Generated_Source\PSoC4/TX_SEND.c ****             #endif  /* (1u == TX_SEND_TC_COMPARE_SWAP) */
  76:.\Generated_Source\PSoC4/TX_SEND.c ****         #endif  /* (TX_SEND__COMPARE == TX_SEND_TC_COMP_CAP_MODE) */
  77:.\Generated_Source\PSoC4/TX_SEND.c **** 
  78:.\Generated_Source\PSoC4/TX_SEND.c ****         /* Initialize counter value */
  79:.\Generated_Source\PSoC4/TX_SEND.c ****         #if (TX_SEND_CY_TCPWM_V2 && TX_SEND_TIMER_UPDOWN_CNT_USED && !TX_SEND_CY_TCPWM_4000)
  80:.\Generated_Source\PSoC4/TX_SEND.c ****             TX_SEND_WriteCounter(1u);
  81:.\Generated_Source\PSoC4/TX_SEND.c ****         #elif(TX_SEND__COUNT_DOWN == TX_SEND_TC_COUNTER_MODE)
  82:.\Generated_Source\PSoC4/TX_SEND.c ****             TX_SEND_WriteCounter(TX_SEND_TC_PERIOD_VALUE);
  83:.\Generated_Source\PSoC4/TX_SEND.c ****         #else
  84:.\Generated_Source\PSoC4/TX_SEND.c ****             TX_SEND_WriteCounter(0u);
  85:.\Generated_Source\PSoC4/TX_SEND.c ****         #endif /* (TX_SEND_CY_TCPWM_V2 && TX_SEND_TIMER_UPDOWN_CNT_USED && !TX_SEND_CY_TCPWM_4000) 
  86:.\Generated_Source\PSoC4/TX_SEND.c ****     #endif  /* (TX_SEND__TIMER == TX_SEND_CONFIG) */
  87:.\Generated_Source\PSoC4/TX_SEND.c **** 
  88:.\Generated_Source\PSoC4/TX_SEND.c ****     #if (TX_SEND__PWM_SEL == TX_SEND_CONFIG)
  89:.\Generated_Source\PSoC4/TX_SEND.c ****         TX_SEND_CONTROL_REG = TX_SEND_CTRL_PWM_BASE_CONFIG;
ARM GAS  C:\Users\g\AppData\Local\Temp\ccNCqeMN.s 			page 3


  90:.\Generated_Source\PSoC4/TX_SEND.c **** 
  91:.\Generated_Source\PSoC4/TX_SEND.c ****         #if (TX_SEND__PWM_PR == TX_SEND_PWM_MODE)
  92:.\Generated_Source\PSoC4/TX_SEND.c ****             TX_SEND_CONTROL_REG |= TX_SEND_CTRL_PWM_RUN_MODE;
  93:.\Generated_Source\PSoC4/TX_SEND.c ****             TX_SEND_WriteCounter(TX_SEND_PWM_PR_INIT_VALUE);
  94:.\Generated_Source\PSoC4/TX_SEND.c ****         #else
  95:.\Generated_Source\PSoC4/TX_SEND.c ****             TX_SEND_CONTROL_REG |= TX_SEND_CTRL_PWM_ALIGN | TX_SEND_CTRL_PWM_KILL_EVENT;
  96:.\Generated_Source\PSoC4/TX_SEND.c ****             
  97:.\Generated_Source\PSoC4/TX_SEND.c ****             /* Initialize counter value */
  98:.\Generated_Source\PSoC4/TX_SEND.c ****             #if (TX_SEND_CY_TCPWM_V2 && TX_SEND_PWM_UPDOWN_CNT_USED && !TX_SEND_CY_TCPWM_4000)
  99:.\Generated_Source\PSoC4/TX_SEND.c ****                 TX_SEND_WriteCounter(1u);
 100:.\Generated_Source\PSoC4/TX_SEND.c ****             #elif (TX_SEND__RIGHT == TX_SEND_PWM_ALIGN)
 101:.\Generated_Source\PSoC4/TX_SEND.c ****                 TX_SEND_WriteCounter(TX_SEND_PWM_PERIOD_VALUE);
 102:.\Generated_Source\PSoC4/TX_SEND.c ****             #else 
 103:.\Generated_Source\PSoC4/TX_SEND.c ****                 TX_SEND_WriteCounter(0u);
 104:.\Generated_Source\PSoC4/TX_SEND.c ****             #endif  /* (TX_SEND_CY_TCPWM_V2 && TX_SEND_PWM_UPDOWN_CNT_USED && !TX_SEND_CY_TCPWM_400
 105:.\Generated_Source\PSoC4/TX_SEND.c ****         #endif  /* (TX_SEND__PWM_PR == TX_SEND_PWM_MODE) */
 106:.\Generated_Source\PSoC4/TX_SEND.c **** 
 107:.\Generated_Source\PSoC4/TX_SEND.c ****         #if (TX_SEND__PWM_DT == TX_SEND_PWM_MODE)
 108:.\Generated_Source\PSoC4/TX_SEND.c ****             TX_SEND_CONTROL_REG |= TX_SEND_CTRL_PWM_DEAD_TIME_CYCLE;
 109:.\Generated_Source\PSoC4/TX_SEND.c ****         #endif  /* (TX_SEND__PWM_DT == TX_SEND_PWM_MODE) */
 110:.\Generated_Source\PSoC4/TX_SEND.c **** 
 111:.\Generated_Source\PSoC4/TX_SEND.c ****         #if (TX_SEND__PWM == TX_SEND_PWM_MODE)
 112:.\Generated_Source\PSoC4/TX_SEND.c ****             TX_SEND_CONTROL_REG |= TX_SEND_CTRL_PWM_PRESCALER;
 113:.\Generated_Source\PSoC4/TX_SEND.c ****         #endif  /* (TX_SEND__PWM == TX_SEND_PWM_MODE) */
 114:.\Generated_Source\PSoC4/TX_SEND.c **** 
 115:.\Generated_Source\PSoC4/TX_SEND.c ****         /* Set values from customizer to CTRL1 */
 116:.\Generated_Source\PSoC4/TX_SEND.c ****         TX_SEND_TRIG_CONTROL1_REG  = TX_SEND_PWM_SIGNALS_MODES;
 117:.\Generated_Source\PSoC4/TX_SEND.c ****     
 118:.\Generated_Source\PSoC4/TX_SEND.c ****         /* Set values from customizer to INTR */
 119:.\Generated_Source\PSoC4/TX_SEND.c ****         TX_SEND_SetInterruptMode(TX_SEND_PWM_INTERRUPT_MASK);
 120:.\Generated_Source\PSoC4/TX_SEND.c **** 
 121:.\Generated_Source\PSoC4/TX_SEND.c ****         /* Set values from customizer to CTRL2 */
 122:.\Generated_Source\PSoC4/TX_SEND.c ****         #if (TX_SEND__PWM_PR == TX_SEND_PWM_MODE)
 123:.\Generated_Source\PSoC4/TX_SEND.c ****             TX_SEND_TRIG_CONTROL2_REG =
 124:.\Generated_Source\PSoC4/TX_SEND.c ****                     (TX_SEND_CC_MATCH_NO_CHANGE    |
 125:.\Generated_Source\PSoC4/TX_SEND.c ****                     TX_SEND_OVERLOW_NO_CHANGE      |
 126:.\Generated_Source\PSoC4/TX_SEND.c ****                     TX_SEND_UNDERFLOW_NO_CHANGE);
 127:.\Generated_Source\PSoC4/TX_SEND.c ****         #else
 128:.\Generated_Source\PSoC4/TX_SEND.c ****             #if (TX_SEND__LEFT == TX_SEND_PWM_ALIGN)
 129:.\Generated_Source\PSoC4/TX_SEND.c ****                 TX_SEND_TRIG_CONTROL2_REG = TX_SEND_PWM_MODE_LEFT;
 130:.\Generated_Source\PSoC4/TX_SEND.c ****             #endif  /* ( TX_SEND_PWM_LEFT == TX_SEND_PWM_ALIGN) */
 131:.\Generated_Source\PSoC4/TX_SEND.c **** 
 132:.\Generated_Source\PSoC4/TX_SEND.c ****             #if (TX_SEND__RIGHT == TX_SEND_PWM_ALIGN)
 133:.\Generated_Source\PSoC4/TX_SEND.c ****                 TX_SEND_TRIG_CONTROL2_REG = TX_SEND_PWM_MODE_RIGHT;
 134:.\Generated_Source\PSoC4/TX_SEND.c ****             #endif  /* ( TX_SEND_PWM_RIGHT == TX_SEND_PWM_ALIGN) */
 135:.\Generated_Source\PSoC4/TX_SEND.c **** 
 136:.\Generated_Source\PSoC4/TX_SEND.c ****             #if (TX_SEND__CENTER == TX_SEND_PWM_ALIGN)
 137:.\Generated_Source\PSoC4/TX_SEND.c ****                 TX_SEND_TRIG_CONTROL2_REG = TX_SEND_PWM_MODE_CENTER;
 138:.\Generated_Source\PSoC4/TX_SEND.c ****             #endif  /* ( TX_SEND_PWM_CENTER == TX_SEND_PWM_ALIGN) */
 139:.\Generated_Source\PSoC4/TX_SEND.c **** 
 140:.\Generated_Source\PSoC4/TX_SEND.c ****             #if (TX_SEND__ASYMMETRIC == TX_SEND_PWM_ALIGN)
 141:.\Generated_Source\PSoC4/TX_SEND.c ****                 TX_SEND_TRIG_CONTROL2_REG = TX_SEND_PWM_MODE_ASYM;
 142:.\Generated_Source\PSoC4/TX_SEND.c ****             #endif  /* (TX_SEND__ASYMMETRIC == TX_SEND_PWM_ALIGN) */
 143:.\Generated_Source\PSoC4/TX_SEND.c ****         #endif  /* (TX_SEND__PWM_PR == TX_SEND_PWM_MODE) */
 144:.\Generated_Source\PSoC4/TX_SEND.c **** 
 145:.\Generated_Source\PSoC4/TX_SEND.c ****         /* Set other values from customizer */
 146:.\Generated_Source\PSoC4/TX_SEND.c ****         TX_SEND_WritePeriod(TX_SEND_PWM_PERIOD_VALUE );
ARM GAS  C:\Users\g\AppData\Local\Temp\ccNCqeMN.s 			page 4


 147:.\Generated_Source\PSoC4/TX_SEND.c ****         TX_SEND_WriteCompare(TX_SEND_PWM_COMPARE_VALUE);
 148:.\Generated_Source\PSoC4/TX_SEND.c **** 
 149:.\Generated_Source\PSoC4/TX_SEND.c ****         #if (1u == TX_SEND_PWM_COMPARE_SWAP)
 150:.\Generated_Source\PSoC4/TX_SEND.c ****             TX_SEND_SetCompareSwap(1u);
 151:.\Generated_Source\PSoC4/TX_SEND.c ****             TX_SEND_WriteCompareBuf(TX_SEND_PWM_COMPARE_BUF_VALUE);
 152:.\Generated_Source\PSoC4/TX_SEND.c ****         #endif  /* (1u == TX_SEND_PWM_COMPARE_SWAP) */
 153:.\Generated_Source\PSoC4/TX_SEND.c **** 
 154:.\Generated_Source\PSoC4/TX_SEND.c ****         #if (1u == TX_SEND_PWM_PERIOD_SWAP)
 155:.\Generated_Source\PSoC4/TX_SEND.c ****             TX_SEND_SetPeriodSwap(1u);
 156:.\Generated_Source\PSoC4/TX_SEND.c ****             TX_SEND_WritePeriodBuf(TX_SEND_PWM_PERIOD_BUF_VALUE);
 157:.\Generated_Source\PSoC4/TX_SEND.c ****         #endif  /* (1u == TX_SEND_PWM_PERIOD_SWAP) */
 158:.\Generated_Source\PSoC4/TX_SEND.c ****     #endif  /* (TX_SEND__PWM_SEL == TX_SEND_CONFIG) */
 159:.\Generated_Source\PSoC4/TX_SEND.c ****     
 160:.\Generated_Source\PSoC4/TX_SEND.c **** }
 161:.\Generated_Source\PSoC4/TX_SEND.c **** 
 162:.\Generated_Source\PSoC4/TX_SEND.c **** 
 163:.\Generated_Source\PSoC4/TX_SEND.c **** /*******************************************************************************
 164:.\Generated_Source\PSoC4/TX_SEND.c **** * Function Name: TX_SEND_Enable
 165:.\Generated_Source\PSoC4/TX_SEND.c **** ********************************************************************************
 166:.\Generated_Source\PSoC4/TX_SEND.c **** *
 167:.\Generated_Source\PSoC4/TX_SEND.c **** * Summary:
 168:.\Generated_Source\PSoC4/TX_SEND.c **** *  Enables the TX_SEND.
 169:.\Generated_Source\PSoC4/TX_SEND.c **** *
 170:.\Generated_Source\PSoC4/TX_SEND.c **** * Parameters:
 171:.\Generated_Source\PSoC4/TX_SEND.c **** *  None
 172:.\Generated_Source\PSoC4/TX_SEND.c **** *
 173:.\Generated_Source\PSoC4/TX_SEND.c **** * Return:
 174:.\Generated_Source\PSoC4/TX_SEND.c **** *  None
 175:.\Generated_Source\PSoC4/TX_SEND.c **** *
 176:.\Generated_Source\PSoC4/TX_SEND.c **** *******************************************************************************/
 177:.\Generated_Source\PSoC4/TX_SEND.c **** void TX_SEND_Enable(void)
 178:.\Generated_Source\PSoC4/TX_SEND.c **** {
 179:.\Generated_Source\PSoC4/TX_SEND.c ****     uint8 enableInterrupts;
 180:.\Generated_Source\PSoC4/TX_SEND.c **** 
 181:.\Generated_Source\PSoC4/TX_SEND.c ****     enableInterrupts = CyEnterCriticalSection();
 182:.\Generated_Source\PSoC4/TX_SEND.c ****     TX_SEND_BLOCK_CONTROL_REG |= TX_SEND_MASK;
 183:.\Generated_Source\PSoC4/TX_SEND.c ****     CyExitCriticalSection(enableInterrupts);
 184:.\Generated_Source\PSoC4/TX_SEND.c **** 
 185:.\Generated_Source\PSoC4/TX_SEND.c ****     /* Start Timer or PWM if start input is absent */
 186:.\Generated_Source\PSoC4/TX_SEND.c ****     #if (TX_SEND__PWM_SEL == TX_SEND_CONFIG)
 187:.\Generated_Source\PSoC4/TX_SEND.c ****         #if (0u == TX_SEND_PWM_START_SIGNAL_PRESENT)
 188:.\Generated_Source\PSoC4/TX_SEND.c ****             TX_SEND_TriggerCommand(TX_SEND_MASK, TX_SEND_CMD_START);
 189:.\Generated_Source\PSoC4/TX_SEND.c ****         #endif /* (0u == TX_SEND_PWM_START_SIGNAL_PRESENT) */
 190:.\Generated_Source\PSoC4/TX_SEND.c ****     #endif /* (TX_SEND__PWM_SEL == TX_SEND_CONFIG) */
 191:.\Generated_Source\PSoC4/TX_SEND.c **** 
 192:.\Generated_Source\PSoC4/TX_SEND.c ****     #if (TX_SEND__TIMER == TX_SEND_CONFIG)
 193:.\Generated_Source\PSoC4/TX_SEND.c ****         #if (0u == TX_SEND_TC_START_SIGNAL_PRESENT)
 194:.\Generated_Source\PSoC4/TX_SEND.c ****             TX_SEND_TriggerCommand(TX_SEND_MASK, TX_SEND_CMD_START);
 195:.\Generated_Source\PSoC4/TX_SEND.c ****         #endif /* (0u == TX_SEND_TC_START_SIGNAL_PRESENT) */
 196:.\Generated_Source\PSoC4/TX_SEND.c ****     #endif /* (TX_SEND__TIMER == TX_SEND_CONFIG) */
 197:.\Generated_Source\PSoC4/TX_SEND.c ****     
 198:.\Generated_Source\PSoC4/TX_SEND.c ****     #if (TX_SEND__QUAD == TX_SEND_CONFIG)
 199:.\Generated_Source\PSoC4/TX_SEND.c ****         #if (0u != TX_SEND_QUAD_AUTO_START)
 200:.\Generated_Source\PSoC4/TX_SEND.c ****             TX_SEND_TriggerCommand(TX_SEND_MASK, TX_SEND_CMD_RELOAD);
 201:.\Generated_Source\PSoC4/TX_SEND.c ****         #endif /* (0u != TX_SEND_QUAD_AUTO_START) */
 202:.\Generated_Source\PSoC4/TX_SEND.c ****     #endif  /* (TX_SEND__QUAD == TX_SEND_CONFIG) */
 203:.\Generated_Source\PSoC4/TX_SEND.c **** }
ARM GAS  C:\Users\g\AppData\Local\Temp\ccNCqeMN.s 			page 5


 204:.\Generated_Source\PSoC4/TX_SEND.c **** 
 205:.\Generated_Source\PSoC4/TX_SEND.c **** 
 206:.\Generated_Source\PSoC4/TX_SEND.c **** /*******************************************************************************
 207:.\Generated_Source\PSoC4/TX_SEND.c **** * Function Name: TX_SEND_Start
 208:.\Generated_Source\PSoC4/TX_SEND.c **** ********************************************************************************
 209:.\Generated_Source\PSoC4/TX_SEND.c **** *
 210:.\Generated_Source\PSoC4/TX_SEND.c **** * Summary:
 211:.\Generated_Source\PSoC4/TX_SEND.c **** *  Initializes the TX_SEND with default customizer
 212:.\Generated_Source\PSoC4/TX_SEND.c **** *  values when called the first time and enables the TX_SEND.
 213:.\Generated_Source\PSoC4/TX_SEND.c **** *  For subsequent calls the configuration is left unchanged and the component is
 214:.\Generated_Source\PSoC4/TX_SEND.c **** *  just enabled.
 215:.\Generated_Source\PSoC4/TX_SEND.c **** *
 216:.\Generated_Source\PSoC4/TX_SEND.c **** * Parameters:
 217:.\Generated_Source\PSoC4/TX_SEND.c **** *  None
 218:.\Generated_Source\PSoC4/TX_SEND.c **** *
 219:.\Generated_Source\PSoC4/TX_SEND.c **** * Return:
 220:.\Generated_Source\PSoC4/TX_SEND.c **** *  None
 221:.\Generated_Source\PSoC4/TX_SEND.c **** *
 222:.\Generated_Source\PSoC4/TX_SEND.c **** * Global variables:
 223:.\Generated_Source\PSoC4/TX_SEND.c **** *  TX_SEND_initVar: global variable is used to indicate initial
 224:.\Generated_Source\PSoC4/TX_SEND.c **** *  configuration of this component.  The variable is initialized to zero and set
 225:.\Generated_Source\PSoC4/TX_SEND.c **** *  to 1 the first time TX_SEND_Start() is called. This allows
 226:.\Generated_Source\PSoC4/TX_SEND.c **** *  enabling/disabling a component without re-initialization in all subsequent
 227:.\Generated_Source\PSoC4/TX_SEND.c **** *  calls to the TX_SEND_Start() routine.
 228:.\Generated_Source\PSoC4/TX_SEND.c **** *
 229:.\Generated_Source\PSoC4/TX_SEND.c **** *******************************************************************************/
 230:.\Generated_Source\PSoC4/TX_SEND.c **** void TX_SEND_Start(void)
 231:.\Generated_Source\PSoC4/TX_SEND.c **** {
 232:.\Generated_Source\PSoC4/TX_SEND.c ****     if (0u == TX_SEND_initVar)
 233:.\Generated_Source\PSoC4/TX_SEND.c ****     {
 234:.\Generated_Source\PSoC4/TX_SEND.c ****         TX_SEND_Init();
 235:.\Generated_Source\PSoC4/TX_SEND.c ****         TX_SEND_initVar = 1u;
 236:.\Generated_Source\PSoC4/TX_SEND.c ****     }
 237:.\Generated_Source\PSoC4/TX_SEND.c **** 
 238:.\Generated_Source\PSoC4/TX_SEND.c ****     TX_SEND_Enable();
 239:.\Generated_Source\PSoC4/TX_SEND.c **** }
 240:.\Generated_Source\PSoC4/TX_SEND.c **** 
 241:.\Generated_Source\PSoC4/TX_SEND.c **** 
 242:.\Generated_Source\PSoC4/TX_SEND.c **** /*******************************************************************************
 243:.\Generated_Source\PSoC4/TX_SEND.c **** * Function Name: TX_SEND_Stop
 244:.\Generated_Source\PSoC4/TX_SEND.c **** ********************************************************************************
 245:.\Generated_Source\PSoC4/TX_SEND.c **** *
 246:.\Generated_Source\PSoC4/TX_SEND.c **** * Summary:
 247:.\Generated_Source\PSoC4/TX_SEND.c **** *  Disables the TX_SEND.
 248:.\Generated_Source\PSoC4/TX_SEND.c **** *
 249:.\Generated_Source\PSoC4/TX_SEND.c **** * Parameters:
 250:.\Generated_Source\PSoC4/TX_SEND.c **** *  None
 251:.\Generated_Source\PSoC4/TX_SEND.c **** *
 252:.\Generated_Source\PSoC4/TX_SEND.c **** * Return:
 253:.\Generated_Source\PSoC4/TX_SEND.c **** *  None
 254:.\Generated_Source\PSoC4/TX_SEND.c **** *
 255:.\Generated_Source\PSoC4/TX_SEND.c **** *******************************************************************************/
 256:.\Generated_Source\PSoC4/TX_SEND.c **** void TX_SEND_Stop(void)
 257:.\Generated_Source\PSoC4/TX_SEND.c **** {
  26              		.loc 1 257 0
  27              		.cfi_startproc
  28 0000 08B5     		push	{r3, lr}
ARM GAS  C:\Users\g\AppData\Local\Temp\ccNCqeMN.s 			page 6


  29              		.cfi_def_cfa_offset 8
  30              		.cfi_offset 3, -8
  31              		.cfi_offset 14, -4
 258:.\Generated_Source\PSoC4/TX_SEND.c ****     uint8 enableInterrupts;
 259:.\Generated_Source\PSoC4/TX_SEND.c **** 
 260:.\Generated_Source\PSoC4/TX_SEND.c ****     enableInterrupts = CyEnterCriticalSection();
  32              		.loc 1 260 0
  33 0002 FFF7FEFF 		bl	CyEnterCriticalSection
  34              	.LVL0:
 261:.\Generated_Source\PSoC4/TX_SEND.c **** 
 262:.\Generated_Source\PSoC4/TX_SEND.c ****     TX_SEND_BLOCK_CONTROL_REG &= (uint32)~TX_SEND_MASK;
  35              		.loc 1 262 0
  36 0006 044A     		ldr	r2, .L2
  37 0008 1368     		ldr	r3, [r2]
  38 000a 0421     		mov	r1, #4
  39 000c 8B43     		bic	r3, r1
  40 000e 1360     		str	r3, [r2]
 263:.\Generated_Source\PSoC4/TX_SEND.c **** 
 264:.\Generated_Source\PSoC4/TX_SEND.c ****     CyExitCriticalSection(enableInterrupts);
  41              		.loc 1 264 0
  42 0010 FFF7FEFF 		bl	CyExitCriticalSection
  43              	.LVL1:
 265:.\Generated_Source\PSoC4/TX_SEND.c **** }
  44              		.loc 1 265 0
  45              		@ sp needed
  46 0014 08BD     		pop	{r3, pc}
  47              	.L3:
  48 0016 C046     		.align	2
  49              	.L2:
  50 0018 00000540 		.word	1074069504
  51              		.cfi_endproc
  52              	.LFE3:
  53              		.size	TX_SEND_Stop, .-TX_SEND_Stop
  54              		.section	.text.TX_SEND_SetMode,"ax",%progbits
  55              		.align	2
  56              		.global	TX_SEND_SetMode
  57              		.code	16
  58              		.thumb_func
  59              		.type	TX_SEND_SetMode, %function
  60              	TX_SEND_SetMode:
  61              	.LFB4:
 266:.\Generated_Source\PSoC4/TX_SEND.c **** 
 267:.\Generated_Source\PSoC4/TX_SEND.c **** 
 268:.\Generated_Source\PSoC4/TX_SEND.c **** /*******************************************************************************
 269:.\Generated_Source\PSoC4/TX_SEND.c **** * Function Name: TX_SEND_SetMode
 270:.\Generated_Source\PSoC4/TX_SEND.c **** ********************************************************************************
 271:.\Generated_Source\PSoC4/TX_SEND.c **** *
 272:.\Generated_Source\PSoC4/TX_SEND.c **** * Summary:
 273:.\Generated_Source\PSoC4/TX_SEND.c **** *  Sets the operation mode of the TX_SEND. This function is used when
 274:.\Generated_Source\PSoC4/TX_SEND.c **** *  configured as a generic TX_SEND and the actual mode of operation is
 275:.\Generated_Source\PSoC4/TX_SEND.c **** *  set at runtime. The mode must be set while the component is disabled.
 276:.\Generated_Source\PSoC4/TX_SEND.c **** *
 277:.\Generated_Source\PSoC4/TX_SEND.c **** * Parameters:
 278:.\Generated_Source\PSoC4/TX_SEND.c **** *  mode: Mode for the TX_SEND to operate in
 279:.\Generated_Source\PSoC4/TX_SEND.c **** *   Values:
 280:.\Generated_Source\PSoC4/TX_SEND.c **** *   - TX_SEND_MODE_TIMER_COMPARE - Timer / Counter with
 281:.\Generated_Source\PSoC4/TX_SEND.c **** *                                                 compare capability
ARM GAS  C:\Users\g\AppData\Local\Temp\ccNCqeMN.s 			page 7


 282:.\Generated_Source\PSoC4/TX_SEND.c **** *         - TX_SEND_MODE_TIMER_CAPTURE - Timer / Counter with
 283:.\Generated_Source\PSoC4/TX_SEND.c **** *                                                 capture capability
 284:.\Generated_Source\PSoC4/TX_SEND.c **** *         - TX_SEND_MODE_QUAD - Quadrature decoder
 285:.\Generated_Source\PSoC4/TX_SEND.c **** *         - TX_SEND_MODE_PWM - PWM
 286:.\Generated_Source\PSoC4/TX_SEND.c **** *         - TX_SEND_MODE_PWM_DT - PWM with dead time
 287:.\Generated_Source\PSoC4/TX_SEND.c **** *         - TX_SEND_MODE_PWM_PR - PWM with pseudo random capability
 288:.\Generated_Source\PSoC4/TX_SEND.c **** *
 289:.\Generated_Source\PSoC4/TX_SEND.c **** * Return:
 290:.\Generated_Source\PSoC4/TX_SEND.c **** *  None
 291:.\Generated_Source\PSoC4/TX_SEND.c **** *
 292:.\Generated_Source\PSoC4/TX_SEND.c **** *******************************************************************************/
 293:.\Generated_Source\PSoC4/TX_SEND.c **** void TX_SEND_SetMode(uint32 mode)
 294:.\Generated_Source\PSoC4/TX_SEND.c **** {
  62              		.loc 1 294 0
  63              		.cfi_startproc
  64              	.LVL2:
  65 0000 10B5     		push	{r4, lr}
  66              		.cfi_def_cfa_offset 8
  67              		.cfi_offset 4, -8
  68              		.cfi_offset 14, -4
  69 0002 041C     		mov	r4, r0
 295:.\Generated_Source\PSoC4/TX_SEND.c ****     uint8 enableInterrupts;
 296:.\Generated_Source\PSoC4/TX_SEND.c **** 
 297:.\Generated_Source\PSoC4/TX_SEND.c ****     enableInterrupts = CyEnterCriticalSection();
  70              		.loc 1 297 0
  71 0004 FFF7FEFF 		bl	CyEnterCriticalSection
  72              	.LVL3:
 298:.\Generated_Source\PSoC4/TX_SEND.c **** 
 299:.\Generated_Source\PSoC4/TX_SEND.c ****     TX_SEND_CONTROL_REG &= (uint32)~TX_SEND_MODE_MASK;
  73              		.loc 1 299 0
  74 0008 054B     		ldr	r3, .L5
  75 000a 1968     		ldr	r1, [r3]
  76 000c 054A     		ldr	r2, .L5+4
  77 000e 0A40     		and	r2, r1
  78 0010 1A60     		str	r2, [r3]
 300:.\Generated_Source\PSoC4/TX_SEND.c ****     TX_SEND_CONTROL_REG |= mode;
  79              		.loc 1 300 0
  80 0012 1A68     		ldr	r2, [r3]
  81 0014 1443     		orr	r4, r2
  82              	.LVL4:
  83 0016 1C60     		str	r4, [r3]
 301:.\Generated_Source\PSoC4/TX_SEND.c **** 
 302:.\Generated_Source\PSoC4/TX_SEND.c ****     CyExitCriticalSection(enableInterrupts);
  84              		.loc 1 302 0
  85 0018 FFF7FEFF 		bl	CyExitCriticalSection
  86              	.LVL5:
 303:.\Generated_Source\PSoC4/TX_SEND.c **** }
  87              		.loc 1 303 0
  88              		@ sp needed
  89 001c 10BD     		pop	{r4, pc}
  90              	.L6:
  91 001e C046     		.align	2
  92              	.L5:
  93 0020 80010540 		.word	1074069888
  94 0024 FFFFFFF8 		.word	-117440513
  95              		.cfi_endproc
  96              	.LFE4:
ARM GAS  C:\Users\g\AppData\Local\Temp\ccNCqeMN.s 			page 8


  97              		.size	TX_SEND_SetMode, .-TX_SEND_SetMode
  98              		.section	.text.TX_SEND_SetQDMode,"ax",%progbits
  99              		.align	2
 100              		.global	TX_SEND_SetQDMode
 101              		.code	16
 102              		.thumb_func
 103              		.type	TX_SEND_SetQDMode, %function
 104              	TX_SEND_SetQDMode:
 105              	.LFB5:
 304:.\Generated_Source\PSoC4/TX_SEND.c **** 
 305:.\Generated_Source\PSoC4/TX_SEND.c **** 
 306:.\Generated_Source\PSoC4/TX_SEND.c **** /*******************************************************************************
 307:.\Generated_Source\PSoC4/TX_SEND.c **** * Function Name: TX_SEND_SetQDMode
 308:.\Generated_Source\PSoC4/TX_SEND.c **** ********************************************************************************
 309:.\Generated_Source\PSoC4/TX_SEND.c **** *
 310:.\Generated_Source\PSoC4/TX_SEND.c **** * Summary:
 311:.\Generated_Source\PSoC4/TX_SEND.c **** *  Sets the the Quadrature Decoder to one of the 3 supported modes.
 312:.\Generated_Source\PSoC4/TX_SEND.c **** *  Its functionality is only applicable to Quadrature Decoder operation.
 313:.\Generated_Source\PSoC4/TX_SEND.c **** *
 314:.\Generated_Source\PSoC4/TX_SEND.c **** * Parameters:
 315:.\Generated_Source\PSoC4/TX_SEND.c **** *  qdMode: Quadrature Decoder mode
 316:.\Generated_Source\PSoC4/TX_SEND.c **** *   Values:
 317:.\Generated_Source\PSoC4/TX_SEND.c **** *         - TX_SEND_MODE_X1 - Counts on phi 1 rising
 318:.\Generated_Source\PSoC4/TX_SEND.c **** *         - TX_SEND_MODE_X2 - Counts on both edges of phi1 (2x faster)
 319:.\Generated_Source\PSoC4/TX_SEND.c **** *         - TX_SEND_MODE_X4 - Counts on both edges of phi1 and phi2
 320:.\Generated_Source\PSoC4/TX_SEND.c **** *                                        (4x faster)
 321:.\Generated_Source\PSoC4/TX_SEND.c **** *
 322:.\Generated_Source\PSoC4/TX_SEND.c **** * Return:
 323:.\Generated_Source\PSoC4/TX_SEND.c **** *  None
 324:.\Generated_Source\PSoC4/TX_SEND.c **** *
 325:.\Generated_Source\PSoC4/TX_SEND.c **** *******************************************************************************/
 326:.\Generated_Source\PSoC4/TX_SEND.c **** void TX_SEND_SetQDMode(uint32 qdMode)
 327:.\Generated_Source\PSoC4/TX_SEND.c **** {
 106              		.loc 1 327 0
 107              		.cfi_startproc
 108              	.LVL6:
 109 0000 10B5     		push	{r4, lr}
 110              		.cfi_def_cfa_offset 8
 111              		.cfi_offset 4, -8
 112              		.cfi_offset 14, -4
 113 0002 041C     		mov	r4, r0
 328:.\Generated_Source\PSoC4/TX_SEND.c ****     uint8 enableInterrupts;
 329:.\Generated_Source\PSoC4/TX_SEND.c **** 
 330:.\Generated_Source\PSoC4/TX_SEND.c ****     enableInterrupts = CyEnterCriticalSection();
 114              		.loc 1 330 0
 115 0004 FFF7FEFF 		bl	CyEnterCriticalSection
 116              	.LVL7:
 331:.\Generated_Source\PSoC4/TX_SEND.c **** 
 332:.\Generated_Source\PSoC4/TX_SEND.c ****     TX_SEND_CONTROL_REG &= (uint32)~TX_SEND_QUAD_MODE_MASK;
 117              		.loc 1 332 0
 118 0008 054B     		ldr	r3, .L8
 119 000a 1968     		ldr	r1, [r3]
 120 000c 054A     		ldr	r2, .L8+4
 121 000e 0A40     		and	r2, r1
 122 0010 1A60     		str	r2, [r3]
 333:.\Generated_Source\PSoC4/TX_SEND.c ****     TX_SEND_CONTROL_REG |= qdMode;
 123              		.loc 1 333 0
ARM GAS  C:\Users\g\AppData\Local\Temp\ccNCqeMN.s 			page 9


 124 0012 1A68     		ldr	r2, [r3]
 125 0014 1443     		orr	r4, r2
 126              	.LVL8:
 127 0016 1C60     		str	r4, [r3]
 334:.\Generated_Source\PSoC4/TX_SEND.c **** 
 335:.\Generated_Source\PSoC4/TX_SEND.c ****     CyExitCriticalSection(enableInterrupts);
 128              		.loc 1 335 0
 129 0018 FFF7FEFF 		bl	CyExitCriticalSection
 130              	.LVL9:
 336:.\Generated_Source\PSoC4/TX_SEND.c **** }
 131              		.loc 1 336 0
 132              		@ sp needed
 133 001c 10BD     		pop	{r4, pc}
 134              	.L9:
 135 001e C046     		.align	2
 136              	.L8:
 137 0020 80010540 		.word	1074069888
 138 0024 FFFF8FFF 		.word	-7340033
 139              		.cfi_endproc
 140              	.LFE5:
 141              		.size	TX_SEND_SetQDMode, .-TX_SEND_SetQDMode
 142              		.section	.text.TX_SEND_SetPrescaler,"ax",%progbits
 143              		.align	2
 144              		.global	TX_SEND_SetPrescaler
 145              		.code	16
 146              		.thumb_func
 147              		.type	TX_SEND_SetPrescaler, %function
 148              	TX_SEND_SetPrescaler:
 149              	.LFB6:
 337:.\Generated_Source\PSoC4/TX_SEND.c **** 
 338:.\Generated_Source\PSoC4/TX_SEND.c **** 
 339:.\Generated_Source\PSoC4/TX_SEND.c **** /*******************************************************************************
 340:.\Generated_Source\PSoC4/TX_SEND.c **** * Function Name: TX_SEND_SetPrescaler
 341:.\Generated_Source\PSoC4/TX_SEND.c **** ********************************************************************************
 342:.\Generated_Source\PSoC4/TX_SEND.c **** *
 343:.\Generated_Source\PSoC4/TX_SEND.c **** * Summary:
 344:.\Generated_Source\PSoC4/TX_SEND.c **** *  Sets the prescaler value that is applied to the clock input.  Not applicable
 345:.\Generated_Source\PSoC4/TX_SEND.c **** *  to a PWM with the dead time mode or Quadrature Decoder mode.
 346:.\Generated_Source\PSoC4/TX_SEND.c **** *
 347:.\Generated_Source\PSoC4/TX_SEND.c **** * Parameters:
 348:.\Generated_Source\PSoC4/TX_SEND.c **** *  prescaler: Prescaler divider value
 349:.\Generated_Source\PSoC4/TX_SEND.c **** *   Values:
 350:.\Generated_Source\PSoC4/TX_SEND.c **** *         - TX_SEND_PRESCALE_DIVBY1    - Divide by 1 (no prescaling)
 351:.\Generated_Source\PSoC4/TX_SEND.c **** *         - TX_SEND_PRESCALE_DIVBY2    - Divide by 2
 352:.\Generated_Source\PSoC4/TX_SEND.c **** *         - TX_SEND_PRESCALE_DIVBY4    - Divide by 4
 353:.\Generated_Source\PSoC4/TX_SEND.c **** *         - TX_SEND_PRESCALE_DIVBY8    - Divide by 8
 354:.\Generated_Source\PSoC4/TX_SEND.c **** *         - TX_SEND_PRESCALE_DIVBY16   - Divide by 16
 355:.\Generated_Source\PSoC4/TX_SEND.c **** *         - TX_SEND_PRESCALE_DIVBY32   - Divide by 32
 356:.\Generated_Source\PSoC4/TX_SEND.c **** *         - TX_SEND_PRESCALE_DIVBY64   - Divide by 64
 357:.\Generated_Source\PSoC4/TX_SEND.c **** *         - TX_SEND_PRESCALE_DIVBY128  - Divide by 128
 358:.\Generated_Source\PSoC4/TX_SEND.c **** *
 359:.\Generated_Source\PSoC4/TX_SEND.c **** * Return:
 360:.\Generated_Source\PSoC4/TX_SEND.c **** *  None
 361:.\Generated_Source\PSoC4/TX_SEND.c **** *
 362:.\Generated_Source\PSoC4/TX_SEND.c **** *******************************************************************************/
 363:.\Generated_Source\PSoC4/TX_SEND.c **** void TX_SEND_SetPrescaler(uint32 prescaler)
 364:.\Generated_Source\PSoC4/TX_SEND.c **** {
ARM GAS  C:\Users\g\AppData\Local\Temp\ccNCqeMN.s 			page 10


 150              		.loc 1 364 0
 151              		.cfi_startproc
 152              	.LVL10:
 153 0000 10B5     		push	{r4, lr}
 154              		.cfi_def_cfa_offset 8
 155              		.cfi_offset 4, -8
 156              		.cfi_offset 14, -4
 157 0002 041C     		mov	r4, r0
 365:.\Generated_Source\PSoC4/TX_SEND.c ****     uint8 enableInterrupts;
 366:.\Generated_Source\PSoC4/TX_SEND.c **** 
 367:.\Generated_Source\PSoC4/TX_SEND.c ****     enableInterrupts = CyEnterCriticalSection();
 158              		.loc 1 367 0
 159 0004 FFF7FEFF 		bl	CyEnterCriticalSection
 160              	.LVL11:
 368:.\Generated_Source\PSoC4/TX_SEND.c **** 
 369:.\Generated_Source\PSoC4/TX_SEND.c ****     TX_SEND_CONTROL_REG &= (uint32)~TX_SEND_PRESCALER_MASK;
 161              		.loc 1 369 0
 162 0008 054B     		ldr	r3, .L11
 163 000a 1968     		ldr	r1, [r3]
 164 000c 054A     		ldr	r2, .L11+4
 165 000e 0A40     		and	r2, r1
 166 0010 1A60     		str	r2, [r3]
 370:.\Generated_Source\PSoC4/TX_SEND.c ****     TX_SEND_CONTROL_REG |= prescaler;
 167              		.loc 1 370 0
 168 0012 1A68     		ldr	r2, [r3]
 169 0014 1443     		orr	r4, r2
 170              	.LVL12:
 171 0016 1C60     		str	r4, [r3]
 371:.\Generated_Source\PSoC4/TX_SEND.c **** 
 372:.\Generated_Source\PSoC4/TX_SEND.c ****     CyExitCriticalSection(enableInterrupts);
 172              		.loc 1 372 0
 173 0018 FFF7FEFF 		bl	CyExitCriticalSection
 174              	.LVL13:
 373:.\Generated_Source\PSoC4/TX_SEND.c **** }
 175              		.loc 1 373 0
 176              		@ sp needed
 177 001c 10BD     		pop	{r4, pc}
 178              	.L12:
 179 001e C046     		.align	2
 180              	.L11:
 181 0020 80010540 		.word	1074069888
 182 0024 FF00FFFF 		.word	-65281
 183              		.cfi_endproc
 184              	.LFE6:
 185              		.size	TX_SEND_SetPrescaler, .-TX_SEND_SetPrescaler
 186              		.section	.text.TX_SEND_SetOneShot,"ax",%progbits
 187              		.align	2
 188              		.global	TX_SEND_SetOneShot
 189              		.code	16
 190              		.thumb_func
 191              		.type	TX_SEND_SetOneShot, %function
 192              	TX_SEND_SetOneShot:
 193              	.LFB7:
 374:.\Generated_Source\PSoC4/TX_SEND.c **** 
 375:.\Generated_Source\PSoC4/TX_SEND.c **** 
 376:.\Generated_Source\PSoC4/TX_SEND.c **** /*******************************************************************************
 377:.\Generated_Source\PSoC4/TX_SEND.c **** * Function Name: TX_SEND_SetOneShot
ARM GAS  C:\Users\g\AppData\Local\Temp\ccNCqeMN.s 			page 11


 378:.\Generated_Source\PSoC4/TX_SEND.c **** ********************************************************************************
 379:.\Generated_Source\PSoC4/TX_SEND.c **** *
 380:.\Generated_Source\PSoC4/TX_SEND.c **** * Summary:
 381:.\Generated_Source\PSoC4/TX_SEND.c **** *  Writes the register that controls whether the TX_SEND runs
 382:.\Generated_Source\PSoC4/TX_SEND.c **** *  continuously or stops when terminal count is reached.  By default the
 383:.\Generated_Source\PSoC4/TX_SEND.c **** *  TX_SEND operates in the continuous mode.
 384:.\Generated_Source\PSoC4/TX_SEND.c **** *
 385:.\Generated_Source\PSoC4/TX_SEND.c **** * Parameters:
 386:.\Generated_Source\PSoC4/TX_SEND.c **** *  oneShotEnable
 387:.\Generated_Source\PSoC4/TX_SEND.c **** *   Values:
 388:.\Generated_Source\PSoC4/TX_SEND.c **** *     - 0 - Continuous
 389:.\Generated_Source\PSoC4/TX_SEND.c **** *     - 1 - Enable One Shot
 390:.\Generated_Source\PSoC4/TX_SEND.c **** *
 391:.\Generated_Source\PSoC4/TX_SEND.c **** * Return:
 392:.\Generated_Source\PSoC4/TX_SEND.c **** *  None
 393:.\Generated_Source\PSoC4/TX_SEND.c **** *
 394:.\Generated_Source\PSoC4/TX_SEND.c **** *******************************************************************************/
 395:.\Generated_Source\PSoC4/TX_SEND.c **** void TX_SEND_SetOneShot(uint32 oneShotEnable)
 396:.\Generated_Source\PSoC4/TX_SEND.c **** {
 194              		.loc 1 396 0
 195              		.cfi_startproc
 196              	.LVL14:
 197 0000 10B5     		push	{r4, lr}
 198              		.cfi_def_cfa_offset 8
 199              		.cfi_offset 4, -8
 200              		.cfi_offset 14, -4
 201 0002 041C     		mov	r4, r0
 397:.\Generated_Source\PSoC4/TX_SEND.c ****     uint8 enableInterrupts;
 398:.\Generated_Source\PSoC4/TX_SEND.c **** 
 399:.\Generated_Source\PSoC4/TX_SEND.c ****     enableInterrupts = CyEnterCriticalSection();
 202              		.loc 1 399 0
 203 0004 FFF7FEFF 		bl	CyEnterCriticalSection
 204              	.LVL15:
 400:.\Generated_Source\PSoC4/TX_SEND.c **** 
 401:.\Generated_Source\PSoC4/TX_SEND.c ****     TX_SEND_CONTROL_REG &= (uint32)~TX_SEND_ONESHOT_MASK;
 205              		.loc 1 401 0
 206 0008 064B     		ldr	r3, .L14
 207 000a 1968     		ldr	r1, [r3]
 208 000c 064A     		ldr	r2, .L14+4
 209 000e 0A40     		and	r2, r1
 210 0010 1A60     		str	r2, [r3]
 402:.\Generated_Source\PSoC4/TX_SEND.c ****     TX_SEND_CONTROL_REG |= ((uint32)((oneShotEnable & TX_SEND_1BIT_MASK) <<
 211              		.loc 1 402 0
 212 0012 1A68     		ldr	r2, [r3]
 213 0014 0121     		mov	r1, #1
 214 0016 0C40     		and	r4, r1
 215              	.LVL16:
 216 0018 A404     		lsl	r4, r4, #18
 217 001a 1443     		orr	r4, r2
 218 001c 1C60     		str	r4, [r3]
 403:.\Generated_Source\PSoC4/TX_SEND.c ****                                                                TX_SEND_ONESHOT_SHIFT));
 404:.\Generated_Source\PSoC4/TX_SEND.c **** 
 405:.\Generated_Source\PSoC4/TX_SEND.c ****     CyExitCriticalSection(enableInterrupts);
 219              		.loc 1 405 0
 220 001e FFF7FEFF 		bl	CyExitCriticalSection
 221              	.LVL17:
 406:.\Generated_Source\PSoC4/TX_SEND.c **** }
ARM GAS  C:\Users\g\AppData\Local\Temp\ccNCqeMN.s 			page 12


 222              		.loc 1 406 0
 223              		@ sp needed
 224 0022 10BD     		pop	{r4, pc}
 225              	.L15:
 226              		.align	2
 227              	.L14:
 228 0024 80010540 		.word	1074069888
 229 0028 FFFFFBFF 		.word	-262145
 230              		.cfi_endproc
 231              	.LFE7:
 232              		.size	TX_SEND_SetOneShot, .-TX_SEND_SetOneShot
 233              		.section	.text.TX_SEND_SetPWMMode,"ax",%progbits
 234              		.align	2
 235              		.global	TX_SEND_SetPWMMode
 236              		.code	16
 237              		.thumb_func
 238              		.type	TX_SEND_SetPWMMode, %function
 239              	TX_SEND_SetPWMMode:
 240              	.LFB8:
 407:.\Generated_Source\PSoC4/TX_SEND.c **** 
 408:.\Generated_Source\PSoC4/TX_SEND.c **** 
 409:.\Generated_Source\PSoC4/TX_SEND.c **** /*******************************************************************************
 410:.\Generated_Source\PSoC4/TX_SEND.c **** * Function Name: TX_SEND_SetPWMMode
 411:.\Generated_Source\PSoC4/TX_SEND.c **** ********************************************************************************
 412:.\Generated_Source\PSoC4/TX_SEND.c **** *
 413:.\Generated_Source\PSoC4/TX_SEND.c **** * Summary:
 414:.\Generated_Source\PSoC4/TX_SEND.c **** *  Writes the control register that determines what mode of operation the PWM
 415:.\Generated_Source\PSoC4/TX_SEND.c **** *  output lines are driven in.  There is a setting for what to do on a
 416:.\Generated_Source\PSoC4/TX_SEND.c **** *  comparison match (CC_MATCH), on an overflow (OVERFLOW) and on an underflow
 417:.\Generated_Source\PSoC4/TX_SEND.c **** *  (UNDERFLOW).  The value for each of the three must be ORed together to form
 418:.\Generated_Source\PSoC4/TX_SEND.c **** *  the mode.
 419:.\Generated_Source\PSoC4/TX_SEND.c **** *
 420:.\Generated_Source\PSoC4/TX_SEND.c **** * Parameters:
 421:.\Generated_Source\PSoC4/TX_SEND.c **** *  modeMask: A combination of three mode settings.  Mask must include a value
 422:.\Generated_Source\PSoC4/TX_SEND.c **** *  for each of the three or use one of the preconfigured PWM settings.
 423:.\Generated_Source\PSoC4/TX_SEND.c **** *   Values:
 424:.\Generated_Source\PSoC4/TX_SEND.c **** *     - CC_MATCH_SET        - Set on comparison match
 425:.\Generated_Source\PSoC4/TX_SEND.c **** *     - CC_MATCH_CLEAR      - Clear on comparison match
 426:.\Generated_Source\PSoC4/TX_SEND.c **** *     - CC_MATCH_INVERT     - Invert on comparison match
 427:.\Generated_Source\PSoC4/TX_SEND.c **** *     - CC_MATCH_NO_CHANGE  - No change on comparison match
 428:.\Generated_Source\PSoC4/TX_SEND.c **** *     - OVERLOW_SET         - Set on overflow
 429:.\Generated_Source\PSoC4/TX_SEND.c **** *     - OVERLOW_CLEAR       - Clear on  overflow
 430:.\Generated_Source\PSoC4/TX_SEND.c **** *     - OVERLOW_INVERT      - Invert on overflow
 431:.\Generated_Source\PSoC4/TX_SEND.c **** *     - OVERLOW_NO_CHANGE   - No change on overflow
 432:.\Generated_Source\PSoC4/TX_SEND.c **** *     - UNDERFLOW_SET       - Set on underflow
 433:.\Generated_Source\PSoC4/TX_SEND.c **** *     - UNDERFLOW_CLEAR     - Clear on underflow
 434:.\Generated_Source\PSoC4/TX_SEND.c **** *     - UNDERFLOW_INVERT    - Invert on underflow
 435:.\Generated_Source\PSoC4/TX_SEND.c **** *     - UNDERFLOW_NO_CHANGE - No change on underflow
 436:.\Generated_Source\PSoC4/TX_SEND.c **** *     - PWM_MODE_LEFT       - Setting for left aligned PWM.  Should be combined
 437:.\Generated_Source\PSoC4/TX_SEND.c **** *                             with up counting mode
 438:.\Generated_Source\PSoC4/TX_SEND.c **** *     - PWM_MODE_RIGHT      - Setting for right aligned PWM.  Should be combined
 439:.\Generated_Source\PSoC4/TX_SEND.c **** *                             with down counting mode
 440:.\Generated_Source\PSoC4/TX_SEND.c **** *     - PWM_MODE_CENTER     - Setting for center aligned PWM.  Should be
 441:.\Generated_Source\PSoC4/TX_SEND.c **** *                             combined with up/down 0 mode
 442:.\Generated_Source\PSoC4/TX_SEND.c **** *     - PWM_MODE_ASYM       - Setting for asymmetric PWM.  Should be combined
 443:.\Generated_Source\PSoC4/TX_SEND.c **** *                             with up/down 1 mode
 444:.\Generated_Source\PSoC4/TX_SEND.c **** *
ARM GAS  C:\Users\g\AppData\Local\Temp\ccNCqeMN.s 			page 13


 445:.\Generated_Source\PSoC4/TX_SEND.c **** * Return:
 446:.\Generated_Source\PSoC4/TX_SEND.c **** *  None
 447:.\Generated_Source\PSoC4/TX_SEND.c **** *
 448:.\Generated_Source\PSoC4/TX_SEND.c **** *******************************************************************************/
 449:.\Generated_Source\PSoC4/TX_SEND.c **** void TX_SEND_SetPWMMode(uint32 modeMask)
 450:.\Generated_Source\PSoC4/TX_SEND.c **** {
 241              		.loc 1 450 0
 242              		.cfi_startproc
 243              	.LVL18:
 451:.\Generated_Source\PSoC4/TX_SEND.c ****     TX_SEND_TRIG_CONTROL2_REG = (modeMask & TX_SEND_6BIT_MASK);
 244              		.loc 1 451 0
 245 0000 3F23     		mov	r3, #63
 246 0002 1840     		and	r0, r3
 247              	.LVL19:
 248 0004 014B     		ldr	r3, .L17
 249 0006 1860     		str	r0, [r3]
 452:.\Generated_Source\PSoC4/TX_SEND.c **** }
 250              		.loc 1 452 0
 251              		@ sp needed
 252 0008 7047     		bx	lr
 253              	.L18:
 254 000a C046     		.align	2
 255              	.L17:
 256 000c A8010540 		.word	1074069928
 257              		.cfi_endproc
 258              	.LFE8:
 259              		.size	TX_SEND_SetPWMMode, .-TX_SEND_SetPWMMode
 260              		.section	.text.TX_SEND_SetPWMSyncKill,"ax",%progbits
 261              		.align	2
 262              		.global	TX_SEND_SetPWMSyncKill
 263              		.code	16
 264              		.thumb_func
 265              		.type	TX_SEND_SetPWMSyncKill, %function
 266              	TX_SEND_SetPWMSyncKill:
 267              	.LFB9:
 453:.\Generated_Source\PSoC4/TX_SEND.c **** 
 454:.\Generated_Source\PSoC4/TX_SEND.c **** 
 455:.\Generated_Source\PSoC4/TX_SEND.c **** 
 456:.\Generated_Source\PSoC4/TX_SEND.c **** /*******************************************************************************
 457:.\Generated_Source\PSoC4/TX_SEND.c **** * Function Name: TX_SEND_SetPWMSyncKill
 458:.\Generated_Source\PSoC4/TX_SEND.c **** ********************************************************************************
 459:.\Generated_Source\PSoC4/TX_SEND.c **** *
 460:.\Generated_Source\PSoC4/TX_SEND.c **** * Summary:
 461:.\Generated_Source\PSoC4/TX_SEND.c **** *  Writes the register that controls whether the PWM kill signal (stop input)
 462:.\Generated_Source\PSoC4/TX_SEND.c **** *  causes asynchronous or synchronous kill operation.  By default the kill
 463:.\Generated_Source\PSoC4/TX_SEND.c **** *  operation is asynchronous.  This functionality is only applicable to the PWM
 464:.\Generated_Source\PSoC4/TX_SEND.c **** *  and PWM with dead time modes.
 465:.\Generated_Source\PSoC4/TX_SEND.c **** *
 466:.\Generated_Source\PSoC4/TX_SEND.c **** *  For Synchronous mode the kill signal disables both the line and line_n
 467:.\Generated_Source\PSoC4/TX_SEND.c **** *  signals until the next terminal count.
 468:.\Generated_Source\PSoC4/TX_SEND.c **** *
 469:.\Generated_Source\PSoC4/TX_SEND.c **** *  For Asynchronous mode the kill signal disables both the line and line_n
 470:.\Generated_Source\PSoC4/TX_SEND.c **** *  signals when the kill signal is present.  This mode should only be used
 471:.\Generated_Source\PSoC4/TX_SEND.c **** *  when the kill signal (stop input) is configured in the pass through mode
 472:.\Generated_Source\PSoC4/TX_SEND.c **** *  (Level sensitive signal).
 473:.\Generated_Source\PSoC4/TX_SEND.c **** 
 474:.\Generated_Source\PSoC4/TX_SEND.c **** *
ARM GAS  C:\Users\g\AppData\Local\Temp\ccNCqeMN.s 			page 14


 475:.\Generated_Source\PSoC4/TX_SEND.c **** * Parameters:
 476:.\Generated_Source\PSoC4/TX_SEND.c **** *  syncKillEnable
 477:.\Generated_Source\PSoC4/TX_SEND.c **** *   Values:
 478:.\Generated_Source\PSoC4/TX_SEND.c **** *     - 0 - Asynchronous
 479:.\Generated_Source\PSoC4/TX_SEND.c **** *     - 1 - Synchronous
 480:.\Generated_Source\PSoC4/TX_SEND.c **** *
 481:.\Generated_Source\PSoC4/TX_SEND.c **** * Return:
 482:.\Generated_Source\PSoC4/TX_SEND.c **** *  None
 483:.\Generated_Source\PSoC4/TX_SEND.c **** *
 484:.\Generated_Source\PSoC4/TX_SEND.c **** *******************************************************************************/
 485:.\Generated_Source\PSoC4/TX_SEND.c **** void TX_SEND_SetPWMSyncKill(uint32 syncKillEnable)
 486:.\Generated_Source\PSoC4/TX_SEND.c **** {
 268              		.loc 1 486 0
 269              		.cfi_startproc
 270              	.LVL20:
 271 0000 10B5     		push	{r4, lr}
 272              		.cfi_def_cfa_offset 8
 273              		.cfi_offset 4, -8
 274              		.cfi_offset 14, -4
 275 0002 041C     		mov	r4, r0
 487:.\Generated_Source\PSoC4/TX_SEND.c ****     uint8 enableInterrupts;
 488:.\Generated_Source\PSoC4/TX_SEND.c **** 
 489:.\Generated_Source\PSoC4/TX_SEND.c ****     enableInterrupts = CyEnterCriticalSection();
 276              		.loc 1 489 0
 277 0004 FFF7FEFF 		bl	CyEnterCriticalSection
 278              	.LVL21:
 490:.\Generated_Source\PSoC4/TX_SEND.c **** 
 491:.\Generated_Source\PSoC4/TX_SEND.c ****     TX_SEND_CONTROL_REG &= (uint32)~TX_SEND_PWM_SYNC_KILL_MASK;
 279              		.loc 1 491 0
 280 0008 064B     		ldr	r3, .L20
 281 000a 1A68     		ldr	r2, [r3]
 282 000c 0421     		mov	r1, #4
 283 000e 8A43     		bic	r2, r1
 284 0010 1A60     		str	r2, [r3]
 492:.\Generated_Source\PSoC4/TX_SEND.c ****     TX_SEND_CONTROL_REG |= ((uint32)((syncKillEnable & TX_SEND_1BIT_MASK)  <<
 285              		.loc 1 492 0
 286 0012 1A68     		ldr	r2, [r3]
 287 0014 0339     		sub	r1, r1, #3
 288 0016 0C40     		and	r4, r1
 289              	.LVL22:
 290 0018 A400     		lsl	r4, r4, #2
 291 001a 1443     		orr	r4, r2
 292 001c 1C60     		str	r4, [r3]
 493:.\Generated_Source\PSoC4/TX_SEND.c ****                                                TX_SEND_PWM_SYNC_KILL_SHIFT));
 494:.\Generated_Source\PSoC4/TX_SEND.c **** 
 495:.\Generated_Source\PSoC4/TX_SEND.c ****     CyExitCriticalSection(enableInterrupts);
 293              		.loc 1 495 0
 294 001e FFF7FEFF 		bl	CyExitCriticalSection
 295              	.LVL23:
 496:.\Generated_Source\PSoC4/TX_SEND.c **** }
 296              		.loc 1 496 0
 297              		@ sp needed
 298 0022 10BD     		pop	{r4, pc}
 299              	.L21:
 300              		.align	2
 301              	.L20:
 302 0024 80010540 		.word	1074069888
ARM GAS  C:\Users\g\AppData\Local\Temp\ccNCqeMN.s 			page 15


 303              		.cfi_endproc
 304              	.LFE9:
 305              		.size	TX_SEND_SetPWMSyncKill, .-TX_SEND_SetPWMSyncKill
 306              		.section	.text.TX_SEND_SetPWMStopOnKill,"ax",%progbits
 307              		.align	2
 308              		.global	TX_SEND_SetPWMStopOnKill
 309              		.code	16
 310              		.thumb_func
 311              		.type	TX_SEND_SetPWMStopOnKill, %function
 312              	TX_SEND_SetPWMStopOnKill:
 313              	.LFB10:
 497:.\Generated_Source\PSoC4/TX_SEND.c **** 
 498:.\Generated_Source\PSoC4/TX_SEND.c **** 
 499:.\Generated_Source\PSoC4/TX_SEND.c **** /*******************************************************************************
 500:.\Generated_Source\PSoC4/TX_SEND.c **** * Function Name: TX_SEND_SetPWMStopOnKill
 501:.\Generated_Source\PSoC4/TX_SEND.c **** ********************************************************************************
 502:.\Generated_Source\PSoC4/TX_SEND.c **** *
 503:.\Generated_Source\PSoC4/TX_SEND.c **** * Summary:
 504:.\Generated_Source\PSoC4/TX_SEND.c **** *  Writes the register that controls whether the PWM kill signal (stop input)
 505:.\Generated_Source\PSoC4/TX_SEND.c **** *  causes the PWM counter to stop.  By default the kill operation does not stop
 506:.\Generated_Source\PSoC4/TX_SEND.c **** *  the counter.  This functionality is only applicable to the three PWM modes.
 507:.\Generated_Source\PSoC4/TX_SEND.c **** *
 508:.\Generated_Source\PSoC4/TX_SEND.c **** *
 509:.\Generated_Source\PSoC4/TX_SEND.c **** * Parameters:
 510:.\Generated_Source\PSoC4/TX_SEND.c **** *  stopOnKillEnable
 511:.\Generated_Source\PSoC4/TX_SEND.c **** *   Values:
 512:.\Generated_Source\PSoC4/TX_SEND.c **** *     - 0 - Don't stop
 513:.\Generated_Source\PSoC4/TX_SEND.c **** *     - 1 - Stop
 514:.\Generated_Source\PSoC4/TX_SEND.c **** *
 515:.\Generated_Source\PSoC4/TX_SEND.c **** * Return:
 516:.\Generated_Source\PSoC4/TX_SEND.c **** *  None
 517:.\Generated_Source\PSoC4/TX_SEND.c **** *
 518:.\Generated_Source\PSoC4/TX_SEND.c **** *******************************************************************************/
 519:.\Generated_Source\PSoC4/TX_SEND.c **** void TX_SEND_SetPWMStopOnKill(uint32 stopOnKillEnable)
 520:.\Generated_Source\PSoC4/TX_SEND.c **** {
 314              		.loc 1 520 0
 315              		.cfi_startproc
 316              	.LVL24:
 317 0000 10B5     		push	{r4, lr}
 318              		.cfi_def_cfa_offset 8
 319              		.cfi_offset 4, -8
 320              		.cfi_offset 14, -4
 321 0002 041C     		mov	r4, r0
 521:.\Generated_Source\PSoC4/TX_SEND.c ****     uint8 enableInterrupts;
 522:.\Generated_Source\PSoC4/TX_SEND.c **** 
 523:.\Generated_Source\PSoC4/TX_SEND.c ****     enableInterrupts = CyEnterCriticalSection();
 322              		.loc 1 523 0
 323 0004 FFF7FEFF 		bl	CyEnterCriticalSection
 324              	.LVL25:
 524:.\Generated_Source\PSoC4/TX_SEND.c **** 
 525:.\Generated_Source\PSoC4/TX_SEND.c ****     TX_SEND_CONTROL_REG &= (uint32)~TX_SEND_PWM_STOP_KILL_MASK;
 325              		.loc 1 525 0
 326 0008 064B     		ldr	r3, .L23
 327 000a 1A68     		ldr	r2, [r3]
 328 000c 0821     		mov	r1, #8
 329 000e 8A43     		bic	r2, r1
 330 0010 1A60     		str	r2, [r3]
ARM GAS  C:\Users\g\AppData\Local\Temp\ccNCqeMN.s 			page 16


 526:.\Generated_Source\PSoC4/TX_SEND.c ****     TX_SEND_CONTROL_REG |= ((uint32)((stopOnKillEnable & TX_SEND_1BIT_MASK)  <<
 331              		.loc 1 526 0
 332 0012 1A68     		ldr	r2, [r3]
 333 0014 0739     		sub	r1, r1, #7
 334 0016 0C40     		and	r4, r1
 335              	.LVL26:
 336 0018 E400     		lsl	r4, r4, #3
 337 001a 1443     		orr	r4, r2
 338 001c 1C60     		str	r4, [r3]
 527:.\Generated_Source\PSoC4/TX_SEND.c ****                                                          TX_SEND_PWM_STOP_KILL_SHIFT));
 528:.\Generated_Source\PSoC4/TX_SEND.c **** 
 529:.\Generated_Source\PSoC4/TX_SEND.c ****     CyExitCriticalSection(enableInterrupts);
 339              		.loc 1 529 0
 340 001e FFF7FEFF 		bl	CyExitCriticalSection
 341              	.LVL27:
 530:.\Generated_Source\PSoC4/TX_SEND.c **** }
 342              		.loc 1 530 0
 343              		@ sp needed
 344 0022 10BD     		pop	{r4, pc}
 345              	.L24:
 346              		.align	2
 347              	.L23:
 348 0024 80010540 		.word	1074069888
 349              		.cfi_endproc
 350              	.LFE10:
 351              		.size	TX_SEND_SetPWMStopOnKill, .-TX_SEND_SetPWMStopOnKill
 352              		.section	.text.TX_SEND_SetPWMDeadTime,"ax",%progbits
 353              		.align	2
 354              		.global	TX_SEND_SetPWMDeadTime
 355              		.code	16
 356              		.thumb_func
 357              		.type	TX_SEND_SetPWMDeadTime, %function
 358              	TX_SEND_SetPWMDeadTime:
 359              	.LFB11:
 531:.\Generated_Source\PSoC4/TX_SEND.c **** 
 532:.\Generated_Source\PSoC4/TX_SEND.c **** 
 533:.\Generated_Source\PSoC4/TX_SEND.c **** /*******************************************************************************
 534:.\Generated_Source\PSoC4/TX_SEND.c **** * Function Name: TX_SEND_SetPWMDeadTime
 535:.\Generated_Source\PSoC4/TX_SEND.c **** ********************************************************************************
 536:.\Generated_Source\PSoC4/TX_SEND.c **** *
 537:.\Generated_Source\PSoC4/TX_SEND.c **** * Summary:
 538:.\Generated_Source\PSoC4/TX_SEND.c **** *  Writes the dead time control value.  This value delays the rising edge of
 539:.\Generated_Source\PSoC4/TX_SEND.c **** *  both the line and line_n signals the designated number of cycles resulting
 540:.\Generated_Source\PSoC4/TX_SEND.c **** *  in both signals being inactive for that many cycles.  This functionality is
 541:.\Generated_Source\PSoC4/TX_SEND.c **** *  only applicable to the PWM in the dead time mode.
 542:.\Generated_Source\PSoC4/TX_SEND.c **** 
 543:.\Generated_Source\PSoC4/TX_SEND.c **** *
 544:.\Generated_Source\PSoC4/TX_SEND.c **** * Parameters:
 545:.\Generated_Source\PSoC4/TX_SEND.c **** *  Dead time to insert
 546:.\Generated_Source\PSoC4/TX_SEND.c **** *   Values: 0 to 255
 547:.\Generated_Source\PSoC4/TX_SEND.c **** *
 548:.\Generated_Source\PSoC4/TX_SEND.c **** * Return:
 549:.\Generated_Source\PSoC4/TX_SEND.c **** *  None
 550:.\Generated_Source\PSoC4/TX_SEND.c **** *
 551:.\Generated_Source\PSoC4/TX_SEND.c **** *******************************************************************************/
 552:.\Generated_Source\PSoC4/TX_SEND.c **** void TX_SEND_SetPWMDeadTime(uint32 deadTime)
 553:.\Generated_Source\PSoC4/TX_SEND.c **** {
ARM GAS  C:\Users\g\AppData\Local\Temp\ccNCqeMN.s 			page 17


 360              		.loc 1 553 0
 361              		.cfi_startproc
 362              	.LVL28:
 363 0000 10B5     		push	{r4, lr}
 364              		.cfi_def_cfa_offset 8
 365              		.cfi_offset 4, -8
 366              		.cfi_offset 14, -4
 367 0002 041C     		mov	r4, r0
 554:.\Generated_Source\PSoC4/TX_SEND.c ****     uint8 enableInterrupts;
 555:.\Generated_Source\PSoC4/TX_SEND.c **** 
 556:.\Generated_Source\PSoC4/TX_SEND.c ****     enableInterrupts = CyEnterCriticalSection();
 368              		.loc 1 556 0
 369 0004 FFF7FEFF 		bl	CyEnterCriticalSection
 370              	.LVL29:
 557:.\Generated_Source\PSoC4/TX_SEND.c **** 
 558:.\Generated_Source\PSoC4/TX_SEND.c ****     TX_SEND_CONTROL_REG &= (uint32)~TX_SEND_PRESCALER_MASK;
 371              		.loc 1 558 0
 372 0008 064B     		ldr	r3, .L26
 373 000a 1968     		ldr	r1, [r3]
 374 000c 064A     		ldr	r2, .L26+4
 375 000e 0A40     		and	r2, r1
 376 0010 1A60     		str	r2, [r3]
 559:.\Generated_Source\PSoC4/TX_SEND.c ****     TX_SEND_CONTROL_REG |= ((uint32)((deadTime & TX_SEND_8BIT_MASK) <<
 377              		.loc 1 559 0
 378 0012 1A68     		ldr	r2, [r3]
 379 0014 2406     		lsl	r4, r4, #24
 380              	.LVL30:
 381 0016 240C     		lsr	r4, r4, #16
 382 0018 1443     		orr	r4, r2
 383 001a 1C60     		str	r4, [r3]
 560:.\Generated_Source\PSoC4/TX_SEND.c ****                                                           TX_SEND_PRESCALER_SHIFT));
 561:.\Generated_Source\PSoC4/TX_SEND.c **** 
 562:.\Generated_Source\PSoC4/TX_SEND.c ****     CyExitCriticalSection(enableInterrupts);
 384              		.loc 1 562 0
 385 001c FFF7FEFF 		bl	CyExitCriticalSection
 386              	.LVL31:
 563:.\Generated_Source\PSoC4/TX_SEND.c **** }
 387              		.loc 1 563 0
 388              		@ sp needed
 389 0020 10BD     		pop	{r4, pc}
 390              	.L27:
 391 0022 C046     		.align	2
 392              	.L26:
 393 0024 80010540 		.word	1074069888
 394 0028 FF00FFFF 		.word	-65281
 395              		.cfi_endproc
 396              	.LFE11:
 397              		.size	TX_SEND_SetPWMDeadTime, .-TX_SEND_SetPWMDeadTime
 398              		.section	.text.TX_SEND_SetPWMInvert,"ax",%progbits
 399              		.align	2
 400              		.global	TX_SEND_SetPWMInvert
 401              		.code	16
 402              		.thumb_func
 403              		.type	TX_SEND_SetPWMInvert, %function
 404              	TX_SEND_SetPWMInvert:
 405              	.LFB12:
 564:.\Generated_Source\PSoC4/TX_SEND.c **** 
ARM GAS  C:\Users\g\AppData\Local\Temp\ccNCqeMN.s 			page 18


 565:.\Generated_Source\PSoC4/TX_SEND.c **** 
 566:.\Generated_Source\PSoC4/TX_SEND.c **** /*******************************************************************************
 567:.\Generated_Source\PSoC4/TX_SEND.c **** * Function Name: TX_SEND_SetPWMInvert
 568:.\Generated_Source\PSoC4/TX_SEND.c **** ********************************************************************************
 569:.\Generated_Source\PSoC4/TX_SEND.c **** *
 570:.\Generated_Source\PSoC4/TX_SEND.c **** * Summary:
 571:.\Generated_Source\PSoC4/TX_SEND.c **** *  Writes the bits that control whether the line and line_n outputs are
 572:.\Generated_Source\PSoC4/TX_SEND.c **** *  inverted from their normal output values.  This functionality is only
 573:.\Generated_Source\PSoC4/TX_SEND.c **** *  applicable to the three PWM modes.
 574:.\Generated_Source\PSoC4/TX_SEND.c **** *
 575:.\Generated_Source\PSoC4/TX_SEND.c **** * Parameters:
 576:.\Generated_Source\PSoC4/TX_SEND.c **** *  mask: Mask of outputs to invert.
 577:.\Generated_Source\PSoC4/TX_SEND.c **** *   Values:
 578:.\Generated_Source\PSoC4/TX_SEND.c **** *         - TX_SEND_INVERT_LINE   - Inverts the line output
 579:.\Generated_Source\PSoC4/TX_SEND.c **** *         - TX_SEND_INVERT_LINE_N - Inverts the line_n output
 580:.\Generated_Source\PSoC4/TX_SEND.c **** *
 581:.\Generated_Source\PSoC4/TX_SEND.c **** * Return:
 582:.\Generated_Source\PSoC4/TX_SEND.c **** *  None
 583:.\Generated_Source\PSoC4/TX_SEND.c **** *
 584:.\Generated_Source\PSoC4/TX_SEND.c **** *******************************************************************************/
 585:.\Generated_Source\PSoC4/TX_SEND.c **** void TX_SEND_SetPWMInvert(uint32 mask)
 586:.\Generated_Source\PSoC4/TX_SEND.c **** {
 406              		.loc 1 586 0
 407              		.cfi_startproc
 408              	.LVL32:
 409 0000 10B5     		push	{r4, lr}
 410              		.cfi_def_cfa_offset 8
 411              		.cfi_offset 4, -8
 412              		.cfi_offset 14, -4
 413 0002 041C     		mov	r4, r0
 587:.\Generated_Source\PSoC4/TX_SEND.c ****     uint8 enableInterrupts;
 588:.\Generated_Source\PSoC4/TX_SEND.c **** 
 589:.\Generated_Source\PSoC4/TX_SEND.c ****     enableInterrupts = CyEnterCriticalSection();
 414              		.loc 1 589 0
 415 0004 FFF7FEFF 		bl	CyEnterCriticalSection
 416              	.LVL33:
 590:.\Generated_Source\PSoC4/TX_SEND.c **** 
 591:.\Generated_Source\PSoC4/TX_SEND.c ****     TX_SEND_CONTROL_REG &= (uint32)~TX_SEND_INV_OUT_MASK;
 417              		.loc 1 591 0
 418 0008 054B     		ldr	r3, .L29
 419 000a 1968     		ldr	r1, [r3]
 420 000c 054A     		ldr	r2, .L29+4
 421 000e 0A40     		and	r2, r1
 422 0010 1A60     		str	r2, [r3]
 592:.\Generated_Source\PSoC4/TX_SEND.c ****     TX_SEND_CONTROL_REG |= mask;
 423              		.loc 1 592 0
 424 0012 1A68     		ldr	r2, [r3]
 425 0014 1443     		orr	r4, r2
 426              	.LVL34:
 427 0016 1C60     		str	r4, [r3]
 593:.\Generated_Source\PSoC4/TX_SEND.c **** 
 594:.\Generated_Source\PSoC4/TX_SEND.c ****     CyExitCriticalSection(enableInterrupts);
 428              		.loc 1 594 0
 429 0018 FFF7FEFF 		bl	CyExitCriticalSection
 430              	.LVL35:
 595:.\Generated_Source\PSoC4/TX_SEND.c **** }
 431              		.loc 1 595 0
ARM GAS  C:\Users\g\AppData\Local\Temp\ccNCqeMN.s 			page 19


 432              		@ sp needed
 433 001c 10BD     		pop	{r4, pc}
 434              	.L30:
 435 001e C046     		.align	2
 436              	.L29:
 437 0020 80010540 		.word	1074069888
 438 0024 FFFFCFFF 		.word	-3145729
 439              		.cfi_endproc
 440              	.LFE12:
 441              		.size	TX_SEND_SetPWMInvert, .-TX_SEND_SetPWMInvert
 442              		.section	.text.TX_SEND_WriteCounter,"ax",%progbits
 443              		.align	2
 444              		.global	TX_SEND_WriteCounter
 445              		.code	16
 446              		.thumb_func
 447              		.type	TX_SEND_WriteCounter, %function
 448              	TX_SEND_WriteCounter:
 449              	.LFB13:
 596:.\Generated_Source\PSoC4/TX_SEND.c **** 
 597:.\Generated_Source\PSoC4/TX_SEND.c **** 
 598:.\Generated_Source\PSoC4/TX_SEND.c **** 
 599:.\Generated_Source\PSoC4/TX_SEND.c **** /*******************************************************************************
 600:.\Generated_Source\PSoC4/TX_SEND.c **** * Function Name: TX_SEND_WriteCounter
 601:.\Generated_Source\PSoC4/TX_SEND.c **** ********************************************************************************
 602:.\Generated_Source\PSoC4/TX_SEND.c **** *
 603:.\Generated_Source\PSoC4/TX_SEND.c **** * Summary:
 604:.\Generated_Source\PSoC4/TX_SEND.c **** *  Writes a new 16bit counter value directly into the counter register, thus
 605:.\Generated_Source\PSoC4/TX_SEND.c **** *  setting the counter (not the period) to the value written. It is not
 606:.\Generated_Source\PSoC4/TX_SEND.c **** *  advised to write to this field when the counter is running.
 607:.\Generated_Source\PSoC4/TX_SEND.c **** *
 608:.\Generated_Source\PSoC4/TX_SEND.c **** * Parameters:
 609:.\Generated_Source\PSoC4/TX_SEND.c **** *  count: value to write
 610:.\Generated_Source\PSoC4/TX_SEND.c **** *
 611:.\Generated_Source\PSoC4/TX_SEND.c **** * Return:
 612:.\Generated_Source\PSoC4/TX_SEND.c **** *  None
 613:.\Generated_Source\PSoC4/TX_SEND.c **** *
 614:.\Generated_Source\PSoC4/TX_SEND.c **** *******************************************************************************/
 615:.\Generated_Source\PSoC4/TX_SEND.c **** void TX_SEND_WriteCounter(uint32 count)
 616:.\Generated_Source\PSoC4/TX_SEND.c **** {
 450              		.loc 1 616 0
 451              		.cfi_startproc
 452              	.LVL36:
 617:.\Generated_Source\PSoC4/TX_SEND.c ****     TX_SEND_COUNTER_REG = (count & TX_SEND_16BIT_MASK);
 453              		.loc 1 617 0
 454 0000 0004     		lsl	r0, r0, #16
 455              	.LVL37:
 456 0002 000C     		lsr	r0, r0, #16
 457 0004 014B     		ldr	r3, .L32
 458 0006 1860     		str	r0, [r3]
 618:.\Generated_Source\PSoC4/TX_SEND.c **** }
 459              		.loc 1 618 0
 460              		@ sp needed
 461 0008 7047     		bx	lr
 462              	.L33:
 463 000a C046     		.align	2
 464              	.L32:
 465 000c 88010540 		.word	1074069896
ARM GAS  C:\Users\g\AppData\Local\Temp\ccNCqeMN.s 			page 20


 466              		.cfi_endproc
 467              	.LFE13:
 468              		.size	TX_SEND_WriteCounter, .-TX_SEND_WriteCounter
 469              		.section	.text.TX_SEND_ReadCounter,"ax",%progbits
 470              		.align	2
 471              		.global	TX_SEND_ReadCounter
 472              		.code	16
 473              		.thumb_func
 474              		.type	TX_SEND_ReadCounter, %function
 475              	TX_SEND_ReadCounter:
 476              	.LFB14:
 619:.\Generated_Source\PSoC4/TX_SEND.c **** 
 620:.\Generated_Source\PSoC4/TX_SEND.c **** 
 621:.\Generated_Source\PSoC4/TX_SEND.c **** /*******************************************************************************
 622:.\Generated_Source\PSoC4/TX_SEND.c **** * Function Name: TX_SEND_ReadCounter
 623:.\Generated_Source\PSoC4/TX_SEND.c **** ********************************************************************************
 624:.\Generated_Source\PSoC4/TX_SEND.c **** *
 625:.\Generated_Source\PSoC4/TX_SEND.c **** * Summary:
 626:.\Generated_Source\PSoC4/TX_SEND.c **** *  Reads the current counter value.
 627:.\Generated_Source\PSoC4/TX_SEND.c **** *
 628:.\Generated_Source\PSoC4/TX_SEND.c **** * Parameters:
 629:.\Generated_Source\PSoC4/TX_SEND.c **** *  None
 630:.\Generated_Source\PSoC4/TX_SEND.c **** *
 631:.\Generated_Source\PSoC4/TX_SEND.c **** * Return:
 632:.\Generated_Source\PSoC4/TX_SEND.c **** *  Current counter value
 633:.\Generated_Source\PSoC4/TX_SEND.c **** *
 634:.\Generated_Source\PSoC4/TX_SEND.c **** *******************************************************************************/
 635:.\Generated_Source\PSoC4/TX_SEND.c **** uint32 TX_SEND_ReadCounter(void)
 636:.\Generated_Source\PSoC4/TX_SEND.c **** {
 477              		.loc 1 636 0
 478              		.cfi_startproc
 637:.\Generated_Source\PSoC4/TX_SEND.c ****     return (TX_SEND_COUNTER_REG & TX_SEND_16BIT_MASK);
 479              		.loc 1 637 0
 480 0000 024B     		ldr	r3, .L35
 481 0002 1868     		ldr	r0, [r3]
 482 0004 0004     		lsl	r0, r0, #16
 483 0006 000C     		lsr	r0, r0, #16
 638:.\Generated_Source\PSoC4/TX_SEND.c **** }
 484              		.loc 1 638 0
 485              		@ sp needed
 486 0008 7047     		bx	lr
 487              	.L36:
 488 000a C046     		.align	2
 489              	.L35:
 490 000c 88010540 		.word	1074069896
 491              		.cfi_endproc
 492              	.LFE14:
 493              		.size	TX_SEND_ReadCounter, .-TX_SEND_ReadCounter
 494              		.section	.text.TX_SEND_SetCounterMode,"ax",%progbits
 495              		.align	2
 496              		.global	TX_SEND_SetCounterMode
 497              		.code	16
 498              		.thumb_func
 499              		.type	TX_SEND_SetCounterMode, %function
 500              	TX_SEND_SetCounterMode:
 501              	.LFB15:
 639:.\Generated_Source\PSoC4/TX_SEND.c **** 
ARM GAS  C:\Users\g\AppData\Local\Temp\ccNCqeMN.s 			page 21


 640:.\Generated_Source\PSoC4/TX_SEND.c **** 
 641:.\Generated_Source\PSoC4/TX_SEND.c **** /*******************************************************************************
 642:.\Generated_Source\PSoC4/TX_SEND.c **** * Function Name: TX_SEND_SetCounterMode
 643:.\Generated_Source\PSoC4/TX_SEND.c **** ********************************************************************************
 644:.\Generated_Source\PSoC4/TX_SEND.c **** *
 645:.\Generated_Source\PSoC4/TX_SEND.c **** * Summary:
 646:.\Generated_Source\PSoC4/TX_SEND.c **** *  Sets the counter mode.  Applicable to all modes except Quadrature Decoder
 647:.\Generated_Source\PSoC4/TX_SEND.c **** *  and the PWM with a pseudo random output.
 648:.\Generated_Source\PSoC4/TX_SEND.c **** *
 649:.\Generated_Source\PSoC4/TX_SEND.c **** * Parameters:
 650:.\Generated_Source\PSoC4/TX_SEND.c **** *  counterMode: Enumerated counter type values
 651:.\Generated_Source\PSoC4/TX_SEND.c **** *   Values:
 652:.\Generated_Source\PSoC4/TX_SEND.c **** *     - TX_SEND_COUNT_UP       - Counts up
 653:.\Generated_Source\PSoC4/TX_SEND.c **** *     - TX_SEND_COUNT_DOWN     - Counts down
 654:.\Generated_Source\PSoC4/TX_SEND.c **** *     - TX_SEND_COUNT_UPDOWN0  - Counts up and down. Terminal count
 655:.\Generated_Source\PSoC4/TX_SEND.c **** *                                         generated when counter reaches 0
 656:.\Generated_Source\PSoC4/TX_SEND.c **** *     - TX_SEND_COUNT_UPDOWN1  - Counts up and down. Terminal count
 657:.\Generated_Source\PSoC4/TX_SEND.c **** *                                         generated both when counter reaches 0
 658:.\Generated_Source\PSoC4/TX_SEND.c **** *                                         and period
 659:.\Generated_Source\PSoC4/TX_SEND.c **** *
 660:.\Generated_Source\PSoC4/TX_SEND.c **** * Return:
 661:.\Generated_Source\PSoC4/TX_SEND.c **** *  None
 662:.\Generated_Source\PSoC4/TX_SEND.c **** *
 663:.\Generated_Source\PSoC4/TX_SEND.c **** *******************************************************************************/
 664:.\Generated_Source\PSoC4/TX_SEND.c **** void TX_SEND_SetCounterMode(uint32 counterMode)
 665:.\Generated_Source\PSoC4/TX_SEND.c **** {
 502              		.loc 1 665 0
 503              		.cfi_startproc
 504              	.LVL38:
 505 0000 10B5     		push	{r4, lr}
 506              		.cfi_def_cfa_offset 8
 507              		.cfi_offset 4, -8
 508              		.cfi_offset 14, -4
 509 0002 041C     		mov	r4, r0
 666:.\Generated_Source\PSoC4/TX_SEND.c ****     uint8 enableInterrupts;
 667:.\Generated_Source\PSoC4/TX_SEND.c **** 
 668:.\Generated_Source\PSoC4/TX_SEND.c ****     enableInterrupts = CyEnterCriticalSection();
 510              		.loc 1 668 0
 511 0004 FFF7FEFF 		bl	CyEnterCriticalSection
 512              	.LVL39:
 669:.\Generated_Source\PSoC4/TX_SEND.c **** 
 670:.\Generated_Source\PSoC4/TX_SEND.c ****     TX_SEND_CONTROL_REG &= (uint32)~TX_SEND_UPDOWN_MASK;
 513              		.loc 1 670 0
 514 0008 054B     		ldr	r3, .L38
 515 000a 1968     		ldr	r1, [r3]
 516 000c 054A     		ldr	r2, .L38+4
 517 000e 0A40     		and	r2, r1
 518 0010 1A60     		str	r2, [r3]
 671:.\Generated_Source\PSoC4/TX_SEND.c ****     TX_SEND_CONTROL_REG |= counterMode;
 519              		.loc 1 671 0
 520 0012 1A68     		ldr	r2, [r3]
 521 0014 1443     		orr	r4, r2
 522              	.LVL40:
 523 0016 1C60     		str	r4, [r3]
 672:.\Generated_Source\PSoC4/TX_SEND.c **** 
 673:.\Generated_Source\PSoC4/TX_SEND.c ****     CyExitCriticalSection(enableInterrupts);
 524              		.loc 1 673 0
ARM GAS  C:\Users\g\AppData\Local\Temp\ccNCqeMN.s 			page 22


 525 0018 FFF7FEFF 		bl	CyExitCriticalSection
 526              	.LVL41:
 674:.\Generated_Source\PSoC4/TX_SEND.c **** }
 527              		.loc 1 674 0
 528              		@ sp needed
 529 001c 10BD     		pop	{r4, pc}
 530              	.L39:
 531 001e C046     		.align	2
 532              	.L38:
 533 0020 80010540 		.word	1074069888
 534 0024 FFFFFCFF 		.word	-196609
 535              		.cfi_endproc
 536              	.LFE15:
 537              		.size	TX_SEND_SetCounterMode, .-TX_SEND_SetCounterMode
 538              		.section	.text.TX_SEND_WritePeriod,"ax",%progbits
 539              		.align	2
 540              		.global	TX_SEND_WritePeriod
 541              		.code	16
 542              		.thumb_func
 543              		.type	TX_SEND_WritePeriod, %function
 544              	TX_SEND_WritePeriod:
 545              	.LFB16:
 675:.\Generated_Source\PSoC4/TX_SEND.c **** 
 676:.\Generated_Source\PSoC4/TX_SEND.c **** 
 677:.\Generated_Source\PSoC4/TX_SEND.c **** /*******************************************************************************
 678:.\Generated_Source\PSoC4/TX_SEND.c **** * Function Name: TX_SEND_WritePeriod
 679:.\Generated_Source\PSoC4/TX_SEND.c **** ********************************************************************************
 680:.\Generated_Source\PSoC4/TX_SEND.c **** *
 681:.\Generated_Source\PSoC4/TX_SEND.c **** * Summary:
 682:.\Generated_Source\PSoC4/TX_SEND.c **** *  Writes the 16 bit period register with the new period value.
 683:.\Generated_Source\PSoC4/TX_SEND.c **** *  To cause the counter to count for N cycles this register should be written
 684:.\Generated_Source\PSoC4/TX_SEND.c **** *  with N-1 (counts from 0 to period inclusive).
 685:.\Generated_Source\PSoC4/TX_SEND.c **** *
 686:.\Generated_Source\PSoC4/TX_SEND.c **** * Parameters:
 687:.\Generated_Source\PSoC4/TX_SEND.c **** *  period: Period value
 688:.\Generated_Source\PSoC4/TX_SEND.c **** *
 689:.\Generated_Source\PSoC4/TX_SEND.c **** * Return:
 690:.\Generated_Source\PSoC4/TX_SEND.c **** *  None
 691:.\Generated_Source\PSoC4/TX_SEND.c **** *
 692:.\Generated_Source\PSoC4/TX_SEND.c **** *******************************************************************************/
 693:.\Generated_Source\PSoC4/TX_SEND.c **** void TX_SEND_WritePeriod(uint32 period)
 694:.\Generated_Source\PSoC4/TX_SEND.c **** {
 546              		.loc 1 694 0
 547              		.cfi_startproc
 548              	.LVL42:
 695:.\Generated_Source\PSoC4/TX_SEND.c ****     TX_SEND_PERIOD_REG = (period & TX_SEND_16BIT_MASK);
 549              		.loc 1 695 0
 550 0000 0004     		lsl	r0, r0, #16
 551              	.LVL43:
 552 0002 000C     		lsr	r0, r0, #16
 553 0004 014B     		ldr	r3, .L41
 554 0006 1860     		str	r0, [r3]
 696:.\Generated_Source\PSoC4/TX_SEND.c **** }
 555              		.loc 1 696 0
 556              		@ sp needed
 557 0008 7047     		bx	lr
 558              	.L42:
ARM GAS  C:\Users\g\AppData\Local\Temp\ccNCqeMN.s 			page 23


 559 000a C046     		.align	2
 560              	.L41:
 561 000c 94010540 		.word	1074069908
 562              		.cfi_endproc
 563              	.LFE16:
 564              		.size	TX_SEND_WritePeriod, .-TX_SEND_WritePeriod
 565              		.section	.text.TX_SEND_ReadPeriod,"ax",%progbits
 566              		.align	2
 567              		.global	TX_SEND_ReadPeriod
 568              		.code	16
 569              		.thumb_func
 570              		.type	TX_SEND_ReadPeriod, %function
 571              	TX_SEND_ReadPeriod:
 572              	.LFB17:
 697:.\Generated_Source\PSoC4/TX_SEND.c **** 
 698:.\Generated_Source\PSoC4/TX_SEND.c **** 
 699:.\Generated_Source\PSoC4/TX_SEND.c **** /*******************************************************************************
 700:.\Generated_Source\PSoC4/TX_SEND.c **** * Function Name: TX_SEND_ReadPeriod
 701:.\Generated_Source\PSoC4/TX_SEND.c **** ********************************************************************************
 702:.\Generated_Source\PSoC4/TX_SEND.c **** *
 703:.\Generated_Source\PSoC4/TX_SEND.c **** * Summary:
 704:.\Generated_Source\PSoC4/TX_SEND.c **** *  Reads the 16 bit period register.
 705:.\Generated_Source\PSoC4/TX_SEND.c **** *
 706:.\Generated_Source\PSoC4/TX_SEND.c **** * Parameters:
 707:.\Generated_Source\PSoC4/TX_SEND.c **** *  None
 708:.\Generated_Source\PSoC4/TX_SEND.c **** *
 709:.\Generated_Source\PSoC4/TX_SEND.c **** * Return:
 710:.\Generated_Source\PSoC4/TX_SEND.c **** *  Period value
 711:.\Generated_Source\PSoC4/TX_SEND.c **** *
 712:.\Generated_Source\PSoC4/TX_SEND.c **** *******************************************************************************/
 713:.\Generated_Source\PSoC4/TX_SEND.c **** uint32 TX_SEND_ReadPeriod(void)
 714:.\Generated_Source\PSoC4/TX_SEND.c **** {
 573              		.loc 1 714 0
 574              		.cfi_startproc
 715:.\Generated_Source\PSoC4/TX_SEND.c ****     return (TX_SEND_PERIOD_REG & TX_SEND_16BIT_MASK);
 575              		.loc 1 715 0
 576 0000 024B     		ldr	r3, .L44
 577 0002 1868     		ldr	r0, [r3]
 578 0004 0004     		lsl	r0, r0, #16
 579 0006 000C     		lsr	r0, r0, #16
 716:.\Generated_Source\PSoC4/TX_SEND.c **** }
 580              		.loc 1 716 0
 581              		@ sp needed
 582 0008 7047     		bx	lr
 583              	.L45:
 584 000a C046     		.align	2
 585              	.L44:
 586 000c 94010540 		.word	1074069908
 587              		.cfi_endproc
 588              	.LFE17:
 589              		.size	TX_SEND_ReadPeriod, .-TX_SEND_ReadPeriod
 590              		.section	.text.TX_SEND_SetCompareSwap,"ax",%progbits
 591              		.align	2
 592              		.global	TX_SEND_SetCompareSwap
 593              		.code	16
 594              		.thumb_func
 595              		.type	TX_SEND_SetCompareSwap, %function
ARM GAS  C:\Users\g\AppData\Local\Temp\ccNCqeMN.s 			page 24


 596              	TX_SEND_SetCompareSwap:
 597              	.LFB18:
 717:.\Generated_Source\PSoC4/TX_SEND.c **** 
 718:.\Generated_Source\PSoC4/TX_SEND.c **** 
 719:.\Generated_Source\PSoC4/TX_SEND.c **** /*******************************************************************************
 720:.\Generated_Source\PSoC4/TX_SEND.c **** * Function Name: TX_SEND_SetCompareSwap
 721:.\Generated_Source\PSoC4/TX_SEND.c **** ********************************************************************************
 722:.\Generated_Source\PSoC4/TX_SEND.c **** *
 723:.\Generated_Source\PSoC4/TX_SEND.c **** * Summary:
 724:.\Generated_Source\PSoC4/TX_SEND.c **** *  Writes the register that controls whether the compare registers are
 725:.\Generated_Source\PSoC4/TX_SEND.c **** *  swapped. When enabled in the Timer/Counter mode(without capture) the swap
 726:.\Generated_Source\PSoC4/TX_SEND.c **** *  occurs at a TC event. In the PWM mode the swap occurs at the next TC event
 727:.\Generated_Source\PSoC4/TX_SEND.c **** *  following a hardware switch event.
 728:.\Generated_Source\PSoC4/TX_SEND.c **** *
 729:.\Generated_Source\PSoC4/TX_SEND.c **** * Parameters:
 730:.\Generated_Source\PSoC4/TX_SEND.c **** *  swapEnable
 731:.\Generated_Source\PSoC4/TX_SEND.c **** *   Values:
 732:.\Generated_Source\PSoC4/TX_SEND.c **** *     - 0 - Disable swap
 733:.\Generated_Source\PSoC4/TX_SEND.c **** *     - 1 - Enable swap
 734:.\Generated_Source\PSoC4/TX_SEND.c **** *
 735:.\Generated_Source\PSoC4/TX_SEND.c **** * Return:
 736:.\Generated_Source\PSoC4/TX_SEND.c **** *  None
 737:.\Generated_Source\PSoC4/TX_SEND.c **** *
 738:.\Generated_Source\PSoC4/TX_SEND.c **** *******************************************************************************/
 739:.\Generated_Source\PSoC4/TX_SEND.c **** void TX_SEND_SetCompareSwap(uint32 swapEnable)
 740:.\Generated_Source\PSoC4/TX_SEND.c **** {
 598              		.loc 1 740 0
 599              		.cfi_startproc
 600              	.LVL44:
 601 0000 10B5     		push	{r4, lr}
 602              		.cfi_def_cfa_offset 8
 603              		.cfi_offset 4, -8
 604              		.cfi_offset 14, -4
 605 0002 041C     		mov	r4, r0
 741:.\Generated_Source\PSoC4/TX_SEND.c ****     uint8 enableInterrupts;
 742:.\Generated_Source\PSoC4/TX_SEND.c **** 
 743:.\Generated_Source\PSoC4/TX_SEND.c ****     enableInterrupts = CyEnterCriticalSection();
 606              		.loc 1 743 0
 607 0004 FFF7FEFF 		bl	CyEnterCriticalSection
 608              	.LVL45:
 744:.\Generated_Source\PSoC4/TX_SEND.c **** 
 745:.\Generated_Source\PSoC4/TX_SEND.c ****     TX_SEND_CONTROL_REG &= (uint32)~TX_SEND_RELOAD_CC_MASK;
 609              		.loc 1 745 0
 610 0008 054B     		ldr	r3, .L47
 611 000a 1A68     		ldr	r2, [r3]
 612 000c 0121     		mov	r1, #1
 613 000e 8A43     		bic	r2, r1
 614 0010 1A60     		str	r2, [r3]
 746:.\Generated_Source\PSoC4/TX_SEND.c ****     TX_SEND_CONTROL_REG |= (swapEnable & TX_SEND_1BIT_MASK);
 615              		.loc 1 746 0
 616 0012 1A68     		ldr	r2, [r3]
 617 0014 0C40     		and	r4, r1
 618              	.LVL46:
 619 0016 1443     		orr	r4, r2
 620 0018 1C60     		str	r4, [r3]
 747:.\Generated_Source\PSoC4/TX_SEND.c **** 
 748:.\Generated_Source\PSoC4/TX_SEND.c ****     CyExitCriticalSection(enableInterrupts);
ARM GAS  C:\Users\g\AppData\Local\Temp\ccNCqeMN.s 			page 25


 621              		.loc 1 748 0
 622 001a FFF7FEFF 		bl	CyExitCriticalSection
 623              	.LVL47:
 749:.\Generated_Source\PSoC4/TX_SEND.c **** }
 624              		.loc 1 749 0
 625              		@ sp needed
 626 001e 10BD     		pop	{r4, pc}
 627              	.L48:
 628              		.align	2
 629              	.L47:
 630 0020 80010540 		.word	1074069888
 631              		.cfi_endproc
 632              	.LFE18:
 633              		.size	TX_SEND_SetCompareSwap, .-TX_SEND_SetCompareSwap
 634              		.section	.text.TX_SEND_WritePeriodBuf,"ax",%progbits
 635              		.align	2
 636              		.global	TX_SEND_WritePeriodBuf
 637              		.code	16
 638              		.thumb_func
 639              		.type	TX_SEND_WritePeriodBuf, %function
 640              	TX_SEND_WritePeriodBuf:
 641              	.LFB19:
 750:.\Generated_Source\PSoC4/TX_SEND.c **** 
 751:.\Generated_Source\PSoC4/TX_SEND.c **** 
 752:.\Generated_Source\PSoC4/TX_SEND.c **** /*******************************************************************************
 753:.\Generated_Source\PSoC4/TX_SEND.c **** * Function Name: TX_SEND_WritePeriodBuf
 754:.\Generated_Source\PSoC4/TX_SEND.c **** ********************************************************************************
 755:.\Generated_Source\PSoC4/TX_SEND.c **** *
 756:.\Generated_Source\PSoC4/TX_SEND.c **** * Summary:
 757:.\Generated_Source\PSoC4/TX_SEND.c **** *  Writes the 16 bit period buf register with the new period value.
 758:.\Generated_Source\PSoC4/TX_SEND.c **** *
 759:.\Generated_Source\PSoC4/TX_SEND.c **** * Parameters:
 760:.\Generated_Source\PSoC4/TX_SEND.c **** *  periodBuf: Period value
 761:.\Generated_Source\PSoC4/TX_SEND.c **** *
 762:.\Generated_Source\PSoC4/TX_SEND.c **** * Return:
 763:.\Generated_Source\PSoC4/TX_SEND.c **** *  None
 764:.\Generated_Source\PSoC4/TX_SEND.c **** *
 765:.\Generated_Source\PSoC4/TX_SEND.c **** *******************************************************************************/
 766:.\Generated_Source\PSoC4/TX_SEND.c **** void TX_SEND_WritePeriodBuf(uint32 periodBuf)
 767:.\Generated_Source\PSoC4/TX_SEND.c **** {
 642              		.loc 1 767 0
 643              		.cfi_startproc
 644              	.LVL48:
 768:.\Generated_Source\PSoC4/TX_SEND.c ****     TX_SEND_PERIOD_BUF_REG = (periodBuf & TX_SEND_16BIT_MASK);
 645              		.loc 1 768 0
 646 0000 0004     		lsl	r0, r0, #16
 647              	.LVL49:
 648 0002 000C     		lsr	r0, r0, #16
 649 0004 014B     		ldr	r3, .L50
 650 0006 1860     		str	r0, [r3]
 769:.\Generated_Source\PSoC4/TX_SEND.c **** }
 651              		.loc 1 769 0
 652              		@ sp needed
 653 0008 7047     		bx	lr
 654              	.L51:
 655 000a C046     		.align	2
 656              	.L50:
ARM GAS  C:\Users\g\AppData\Local\Temp\ccNCqeMN.s 			page 26


 657 000c 98010540 		.word	1074069912
 658              		.cfi_endproc
 659              	.LFE19:
 660              		.size	TX_SEND_WritePeriodBuf, .-TX_SEND_WritePeriodBuf
 661              		.section	.text.TX_SEND_ReadPeriodBuf,"ax",%progbits
 662              		.align	2
 663              		.global	TX_SEND_ReadPeriodBuf
 664              		.code	16
 665              		.thumb_func
 666              		.type	TX_SEND_ReadPeriodBuf, %function
 667              	TX_SEND_ReadPeriodBuf:
 668              	.LFB20:
 770:.\Generated_Source\PSoC4/TX_SEND.c **** 
 771:.\Generated_Source\PSoC4/TX_SEND.c **** 
 772:.\Generated_Source\PSoC4/TX_SEND.c **** /*******************************************************************************
 773:.\Generated_Source\PSoC4/TX_SEND.c **** * Function Name: TX_SEND_ReadPeriodBuf
 774:.\Generated_Source\PSoC4/TX_SEND.c **** ********************************************************************************
 775:.\Generated_Source\PSoC4/TX_SEND.c **** *
 776:.\Generated_Source\PSoC4/TX_SEND.c **** * Summary:
 777:.\Generated_Source\PSoC4/TX_SEND.c **** *  Reads the 16 bit period buf register.
 778:.\Generated_Source\PSoC4/TX_SEND.c **** *
 779:.\Generated_Source\PSoC4/TX_SEND.c **** * Parameters:
 780:.\Generated_Source\PSoC4/TX_SEND.c **** *  None
 781:.\Generated_Source\PSoC4/TX_SEND.c **** *
 782:.\Generated_Source\PSoC4/TX_SEND.c **** * Return:
 783:.\Generated_Source\PSoC4/TX_SEND.c **** *  Period value
 784:.\Generated_Source\PSoC4/TX_SEND.c **** *
 785:.\Generated_Source\PSoC4/TX_SEND.c **** *******************************************************************************/
 786:.\Generated_Source\PSoC4/TX_SEND.c **** uint32 TX_SEND_ReadPeriodBuf(void)
 787:.\Generated_Source\PSoC4/TX_SEND.c **** {
 669              		.loc 1 787 0
 670              		.cfi_startproc
 788:.\Generated_Source\PSoC4/TX_SEND.c ****     return (TX_SEND_PERIOD_BUF_REG & TX_SEND_16BIT_MASK);
 671              		.loc 1 788 0
 672 0000 024B     		ldr	r3, .L53
 673 0002 1868     		ldr	r0, [r3]
 674 0004 0004     		lsl	r0, r0, #16
 675 0006 000C     		lsr	r0, r0, #16
 789:.\Generated_Source\PSoC4/TX_SEND.c **** }
 676              		.loc 1 789 0
 677              		@ sp needed
 678 0008 7047     		bx	lr
 679              	.L54:
 680 000a C046     		.align	2
 681              	.L53:
 682 000c 98010540 		.word	1074069912
 683              		.cfi_endproc
 684              	.LFE20:
 685              		.size	TX_SEND_ReadPeriodBuf, .-TX_SEND_ReadPeriodBuf
 686              		.section	.text.TX_SEND_SetPeriodSwap,"ax",%progbits
 687              		.align	2
 688              		.global	TX_SEND_SetPeriodSwap
 689              		.code	16
 690              		.thumb_func
 691              		.type	TX_SEND_SetPeriodSwap, %function
 692              	TX_SEND_SetPeriodSwap:
 693              	.LFB21:
ARM GAS  C:\Users\g\AppData\Local\Temp\ccNCqeMN.s 			page 27


 790:.\Generated_Source\PSoC4/TX_SEND.c **** 
 791:.\Generated_Source\PSoC4/TX_SEND.c **** 
 792:.\Generated_Source\PSoC4/TX_SEND.c **** /*******************************************************************************
 793:.\Generated_Source\PSoC4/TX_SEND.c **** * Function Name: TX_SEND_SetPeriodSwap
 794:.\Generated_Source\PSoC4/TX_SEND.c **** ********************************************************************************
 795:.\Generated_Source\PSoC4/TX_SEND.c **** *
 796:.\Generated_Source\PSoC4/TX_SEND.c **** * Summary:
 797:.\Generated_Source\PSoC4/TX_SEND.c **** *  Writes the register that controls whether the period registers are
 798:.\Generated_Source\PSoC4/TX_SEND.c **** *  swapped. When enabled in Timer/Counter mode the swap occurs at a TC event.
 799:.\Generated_Source\PSoC4/TX_SEND.c **** *  In the PWM mode the swap occurs at the next TC event following a hardware
 800:.\Generated_Source\PSoC4/TX_SEND.c **** *  switch event.
 801:.\Generated_Source\PSoC4/TX_SEND.c **** *
 802:.\Generated_Source\PSoC4/TX_SEND.c **** * Parameters:
 803:.\Generated_Source\PSoC4/TX_SEND.c **** *  swapEnable
 804:.\Generated_Source\PSoC4/TX_SEND.c **** *   Values:
 805:.\Generated_Source\PSoC4/TX_SEND.c **** *     - 0 - Disable swap
 806:.\Generated_Source\PSoC4/TX_SEND.c **** *     - 1 - Enable swap
 807:.\Generated_Source\PSoC4/TX_SEND.c **** *
 808:.\Generated_Source\PSoC4/TX_SEND.c **** * Return:
 809:.\Generated_Source\PSoC4/TX_SEND.c **** *  None
 810:.\Generated_Source\PSoC4/TX_SEND.c **** *
 811:.\Generated_Source\PSoC4/TX_SEND.c **** *******************************************************************************/
 812:.\Generated_Source\PSoC4/TX_SEND.c **** void TX_SEND_SetPeriodSwap(uint32 swapEnable)
 813:.\Generated_Source\PSoC4/TX_SEND.c **** {
 694              		.loc 1 813 0
 695              		.cfi_startproc
 696              	.LVL50:
 697 0000 10B5     		push	{r4, lr}
 698              		.cfi_def_cfa_offset 8
 699              		.cfi_offset 4, -8
 700              		.cfi_offset 14, -4
 701 0002 041C     		mov	r4, r0
 814:.\Generated_Source\PSoC4/TX_SEND.c ****     uint8 enableInterrupts;
 815:.\Generated_Source\PSoC4/TX_SEND.c **** 
 816:.\Generated_Source\PSoC4/TX_SEND.c ****     enableInterrupts = CyEnterCriticalSection();
 702              		.loc 1 816 0
 703 0004 FFF7FEFF 		bl	CyEnterCriticalSection
 704              	.LVL51:
 817:.\Generated_Source\PSoC4/TX_SEND.c **** 
 818:.\Generated_Source\PSoC4/TX_SEND.c ****     TX_SEND_CONTROL_REG &= (uint32)~TX_SEND_RELOAD_PERIOD_MASK;
 705              		.loc 1 818 0
 706 0008 064B     		ldr	r3, .L56
 707 000a 1A68     		ldr	r2, [r3]
 708 000c 0221     		mov	r1, #2
 709 000e 8A43     		bic	r2, r1
 710 0010 1A60     		str	r2, [r3]
 819:.\Generated_Source\PSoC4/TX_SEND.c ****     TX_SEND_CONTROL_REG |= ((uint32)((swapEnable & TX_SEND_1BIT_MASK) <<
 711              		.loc 1 819 0
 712 0012 1A68     		ldr	r2, [r3]
 713 0014 0139     		sub	r1, r1, #1
 714 0016 0C40     		and	r4, r1
 715              	.LVL52:
 716 0018 6400     		lsl	r4, r4, #1
 717 001a 1443     		orr	r4, r2
 718 001c 1C60     		str	r4, [r3]
 820:.\Generated_Source\PSoC4/TX_SEND.c ****                                                             TX_SEND_RELOAD_PERIOD_SHIFT));
 821:.\Generated_Source\PSoC4/TX_SEND.c **** 
ARM GAS  C:\Users\g\AppData\Local\Temp\ccNCqeMN.s 			page 28


 822:.\Generated_Source\PSoC4/TX_SEND.c ****     CyExitCriticalSection(enableInterrupts);
 719              		.loc 1 822 0
 720 001e FFF7FEFF 		bl	CyExitCriticalSection
 721              	.LVL53:
 823:.\Generated_Source\PSoC4/TX_SEND.c **** }
 722              		.loc 1 823 0
 723              		@ sp needed
 724 0022 10BD     		pop	{r4, pc}
 725              	.L57:
 726              		.align	2
 727              	.L56:
 728 0024 80010540 		.word	1074069888
 729              		.cfi_endproc
 730              	.LFE21:
 731              		.size	TX_SEND_SetPeriodSwap, .-TX_SEND_SetPeriodSwap
 732              		.section	.text.TX_SEND_WriteCompare,"ax",%progbits
 733              		.align	2
 734              		.global	TX_SEND_WriteCompare
 735              		.code	16
 736              		.thumb_func
 737              		.type	TX_SEND_WriteCompare, %function
 738              	TX_SEND_WriteCompare:
 739              	.LFB22:
 824:.\Generated_Source\PSoC4/TX_SEND.c **** 
 825:.\Generated_Source\PSoC4/TX_SEND.c **** 
 826:.\Generated_Source\PSoC4/TX_SEND.c **** /*******************************************************************************
 827:.\Generated_Source\PSoC4/TX_SEND.c **** * Function Name: TX_SEND_WriteCompare
 828:.\Generated_Source\PSoC4/TX_SEND.c **** ********************************************************************************
 829:.\Generated_Source\PSoC4/TX_SEND.c **** *
 830:.\Generated_Source\PSoC4/TX_SEND.c **** * Summary:
 831:.\Generated_Source\PSoC4/TX_SEND.c **** *  Writes the 16 bit compare register with the new compare value. Not
 832:.\Generated_Source\PSoC4/TX_SEND.c **** *  applicable for Timer/Counter with Capture or in Quadrature Decoder modes.
 833:.\Generated_Source\PSoC4/TX_SEND.c **** *
 834:.\Generated_Source\PSoC4/TX_SEND.c **** * Parameters:
 835:.\Generated_Source\PSoC4/TX_SEND.c **** *  compare: Compare value
 836:.\Generated_Source\PSoC4/TX_SEND.c **** *
 837:.\Generated_Source\PSoC4/TX_SEND.c **** * Return:
 838:.\Generated_Source\PSoC4/TX_SEND.c **** *  None
 839:.\Generated_Source\PSoC4/TX_SEND.c **** *
 840:.\Generated_Source\PSoC4/TX_SEND.c **** * Note:
 841:.\Generated_Source\PSoC4/TX_SEND.c **** *  It is not recommended to use the value equal to "0" or equal to 
 842:.\Generated_Source\PSoC4/TX_SEND.c **** *  "period value" in Center or Asymmetric align PWM modes on the 
 843:.\Generated_Source\PSoC4/TX_SEND.c **** *  PSoC 4100/PSoC 4200 devices.
 844:.\Generated_Source\PSoC4/TX_SEND.c **** *  PSoC 4000 devices write the 16 bit compare register with the decremented 
 845:.\Generated_Source\PSoC4/TX_SEND.c **** *  compare value in the Up counting mode (except 0x0u), and the incremented 
 846:.\Generated_Source\PSoC4/TX_SEND.c **** *  compare value in the Down counting mode (except 0xFFFFu).
 847:.\Generated_Source\PSoC4/TX_SEND.c **** *
 848:.\Generated_Source\PSoC4/TX_SEND.c **** *******************************************************************************/
 849:.\Generated_Source\PSoC4/TX_SEND.c **** void TX_SEND_WriteCompare(uint32 compare)
 850:.\Generated_Source\PSoC4/TX_SEND.c **** {
 740              		.loc 1 850 0
 741              		.cfi_startproc
 742              	.LVL54:
 851:.\Generated_Source\PSoC4/TX_SEND.c ****     #if (TX_SEND_CY_TCPWM_4000)
 852:.\Generated_Source\PSoC4/TX_SEND.c ****         uint32 currentMode;
 853:.\Generated_Source\PSoC4/TX_SEND.c ****     #endif /* (TX_SEND_CY_TCPWM_4000) */
 854:.\Generated_Source\PSoC4/TX_SEND.c **** 
ARM GAS  C:\Users\g\AppData\Local\Temp\ccNCqeMN.s 			page 29


 855:.\Generated_Source\PSoC4/TX_SEND.c ****     #if (TX_SEND_CY_TCPWM_4000)
 856:.\Generated_Source\PSoC4/TX_SEND.c ****         currentMode = ((TX_SEND_CONTROL_REG & TX_SEND_UPDOWN_MASK) >> TX_SEND_UPDOWN_SHIFT);
 857:.\Generated_Source\PSoC4/TX_SEND.c **** 
 858:.\Generated_Source\PSoC4/TX_SEND.c ****         if (((uint32)TX_SEND__COUNT_DOWN == currentMode) && (0xFFFFu != compare))
 859:.\Generated_Source\PSoC4/TX_SEND.c ****         {
 860:.\Generated_Source\PSoC4/TX_SEND.c ****             compare++;
 861:.\Generated_Source\PSoC4/TX_SEND.c ****         }
 862:.\Generated_Source\PSoC4/TX_SEND.c ****         else if (((uint32)TX_SEND__COUNT_UP == currentMode) && (0u != compare))
 863:.\Generated_Source\PSoC4/TX_SEND.c ****         {
 864:.\Generated_Source\PSoC4/TX_SEND.c ****             compare--;
 865:.\Generated_Source\PSoC4/TX_SEND.c ****         }
 866:.\Generated_Source\PSoC4/TX_SEND.c ****         else
 867:.\Generated_Source\PSoC4/TX_SEND.c ****         {
 868:.\Generated_Source\PSoC4/TX_SEND.c ****         }
 869:.\Generated_Source\PSoC4/TX_SEND.c ****         
 870:.\Generated_Source\PSoC4/TX_SEND.c ****     
 871:.\Generated_Source\PSoC4/TX_SEND.c ****     #endif /* (TX_SEND_CY_TCPWM_4000) */
 872:.\Generated_Source\PSoC4/TX_SEND.c ****     
 873:.\Generated_Source\PSoC4/TX_SEND.c ****     TX_SEND_COMP_CAP_REG = (compare & TX_SEND_16BIT_MASK);
 743              		.loc 1 873 0
 744 0000 0004     		lsl	r0, r0, #16
 745              	.LVL55:
 746 0002 000C     		lsr	r0, r0, #16
 747 0004 014B     		ldr	r3, .L59
 748 0006 1860     		str	r0, [r3]
 874:.\Generated_Source\PSoC4/TX_SEND.c **** }
 749              		.loc 1 874 0
 750              		@ sp needed
 751 0008 7047     		bx	lr
 752              	.L60:
 753 000a C046     		.align	2
 754              	.L59:
 755 000c 8C010540 		.word	1074069900
 756              		.cfi_endproc
 757              	.LFE22:
 758              		.size	TX_SEND_WriteCompare, .-TX_SEND_WriteCompare
 759              		.section	.text.TX_SEND_ReadCompare,"ax",%progbits
 760              		.align	2
 761              		.global	TX_SEND_ReadCompare
 762              		.code	16
 763              		.thumb_func
 764              		.type	TX_SEND_ReadCompare, %function
 765              	TX_SEND_ReadCompare:
 766              	.LFB23:
 875:.\Generated_Source\PSoC4/TX_SEND.c **** 
 876:.\Generated_Source\PSoC4/TX_SEND.c **** 
 877:.\Generated_Source\PSoC4/TX_SEND.c **** /*******************************************************************************
 878:.\Generated_Source\PSoC4/TX_SEND.c **** * Function Name: TX_SEND_ReadCompare
 879:.\Generated_Source\PSoC4/TX_SEND.c **** ********************************************************************************
 880:.\Generated_Source\PSoC4/TX_SEND.c **** *
 881:.\Generated_Source\PSoC4/TX_SEND.c **** * Summary:
 882:.\Generated_Source\PSoC4/TX_SEND.c **** *  Reads the compare register. Not applicable for Timer/Counter with Capture
 883:.\Generated_Source\PSoC4/TX_SEND.c **** *  or in Quadrature Decoder modes.
 884:.\Generated_Source\PSoC4/TX_SEND.c **** *  PSoC 4000 devices read the incremented compare register value in the 
 885:.\Generated_Source\PSoC4/TX_SEND.c **** *  Up counting mode (except 0xFFFFu), and the decremented value in the 
 886:.\Generated_Source\PSoC4/TX_SEND.c **** *  Down counting mode (except 0x0u).
 887:.\Generated_Source\PSoC4/TX_SEND.c **** *
ARM GAS  C:\Users\g\AppData\Local\Temp\ccNCqeMN.s 			page 30


 888:.\Generated_Source\PSoC4/TX_SEND.c **** * Parameters:
 889:.\Generated_Source\PSoC4/TX_SEND.c **** *  None
 890:.\Generated_Source\PSoC4/TX_SEND.c **** *
 891:.\Generated_Source\PSoC4/TX_SEND.c **** * Return:
 892:.\Generated_Source\PSoC4/TX_SEND.c **** *  Compare value
 893:.\Generated_Source\PSoC4/TX_SEND.c **** *
 894:.\Generated_Source\PSoC4/TX_SEND.c **** * Note:
 895:.\Generated_Source\PSoC4/TX_SEND.c **** *  PSoC 4000 devices read the incremented compare register value in the 
 896:.\Generated_Source\PSoC4/TX_SEND.c **** *  Up counting mode (except 0xFFFFu), and the decremented value in the 
 897:.\Generated_Source\PSoC4/TX_SEND.c **** *  Down counting mode (except 0x0u).
 898:.\Generated_Source\PSoC4/TX_SEND.c **** *
 899:.\Generated_Source\PSoC4/TX_SEND.c **** *******************************************************************************/
 900:.\Generated_Source\PSoC4/TX_SEND.c **** uint32 TX_SEND_ReadCompare(void)
 901:.\Generated_Source\PSoC4/TX_SEND.c **** {
 767              		.loc 1 901 0
 768              		.cfi_startproc
 902:.\Generated_Source\PSoC4/TX_SEND.c ****     #if (TX_SEND_CY_TCPWM_4000)
 903:.\Generated_Source\PSoC4/TX_SEND.c ****         uint32 currentMode;
 904:.\Generated_Source\PSoC4/TX_SEND.c ****         uint32 regVal;
 905:.\Generated_Source\PSoC4/TX_SEND.c ****     #endif /* (TX_SEND_CY_TCPWM_4000) */
 906:.\Generated_Source\PSoC4/TX_SEND.c **** 
 907:.\Generated_Source\PSoC4/TX_SEND.c ****     #if (TX_SEND_CY_TCPWM_4000)
 908:.\Generated_Source\PSoC4/TX_SEND.c ****         currentMode = ((TX_SEND_CONTROL_REG & TX_SEND_UPDOWN_MASK) >> TX_SEND_UPDOWN_SHIFT);
 909:.\Generated_Source\PSoC4/TX_SEND.c ****         
 910:.\Generated_Source\PSoC4/TX_SEND.c ****         regVal = TX_SEND_COMP_CAP_REG;
 911:.\Generated_Source\PSoC4/TX_SEND.c ****         
 912:.\Generated_Source\PSoC4/TX_SEND.c ****         if (((uint32)TX_SEND__COUNT_DOWN == currentMode) && (0u != regVal))
 913:.\Generated_Source\PSoC4/TX_SEND.c ****         {
 914:.\Generated_Source\PSoC4/TX_SEND.c ****             regVal--;
 915:.\Generated_Source\PSoC4/TX_SEND.c ****         }
 916:.\Generated_Source\PSoC4/TX_SEND.c ****         else if (((uint32)TX_SEND__COUNT_UP == currentMode) && (0xFFFFu != regVal))
 917:.\Generated_Source\PSoC4/TX_SEND.c ****         {
 918:.\Generated_Source\PSoC4/TX_SEND.c ****             regVal++;
 919:.\Generated_Source\PSoC4/TX_SEND.c ****         }
 920:.\Generated_Source\PSoC4/TX_SEND.c ****         else
 921:.\Generated_Source\PSoC4/TX_SEND.c ****         {
 922:.\Generated_Source\PSoC4/TX_SEND.c ****         }
 923:.\Generated_Source\PSoC4/TX_SEND.c **** 
 924:.\Generated_Source\PSoC4/TX_SEND.c ****         return (regVal & TX_SEND_16BIT_MASK);
 925:.\Generated_Source\PSoC4/TX_SEND.c ****     #else
 926:.\Generated_Source\PSoC4/TX_SEND.c ****         return (TX_SEND_COMP_CAP_REG & TX_SEND_16BIT_MASK);
 769              		.loc 1 926 0
 770 0000 024B     		ldr	r3, .L62
 771 0002 1868     		ldr	r0, [r3]
 772 0004 0004     		lsl	r0, r0, #16
 773 0006 000C     		lsr	r0, r0, #16
 927:.\Generated_Source\PSoC4/TX_SEND.c ****     #endif /* (TX_SEND_CY_TCPWM_4000) */
 928:.\Generated_Source\PSoC4/TX_SEND.c **** }
 774              		.loc 1 928 0
 775              		@ sp needed
 776 0008 7047     		bx	lr
 777              	.L63:
 778 000a C046     		.align	2
 779              	.L62:
 780 000c 8C010540 		.word	1074069900
 781              		.cfi_endproc
 782              	.LFE23:
ARM GAS  C:\Users\g\AppData\Local\Temp\ccNCqeMN.s 			page 31


 783              		.size	TX_SEND_ReadCompare, .-TX_SEND_ReadCompare
 784              		.section	.text.TX_SEND_WriteCompareBuf,"ax",%progbits
 785              		.align	2
 786              		.global	TX_SEND_WriteCompareBuf
 787              		.code	16
 788              		.thumb_func
 789              		.type	TX_SEND_WriteCompareBuf, %function
 790              	TX_SEND_WriteCompareBuf:
 791              	.LFB24:
 929:.\Generated_Source\PSoC4/TX_SEND.c **** 
 930:.\Generated_Source\PSoC4/TX_SEND.c **** 
 931:.\Generated_Source\PSoC4/TX_SEND.c **** /*******************************************************************************
 932:.\Generated_Source\PSoC4/TX_SEND.c **** * Function Name: TX_SEND_WriteCompareBuf
 933:.\Generated_Source\PSoC4/TX_SEND.c **** ********************************************************************************
 934:.\Generated_Source\PSoC4/TX_SEND.c **** *
 935:.\Generated_Source\PSoC4/TX_SEND.c **** * Summary:
 936:.\Generated_Source\PSoC4/TX_SEND.c **** *  Writes the 16 bit compare buffer register with the new compare value. Not
 937:.\Generated_Source\PSoC4/TX_SEND.c **** *  applicable for Timer/Counter with Capture or in Quadrature Decoder modes.
 938:.\Generated_Source\PSoC4/TX_SEND.c **** *
 939:.\Generated_Source\PSoC4/TX_SEND.c **** * Parameters:
 940:.\Generated_Source\PSoC4/TX_SEND.c **** *  compareBuf: Compare value
 941:.\Generated_Source\PSoC4/TX_SEND.c **** *
 942:.\Generated_Source\PSoC4/TX_SEND.c **** * Return:
 943:.\Generated_Source\PSoC4/TX_SEND.c **** *  None
 944:.\Generated_Source\PSoC4/TX_SEND.c **** *
 945:.\Generated_Source\PSoC4/TX_SEND.c **** * Note:
 946:.\Generated_Source\PSoC4/TX_SEND.c **** *  It is not recommended to use the value equal to "0" or equal to 
 947:.\Generated_Source\PSoC4/TX_SEND.c **** *  "period value" in Center or Asymmetric align PWM modes on the 
 948:.\Generated_Source\PSoC4/TX_SEND.c **** *  PSoC 4100/PSoC 4200 devices.
 949:.\Generated_Source\PSoC4/TX_SEND.c **** *  PSoC 4000 devices write the 16 bit compare register with the decremented 
 950:.\Generated_Source\PSoC4/TX_SEND.c **** *  compare value in the Up counting mode (except 0x0u), and the incremented 
 951:.\Generated_Source\PSoC4/TX_SEND.c **** *  compare value in the Down counting mode (except 0xFFFFu).
 952:.\Generated_Source\PSoC4/TX_SEND.c **** *
 953:.\Generated_Source\PSoC4/TX_SEND.c **** *******************************************************************************/
 954:.\Generated_Source\PSoC4/TX_SEND.c **** void TX_SEND_WriteCompareBuf(uint32 compareBuf)
 955:.\Generated_Source\PSoC4/TX_SEND.c **** {
 792              		.loc 1 955 0
 793              		.cfi_startproc
 794              	.LVL56:
 956:.\Generated_Source\PSoC4/TX_SEND.c ****     #if (TX_SEND_CY_TCPWM_4000)
 957:.\Generated_Source\PSoC4/TX_SEND.c ****         uint32 currentMode;
 958:.\Generated_Source\PSoC4/TX_SEND.c ****     #endif /* (TX_SEND_CY_TCPWM_4000) */
 959:.\Generated_Source\PSoC4/TX_SEND.c **** 
 960:.\Generated_Source\PSoC4/TX_SEND.c ****     #if (TX_SEND_CY_TCPWM_4000)
 961:.\Generated_Source\PSoC4/TX_SEND.c ****         currentMode = ((TX_SEND_CONTROL_REG & TX_SEND_UPDOWN_MASK) >> TX_SEND_UPDOWN_SHIFT);
 962:.\Generated_Source\PSoC4/TX_SEND.c **** 
 963:.\Generated_Source\PSoC4/TX_SEND.c ****         if (((uint32)TX_SEND__COUNT_DOWN == currentMode) && (0xFFFFu != compareBuf))
 964:.\Generated_Source\PSoC4/TX_SEND.c ****         {
 965:.\Generated_Source\PSoC4/TX_SEND.c ****             compareBuf++;
 966:.\Generated_Source\PSoC4/TX_SEND.c ****         }
 967:.\Generated_Source\PSoC4/TX_SEND.c ****         else if (((uint32)TX_SEND__COUNT_UP == currentMode) && (0u != compareBuf))
 968:.\Generated_Source\PSoC4/TX_SEND.c ****         {
 969:.\Generated_Source\PSoC4/TX_SEND.c ****             compareBuf --;
 970:.\Generated_Source\PSoC4/TX_SEND.c ****         }
 971:.\Generated_Source\PSoC4/TX_SEND.c ****         else
 972:.\Generated_Source\PSoC4/TX_SEND.c ****         {
 973:.\Generated_Source\PSoC4/TX_SEND.c ****         }
ARM GAS  C:\Users\g\AppData\Local\Temp\ccNCqeMN.s 			page 32


 974:.\Generated_Source\PSoC4/TX_SEND.c ****     #endif /* (TX_SEND_CY_TCPWM_4000) */
 975:.\Generated_Source\PSoC4/TX_SEND.c ****     
 976:.\Generated_Source\PSoC4/TX_SEND.c ****     TX_SEND_COMP_CAP_BUF_REG = (compareBuf & TX_SEND_16BIT_MASK);
 795              		.loc 1 976 0
 796 0000 0004     		lsl	r0, r0, #16
 797              	.LVL57:
 798 0002 000C     		lsr	r0, r0, #16
 799 0004 014B     		ldr	r3, .L65
 800 0006 1860     		str	r0, [r3]
 977:.\Generated_Source\PSoC4/TX_SEND.c **** }
 801              		.loc 1 977 0
 802              		@ sp needed
 803 0008 7047     		bx	lr
 804              	.L66:
 805 000a C046     		.align	2
 806              	.L65:
 807 000c 90010540 		.word	1074069904
 808              		.cfi_endproc
 809              	.LFE24:
 810              		.size	TX_SEND_WriteCompareBuf, .-TX_SEND_WriteCompareBuf
 811              		.section	.text.TX_SEND_ReadCompareBuf,"ax",%progbits
 812              		.align	2
 813              		.global	TX_SEND_ReadCompareBuf
 814              		.code	16
 815              		.thumb_func
 816              		.type	TX_SEND_ReadCompareBuf, %function
 817              	TX_SEND_ReadCompareBuf:
 818              	.LFB25:
 978:.\Generated_Source\PSoC4/TX_SEND.c **** 
 979:.\Generated_Source\PSoC4/TX_SEND.c **** 
 980:.\Generated_Source\PSoC4/TX_SEND.c **** /*******************************************************************************
 981:.\Generated_Source\PSoC4/TX_SEND.c **** * Function Name: TX_SEND_ReadCompareBuf
 982:.\Generated_Source\PSoC4/TX_SEND.c **** ********************************************************************************
 983:.\Generated_Source\PSoC4/TX_SEND.c **** *
 984:.\Generated_Source\PSoC4/TX_SEND.c **** * Summary:
 985:.\Generated_Source\PSoC4/TX_SEND.c **** *  Reads the compare buffer register. Not applicable for Timer/Counter with
 986:.\Generated_Source\PSoC4/TX_SEND.c **** *  Capture or in Quadrature Decoder modes.
 987:.\Generated_Source\PSoC4/TX_SEND.c **** *
 988:.\Generated_Source\PSoC4/TX_SEND.c **** * Parameters:
 989:.\Generated_Source\PSoC4/TX_SEND.c **** *  None
 990:.\Generated_Source\PSoC4/TX_SEND.c **** *
 991:.\Generated_Source\PSoC4/TX_SEND.c **** * Return:
 992:.\Generated_Source\PSoC4/TX_SEND.c **** *  Compare buffer value
 993:.\Generated_Source\PSoC4/TX_SEND.c **** *
 994:.\Generated_Source\PSoC4/TX_SEND.c **** * Note:
 995:.\Generated_Source\PSoC4/TX_SEND.c **** *  PSoC 4000 devices read the incremented compare register value in the 
 996:.\Generated_Source\PSoC4/TX_SEND.c **** *  Up counting mode (except 0xFFFFu), and the decremented value in the 
 997:.\Generated_Source\PSoC4/TX_SEND.c **** *  Down counting mode (except 0x0u).
 998:.\Generated_Source\PSoC4/TX_SEND.c **** *
 999:.\Generated_Source\PSoC4/TX_SEND.c **** *******************************************************************************/
1000:.\Generated_Source\PSoC4/TX_SEND.c **** uint32 TX_SEND_ReadCompareBuf(void)
1001:.\Generated_Source\PSoC4/TX_SEND.c **** {
 819              		.loc 1 1001 0
 820              		.cfi_startproc
1002:.\Generated_Source\PSoC4/TX_SEND.c ****     #if (TX_SEND_CY_TCPWM_4000)
1003:.\Generated_Source\PSoC4/TX_SEND.c ****         uint32 currentMode;
1004:.\Generated_Source\PSoC4/TX_SEND.c ****         uint32 regVal;
ARM GAS  C:\Users\g\AppData\Local\Temp\ccNCqeMN.s 			page 33


1005:.\Generated_Source\PSoC4/TX_SEND.c ****     #endif /* (TX_SEND_CY_TCPWM_4000) */
1006:.\Generated_Source\PSoC4/TX_SEND.c **** 
1007:.\Generated_Source\PSoC4/TX_SEND.c ****     #if (TX_SEND_CY_TCPWM_4000)
1008:.\Generated_Source\PSoC4/TX_SEND.c ****         currentMode = ((TX_SEND_CONTROL_REG & TX_SEND_UPDOWN_MASK) >> TX_SEND_UPDOWN_SHIFT);
1009:.\Generated_Source\PSoC4/TX_SEND.c **** 
1010:.\Generated_Source\PSoC4/TX_SEND.c ****         regVal = TX_SEND_COMP_CAP_BUF_REG;
1011:.\Generated_Source\PSoC4/TX_SEND.c ****         
1012:.\Generated_Source\PSoC4/TX_SEND.c ****         if (((uint32)TX_SEND__COUNT_DOWN == currentMode) && (0u != regVal))
1013:.\Generated_Source\PSoC4/TX_SEND.c ****         {
1014:.\Generated_Source\PSoC4/TX_SEND.c ****             regVal--;
1015:.\Generated_Source\PSoC4/TX_SEND.c ****         }
1016:.\Generated_Source\PSoC4/TX_SEND.c ****         else if (((uint32)TX_SEND__COUNT_UP == currentMode) && (0xFFFFu != regVal))
1017:.\Generated_Source\PSoC4/TX_SEND.c ****         {
1018:.\Generated_Source\PSoC4/TX_SEND.c ****             regVal++;
1019:.\Generated_Source\PSoC4/TX_SEND.c ****         }
1020:.\Generated_Source\PSoC4/TX_SEND.c ****         else
1021:.\Generated_Source\PSoC4/TX_SEND.c ****         {
1022:.\Generated_Source\PSoC4/TX_SEND.c ****         }
1023:.\Generated_Source\PSoC4/TX_SEND.c **** 
1024:.\Generated_Source\PSoC4/TX_SEND.c ****         return (regVal & TX_SEND_16BIT_MASK);
1025:.\Generated_Source\PSoC4/TX_SEND.c ****     #else
1026:.\Generated_Source\PSoC4/TX_SEND.c ****         return (TX_SEND_COMP_CAP_BUF_REG & TX_SEND_16BIT_MASK);
 821              		.loc 1 1026 0
 822 0000 024B     		ldr	r3, .L68
 823 0002 1868     		ldr	r0, [r3]
 824 0004 0004     		lsl	r0, r0, #16
 825 0006 000C     		lsr	r0, r0, #16
1027:.\Generated_Source\PSoC4/TX_SEND.c ****     #endif /* (TX_SEND_CY_TCPWM_4000) */
1028:.\Generated_Source\PSoC4/TX_SEND.c **** }
 826              		.loc 1 1028 0
 827              		@ sp needed
 828 0008 7047     		bx	lr
 829              	.L69:
 830 000a C046     		.align	2
 831              	.L68:
 832 000c 90010540 		.word	1074069904
 833              		.cfi_endproc
 834              	.LFE25:
 835              		.size	TX_SEND_ReadCompareBuf, .-TX_SEND_ReadCompareBuf
 836              		.section	.text.TX_SEND_ReadCapture,"ax",%progbits
 837              		.align	2
 838              		.global	TX_SEND_ReadCapture
 839              		.code	16
 840              		.thumb_func
 841              		.type	TX_SEND_ReadCapture, %function
 842              	TX_SEND_ReadCapture:
 843              	.LFB26:
1029:.\Generated_Source\PSoC4/TX_SEND.c **** 
1030:.\Generated_Source\PSoC4/TX_SEND.c **** 
1031:.\Generated_Source\PSoC4/TX_SEND.c **** /*******************************************************************************
1032:.\Generated_Source\PSoC4/TX_SEND.c **** * Function Name: TX_SEND_ReadCapture
1033:.\Generated_Source\PSoC4/TX_SEND.c **** ********************************************************************************
1034:.\Generated_Source\PSoC4/TX_SEND.c **** *
1035:.\Generated_Source\PSoC4/TX_SEND.c **** * Summary:
1036:.\Generated_Source\PSoC4/TX_SEND.c **** *  Reads the captured counter value. This API is applicable only for
1037:.\Generated_Source\PSoC4/TX_SEND.c **** *  Timer/Counter with the capture mode and Quadrature Decoder modes.
1038:.\Generated_Source\PSoC4/TX_SEND.c **** *
ARM GAS  C:\Users\g\AppData\Local\Temp\ccNCqeMN.s 			page 34


1039:.\Generated_Source\PSoC4/TX_SEND.c **** * Parameters:
1040:.\Generated_Source\PSoC4/TX_SEND.c **** *  None
1041:.\Generated_Source\PSoC4/TX_SEND.c **** *
1042:.\Generated_Source\PSoC4/TX_SEND.c **** * Return:
1043:.\Generated_Source\PSoC4/TX_SEND.c **** *  Capture value
1044:.\Generated_Source\PSoC4/TX_SEND.c **** *
1045:.\Generated_Source\PSoC4/TX_SEND.c **** *******************************************************************************/
1046:.\Generated_Source\PSoC4/TX_SEND.c **** uint32 TX_SEND_ReadCapture(void)
1047:.\Generated_Source\PSoC4/TX_SEND.c **** {
 844              		.loc 1 1047 0
 845              		.cfi_startproc
1048:.\Generated_Source\PSoC4/TX_SEND.c ****     return (TX_SEND_COMP_CAP_REG & TX_SEND_16BIT_MASK);
 846              		.loc 1 1048 0
 847 0000 024B     		ldr	r3, .L71
 848 0002 1868     		ldr	r0, [r3]
 849 0004 0004     		lsl	r0, r0, #16
 850 0006 000C     		lsr	r0, r0, #16
1049:.\Generated_Source\PSoC4/TX_SEND.c **** }
 851              		.loc 1 1049 0
 852              		@ sp needed
 853 0008 7047     		bx	lr
 854              	.L72:
 855 000a C046     		.align	2
 856              	.L71:
 857 000c 8C010540 		.word	1074069900
 858              		.cfi_endproc
 859              	.LFE26:
 860              		.size	TX_SEND_ReadCapture, .-TX_SEND_ReadCapture
 861              		.section	.text.TX_SEND_ReadCaptureBuf,"ax",%progbits
 862              		.align	2
 863              		.global	TX_SEND_ReadCaptureBuf
 864              		.code	16
 865              		.thumb_func
 866              		.type	TX_SEND_ReadCaptureBuf, %function
 867              	TX_SEND_ReadCaptureBuf:
 868              	.LFB27:
1050:.\Generated_Source\PSoC4/TX_SEND.c **** 
1051:.\Generated_Source\PSoC4/TX_SEND.c **** 
1052:.\Generated_Source\PSoC4/TX_SEND.c **** /*******************************************************************************
1053:.\Generated_Source\PSoC4/TX_SEND.c **** * Function Name: TX_SEND_ReadCaptureBuf
1054:.\Generated_Source\PSoC4/TX_SEND.c **** ********************************************************************************
1055:.\Generated_Source\PSoC4/TX_SEND.c **** *
1056:.\Generated_Source\PSoC4/TX_SEND.c **** * Summary:
1057:.\Generated_Source\PSoC4/TX_SEND.c **** *  Reads the capture buffer register. This API is applicable only for
1058:.\Generated_Source\PSoC4/TX_SEND.c **** *  Timer/Counter with the capture mode and Quadrature Decoder modes.
1059:.\Generated_Source\PSoC4/TX_SEND.c **** *
1060:.\Generated_Source\PSoC4/TX_SEND.c **** * Parameters:
1061:.\Generated_Source\PSoC4/TX_SEND.c **** *  None
1062:.\Generated_Source\PSoC4/TX_SEND.c **** *
1063:.\Generated_Source\PSoC4/TX_SEND.c **** * Return:
1064:.\Generated_Source\PSoC4/TX_SEND.c **** *  Capture buffer value
1065:.\Generated_Source\PSoC4/TX_SEND.c **** *
1066:.\Generated_Source\PSoC4/TX_SEND.c **** *******************************************************************************/
1067:.\Generated_Source\PSoC4/TX_SEND.c **** uint32 TX_SEND_ReadCaptureBuf(void)
1068:.\Generated_Source\PSoC4/TX_SEND.c **** {
 869              		.loc 1 1068 0
 870              		.cfi_startproc
ARM GAS  C:\Users\g\AppData\Local\Temp\ccNCqeMN.s 			page 35


1069:.\Generated_Source\PSoC4/TX_SEND.c ****     return (TX_SEND_COMP_CAP_BUF_REG & TX_SEND_16BIT_MASK);
 871              		.loc 1 1069 0
 872 0000 024B     		ldr	r3, .L74
 873 0002 1868     		ldr	r0, [r3]
 874 0004 0004     		lsl	r0, r0, #16
 875 0006 000C     		lsr	r0, r0, #16
1070:.\Generated_Source\PSoC4/TX_SEND.c **** }
 876              		.loc 1 1070 0
 877              		@ sp needed
 878 0008 7047     		bx	lr
 879              	.L75:
 880 000a C046     		.align	2
 881              	.L74:
 882 000c 90010540 		.word	1074069904
 883              		.cfi_endproc
 884              	.LFE27:
 885              		.size	TX_SEND_ReadCaptureBuf, .-TX_SEND_ReadCaptureBuf
 886              		.section	.text.TX_SEND_SetCaptureMode,"ax",%progbits
 887              		.align	2
 888              		.global	TX_SEND_SetCaptureMode
 889              		.code	16
 890              		.thumb_func
 891              		.type	TX_SEND_SetCaptureMode, %function
 892              	TX_SEND_SetCaptureMode:
 893              	.LFB28:
1071:.\Generated_Source\PSoC4/TX_SEND.c **** 
1072:.\Generated_Source\PSoC4/TX_SEND.c **** 
1073:.\Generated_Source\PSoC4/TX_SEND.c **** /*******************************************************************************
1074:.\Generated_Source\PSoC4/TX_SEND.c **** * Function Name: TX_SEND_SetCaptureMode
1075:.\Generated_Source\PSoC4/TX_SEND.c **** ********************************************************************************
1076:.\Generated_Source\PSoC4/TX_SEND.c **** *
1077:.\Generated_Source\PSoC4/TX_SEND.c **** * Summary:
1078:.\Generated_Source\PSoC4/TX_SEND.c **** *  Sets the capture trigger mode. For PWM mode this is the switch input.
1079:.\Generated_Source\PSoC4/TX_SEND.c **** *  This input is not applicable to the Timer/Counter without Capture and
1080:.\Generated_Source\PSoC4/TX_SEND.c **** *  Quadrature Decoder modes.
1081:.\Generated_Source\PSoC4/TX_SEND.c **** *
1082:.\Generated_Source\PSoC4/TX_SEND.c **** * Parameters:
1083:.\Generated_Source\PSoC4/TX_SEND.c **** *  triggerMode: Enumerated trigger mode value
1084:.\Generated_Source\PSoC4/TX_SEND.c **** *   Values:
1085:.\Generated_Source\PSoC4/TX_SEND.c **** *     - TX_SEND_TRIG_LEVEL     - Level
1086:.\Generated_Source\PSoC4/TX_SEND.c **** *     - TX_SEND_TRIG_RISING    - Rising edge
1087:.\Generated_Source\PSoC4/TX_SEND.c **** *     - TX_SEND_TRIG_FALLING   - Falling edge
1088:.\Generated_Source\PSoC4/TX_SEND.c **** *     - TX_SEND_TRIG_BOTH      - Both rising and falling edge
1089:.\Generated_Source\PSoC4/TX_SEND.c **** *
1090:.\Generated_Source\PSoC4/TX_SEND.c **** * Return:
1091:.\Generated_Source\PSoC4/TX_SEND.c **** *  None
1092:.\Generated_Source\PSoC4/TX_SEND.c **** *
1093:.\Generated_Source\PSoC4/TX_SEND.c **** *******************************************************************************/
1094:.\Generated_Source\PSoC4/TX_SEND.c **** void TX_SEND_SetCaptureMode(uint32 triggerMode)
1095:.\Generated_Source\PSoC4/TX_SEND.c **** {
 894              		.loc 1 1095 0
 895              		.cfi_startproc
 896              	.LVL58:
 897 0000 10B5     		push	{r4, lr}
 898              		.cfi_def_cfa_offset 8
 899              		.cfi_offset 4, -8
 900              		.cfi_offset 14, -4
ARM GAS  C:\Users\g\AppData\Local\Temp\ccNCqeMN.s 			page 36


 901 0002 041C     		mov	r4, r0
1096:.\Generated_Source\PSoC4/TX_SEND.c ****     uint8 enableInterrupts;
1097:.\Generated_Source\PSoC4/TX_SEND.c **** 
1098:.\Generated_Source\PSoC4/TX_SEND.c ****     enableInterrupts = CyEnterCriticalSection();
 902              		.loc 1 1098 0
 903 0004 FFF7FEFF 		bl	CyEnterCriticalSection
 904              	.LVL59:
1099:.\Generated_Source\PSoC4/TX_SEND.c **** 
1100:.\Generated_Source\PSoC4/TX_SEND.c ****     TX_SEND_TRIG_CONTROL1_REG &= (uint32)~TX_SEND_CAPTURE_MASK;
 905              		.loc 1 1100 0
 906 0008 054B     		ldr	r3, .L77
 907 000a 1A68     		ldr	r2, [r3]
 908 000c 0321     		mov	r1, #3
 909 000e 8A43     		bic	r2, r1
 910 0010 1A60     		str	r2, [r3]
1101:.\Generated_Source\PSoC4/TX_SEND.c ****     TX_SEND_TRIG_CONTROL1_REG |= triggerMode;
 911              		.loc 1 1101 0
 912 0012 1A68     		ldr	r2, [r3]
 913 0014 1443     		orr	r4, r2
 914              	.LVL60:
 915 0016 1C60     		str	r4, [r3]
1102:.\Generated_Source\PSoC4/TX_SEND.c **** 
1103:.\Generated_Source\PSoC4/TX_SEND.c ****     CyExitCriticalSection(enableInterrupts);
 916              		.loc 1 1103 0
 917 0018 FFF7FEFF 		bl	CyExitCriticalSection
 918              	.LVL61:
1104:.\Generated_Source\PSoC4/TX_SEND.c **** }
 919              		.loc 1 1104 0
 920              		@ sp needed
 921 001c 10BD     		pop	{r4, pc}
 922              	.L78:
 923 001e C046     		.align	2
 924              	.L77:
 925 0020 A4010540 		.word	1074069924
 926              		.cfi_endproc
 927              	.LFE28:
 928              		.size	TX_SEND_SetCaptureMode, .-TX_SEND_SetCaptureMode
 929              		.section	.text.TX_SEND_SetReloadMode,"ax",%progbits
 930              		.align	2
 931              		.global	TX_SEND_SetReloadMode
 932              		.code	16
 933              		.thumb_func
 934              		.type	TX_SEND_SetReloadMode, %function
 935              	TX_SEND_SetReloadMode:
 936              	.LFB29:
1105:.\Generated_Source\PSoC4/TX_SEND.c **** 
1106:.\Generated_Source\PSoC4/TX_SEND.c **** 
1107:.\Generated_Source\PSoC4/TX_SEND.c **** /*******************************************************************************
1108:.\Generated_Source\PSoC4/TX_SEND.c **** * Function Name: TX_SEND_SetReloadMode
1109:.\Generated_Source\PSoC4/TX_SEND.c **** ********************************************************************************
1110:.\Generated_Source\PSoC4/TX_SEND.c **** *
1111:.\Generated_Source\PSoC4/TX_SEND.c **** * Summary:
1112:.\Generated_Source\PSoC4/TX_SEND.c **** *  Sets the reload trigger mode. For Quadrature Decoder mode this is the index
1113:.\Generated_Source\PSoC4/TX_SEND.c **** *  input.
1114:.\Generated_Source\PSoC4/TX_SEND.c **** *
1115:.\Generated_Source\PSoC4/TX_SEND.c **** * Parameters:
1116:.\Generated_Source\PSoC4/TX_SEND.c **** *  triggerMode: Enumerated trigger mode value
ARM GAS  C:\Users\g\AppData\Local\Temp\ccNCqeMN.s 			page 37


1117:.\Generated_Source\PSoC4/TX_SEND.c **** *   Values:
1118:.\Generated_Source\PSoC4/TX_SEND.c **** *     - TX_SEND_TRIG_LEVEL     - Level
1119:.\Generated_Source\PSoC4/TX_SEND.c **** *     - TX_SEND_TRIG_RISING    - Rising edge
1120:.\Generated_Source\PSoC4/TX_SEND.c **** *     - TX_SEND_TRIG_FALLING   - Falling edge
1121:.\Generated_Source\PSoC4/TX_SEND.c **** *     - TX_SEND_TRIG_BOTH      - Both rising and falling edge
1122:.\Generated_Source\PSoC4/TX_SEND.c **** *
1123:.\Generated_Source\PSoC4/TX_SEND.c **** * Return:
1124:.\Generated_Source\PSoC4/TX_SEND.c **** *  None
1125:.\Generated_Source\PSoC4/TX_SEND.c **** *
1126:.\Generated_Source\PSoC4/TX_SEND.c **** *******************************************************************************/
1127:.\Generated_Source\PSoC4/TX_SEND.c **** void TX_SEND_SetReloadMode(uint32 triggerMode)
1128:.\Generated_Source\PSoC4/TX_SEND.c **** {
 937              		.loc 1 1128 0
 938              		.cfi_startproc
 939              	.LVL62:
 940 0000 10B5     		push	{r4, lr}
 941              		.cfi_def_cfa_offset 8
 942              		.cfi_offset 4, -8
 943              		.cfi_offset 14, -4
 944 0002 041C     		mov	r4, r0
1129:.\Generated_Source\PSoC4/TX_SEND.c ****     uint8 enableInterrupts;
1130:.\Generated_Source\PSoC4/TX_SEND.c **** 
1131:.\Generated_Source\PSoC4/TX_SEND.c ****     enableInterrupts = CyEnterCriticalSection();
 945              		.loc 1 1131 0
 946 0004 FFF7FEFF 		bl	CyEnterCriticalSection
 947              	.LVL63:
1132:.\Generated_Source\PSoC4/TX_SEND.c **** 
1133:.\Generated_Source\PSoC4/TX_SEND.c ****     TX_SEND_TRIG_CONTROL1_REG &= (uint32)~TX_SEND_RELOAD_MASK;
 948              		.loc 1 1133 0
 949 0008 054B     		ldr	r3, .L80
 950 000a 1A68     		ldr	r2, [r3]
 951 000c 3021     		mov	r1, #48
 952 000e 8A43     		bic	r2, r1
 953 0010 1A60     		str	r2, [r3]
1134:.\Generated_Source\PSoC4/TX_SEND.c ****     TX_SEND_TRIG_CONTROL1_REG |= ((uint32)(triggerMode << TX_SEND_RELOAD_SHIFT));
 954              		.loc 1 1134 0
 955 0012 1A68     		ldr	r2, [r3]
 956 0014 2401     		lsl	r4, r4, #4
 957              	.LVL64:
 958 0016 1443     		orr	r4, r2
 959 0018 1C60     		str	r4, [r3]
1135:.\Generated_Source\PSoC4/TX_SEND.c **** 
1136:.\Generated_Source\PSoC4/TX_SEND.c ****     CyExitCriticalSection(enableInterrupts);
 960              		.loc 1 1136 0
 961 001a FFF7FEFF 		bl	CyExitCriticalSection
 962              	.LVL65:
1137:.\Generated_Source\PSoC4/TX_SEND.c **** }
 963              		.loc 1 1137 0
 964              		@ sp needed
 965 001e 10BD     		pop	{r4, pc}
 966              	.L81:
 967              		.align	2
 968              	.L80:
 969 0020 A4010540 		.word	1074069924
 970              		.cfi_endproc
 971              	.LFE29:
 972              		.size	TX_SEND_SetReloadMode, .-TX_SEND_SetReloadMode
ARM GAS  C:\Users\g\AppData\Local\Temp\ccNCqeMN.s 			page 38


 973              		.section	.text.TX_SEND_SetStartMode,"ax",%progbits
 974              		.align	2
 975              		.global	TX_SEND_SetStartMode
 976              		.code	16
 977              		.thumb_func
 978              		.type	TX_SEND_SetStartMode, %function
 979              	TX_SEND_SetStartMode:
 980              	.LFB30:
1138:.\Generated_Source\PSoC4/TX_SEND.c **** 
1139:.\Generated_Source\PSoC4/TX_SEND.c **** 
1140:.\Generated_Source\PSoC4/TX_SEND.c **** /*******************************************************************************
1141:.\Generated_Source\PSoC4/TX_SEND.c **** * Function Name: TX_SEND_SetStartMode
1142:.\Generated_Source\PSoC4/TX_SEND.c **** ********************************************************************************
1143:.\Generated_Source\PSoC4/TX_SEND.c **** *
1144:.\Generated_Source\PSoC4/TX_SEND.c **** * Summary:
1145:.\Generated_Source\PSoC4/TX_SEND.c **** *  Sets the start trigger mode. For Quadrature Decoder mode this is the
1146:.\Generated_Source\PSoC4/TX_SEND.c **** *  phiB input.
1147:.\Generated_Source\PSoC4/TX_SEND.c **** *
1148:.\Generated_Source\PSoC4/TX_SEND.c **** * Parameters:
1149:.\Generated_Source\PSoC4/TX_SEND.c **** *  triggerMode: Enumerated trigger mode value
1150:.\Generated_Source\PSoC4/TX_SEND.c **** *   Values:
1151:.\Generated_Source\PSoC4/TX_SEND.c **** *     - TX_SEND_TRIG_LEVEL     - Level
1152:.\Generated_Source\PSoC4/TX_SEND.c **** *     - TX_SEND_TRIG_RISING    - Rising edge
1153:.\Generated_Source\PSoC4/TX_SEND.c **** *     - TX_SEND_TRIG_FALLING   - Falling edge
1154:.\Generated_Source\PSoC4/TX_SEND.c **** *     - TX_SEND_TRIG_BOTH      - Both rising and falling edge
1155:.\Generated_Source\PSoC4/TX_SEND.c **** *
1156:.\Generated_Source\PSoC4/TX_SEND.c **** * Return:
1157:.\Generated_Source\PSoC4/TX_SEND.c **** *  None
1158:.\Generated_Source\PSoC4/TX_SEND.c **** *
1159:.\Generated_Source\PSoC4/TX_SEND.c **** *******************************************************************************/
1160:.\Generated_Source\PSoC4/TX_SEND.c **** void TX_SEND_SetStartMode(uint32 triggerMode)
1161:.\Generated_Source\PSoC4/TX_SEND.c **** {
 981              		.loc 1 1161 0
 982              		.cfi_startproc
 983              	.LVL66:
 984 0000 10B5     		push	{r4, lr}
 985              		.cfi_def_cfa_offset 8
 986              		.cfi_offset 4, -8
 987              		.cfi_offset 14, -4
 988 0002 041C     		mov	r4, r0
1162:.\Generated_Source\PSoC4/TX_SEND.c ****     uint8 enableInterrupts;
1163:.\Generated_Source\PSoC4/TX_SEND.c **** 
1164:.\Generated_Source\PSoC4/TX_SEND.c ****     enableInterrupts = CyEnterCriticalSection();
 989              		.loc 1 1164 0
 990 0004 FFF7FEFF 		bl	CyEnterCriticalSection
 991              	.LVL67:
1165:.\Generated_Source\PSoC4/TX_SEND.c **** 
1166:.\Generated_Source\PSoC4/TX_SEND.c ****     TX_SEND_TRIG_CONTROL1_REG &= (uint32)~TX_SEND_START_MASK;
 992              		.loc 1 1166 0
 993 0008 054B     		ldr	r3, .L83
 994 000a 1968     		ldr	r1, [r3]
 995 000c 054A     		ldr	r2, .L83+4
 996 000e 0A40     		and	r2, r1
 997 0010 1A60     		str	r2, [r3]
1167:.\Generated_Source\PSoC4/TX_SEND.c ****     TX_SEND_TRIG_CONTROL1_REG |= ((uint32)(triggerMode << TX_SEND_START_SHIFT));
 998              		.loc 1 1167 0
 999 0012 1A68     		ldr	r2, [r3]
ARM GAS  C:\Users\g\AppData\Local\Temp\ccNCqeMN.s 			page 39


 1000 0014 2402     		lsl	r4, r4, #8
 1001              	.LVL68:
 1002 0016 1443     		orr	r4, r2
 1003 0018 1C60     		str	r4, [r3]
1168:.\Generated_Source\PSoC4/TX_SEND.c **** 
1169:.\Generated_Source\PSoC4/TX_SEND.c ****     CyExitCriticalSection(enableInterrupts);
 1004              		.loc 1 1169 0
 1005 001a FFF7FEFF 		bl	CyExitCriticalSection
 1006              	.LVL69:
1170:.\Generated_Source\PSoC4/TX_SEND.c **** }
 1007              		.loc 1 1170 0
 1008              		@ sp needed
 1009 001e 10BD     		pop	{r4, pc}
 1010              	.L84:
 1011              		.align	2
 1012              	.L83:
 1013 0020 A4010540 		.word	1074069924
 1014 0024 FFFCFFFF 		.word	-769
 1015              		.cfi_endproc
 1016              	.LFE30:
 1017              		.size	TX_SEND_SetStartMode, .-TX_SEND_SetStartMode
 1018              		.section	.text.TX_SEND_SetStopMode,"ax",%progbits
 1019              		.align	2
 1020              		.global	TX_SEND_SetStopMode
 1021              		.code	16
 1022              		.thumb_func
 1023              		.type	TX_SEND_SetStopMode, %function
 1024              	TX_SEND_SetStopMode:
 1025              	.LFB31:
1171:.\Generated_Source\PSoC4/TX_SEND.c **** 
1172:.\Generated_Source\PSoC4/TX_SEND.c **** 
1173:.\Generated_Source\PSoC4/TX_SEND.c **** /*******************************************************************************
1174:.\Generated_Source\PSoC4/TX_SEND.c **** * Function Name: TX_SEND_SetStopMode
1175:.\Generated_Source\PSoC4/TX_SEND.c **** ********************************************************************************
1176:.\Generated_Source\PSoC4/TX_SEND.c **** *
1177:.\Generated_Source\PSoC4/TX_SEND.c **** * Summary:
1178:.\Generated_Source\PSoC4/TX_SEND.c **** *  Sets the stop trigger mode. For PWM mode this is the kill input.
1179:.\Generated_Source\PSoC4/TX_SEND.c **** *
1180:.\Generated_Source\PSoC4/TX_SEND.c **** * Parameters:
1181:.\Generated_Source\PSoC4/TX_SEND.c **** *  triggerMode: Enumerated trigger mode value
1182:.\Generated_Source\PSoC4/TX_SEND.c **** *   Values:
1183:.\Generated_Source\PSoC4/TX_SEND.c **** *     - TX_SEND_TRIG_LEVEL     - Level
1184:.\Generated_Source\PSoC4/TX_SEND.c **** *     - TX_SEND_TRIG_RISING    - Rising edge
1185:.\Generated_Source\PSoC4/TX_SEND.c **** *     - TX_SEND_TRIG_FALLING   - Falling edge
1186:.\Generated_Source\PSoC4/TX_SEND.c **** *     - TX_SEND_TRIG_BOTH      - Both rising and falling edge
1187:.\Generated_Source\PSoC4/TX_SEND.c **** *
1188:.\Generated_Source\PSoC4/TX_SEND.c **** * Return:
1189:.\Generated_Source\PSoC4/TX_SEND.c **** *  None
1190:.\Generated_Source\PSoC4/TX_SEND.c **** *
1191:.\Generated_Source\PSoC4/TX_SEND.c **** *******************************************************************************/
1192:.\Generated_Source\PSoC4/TX_SEND.c **** void TX_SEND_SetStopMode(uint32 triggerMode)
1193:.\Generated_Source\PSoC4/TX_SEND.c **** {
 1026              		.loc 1 1193 0
 1027              		.cfi_startproc
 1028              	.LVL70:
 1029 0000 10B5     		push	{r4, lr}
 1030              		.cfi_def_cfa_offset 8
ARM GAS  C:\Users\g\AppData\Local\Temp\ccNCqeMN.s 			page 40


 1031              		.cfi_offset 4, -8
 1032              		.cfi_offset 14, -4
 1033 0002 041C     		mov	r4, r0
1194:.\Generated_Source\PSoC4/TX_SEND.c ****     uint8 enableInterrupts;
1195:.\Generated_Source\PSoC4/TX_SEND.c **** 
1196:.\Generated_Source\PSoC4/TX_SEND.c ****     enableInterrupts = CyEnterCriticalSection();
 1034              		.loc 1 1196 0
 1035 0004 FFF7FEFF 		bl	CyEnterCriticalSection
 1036              	.LVL71:
1197:.\Generated_Source\PSoC4/TX_SEND.c **** 
1198:.\Generated_Source\PSoC4/TX_SEND.c ****     TX_SEND_TRIG_CONTROL1_REG &= (uint32)~TX_SEND_STOP_MASK;
 1037              		.loc 1 1198 0
 1038 0008 054B     		ldr	r3, .L86
 1039 000a 1A68     		ldr	r2, [r3]
 1040 000c C021     		mov	r1, #192
 1041 000e 8A43     		bic	r2, r1
 1042 0010 1A60     		str	r2, [r3]
1199:.\Generated_Source\PSoC4/TX_SEND.c ****     TX_SEND_TRIG_CONTROL1_REG |= ((uint32)(triggerMode << TX_SEND_STOP_SHIFT));
 1043              		.loc 1 1199 0
 1044 0012 1A68     		ldr	r2, [r3]
 1045 0014 A401     		lsl	r4, r4, #6
 1046              	.LVL72:
 1047 0016 1443     		orr	r4, r2
 1048 0018 1C60     		str	r4, [r3]
1200:.\Generated_Source\PSoC4/TX_SEND.c **** 
1201:.\Generated_Source\PSoC4/TX_SEND.c ****     CyExitCriticalSection(enableInterrupts);
 1049              		.loc 1 1201 0
 1050 001a FFF7FEFF 		bl	CyExitCriticalSection
 1051              	.LVL73:
1202:.\Generated_Source\PSoC4/TX_SEND.c **** }
 1052              		.loc 1 1202 0
 1053              		@ sp needed
 1054 001e 10BD     		pop	{r4, pc}
 1055              	.L87:
 1056              		.align	2
 1057              	.L86:
 1058 0020 A4010540 		.word	1074069924
 1059              		.cfi_endproc
 1060              	.LFE31:
 1061              		.size	TX_SEND_SetStopMode, .-TX_SEND_SetStopMode
 1062              		.section	.text.TX_SEND_SetCountMode,"ax",%progbits
 1063              		.align	2
 1064              		.global	TX_SEND_SetCountMode
 1065              		.code	16
 1066              		.thumb_func
 1067              		.type	TX_SEND_SetCountMode, %function
 1068              	TX_SEND_SetCountMode:
 1069              	.LFB32:
1203:.\Generated_Source\PSoC4/TX_SEND.c **** 
1204:.\Generated_Source\PSoC4/TX_SEND.c **** 
1205:.\Generated_Source\PSoC4/TX_SEND.c **** /*******************************************************************************
1206:.\Generated_Source\PSoC4/TX_SEND.c **** * Function Name: TX_SEND_SetCountMode
1207:.\Generated_Source\PSoC4/TX_SEND.c **** ********************************************************************************
1208:.\Generated_Source\PSoC4/TX_SEND.c **** *
1209:.\Generated_Source\PSoC4/TX_SEND.c **** * Summary:
1210:.\Generated_Source\PSoC4/TX_SEND.c **** *  Sets the count trigger mode. For Quadrature Decoder mode this is the phiA
1211:.\Generated_Source\PSoC4/TX_SEND.c **** *  input.
ARM GAS  C:\Users\g\AppData\Local\Temp\ccNCqeMN.s 			page 41


1212:.\Generated_Source\PSoC4/TX_SEND.c **** *
1213:.\Generated_Source\PSoC4/TX_SEND.c **** * Parameters:
1214:.\Generated_Source\PSoC4/TX_SEND.c **** *  triggerMode: Enumerated trigger mode value
1215:.\Generated_Source\PSoC4/TX_SEND.c **** *   Values:
1216:.\Generated_Source\PSoC4/TX_SEND.c **** *     - TX_SEND_TRIG_LEVEL     - Level
1217:.\Generated_Source\PSoC4/TX_SEND.c **** *     - TX_SEND_TRIG_RISING    - Rising edge
1218:.\Generated_Source\PSoC4/TX_SEND.c **** *     - TX_SEND_TRIG_FALLING   - Falling edge
1219:.\Generated_Source\PSoC4/TX_SEND.c **** *     - TX_SEND_TRIG_BOTH      - Both rising and falling edge
1220:.\Generated_Source\PSoC4/TX_SEND.c **** *
1221:.\Generated_Source\PSoC4/TX_SEND.c **** * Return:
1222:.\Generated_Source\PSoC4/TX_SEND.c **** *  None
1223:.\Generated_Source\PSoC4/TX_SEND.c **** *
1224:.\Generated_Source\PSoC4/TX_SEND.c **** *******************************************************************************/
1225:.\Generated_Source\PSoC4/TX_SEND.c **** void TX_SEND_SetCountMode(uint32 triggerMode)
1226:.\Generated_Source\PSoC4/TX_SEND.c **** {
 1070              		.loc 1 1226 0
 1071              		.cfi_startproc
 1072              	.LVL74:
 1073 0000 10B5     		push	{r4, lr}
 1074              		.cfi_def_cfa_offset 8
 1075              		.cfi_offset 4, -8
 1076              		.cfi_offset 14, -4
 1077 0002 041C     		mov	r4, r0
1227:.\Generated_Source\PSoC4/TX_SEND.c ****     uint8 enableInterrupts;
1228:.\Generated_Source\PSoC4/TX_SEND.c **** 
1229:.\Generated_Source\PSoC4/TX_SEND.c ****     enableInterrupts = CyEnterCriticalSection();
 1078              		.loc 1 1229 0
 1079 0004 FFF7FEFF 		bl	CyEnterCriticalSection
 1080              	.LVL75:
1230:.\Generated_Source\PSoC4/TX_SEND.c **** 
1231:.\Generated_Source\PSoC4/TX_SEND.c ****     TX_SEND_TRIG_CONTROL1_REG &= (uint32)~TX_SEND_COUNT_MASK;
 1081              		.loc 1 1231 0
 1082 0008 054B     		ldr	r3, .L89
 1083 000a 1A68     		ldr	r2, [r3]
 1084 000c 0C21     		mov	r1, #12
 1085 000e 8A43     		bic	r2, r1
 1086 0010 1A60     		str	r2, [r3]
1232:.\Generated_Source\PSoC4/TX_SEND.c ****     TX_SEND_TRIG_CONTROL1_REG |= ((uint32)(triggerMode << TX_SEND_COUNT_SHIFT));
 1087              		.loc 1 1232 0
 1088 0012 1A68     		ldr	r2, [r3]
 1089 0014 A400     		lsl	r4, r4, #2
 1090              	.LVL76:
 1091 0016 1443     		orr	r4, r2
 1092 0018 1C60     		str	r4, [r3]
1233:.\Generated_Source\PSoC4/TX_SEND.c **** 
1234:.\Generated_Source\PSoC4/TX_SEND.c ****     CyExitCriticalSection(enableInterrupts);
 1093              		.loc 1 1234 0
 1094 001a FFF7FEFF 		bl	CyExitCriticalSection
 1095              	.LVL77:
1235:.\Generated_Source\PSoC4/TX_SEND.c **** }
 1096              		.loc 1 1235 0
 1097              		@ sp needed
 1098 001e 10BD     		pop	{r4, pc}
 1099              	.L90:
 1100              		.align	2
 1101              	.L89:
 1102 0020 A4010540 		.word	1074069924
ARM GAS  C:\Users\g\AppData\Local\Temp\ccNCqeMN.s 			page 42


 1103              		.cfi_endproc
 1104              	.LFE32:
 1105              		.size	TX_SEND_SetCountMode, .-TX_SEND_SetCountMode
 1106              		.section	.text.TX_SEND_TriggerCommand,"ax",%progbits
 1107              		.align	2
 1108              		.global	TX_SEND_TriggerCommand
 1109              		.code	16
 1110              		.thumb_func
 1111              		.type	TX_SEND_TriggerCommand, %function
 1112              	TX_SEND_TriggerCommand:
 1113              	.LFB33:
1236:.\Generated_Source\PSoC4/TX_SEND.c **** 
1237:.\Generated_Source\PSoC4/TX_SEND.c **** 
1238:.\Generated_Source\PSoC4/TX_SEND.c **** /*******************************************************************************
1239:.\Generated_Source\PSoC4/TX_SEND.c **** * Function Name: TX_SEND_TriggerCommand
1240:.\Generated_Source\PSoC4/TX_SEND.c **** ********************************************************************************
1241:.\Generated_Source\PSoC4/TX_SEND.c **** *
1242:.\Generated_Source\PSoC4/TX_SEND.c **** * Summary:
1243:.\Generated_Source\PSoC4/TX_SEND.c **** *  Triggers the designated command to occur on the designated TCPWM instances.
1244:.\Generated_Source\PSoC4/TX_SEND.c **** *  The mask can be used to apply this command simultaneously to more than one
1245:.\Generated_Source\PSoC4/TX_SEND.c **** *  instance.  This allows multiple TCPWM instances to be synchronized.
1246:.\Generated_Source\PSoC4/TX_SEND.c **** *
1247:.\Generated_Source\PSoC4/TX_SEND.c **** * Parameters:
1248:.\Generated_Source\PSoC4/TX_SEND.c **** *  mask: A combination of mask bits for each instance of the TCPWM that the
1249:.\Generated_Source\PSoC4/TX_SEND.c **** *        command should apply to.  This function from one instance can be used
1250:.\Generated_Source\PSoC4/TX_SEND.c **** *        to apply the command to any of the instances in the design.
1251:.\Generated_Source\PSoC4/TX_SEND.c **** *        The mask value for a specific instance is available with the MASK
1252:.\Generated_Source\PSoC4/TX_SEND.c **** *        define.
1253:.\Generated_Source\PSoC4/TX_SEND.c **** *  command: Enumerated command values. Capture command only applicable for
1254:.\Generated_Source\PSoC4/TX_SEND.c **** *           Timer/Counter with Capture and PWM modes.
1255:.\Generated_Source\PSoC4/TX_SEND.c **** *   Values:
1256:.\Generated_Source\PSoC4/TX_SEND.c **** *     - TX_SEND_CMD_CAPTURE    - Trigger Capture/Switch command
1257:.\Generated_Source\PSoC4/TX_SEND.c **** *     - TX_SEND_CMD_RELOAD     - Trigger Reload/Index command
1258:.\Generated_Source\PSoC4/TX_SEND.c **** *     - TX_SEND_CMD_STOP       - Trigger Stop/Kill command
1259:.\Generated_Source\PSoC4/TX_SEND.c **** *     - TX_SEND_CMD_START      - Trigger Start/phiB command
1260:.\Generated_Source\PSoC4/TX_SEND.c **** *
1261:.\Generated_Source\PSoC4/TX_SEND.c **** * Return:
1262:.\Generated_Source\PSoC4/TX_SEND.c **** *  None
1263:.\Generated_Source\PSoC4/TX_SEND.c **** *
1264:.\Generated_Source\PSoC4/TX_SEND.c **** *******************************************************************************/
1265:.\Generated_Source\PSoC4/TX_SEND.c **** void TX_SEND_TriggerCommand(uint32 mask, uint32 command)
1266:.\Generated_Source\PSoC4/TX_SEND.c **** {
 1114              		.loc 1 1266 0
 1115              		.cfi_startproc
 1116              	.LVL78:
 1117 0000 38B5     		push	{r3, r4, r5, lr}
 1118              		.cfi_def_cfa_offset 16
 1119              		.cfi_offset 3, -16
 1120              		.cfi_offset 4, -12
 1121              		.cfi_offset 5, -8
 1122              		.cfi_offset 14, -4
 1123 0002 041C     		mov	r4, r0
 1124 0004 0D1C     		mov	r5, r1
1267:.\Generated_Source\PSoC4/TX_SEND.c ****     uint8 enableInterrupts;
1268:.\Generated_Source\PSoC4/TX_SEND.c **** 
1269:.\Generated_Source\PSoC4/TX_SEND.c ****     enableInterrupts = CyEnterCriticalSection();
 1125              		.loc 1 1269 0
ARM GAS  C:\Users\g\AppData\Local\Temp\ccNCqeMN.s 			page 43


 1126 0006 FFF7FEFF 		bl	CyEnterCriticalSection
 1127              	.LVL79:
1270:.\Generated_Source\PSoC4/TX_SEND.c **** 
1271:.\Generated_Source\PSoC4/TX_SEND.c ****     TX_SEND_COMMAND_REG = ((uint32)(mask << command));
 1128              		.loc 1 1271 0
 1129 000a AC40     		lsl	r4, r4, r5
 1130              	.LVL80:
 1131 000c 024B     		ldr	r3, .L92
 1132 000e 1C60     		str	r4, [r3]
1272:.\Generated_Source\PSoC4/TX_SEND.c **** 
1273:.\Generated_Source\PSoC4/TX_SEND.c ****     CyExitCriticalSection(enableInterrupts);
 1133              		.loc 1 1273 0
 1134 0010 FFF7FEFF 		bl	CyExitCriticalSection
 1135              	.LVL81:
1274:.\Generated_Source\PSoC4/TX_SEND.c **** }
 1136              		.loc 1 1274 0
 1137              		@ sp needed
 1138              	.LVL82:
 1139 0014 38BD     		pop	{r3, r4, r5, pc}
 1140              	.L93:
 1141 0016 C046     		.align	2
 1142              	.L92:
 1143 0018 08000540 		.word	1074069512
 1144              		.cfi_endproc
 1145              	.LFE33:
 1146              		.size	TX_SEND_TriggerCommand, .-TX_SEND_TriggerCommand
 1147              		.section	.text.TX_SEND_Enable,"ax",%progbits
 1148              		.align	2
 1149              		.global	TX_SEND_Enable
 1150              		.code	16
 1151              		.thumb_func
 1152              		.type	TX_SEND_Enable, %function
 1153              	TX_SEND_Enable:
 1154              	.LFB1:
 178:.\Generated_Source\PSoC4/TX_SEND.c ****     uint8 enableInterrupts;
 1155              		.loc 1 178 0
 1156              		.cfi_startproc
 1157 0000 08B5     		push	{r3, lr}
 1158              		.cfi_def_cfa_offset 8
 1159              		.cfi_offset 3, -8
 1160              		.cfi_offset 14, -4
 181:.\Generated_Source\PSoC4/TX_SEND.c ****     TX_SEND_BLOCK_CONTROL_REG |= TX_SEND_MASK;
 1161              		.loc 1 181 0
 1162 0002 FFF7FEFF 		bl	CyEnterCriticalSection
 1163              	.LVL83:
 182:.\Generated_Source\PSoC4/TX_SEND.c ****     CyExitCriticalSection(enableInterrupts);
 1164              		.loc 1 182 0
 1165 0006 064A     		ldr	r2, .L95
 1166 0008 1168     		ldr	r1, [r2]
 1167 000a 0423     		mov	r3, #4
 1168 000c 0B43     		orr	r3, r1
 1169 000e 1360     		str	r3, [r2]
 183:.\Generated_Source\PSoC4/TX_SEND.c **** 
 1170              		.loc 1 183 0
 1171 0010 FFF7FEFF 		bl	CyExitCriticalSection
 1172              	.LVL84:
 194:.\Generated_Source\PSoC4/TX_SEND.c ****         #endif /* (0u == TX_SEND_TC_START_SIGNAL_PRESENT) */
ARM GAS  C:\Users\g\AppData\Local\Temp\ccNCqeMN.s 			page 44


 1173              		.loc 1 194 0
 1174 0014 0420     		mov	r0, #4
 1175 0016 1821     		mov	r1, #24
 1176 0018 FFF7FEFF 		bl	TX_SEND_TriggerCommand
 1177              	.LVL85:
 203:.\Generated_Source\PSoC4/TX_SEND.c **** 
 1178              		.loc 1 203 0
 1179              		@ sp needed
 1180 001c 08BD     		pop	{r3, pc}
 1181              	.L96:
 1182 001e C046     		.align	2
 1183              	.L95:
 1184 0020 00000540 		.word	1074069504
 1185              		.cfi_endproc
 1186              	.LFE1:
 1187              		.size	TX_SEND_Enable, .-TX_SEND_Enable
 1188              		.section	.text.TX_SEND_ReadStatus,"ax",%progbits
 1189              		.align	2
 1190              		.global	TX_SEND_ReadStatus
 1191              		.code	16
 1192              		.thumb_func
 1193              		.type	TX_SEND_ReadStatus, %function
 1194              	TX_SEND_ReadStatus:
 1195              	.LFB34:
1275:.\Generated_Source\PSoC4/TX_SEND.c **** 
1276:.\Generated_Source\PSoC4/TX_SEND.c **** 
1277:.\Generated_Source\PSoC4/TX_SEND.c **** /*******************************************************************************
1278:.\Generated_Source\PSoC4/TX_SEND.c **** * Function Name: TX_SEND_ReadStatus
1279:.\Generated_Source\PSoC4/TX_SEND.c **** ********************************************************************************
1280:.\Generated_Source\PSoC4/TX_SEND.c **** *
1281:.\Generated_Source\PSoC4/TX_SEND.c **** * Summary:
1282:.\Generated_Source\PSoC4/TX_SEND.c **** *  Reads the status of the TX_SEND.
1283:.\Generated_Source\PSoC4/TX_SEND.c **** *
1284:.\Generated_Source\PSoC4/TX_SEND.c **** * Parameters:
1285:.\Generated_Source\PSoC4/TX_SEND.c **** *  None
1286:.\Generated_Source\PSoC4/TX_SEND.c **** *
1287:.\Generated_Source\PSoC4/TX_SEND.c **** * Return:
1288:.\Generated_Source\PSoC4/TX_SEND.c **** *  Status
1289:.\Generated_Source\PSoC4/TX_SEND.c **** *   Values:
1290:.\Generated_Source\PSoC4/TX_SEND.c **** *     - TX_SEND_STATUS_DOWN    - Set if counting down
1291:.\Generated_Source\PSoC4/TX_SEND.c **** *     - TX_SEND_STATUS_RUNNING - Set if counter is running
1292:.\Generated_Source\PSoC4/TX_SEND.c **** *
1293:.\Generated_Source\PSoC4/TX_SEND.c **** *******************************************************************************/
1294:.\Generated_Source\PSoC4/TX_SEND.c **** uint32 TX_SEND_ReadStatus(void)
1295:.\Generated_Source\PSoC4/TX_SEND.c **** {
 1196              		.loc 1 1295 0
 1197              		.cfi_startproc
1296:.\Generated_Source\PSoC4/TX_SEND.c ****     return ((TX_SEND_STATUS_REG >> TX_SEND_RUNNING_STATUS_SHIFT) |
 1198              		.loc 1 1296 0
 1199 0000 034B     		ldr	r3, .L98
 1200 0002 1868     		ldr	r0, [r3]
 1201 0004 820F     		lsr	r2, r0, #30
1297:.\Generated_Source\PSoC4/TX_SEND.c ****             (TX_SEND_STATUS_REG & TX_SEND_STATUS_DOWN));
 1202              		.loc 1 1297 0
 1203 0006 1B68     		ldr	r3, [r3]
 1204 0008 0120     		mov	r0, #1
 1205 000a 1840     		and	r0, r3
ARM GAS  C:\Users\g\AppData\Local\Temp\ccNCqeMN.s 			page 45


1296:.\Generated_Source\PSoC4/TX_SEND.c ****     return ((TX_SEND_STATUS_REG >> TX_SEND_RUNNING_STATUS_SHIFT) |
 1206              		.loc 1 1296 0
 1207 000c 1043     		orr	r0, r2
1298:.\Generated_Source\PSoC4/TX_SEND.c **** }
 1208              		.loc 1 1298 0
 1209              		@ sp needed
 1210 000e 7047     		bx	lr
 1211              	.L99:
 1212              		.align	2
 1213              	.L98:
 1214 0010 84010540 		.word	1074069892
 1215              		.cfi_endproc
 1216              	.LFE34:
 1217              		.size	TX_SEND_ReadStatus, .-TX_SEND_ReadStatus
 1218              		.section	.text.TX_SEND_SetInterruptMode,"ax",%progbits
 1219              		.align	2
 1220              		.global	TX_SEND_SetInterruptMode
 1221              		.code	16
 1222              		.thumb_func
 1223              		.type	TX_SEND_SetInterruptMode, %function
 1224              	TX_SEND_SetInterruptMode:
 1225              	.LFB35:
1299:.\Generated_Source\PSoC4/TX_SEND.c **** 
1300:.\Generated_Source\PSoC4/TX_SEND.c **** 
1301:.\Generated_Source\PSoC4/TX_SEND.c **** /*******************************************************************************
1302:.\Generated_Source\PSoC4/TX_SEND.c **** * Function Name: TX_SEND_SetInterruptMode
1303:.\Generated_Source\PSoC4/TX_SEND.c **** ********************************************************************************
1304:.\Generated_Source\PSoC4/TX_SEND.c **** *
1305:.\Generated_Source\PSoC4/TX_SEND.c **** * Summary:
1306:.\Generated_Source\PSoC4/TX_SEND.c **** *  Sets the interrupt mask to control which interrupt
1307:.\Generated_Source\PSoC4/TX_SEND.c **** *  requests generate the interrupt signal.
1308:.\Generated_Source\PSoC4/TX_SEND.c **** *
1309:.\Generated_Source\PSoC4/TX_SEND.c **** * Parameters:
1310:.\Generated_Source\PSoC4/TX_SEND.c **** *   interruptMask: Mask of bits to be enabled
1311:.\Generated_Source\PSoC4/TX_SEND.c **** *   Values:
1312:.\Generated_Source\PSoC4/TX_SEND.c **** *     - TX_SEND_INTR_MASK_TC       - Terminal count mask
1313:.\Generated_Source\PSoC4/TX_SEND.c **** *     - TX_SEND_INTR_MASK_CC_MATCH - Compare count / capture mask
1314:.\Generated_Source\PSoC4/TX_SEND.c **** *
1315:.\Generated_Source\PSoC4/TX_SEND.c **** * Return:
1316:.\Generated_Source\PSoC4/TX_SEND.c **** *  None
1317:.\Generated_Source\PSoC4/TX_SEND.c **** *
1318:.\Generated_Source\PSoC4/TX_SEND.c **** *******************************************************************************/
1319:.\Generated_Source\PSoC4/TX_SEND.c **** void TX_SEND_SetInterruptMode(uint32 interruptMask)
1320:.\Generated_Source\PSoC4/TX_SEND.c **** {
 1226              		.loc 1 1320 0
 1227              		.cfi_startproc
 1228              	.LVL86:
1321:.\Generated_Source\PSoC4/TX_SEND.c ****     TX_SEND_INTERRUPT_MASK_REG =  interruptMask;
 1229              		.loc 1 1321 0
 1230 0000 014B     		ldr	r3, .L101
 1231 0002 1860     		str	r0, [r3]
1322:.\Generated_Source\PSoC4/TX_SEND.c **** }
 1232              		.loc 1 1322 0
 1233              		@ sp needed
 1234 0004 7047     		bx	lr
 1235              	.L102:
 1236 0006 C046     		.align	2
ARM GAS  C:\Users\g\AppData\Local\Temp\ccNCqeMN.s 			page 46


 1237              	.L101:
 1238 0008 B8010540 		.word	1074069944
 1239              		.cfi_endproc
 1240              	.LFE35:
 1241              		.size	TX_SEND_SetInterruptMode, .-TX_SEND_SetInterruptMode
 1242              		.section	.text.TX_SEND_Init,"ax",%progbits
 1243              		.align	2
 1244              		.global	TX_SEND_Init
 1245              		.code	16
 1246              		.thumb_func
 1247              		.type	TX_SEND_Init, %function
 1248              	TX_SEND_Init:
 1249              	.LFB0:
  39:.\Generated_Source\PSoC4/TX_SEND.c **** 
 1250              		.loc 1 39 0
 1251              		.cfi_startproc
 1252 0000 08B5     		push	{r3, lr}
 1253              		.cfi_def_cfa_offset 8
 1254              		.cfi_offset 3, -8
 1255              		.cfi_offset 14, -4
  58:.\Generated_Source\PSoC4/TX_SEND.c ****         
 1256              		.loc 1 58 0
 1257 0002 8022     		mov	r2, #128
 1258 0004 9204     		lsl	r2, r2, #18
 1259 0006 084B     		ldr	r3, .L104
 1260 0008 1A60     		str	r2, [r3]
  61:.\Generated_Source\PSoC4/TX_SEND.c ****     
 1261              		.loc 1 61 0
 1262 000a 0C22     		mov	r2, #12
 1263 000c 074B     		ldr	r3, .L104+4
 1264 000e 1A60     		str	r2, [r3]
  64:.\Generated_Source\PSoC4/TX_SEND.c ****         
 1265              		.loc 1 64 0
 1266 0010 0020     		mov	r0, #0
 1267 0012 FFF7FEFF 		bl	TX_SEND_SetInterruptMode
 1268              	.LVL87:
  67:.\Generated_Source\PSoC4/TX_SEND.c **** 
 1269              		.loc 1 67 0
 1270 0016 FA20     		mov	r0, #250
 1271 0018 8000     		lsl	r0, r0, #2
 1272 001a FFF7FEFF 		bl	TX_SEND_WritePeriod
 1273              	.LVL88:
  84:.\Generated_Source\PSoC4/TX_SEND.c ****         #endif /* (TX_SEND_CY_TCPWM_V2 && TX_SEND_TIMER_UPDOWN_CNT_USED && !TX_SEND_CY_TCPWM_4000) 
 1274              		.loc 1 84 0
 1275 001e 0020     		mov	r0, #0
 1276 0020 FFF7FEFF 		bl	TX_SEND_WriteCounter
 1277              	.LVL89:
 160:.\Generated_Source\PSoC4/TX_SEND.c **** 
 1278              		.loc 1 160 0
 1279              		@ sp needed
 1280 0024 08BD     		pop	{r3, pc}
 1281              	.L105:
 1282 0026 C046     		.align	2
 1283              	.L104:
 1284 0028 80010540 		.word	1074069888
 1285 002c A4010540 		.word	1074069924
 1286              		.cfi_endproc
ARM GAS  C:\Users\g\AppData\Local\Temp\ccNCqeMN.s 			page 47


 1287              	.LFE0:
 1288              		.size	TX_SEND_Init, .-TX_SEND_Init
 1289              		.section	.text.TX_SEND_Start,"ax",%progbits
 1290              		.align	2
 1291              		.global	TX_SEND_Start
 1292              		.code	16
 1293              		.thumb_func
 1294              		.type	TX_SEND_Start, %function
 1295              	TX_SEND_Start:
 1296              	.LFB2:
 231:.\Generated_Source\PSoC4/TX_SEND.c ****     if (0u == TX_SEND_initVar)
 1297              		.loc 1 231 0
 1298              		.cfi_startproc
 1299 0000 08B5     		push	{r3, lr}
 1300              		.cfi_def_cfa_offset 8
 1301              		.cfi_offset 3, -8
 1302              		.cfi_offset 14, -4
 232:.\Generated_Source\PSoC4/TX_SEND.c ****     {
 1303              		.loc 1 232 0
 1304 0002 064B     		ldr	r3, .L108
 1305 0004 1B78     		ldrb	r3, [r3]
 1306 0006 002B     		cmp	r3, #0
 1307 0008 04D1     		bne	.L107
 234:.\Generated_Source\PSoC4/TX_SEND.c ****         TX_SEND_initVar = 1u;
 1308              		.loc 1 234 0
 1309 000a FFF7FEFF 		bl	TX_SEND_Init
 1310              	.LVL90:
 235:.\Generated_Source\PSoC4/TX_SEND.c ****     }
 1311              		.loc 1 235 0
 1312 000e 0122     		mov	r2, #1
 1313 0010 024B     		ldr	r3, .L108
 1314 0012 1A70     		strb	r2, [r3]
 1315              	.L107:
 238:.\Generated_Source\PSoC4/TX_SEND.c **** }
 1316              		.loc 1 238 0
 1317 0014 FFF7FEFF 		bl	TX_SEND_Enable
 1318              	.LVL91:
 239:.\Generated_Source\PSoC4/TX_SEND.c **** 
 1319              		.loc 1 239 0
 1320              		@ sp needed
 1321 0018 08BD     		pop	{r3, pc}
 1322              	.L109:
 1323 001a C046     		.align	2
 1324              	.L108:
 1325 001c 00000000 		.word	.LANCHOR0
 1326              		.cfi_endproc
 1327              	.LFE2:
 1328              		.size	TX_SEND_Start, .-TX_SEND_Start
 1329              		.section	.text.TX_SEND_GetInterruptSourceMasked,"ax",%progbits
 1330              		.align	2
 1331              		.global	TX_SEND_GetInterruptSourceMasked
 1332              		.code	16
 1333              		.thumb_func
 1334              		.type	TX_SEND_GetInterruptSourceMasked, %function
 1335              	TX_SEND_GetInterruptSourceMasked:
 1336              	.LFB36:
1323:.\Generated_Source\PSoC4/TX_SEND.c **** 
ARM GAS  C:\Users\g\AppData\Local\Temp\ccNCqeMN.s 			page 48


1324:.\Generated_Source\PSoC4/TX_SEND.c **** 
1325:.\Generated_Source\PSoC4/TX_SEND.c **** /*******************************************************************************
1326:.\Generated_Source\PSoC4/TX_SEND.c **** * Function Name: TX_SEND_GetInterruptSourceMasked
1327:.\Generated_Source\PSoC4/TX_SEND.c **** ********************************************************************************
1328:.\Generated_Source\PSoC4/TX_SEND.c **** *
1329:.\Generated_Source\PSoC4/TX_SEND.c **** * Summary:
1330:.\Generated_Source\PSoC4/TX_SEND.c **** *  Gets the interrupt requests masked by the interrupt mask.
1331:.\Generated_Source\PSoC4/TX_SEND.c **** *
1332:.\Generated_Source\PSoC4/TX_SEND.c **** * Parameters:
1333:.\Generated_Source\PSoC4/TX_SEND.c **** *   None
1334:.\Generated_Source\PSoC4/TX_SEND.c **** *
1335:.\Generated_Source\PSoC4/TX_SEND.c **** * Return:
1336:.\Generated_Source\PSoC4/TX_SEND.c **** *  Masked interrupt source
1337:.\Generated_Source\PSoC4/TX_SEND.c **** *   Values:
1338:.\Generated_Source\PSoC4/TX_SEND.c **** *     - TX_SEND_INTR_MASK_TC       - Terminal count mask
1339:.\Generated_Source\PSoC4/TX_SEND.c **** *     - TX_SEND_INTR_MASK_CC_MATCH - Compare count / capture mask
1340:.\Generated_Source\PSoC4/TX_SEND.c **** *
1341:.\Generated_Source\PSoC4/TX_SEND.c **** *******************************************************************************/
1342:.\Generated_Source\PSoC4/TX_SEND.c **** uint32 TX_SEND_GetInterruptSourceMasked(void)
1343:.\Generated_Source\PSoC4/TX_SEND.c **** {
 1337              		.loc 1 1343 0
 1338              		.cfi_startproc
1344:.\Generated_Source\PSoC4/TX_SEND.c ****     return (TX_SEND_INTERRUPT_MASKED_REG);
 1339              		.loc 1 1344 0
 1340 0000 014B     		ldr	r3, .L111
 1341 0002 1868     		ldr	r0, [r3]
1345:.\Generated_Source\PSoC4/TX_SEND.c **** }
 1342              		.loc 1 1345 0
 1343              		@ sp needed
 1344 0004 7047     		bx	lr
 1345              	.L112:
 1346 0006 C046     		.align	2
 1347              	.L111:
 1348 0008 BC010540 		.word	1074069948
 1349              		.cfi_endproc
 1350              	.LFE36:
 1351              		.size	TX_SEND_GetInterruptSourceMasked, .-TX_SEND_GetInterruptSourceMasked
 1352              		.section	.text.TX_SEND_GetInterruptSource,"ax",%progbits
 1353              		.align	2
 1354              		.global	TX_SEND_GetInterruptSource
 1355              		.code	16
 1356              		.thumb_func
 1357              		.type	TX_SEND_GetInterruptSource, %function
 1358              	TX_SEND_GetInterruptSource:
 1359              	.LFB37:
1346:.\Generated_Source\PSoC4/TX_SEND.c **** 
1347:.\Generated_Source\PSoC4/TX_SEND.c **** 
1348:.\Generated_Source\PSoC4/TX_SEND.c **** /*******************************************************************************
1349:.\Generated_Source\PSoC4/TX_SEND.c **** * Function Name: TX_SEND_GetInterruptSource
1350:.\Generated_Source\PSoC4/TX_SEND.c **** ********************************************************************************
1351:.\Generated_Source\PSoC4/TX_SEND.c **** *
1352:.\Generated_Source\PSoC4/TX_SEND.c **** * Summary:
1353:.\Generated_Source\PSoC4/TX_SEND.c **** *  Gets the interrupt requests (without masking).
1354:.\Generated_Source\PSoC4/TX_SEND.c **** *
1355:.\Generated_Source\PSoC4/TX_SEND.c **** * Parameters:
1356:.\Generated_Source\PSoC4/TX_SEND.c **** *  None
1357:.\Generated_Source\PSoC4/TX_SEND.c **** *
ARM GAS  C:\Users\g\AppData\Local\Temp\ccNCqeMN.s 			page 49


1358:.\Generated_Source\PSoC4/TX_SEND.c **** * Return:
1359:.\Generated_Source\PSoC4/TX_SEND.c **** *  Interrupt request value
1360:.\Generated_Source\PSoC4/TX_SEND.c **** *   Values:
1361:.\Generated_Source\PSoC4/TX_SEND.c **** *     - TX_SEND_INTR_MASK_TC       - Terminal count mask
1362:.\Generated_Source\PSoC4/TX_SEND.c **** *     - TX_SEND_INTR_MASK_CC_MATCH - Compare count / capture mask
1363:.\Generated_Source\PSoC4/TX_SEND.c **** *
1364:.\Generated_Source\PSoC4/TX_SEND.c **** *******************************************************************************/
1365:.\Generated_Source\PSoC4/TX_SEND.c **** uint32 TX_SEND_GetInterruptSource(void)
1366:.\Generated_Source\PSoC4/TX_SEND.c **** {
 1360              		.loc 1 1366 0
 1361              		.cfi_startproc
1367:.\Generated_Source\PSoC4/TX_SEND.c ****     return (TX_SEND_INTERRUPT_REQ_REG);
 1362              		.loc 1 1367 0
 1363 0000 014B     		ldr	r3, .L114
 1364 0002 1868     		ldr	r0, [r3]
1368:.\Generated_Source\PSoC4/TX_SEND.c **** }
 1365              		.loc 1 1368 0
 1366              		@ sp needed
 1367 0004 7047     		bx	lr
 1368              	.L115:
 1369 0006 C046     		.align	2
 1370              	.L114:
 1371 0008 B0010540 		.word	1074069936
 1372              		.cfi_endproc
 1373              	.LFE37:
 1374              		.size	TX_SEND_GetInterruptSource, .-TX_SEND_GetInterruptSource
 1375              		.section	.text.TX_SEND_ClearInterrupt,"ax",%progbits
 1376              		.align	2
 1377              		.global	TX_SEND_ClearInterrupt
 1378              		.code	16
 1379              		.thumb_func
 1380              		.type	TX_SEND_ClearInterrupt, %function
 1381              	TX_SEND_ClearInterrupt:
 1382              	.LFB38:
1369:.\Generated_Source\PSoC4/TX_SEND.c **** 
1370:.\Generated_Source\PSoC4/TX_SEND.c **** 
1371:.\Generated_Source\PSoC4/TX_SEND.c **** /*******************************************************************************
1372:.\Generated_Source\PSoC4/TX_SEND.c **** * Function Name: TX_SEND_ClearInterrupt
1373:.\Generated_Source\PSoC4/TX_SEND.c **** ********************************************************************************
1374:.\Generated_Source\PSoC4/TX_SEND.c **** *
1375:.\Generated_Source\PSoC4/TX_SEND.c **** * Summary:
1376:.\Generated_Source\PSoC4/TX_SEND.c **** *  Clears the interrupt request.
1377:.\Generated_Source\PSoC4/TX_SEND.c **** *
1378:.\Generated_Source\PSoC4/TX_SEND.c **** * Parameters:
1379:.\Generated_Source\PSoC4/TX_SEND.c **** *   interruptMask: Mask of interrupts to clear
1380:.\Generated_Source\PSoC4/TX_SEND.c **** *   Values:
1381:.\Generated_Source\PSoC4/TX_SEND.c **** *     - TX_SEND_INTR_MASK_TC       - Terminal count mask
1382:.\Generated_Source\PSoC4/TX_SEND.c **** *     - TX_SEND_INTR_MASK_CC_MATCH - Compare count / capture mask
1383:.\Generated_Source\PSoC4/TX_SEND.c **** *
1384:.\Generated_Source\PSoC4/TX_SEND.c **** * Return:
1385:.\Generated_Source\PSoC4/TX_SEND.c **** *  None
1386:.\Generated_Source\PSoC4/TX_SEND.c **** *
1387:.\Generated_Source\PSoC4/TX_SEND.c **** *******************************************************************************/
1388:.\Generated_Source\PSoC4/TX_SEND.c **** void TX_SEND_ClearInterrupt(uint32 interruptMask)
1389:.\Generated_Source\PSoC4/TX_SEND.c **** {
 1383              		.loc 1 1389 0
 1384              		.cfi_startproc
ARM GAS  C:\Users\g\AppData\Local\Temp\ccNCqeMN.s 			page 50


 1385              	.LVL92:
1390:.\Generated_Source\PSoC4/TX_SEND.c ****     TX_SEND_INTERRUPT_REQ_REG = interruptMask;
 1386              		.loc 1 1390 0
 1387 0000 014B     		ldr	r3, .L117
 1388 0002 1860     		str	r0, [r3]
1391:.\Generated_Source\PSoC4/TX_SEND.c **** }
 1389              		.loc 1 1391 0
 1390              		@ sp needed
 1391 0004 7047     		bx	lr
 1392              	.L118:
 1393 0006 C046     		.align	2
 1394              	.L117:
 1395 0008 B0010540 		.word	1074069936
 1396              		.cfi_endproc
 1397              	.LFE38:
 1398              		.size	TX_SEND_ClearInterrupt, .-TX_SEND_ClearInterrupt
 1399              		.section	.text.TX_SEND_SetInterrupt,"ax",%progbits
 1400              		.align	2
 1401              		.global	TX_SEND_SetInterrupt
 1402              		.code	16
 1403              		.thumb_func
 1404              		.type	TX_SEND_SetInterrupt, %function
 1405              	TX_SEND_SetInterrupt:
 1406              	.LFB39:
1392:.\Generated_Source\PSoC4/TX_SEND.c **** 
1393:.\Generated_Source\PSoC4/TX_SEND.c **** 
1394:.\Generated_Source\PSoC4/TX_SEND.c **** /*******************************************************************************
1395:.\Generated_Source\PSoC4/TX_SEND.c **** * Function Name: TX_SEND_SetInterrupt
1396:.\Generated_Source\PSoC4/TX_SEND.c **** ********************************************************************************
1397:.\Generated_Source\PSoC4/TX_SEND.c **** *
1398:.\Generated_Source\PSoC4/TX_SEND.c **** * Summary:
1399:.\Generated_Source\PSoC4/TX_SEND.c **** *  Sets a software interrupt request.
1400:.\Generated_Source\PSoC4/TX_SEND.c **** *
1401:.\Generated_Source\PSoC4/TX_SEND.c **** * Parameters:
1402:.\Generated_Source\PSoC4/TX_SEND.c **** *   interruptMask: Mask of interrupts to set
1403:.\Generated_Source\PSoC4/TX_SEND.c **** *   Values:
1404:.\Generated_Source\PSoC4/TX_SEND.c **** *     - TX_SEND_INTR_MASK_TC       - Terminal count mask
1405:.\Generated_Source\PSoC4/TX_SEND.c **** *     - TX_SEND_INTR_MASK_CC_MATCH - Compare count / capture mask
1406:.\Generated_Source\PSoC4/TX_SEND.c **** *
1407:.\Generated_Source\PSoC4/TX_SEND.c **** * Return:
1408:.\Generated_Source\PSoC4/TX_SEND.c **** *  None
1409:.\Generated_Source\PSoC4/TX_SEND.c **** *
1410:.\Generated_Source\PSoC4/TX_SEND.c **** *******************************************************************************/
1411:.\Generated_Source\PSoC4/TX_SEND.c **** void TX_SEND_SetInterrupt(uint32 interruptMask)
1412:.\Generated_Source\PSoC4/TX_SEND.c **** {
 1407              		.loc 1 1412 0
 1408              		.cfi_startproc
 1409              	.LVL93:
1413:.\Generated_Source\PSoC4/TX_SEND.c ****     TX_SEND_INTERRUPT_SET_REG = interruptMask;
 1410              		.loc 1 1413 0
 1411 0000 014B     		ldr	r3, .L120
 1412 0002 1860     		str	r0, [r3]
1414:.\Generated_Source\PSoC4/TX_SEND.c **** }
 1413              		.loc 1 1414 0
 1414              		@ sp needed
 1415 0004 7047     		bx	lr
 1416              	.L121:
ARM GAS  C:\Users\g\AppData\Local\Temp\ccNCqeMN.s 			page 51


 1417 0006 C046     		.align	2
 1418              	.L120:
 1419 0008 B4010540 		.word	1074069940
 1420              		.cfi_endproc
 1421              	.LFE39:
 1422              		.size	TX_SEND_SetInterrupt, .-TX_SEND_SetInterrupt
 1423              		.global	TX_SEND_initVar
 1424              		.bss
 1425              		.set	.LANCHOR0,. + 0
 1426              		.type	TX_SEND_initVar, %object
 1427              		.size	TX_SEND_initVar, 1
 1428              	TX_SEND_initVar:
 1429 0000 00       		.space	1
 1430              		.text
 1431              	.Letext0:
 1432              		.file 2 ".\\Generated_Source\\PSoC4\\cytypes.h"
 1433              		.file 3 ".\\Generated_Source\\PSoC4\\CyLib.h"
 1434              		.section	.debug_info,"",%progbits
 1435              	.Ldebug_info0:
 1436 0000 ED080000 		.4byte	0x8ed
 1437 0004 0400     		.2byte	0x4
 1438 0006 00000000 		.4byte	.Ldebug_abbrev0
 1439 000a 04       		.byte	0x4
 1440 000b 01       		.uleb128 0x1
 1441 000c 9C000000 		.4byte	.LASF76
 1442 0010 01       		.byte	0x1
 1443 0011 99010000 		.4byte	.LASF77
 1444 0015 16050000 		.4byte	.LASF78
 1445 0019 00000000 		.4byte	.Ldebug_ranges0+0
 1446 001d 00000000 		.4byte	0
 1447 0021 00000000 		.4byte	.Ldebug_line0
 1448 0025 02       		.uleb128 0x2
 1449 0026 01       		.byte	0x1
 1450 0027 06       		.byte	0x6
 1451 0028 50010000 		.4byte	.LASF0
 1452 002c 02       		.uleb128 0x2
 1453 002d 01       		.byte	0x1
 1454 002e 08       		.byte	0x8
 1455 002f D7030000 		.4byte	.LASF1
 1456 0033 02       		.uleb128 0x2
 1457 0034 02       		.byte	0x2
 1458 0035 05       		.byte	0x5
 1459 0036 0A040000 		.4byte	.LASF2
 1460 003a 02       		.uleb128 0x2
 1461 003b 02       		.byte	0x2
 1462 003c 07       		.byte	0x7
 1463 003d B7020000 		.4byte	.LASF3
 1464 0041 02       		.uleb128 0x2
 1465 0042 04       		.byte	0x4
 1466 0043 05       		.byte	0x5
 1467 0044 6C010000 		.4byte	.LASF4
 1468 0048 02       		.uleb128 0x2
 1469 0049 04       		.byte	0x4
 1470 004a 07       		.byte	0x7
 1471 004b 6A020000 		.4byte	.LASF5
 1472 004f 02       		.uleb128 0x2
 1473 0050 08       		.byte	0x8
ARM GAS  C:\Users\g\AppData\Local\Temp\ccNCqeMN.s 			page 52


 1474 0051 05       		.byte	0x5
 1475 0052 42010000 		.4byte	.LASF6
 1476 0056 02       		.uleb128 0x2
 1477 0057 08       		.byte	0x8
 1478 0058 07       		.byte	0x7
 1479 0059 67000000 		.4byte	.LASF7
 1480 005d 03       		.uleb128 0x3
 1481 005e 04       		.byte	0x4
 1482 005f 05       		.byte	0x5
 1483 0060 696E7400 		.ascii	"int\000"
 1484 0064 02       		.uleb128 0x2
 1485 0065 04       		.byte	0x4
 1486 0066 07       		.byte	0x7
 1487 0067 55020000 		.4byte	.LASF8
 1488 006b 04       		.uleb128 0x4
 1489 006c 8C010000 		.4byte	.LASF9
 1490 0070 02       		.byte	0x2
 1491 0071 9801     		.2byte	0x198
 1492 0073 2C000000 		.4byte	0x2c
 1493 0077 04       		.uleb128 0x4
 1494 0078 BC010000 		.4byte	.LASF10
 1495 007c 02       		.byte	0x2
 1496 007d 9A01     		.2byte	0x19a
 1497 007f 48000000 		.4byte	0x48
 1498 0083 02       		.uleb128 0x2
 1499 0084 04       		.byte	0x4
 1500 0085 04       		.byte	0x4
 1501 0086 9F030000 		.4byte	.LASF11
 1502 008a 02       		.uleb128 0x2
 1503 008b 08       		.byte	0x8
 1504 008c 04       		.byte	0x4
 1505 008d 92010000 		.4byte	.LASF12
 1506 0091 02       		.uleb128 0x2
 1507 0092 01       		.byte	0x1
 1508 0093 08       		.byte	0x8
 1509 0094 9F040000 		.4byte	.LASF13
 1510 0098 04       		.uleb128 0x4
 1511 0099 16030000 		.4byte	.LASF14
 1512 009d 02       		.byte	0x2
 1513 009e 4402     		.2byte	0x244
 1514 00a0 A4000000 		.4byte	0xa4
 1515 00a4 05       		.uleb128 0x5
 1516 00a5 77000000 		.4byte	0x77
 1517 00a9 02       		.uleb128 0x2
 1518 00aa 04       		.byte	0x4
 1519 00ab 07       		.byte	0x7
 1520 00ac 31030000 		.4byte	.LASF15
 1521 00b0 06       		.uleb128 0x6
 1522 00b1 CB050000 		.4byte	.LASF16
 1523 00b5 01       		.byte	0x1
 1524 00b6 0001     		.2byte	0x100
 1525 00b8 00000000 		.4byte	.LFB3
 1526 00bc 1C000000 		.4byte	.LFE3-.LFB3
 1527 00c0 01       		.uleb128 0x1
 1528 00c1 9C       		.byte	0x9c
 1529 00c2 E9000000 		.4byte	0xe9
 1530 00c6 07       		.uleb128 0x7
ARM GAS  C:\Users\g\AppData\Local\Temp\ccNCqeMN.s 			page 53


 1531 00c7 51050000 		.4byte	.LASF18
 1532 00cb 01       		.byte	0x1
 1533 00cc 0201     		.2byte	0x102
 1534 00ce 6B000000 		.4byte	0x6b
 1535 00d2 00000000 		.4byte	.LLST0
 1536 00d6 08       		.uleb128 0x8
 1537 00d7 06000000 		.4byte	.LVL0
 1538 00db D8080000 		.4byte	0x8d8
 1539 00df 08       		.uleb128 0x8
 1540 00e0 14000000 		.4byte	.LVL1
 1541 00e4 E3080000 		.4byte	0x8e3
 1542 00e8 00       		.byte	0
 1543 00e9 06       		.uleb128 0x6
 1544 00ea 8F030000 		.4byte	.LASF17
 1545 00ee 01       		.byte	0x1
 1546 00ef 2501     		.2byte	0x125
 1547 00f1 00000000 		.4byte	.LFB4
 1548 00f5 28000000 		.4byte	.LFE4-.LFB4
 1549 00f9 01       		.uleb128 0x1
 1550 00fa 9C       		.byte	0x9c
 1551 00fb 32010000 		.4byte	0x132
 1552 00ff 09       		.uleb128 0x9
 1553 0100 A4040000 		.4byte	.LASF20
 1554 0104 01       		.byte	0x1
 1555 0105 2501     		.2byte	0x125
 1556 0107 77000000 		.4byte	0x77
 1557 010b 13000000 		.4byte	.LLST1
 1558 010f 07       		.uleb128 0x7
 1559 0110 51050000 		.4byte	.LASF18
 1560 0114 01       		.byte	0x1
 1561 0115 2701     		.2byte	0x127
 1562 0117 6B000000 		.4byte	0x6b
 1563 011b 3F000000 		.4byte	.LLST2
 1564 011f 08       		.uleb128 0x8
 1565 0120 08000000 		.4byte	.LVL3
 1566 0124 D8080000 		.4byte	0x8d8
 1567 0128 08       		.uleb128 0x8
 1568 0129 1C000000 		.4byte	.LVL5
 1569 012d E3080000 		.4byte	0x8e3
 1570 0131 00       		.byte	0
 1571 0132 06       		.uleb128 0x6
 1572 0133 14020000 		.4byte	.LASF19
 1573 0137 01       		.byte	0x1
 1574 0138 4601     		.2byte	0x146
 1575 013a 00000000 		.4byte	.LFB5
 1576 013e 28000000 		.4byte	.LFE5-.LFB5
 1577 0142 01       		.uleb128 0x1
 1578 0143 9C       		.byte	0x9c
 1579 0144 7B010000 		.4byte	0x17b
 1580 0148 09       		.uleb128 0x9
 1581 0149 7E000000 		.4byte	.LASF21
 1582 014d 01       		.byte	0x1
 1583 014e 4601     		.2byte	0x146
 1584 0150 77000000 		.4byte	0x77
 1585 0154 52000000 		.4byte	.LLST3
 1586 0158 07       		.uleb128 0x7
 1587 0159 51050000 		.4byte	.LASF18
ARM GAS  C:\Users\g\AppData\Local\Temp\ccNCqeMN.s 			page 54


 1588 015d 01       		.byte	0x1
 1589 015e 4801     		.2byte	0x148
 1590 0160 6B000000 		.4byte	0x6b
 1591 0164 7E000000 		.4byte	.LLST4
 1592 0168 08       		.uleb128 0x8
 1593 0169 08000000 		.4byte	.LVL7
 1594 016d D8080000 		.4byte	0x8d8
 1595 0171 08       		.uleb128 0x8
 1596 0172 1C000000 		.4byte	.LVL9
 1597 0176 E3080000 		.4byte	0x8e3
 1598 017a 00       		.byte	0
 1599 017b 06       		.uleb128 0x6
 1600 017c 88050000 		.4byte	.LASF22
 1601 0180 01       		.byte	0x1
 1602 0181 6B01     		.2byte	0x16b
 1603 0183 00000000 		.4byte	.LFB6
 1604 0187 28000000 		.4byte	.LFE6-.LFB6
 1605 018b 01       		.uleb128 0x1
 1606 018c 9C       		.byte	0x9c
 1607 018d C4010000 		.4byte	0x1c4
 1608 0191 09       		.uleb128 0x9
 1609 0192 A5030000 		.4byte	.LASF23
 1610 0196 01       		.byte	0x1
 1611 0197 6B01     		.2byte	0x16b
 1612 0199 77000000 		.4byte	0x77
 1613 019d 91000000 		.4byte	.LLST5
 1614 01a1 07       		.uleb128 0x7
 1615 01a2 51050000 		.4byte	.LASF18
 1616 01a6 01       		.byte	0x1
 1617 01a7 6D01     		.2byte	0x16d
 1618 01a9 6B000000 		.4byte	0x6b
 1619 01ad BD000000 		.4byte	.LLST6
 1620 01b1 08       		.uleb128 0x8
 1621 01b2 08000000 		.4byte	.LVL11
 1622 01b6 D8080000 		.4byte	0x8d8
 1623 01ba 08       		.uleb128 0x8
 1624 01bb 1C000000 		.4byte	.LVL13
 1625 01bf E3080000 		.4byte	0x8e3
 1626 01c3 00       		.byte	0
 1627 01c4 06       		.uleb128 0x6
 1628 01c5 7C030000 		.4byte	.LASF24
 1629 01c9 01       		.byte	0x1
 1630 01ca 8B01     		.2byte	0x18b
 1631 01cc 00000000 		.4byte	.LFB7
 1632 01d0 2C000000 		.4byte	.LFE7-.LFB7
 1633 01d4 01       		.uleb128 0x1
 1634 01d5 9C       		.byte	0x9c
 1635 01d6 0D020000 		.4byte	0x20d
 1636 01da 09       		.uleb128 0x9
 1637 01db DF020000 		.4byte	.LASF25
 1638 01df 01       		.byte	0x1
 1639 01e0 8B01     		.2byte	0x18b
 1640 01e2 77000000 		.4byte	0x77
 1641 01e6 D0000000 		.4byte	.LLST7
 1642 01ea 07       		.uleb128 0x7
 1643 01eb 51050000 		.4byte	.LASF18
 1644 01ef 01       		.byte	0x1
ARM GAS  C:\Users\g\AppData\Local\Temp\ccNCqeMN.s 			page 55


 1645 01f0 8D01     		.2byte	0x18d
 1646 01f2 6B000000 		.4byte	0x6b
 1647 01f6 FC000000 		.4byte	.LLST8
 1648 01fa 08       		.uleb128 0x8
 1649 01fb 08000000 		.4byte	.LVL15
 1650 01ff D8080000 		.4byte	0x8d8
 1651 0203 08       		.uleb128 0x8
 1652 0204 22000000 		.4byte	.LVL17
 1653 0208 E3080000 		.4byte	0x8e3
 1654 020c 00       		.byte	0
 1655 020d 06       		.uleb128 0x6
 1656 020e D8050000 		.4byte	.LASF26
 1657 0212 01       		.byte	0x1
 1658 0213 C101     		.2byte	0x1c1
 1659 0215 00000000 		.4byte	.LFB8
 1660 0219 10000000 		.4byte	.LFE8-.LFB8
 1661 021d 01       		.uleb128 0x1
 1662 021e 9C       		.byte	0x9c
 1663 021f 34020000 		.4byte	0x234
 1664 0223 09       		.uleb128 0x9
 1665 0224 7C020000 		.4byte	.LASF27
 1666 0228 01       		.byte	0x1
 1667 0229 C101     		.2byte	0x1c1
 1668 022b 77000000 		.4byte	0x77
 1669 022f 0F010000 		.4byte	.LLST9
 1670 0233 00       		.byte	0
 1671 0234 06       		.uleb128 0x6
 1672 0235 71050000 		.4byte	.LASF28
 1673 0239 01       		.byte	0x1
 1674 023a E501     		.2byte	0x1e5
 1675 023c 00000000 		.4byte	.LFB9
 1676 0240 28000000 		.4byte	.LFE9-.LFB9
 1677 0244 01       		.uleb128 0x1
 1678 0245 9C       		.byte	0x9c
 1679 0246 7D020000 		.4byte	0x27d
 1680 024a 09       		.uleb128 0x9
 1681 024b 3A030000 		.4byte	.LASF29
 1682 024f 01       		.byte	0x1
 1683 0250 E501     		.2byte	0x1e5
 1684 0252 77000000 		.4byte	0x77
 1685 0256 30010000 		.4byte	.LLST10
 1686 025a 07       		.uleb128 0x7
 1687 025b 51050000 		.4byte	.LASF18
 1688 025f 01       		.byte	0x1
 1689 0260 E701     		.2byte	0x1e7
 1690 0262 6B000000 		.4byte	0x6b
 1691 0266 5C010000 		.4byte	.LLST11
 1692 026a 08       		.uleb128 0x8
 1693 026b 08000000 		.4byte	.LVL21
 1694 026f D8080000 		.4byte	0x8d8
 1695 0273 08       		.uleb128 0x8
 1696 0274 22000000 		.4byte	.LVL23
 1697 0278 E3080000 		.4byte	0x8e3
 1698 027c 00       		.byte	0
 1699 027d 06       		.uleb128 0x6
 1700 027e 4C040000 		.4byte	.LASF30
 1701 0282 01       		.byte	0x1
ARM GAS  C:\Users\g\AppData\Local\Temp\ccNCqeMN.s 			page 56


 1702 0283 0702     		.2byte	0x207
 1703 0285 00000000 		.4byte	.LFB10
 1704 0289 28000000 		.4byte	.LFE10-.LFB10
 1705 028d 01       		.uleb128 0x1
 1706 028e 9C       		.byte	0x9c
 1707 028f C6020000 		.4byte	0x2c6
 1708 0293 09       		.uleb128 0x9
 1709 0294 E5030000 		.4byte	.LASF31
 1710 0298 01       		.byte	0x1
 1711 0299 0702     		.2byte	0x207
 1712 029b 77000000 		.4byte	0x77
 1713 029f 6F010000 		.4byte	.LLST12
 1714 02a3 07       		.uleb128 0x7
 1715 02a4 51050000 		.4byte	.LASF18
 1716 02a8 01       		.byte	0x1
 1717 02a9 0902     		.2byte	0x209
 1718 02ab 6B000000 		.4byte	0x6b
 1719 02af 9B010000 		.4byte	.LLST13
 1720 02b3 08       		.uleb128 0x8
 1721 02b4 08000000 		.4byte	.LVL25
 1722 02b8 D8080000 		.4byte	0x8d8
 1723 02bc 08       		.uleb128 0x8
 1724 02bd 22000000 		.4byte	.LVL27
 1725 02c1 E3080000 		.4byte	0x8e3
 1726 02c5 00       		.byte	0
 1727 02c6 06       		.uleb128 0x6
 1728 02c7 75010000 		.4byte	.LASF32
 1729 02cb 01       		.byte	0x1
 1730 02cc 2802     		.2byte	0x228
 1731 02ce 00000000 		.4byte	.LFB11
 1732 02d2 2C000000 		.4byte	.LFE11-.LFB11
 1733 02d6 01       		.uleb128 0x1
 1734 02d7 9C       		.byte	0x9c
 1735 02d8 0F030000 		.4byte	0x30f
 1736 02dc 09       		.uleb128 0x9
 1737 02dd 0B020000 		.4byte	.LASF33
 1738 02e1 01       		.byte	0x1
 1739 02e2 2802     		.2byte	0x228
 1740 02e4 77000000 		.4byte	0x77
 1741 02e8 AE010000 		.4byte	.LLST14
 1742 02ec 07       		.uleb128 0x7
 1743 02ed 51050000 		.4byte	.LASF18
 1744 02f1 01       		.byte	0x1
 1745 02f2 2A02     		.2byte	0x22a
 1746 02f4 6B000000 		.4byte	0x6b
 1747 02f8 DA010000 		.4byte	.LLST15
 1748 02fc 08       		.uleb128 0x8
 1749 02fd 08000000 		.4byte	.LVL29
 1750 0301 D8080000 		.4byte	0x8d8
 1751 0305 08       		.uleb128 0x8
 1752 0306 20000000 		.4byte	.LVL31
 1753 030a E3080000 		.4byte	0x8e3
 1754 030e 00       		.byte	0
 1755 030f 06       		.uleb128 0x6
 1756 0310 8A040000 		.4byte	.LASF34
 1757 0314 01       		.byte	0x1
 1758 0315 4902     		.2byte	0x249
ARM GAS  C:\Users\g\AppData\Local\Temp\ccNCqeMN.s 			page 57


 1759 0317 00000000 		.4byte	.LFB12
 1760 031b 28000000 		.4byte	.LFE12-.LFB12
 1761 031f 01       		.uleb128 0x1
 1762 0320 9C       		.byte	0x9c
 1763 0321 58030000 		.4byte	0x358
 1764 0325 09       		.uleb128 0x9
 1765 0326 E4010000 		.4byte	.LASF35
 1766 032a 01       		.byte	0x1
 1767 032b 4902     		.2byte	0x249
 1768 032d 77000000 		.4byte	0x77
 1769 0331 ED010000 		.4byte	.LLST16
 1770 0335 07       		.uleb128 0x7
 1771 0336 51050000 		.4byte	.LASF18
 1772 033a 01       		.byte	0x1
 1773 033b 4B02     		.2byte	0x24b
 1774 033d 6B000000 		.4byte	0x6b
 1775 0341 19020000 		.4byte	.LLST17
 1776 0345 08       		.uleb128 0x8
 1777 0346 08000000 		.4byte	.LVL33
 1778 034a D8080000 		.4byte	0x8d8
 1779 034e 08       		.uleb128 0x8
 1780 034f 1C000000 		.4byte	.LVL35
 1781 0353 E3080000 		.4byte	0x8e3
 1782 0357 00       		.byte	0
 1783 0358 06       		.uleb128 0x6
 1784 0359 AF030000 		.4byte	.LASF36
 1785 035d 01       		.byte	0x1
 1786 035e 6702     		.2byte	0x267
 1787 0360 00000000 		.4byte	.LFB13
 1788 0364 10000000 		.4byte	.LFE13-.LFB13
 1789 0368 01       		.uleb128 0x1
 1790 0369 9C       		.byte	0x9c
 1791 036a 7F030000 		.4byte	0x37f
 1792 036e 09       		.uleb128 0x9
 1793 036f 00000000 		.4byte	.LASF37
 1794 0373 01       		.byte	0x1
 1795 0374 6702     		.2byte	0x267
 1796 0376 77000000 		.4byte	0x77
 1797 037a 2C020000 		.4byte	.LLST18
 1798 037e 00       		.byte	0
 1799 037f 0A       		.uleb128 0xa
 1800 0380 F6030000 		.4byte	.LASF42
 1801 0384 01       		.byte	0x1
 1802 0385 7B02     		.2byte	0x27b
 1803 0387 77000000 		.4byte	0x77
 1804 038b 00000000 		.4byte	.LFB14
 1805 038f 10000000 		.4byte	.LFE14-.LFB14
 1806 0393 01       		.uleb128 0x1
 1807 0394 9C       		.byte	0x9c
 1808 0395 06       		.uleb128 0x6
 1809 0396 65030000 		.4byte	.LASF38
 1810 039a 01       		.byte	0x1
 1811 039b 9802     		.2byte	0x298
 1812 039d 00000000 		.4byte	.LFB15
 1813 03a1 28000000 		.4byte	.LFE15-.LFB15
 1814 03a5 01       		.uleb128 0x1
 1815 03a6 9C       		.byte	0x9c
ARM GAS  C:\Users\g\AppData\Local\Temp\ccNCqeMN.s 			page 58


 1816 03a7 DE030000 		.4byte	0x3de
 1817 03ab 09       		.uleb128 0x9
 1818 03ac BF040000 		.4byte	.LASF39
 1819 03b0 01       		.byte	0x1
 1820 03b1 9802     		.2byte	0x298
 1821 03b3 77000000 		.4byte	0x77
 1822 03b7 4D020000 		.4byte	.LLST19
 1823 03bb 07       		.uleb128 0x7
 1824 03bc 51050000 		.4byte	.LASF18
 1825 03c0 01       		.byte	0x1
 1826 03c1 9A02     		.2byte	0x29a
 1827 03c3 6B000000 		.4byte	0x6b
 1828 03c7 79020000 		.4byte	.LLST20
 1829 03cb 08       		.uleb128 0x8
 1830 03cc 08000000 		.4byte	.LVL39
 1831 03d0 D8080000 		.4byte	0x8d8
 1832 03d4 08       		.uleb128 0x8
 1833 03d5 1C000000 		.4byte	.LVL41
 1834 03d9 E3080000 		.4byte	0x8e3
 1835 03dd 00       		.byte	0
 1836 03de 06       		.uleb128 0x6
 1837 03df F7010000 		.4byte	.LASF40
 1838 03e3 01       		.byte	0x1
 1839 03e4 B502     		.2byte	0x2b5
 1840 03e6 00000000 		.4byte	.LFB16
 1841 03ea 10000000 		.4byte	.LFE16-.LFB16
 1842 03ee 01       		.uleb128 0x1
 1843 03ef 9C       		.byte	0x9c
 1844 03f0 05040000 		.4byte	0x405
 1845 03f4 09       		.uleb128 0x9
 1846 03f5 4A000000 		.4byte	.LASF41
 1847 03f9 01       		.byte	0x1
 1848 03fa B502     		.2byte	0x2b5
 1849 03fc 77000000 		.4byte	0x77
 1850 0400 8C020000 		.4byte	.LLST21
 1851 0404 00       		.byte	0
 1852 0405 0A       		.uleb128 0xa
 1853 0406 E2040000 		.4byte	.LASF43
 1854 040a 01       		.byte	0x1
 1855 040b C902     		.2byte	0x2c9
 1856 040d 77000000 		.4byte	0x77
 1857 0411 00000000 		.4byte	.LFB17
 1858 0415 10000000 		.4byte	.LFE17-.LFB17
 1859 0419 01       		.uleb128 0x1
 1860 041a 9C       		.byte	0x9c
 1861 041b 06       		.uleb128 0x6
 1862 041c CB040000 		.4byte	.LASF44
 1863 0420 01       		.byte	0x1
 1864 0421 E302     		.2byte	0x2e3
 1865 0423 00000000 		.4byte	.LFB18
 1866 0427 24000000 		.4byte	.LFE18-.LFB18
 1867 042b 01       		.uleb128 0x1
 1868 042c 9C       		.byte	0x9c
 1869 042d 64040000 		.4byte	0x464
 1870 0431 09       		.uleb128 0x9
 1871 0432 B6050000 		.4byte	.LASF45
 1872 0436 01       		.byte	0x1
ARM GAS  C:\Users\g\AppData\Local\Temp\ccNCqeMN.s 			page 59


 1873 0437 E302     		.2byte	0x2e3
 1874 0439 77000000 		.4byte	0x77
 1875 043d AD020000 		.4byte	.LLST22
 1876 0441 07       		.uleb128 0x7
 1877 0442 51050000 		.4byte	.LASF18
 1878 0446 01       		.byte	0x1
 1879 0447 E502     		.2byte	0x2e5
 1880 0449 6B000000 		.4byte	0x6b
 1881 044d D9020000 		.4byte	.LLST23
 1882 0451 08       		.uleb128 0x8
 1883 0452 08000000 		.4byte	.LVL45
 1884 0456 D8080000 		.4byte	0x8d8
 1885 045a 08       		.uleb128 0x8
 1886 045b 1E000000 		.4byte	.LVL47
 1887 045f E3080000 		.4byte	0x8e3
 1888 0463 00       		.byte	0
 1889 0464 06       		.uleb128 0x6
 1890 0465 3E020000 		.4byte	.LASF46
 1891 0469 01       		.byte	0x1
 1892 046a FE02     		.2byte	0x2fe
 1893 046c 00000000 		.4byte	.LFB19
 1894 0470 10000000 		.4byte	.LFE19-.LFB19
 1895 0474 01       		.uleb128 0x1
 1896 0475 9C       		.byte	0x9c
 1897 0476 8B040000 		.4byte	0x48b
 1898 047a 09       		.uleb128 0x9
 1899 047b C1050000 		.4byte	.LASF47
 1900 047f 01       		.byte	0x1
 1901 0480 FE02     		.2byte	0x2fe
 1902 0482 77000000 		.4byte	0x77
 1903 0486 EC020000 		.4byte	.LLST24
 1904 048a 00       		.byte	0
 1905 048b 0A       		.uleb128 0xa
 1906 048c 00050000 		.4byte	.LASF48
 1907 0490 01       		.byte	0x1
 1908 0491 1203     		.2byte	0x312
 1909 0493 77000000 		.4byte	0x77
 1910 0497 00000000 		.4byte	.LFB20
 1911 049b 10000000 		.4byte	.LFE20-.LFB20
 1912 049f 01       		.uleb128 0x1
 1913 04a0 9C       		.byte	0x9c
 1914 04a1 06       		.uleb128 0x6
 1915 04a2 A9040000 		.4byte	.LASF49
 1916 04a6 01       		.byte	0x1
 1917 04a7 2C03     		.2byte	0x32c
 1918 04a9 00000000 		.4byte	.LFB21
 1919 04ad 28000000 		.4byte	.LFE21-.LFB21
 1920 04b1 01       		.uleb128 0x1
 1921 04b2 9C       		.byte	0x9c
 1922 04b3 EA040000 		.4byte	0x4ea
 1923 04b7 09       		.uleb128 0x9
 1924 04b8 B6050000 		.4byte	.LASF45
 1925 04bc 01       		.byte	0x1
 1926 04bd 2C03     		.2byte	0x32c
 1927 04bf 77000000 		.4byte	0x77
 1928 04c3 0D030000 		.4byte	.LLST25
 1929 04c7 07       		.uleb128 0x7
ARM GAS  C:\Users\g\AppData\Local\Temp\ccNCqeMN.s 			page 60


 1930 04c8 51050000 		.4byte	.LASF18
 1931 04cc 01       		.byte	0x1
 1932 04cd 2E03     		.2byte	0x32e
 1933 04cf 6B000000 		.4byte	0x6b
 1934 04d3 39030000 		.4byte	.LLST26
 1935 04d7 08       		.uleb128 0x8
 1936 04d8 08000000 		.4byte	.LVL51
 1937 04dc D8080000 		.4byte	0x8d8
 1938 04e0 08       		.uleb128 0x8
 1939 04e1 22000000 		.4byte	.LVL53
 1940 04e5 E3080000 		.4byte	0x8e3
 1941 04e9 00       		.byte	0
 1942 04ea 06       		.uleb128 0x6
 1943 04eb 1C030000 		.4byte	.LASF50
 1944 04ef 01       		.byte	0x1
 1945 04f0 5103     		.2byte	0x351
 1946 04f2 00000000 		.4byte	.LFB22
 1947 04f6 10000000 		.4byte	.LFE22-.LFB22
 1948 04fa 01       		.uleb128 0x1
 1949 04fb 9C       		.byte	0x9c
 1950 04fc 11050000 		.4byte	0x511
 1951 0500 09       		.uleb128 0x9
 1952 0501 5D030000 		.4byte	.LASF51
 1953 0505 01       		.byte	0x1
 1954 0506 5103     		.2byte	0x351
 1955 0508 77000000 		.4byte	0x77
 1956 050c 4C030000 		.4byte	.LLST27
 1957 0510 00       		.byte	0
 1958 0511 0A       		.uleb128 0xa
 1959 0512 49030000 		.4byte	.LASF52
 1960 0516 01       		.byte	0x1
 1961 0517 8403     		.2byte	0x384
 1962 0519 77000000 		.4byte	0x77
 1963 051d 00000000 		.4byte	.LFB23
 1964 0521 10000000 		.4byte	.LFE23-.LFB23
 1965 0525 01       		.uleb128 0x1
 1966 0526 9C       		.byte	0x9c
 1967 0527 06       		.uleb128 0x6
 1968 0528 26020000 		.4byte	.LASF53
 1969 052c 01       		.byte	0x1
 1970 052d BA03     		.2byte	0x3ba
 1971 052f 00000000 		.4byte	.LFB24
 1972 0533 10000000 		.4byte	.LFE24-.LFB24
 1973 0537 01       		.uleb128 0x1
 1974 0538 9C       		.byte	0x9c
 1975 0539 4E050000 		.4byte	0x54e
 1976 053d 09       		.uleb128 0x9
 1977 053e F5040000 		.4byte	.LASF54
 1978 0542 01       		.byte	0x1
 1979 0543 BA03     		.2byte	0x3ba
 1980 0545 77000000 		.4byte	0x77
 1981 0549 6D030000 		.4byte	.LLST28
 1982 054d 00       		.byte	0
 1983 054e 0A       		.uleb128 0xa
 1984 054f 85000000 		.4byte	.LASF55
 1985 0553 01       		.byte	0x1
 1986 0554 E803     		.2byte	0x3e8
ARM GAS  C:\Users\g\AppData\Local\Temp\ccNCqeMN.s 			page 61


 1987 0556 77000000 		.4byte	0x77
 1988 055a 00000000 		.4byte	.LFB25
 1989 055e 10000000 		.4byte	.LFE25-.LFB25
 1990 0562 01       		.uleb128 0x1
 1991 0563 9C       		.byte	0x9c
 1992 0564 0A       		.uleb128 0xa
 1993 0565 ED020000 		.4byte	.LASF56
 1994 0569 01       		.byte	0x1
 1995 056a 1604     		.2byte	0x416
 1996 056c 77000000 		.4byte	0x77
 1997 0570 00000000 		.4byte	.LFB26
 1998 0574 10000000 		.4byte	.LFE26-.LFB26
 1999 0578 01       		.uleb128 0x1
 2000 0579 9C       		.byte	0x9c
 2001 057a 0A       		.uleb128 0xa
 2002 057b 73040000 		.4byte	.LASF57
 2003 057f 01       		.byte	0x1
 2004 0580 2B04     		.2byte	0x42b
 2005 0582 77000000 		.4byte	0x77
 2006 0586 00000000 		.4byte	.LFB27
 2007 058a 10000000 		.4byte	.LFE27-.LFB27
 2008 058e 01       		.uleb128 0x1
 2009 058f 9C       		.byte	0x9c
 2010 0590 06       		.uleb128 0x6
 2011 0591 35040000 		.4byte	.LASF58
 2012 0595 01       		.byte	0x1
 2013 0596 4604     		.2byte	0x446
 2014 0598 00000000 		.4byte	.LFB28
 2015 059c 24000000 		.4byte	.LFE28-.LFB28
 2016 05a0 01       		.uleb128 0x1
 2017 05a1 9C       		.byte	0x9c
 2018 05a2 D9050000 		.4byte	0x5d9
 2019 05a6 09       		.uleb128 0x9
 2020 05a7 D8010000 		.4byte	.LASF59
 2021 05ab 01       		.byte	0x1
 2022 05ac 4604     		.2byte	0x446
 2023 05ae 77000000 		.4byte	0x77
 2024 05b2 8E030000 		.4byte	.LLST29
 2025 05b6 07       		.uleb128 0x7
 2026 05b7 51050000 		.4byte	.LASF18
 2027 05bb 01       		.byte	0x1
 2028 05bc 4804     		.2byte	0x448
 2029 05be 6B000000 		.4byte	0x6b
 2030 05c2 BA030000 		.4byte	.LLST30
 2031 05c6 08       		.uleb128 0x8
 2032 05c7 08000000 		.4byte	.LVL59
 2033 05cb D8080000 		.4byte	0x8d8
 2034 05cf 08       		.uleb128 0x8
 2035 05d0 1C000000 		.4byte	.LVL61
 2036 05d4 E3080000 		.4byte	0x8e3
 2037 05d8 00       		.byte	0
 2038 05d9 06       		.uleb128 0x6
 2039 05da 51000000 		.4byte	.LASF60
 2040 05de 01       		.byte	0x1
 2041 05df 6704     		.2byte	0x467
 2042 05e1 00000000 		.4byte	.LFB29
 2043 05e5 24000000 		.4byte	.LFE29-.LFB29
ARM GAS  C:\Users\g\AppData\Local\Temp\ccNCqeMN.s 			page 62


 2044 05e9 01       		.uleb128 0x1
 2045 05ea 9C       		.byte	0x9c
 2046 05eb 22060000 		.4byte	0x622
 2047 05ef 09       		.uleb128 0x9
 2048 05f0 D8010000 		.4byte	.LASF59
 2049 05f4 01       		.byte	0x1
 2050 05f5 6704     		.2byte	0x467
 2051 05f7 77000000 		.4byte	0x77
 2052 05fb CD030000 		.4byte	.LLST31
 2053 05ff 07       		.uleb128 0x7
 2054 0600 51050000 		.4byte	.LASF18
 2055 0604 01       		.byte	0x1
 2056 0605 6904     		.2byte	0x469
 2057 0607 6B000000 		.4byte	0x6b
 2058 060b F9030000 		.4byte	.LLST32
 2059 060f 08       		.uleb128 0x8
 2060 0610 08000000 		.4byte	.LVL63
 2061 0614 D8080000 		.4byte	0x8d8
 2062 0618 08       		.uleb128 0x8
 2063 0619 1E000000 		.4byte	.LVL65
 2064 061d E3080000 		.4byte	0x8e3
 2065 0621 00       		.byte	0
 2066 0622 06       		.uleb128 0x6
 2067 0623 01030000 		.4byte	.LASF61
 2068 0627 01       		.byte	0x1
 2069 0628 8804     		.2byte	0x488
 2070 062a 00000000 		.4byte	.LFB30
 2071 062e 28000000 		.4byte	.LFE30-.LFB30
 2072 0632 01       		.uleb128 0x1
 2073 0633 9C       		.byte	0x9c
 2074 0634 6B060000 		.4byte	0x66b
 2075 0638 09       		.uleb128 0x9
 2076 0639 D8010000 		.4byte	.LASF59
 2077 063d 01       		.byte	0x1
 2078 063e 8804     		.2byte	0x488
 2079 0640 77000000 		.4byte	0x77
 2080 0644 0C040000 		.4byte	.LLST33
 2081 0648 07       		.uleb128 0x7
 2082 0649 51050000 		.4byte	.LASF18
 2083 064d 01       		.byte	0x1
 2084 064e 8A04     		.2byte	0x48a
 2085 0650 6B000000 		.4byte	0x6b
 2086 0654 38040000 		.4byte	.LLST34
 2087 0658 08       		.uleb128 0x8
 2088 0659 08000000 		.4byte	.LVL67
 2089 065d D8080000 		.4byte	0x8d8
 2090 0661 08       		.uleb128 0x8
 2091 0662 1E000000 		.4byte	.LVL69
 2092 0666 E3080000 		.4byte	0x8e3
 2093 066a 00       		.byte	0
 2094 066b 06       		.uleb128 0x6
 2095 066c 3D050000 		.4byte	.LASF62
 2096 0670 01       		.byte	0x1
 2097 0671 A804     		.2byte	0x4a8
 2098 0673 00000000 		.4byte	.LFB31
 2099 0677 24000000 		.4byte	.LFE31-.LFB31
 2100 067b 01       		.uleb128 0x1
ARM GAS  C:\Users\g\AppData\Local\Temp\ccNCqeMN.s 			page 63


 2101 067c 9C       		.byte	0x9c
 2102 067d B4060000 		.4byte	0x6b4
 2103 0681 09       		.uleb128 0x9
 2104 0682 D8010000 		.4byte	.LASF59
 2105 0686 01       		.byte	0x1
 2106 0687 A804     		.2byte	0x4a8
 2107 0689 77000000 		.4byte	0x77
 2108 068d 4B040000 		.4byte	.LLST35
 2109 0691 07       		.uleb128 0x7
 2110 0692 51050000 		.4byte	.LASF18
 2111 0696 01       		.byte	0x1
 2112 0697 AA04     		.2byte	0x4aa
 2113 0699 6B000000 		.4byte	0x6b
 2114 069d 77040000 		.4byte	.LLST36
 2115 06a1 08       		.uleb128 0x8
 2116 06a2 08000000 		.4byte	.LVL71
 2117 06a6 D8080000 		.4byte	0x8d8
 2118 06aa 08       		.uleb128 0x8
 2119 06ab 1E000000 		.4byte	.LVL73
 2120 06af E3080000 		.4byte	0x8e3
 2121 06b3 00       		.byte	0
 2122 06b4 06       		.uleb128 0x6
 2123 06b5 CA020000 		.4byte	.LASF63
 2124 06b9 01       		.byte	0x1
 2125 06ba C904     		.2byte	0x4c9
 2126 06bc 00000000 		.4byte	.LFB32
 2127 06c0 24000000 		.4byte	.LFE32-.LFB32
 2128 06c4 01       		.uleb128 0x1
 2129 06c5 9C       		.byte	0x9c
 2130 06c6 FD060000 		.4byte	0x6fd
 2131 06ca 09       		.uleb128 0x9
 2132 06cb D8010000 		.4byte	.LASF59
 2133 06cf 01       		.byte	0x1
 2134 06d0 C904     		.2byte	0x4c9
 2135 06d2 77000000 		.4byte	0x77
 2136 06d6 8A040000 		.4byte	.LLST37
 2137 06da 07       		.uleb128 0x7
 2138 06db 51050000 		.4byte	.LASF18
 2139 06df 01       		.byte	0x1
 2140 06e0 CB04     		.2byte	0x4cb
 2141 06e2 6B000000 		.4byte	0x6b
 2142 06e6 B6040000 		.4byte	.LLST38
 2143 06ea 08       		.uleb128 0x8
 2144 06eb 08000000 		.4byte	.LVL75
 2145 06ef D8080000 		.4byte	0x8d8
 2146 06f3 08       		.uleb128 0x8
 2147 06f4 1E000000 		.4byte	.LVL77
 2148 06f8 E3080000 		.4byte	0x8e3
 2149 06fc 00       		.byte	0
 2150 06fd 06       		.uleb128 0x6
 2151 06fe 1C000000 		.4byte	.LASF64
 2152 0702 01       		.byte	0x1
 2153 0703 F104     		.2byte	0x4f1
 2154 0705 00000000 		.4byte	.LFB33
 2155 0709 1C000000 		.4byte	.LFE33-.LFB33
 2156 070d 01       		.uleb128 0x1
 2157 070e 9C       		.byte	0x9c
ARM GAS  C:\Users\g\AppData\Local\Temp\ccNCqeMN.s 			page 64


 2158 070f 56070000 		.4byte	0x756
 2159 0713 09       		.uleb128 0x9
 2160 0714 E4010000 		.4byte	.LASF35
 2161 0718 01       		.byte	0x1
 2162 0719 F104     		.2byte	0x4f1
 2163 071b 77000000 		.4byte	0x77
 2164 071f C9040000 		.4byte	.LLST39
 2165 0723 09       		.uleb128 0x9
 2166 0724 62020000 		.4byte	.LASF65
 2167 0728 01       		.byte	0x1
 2168 0729 F104     		.2byte	0x4f1
 2169 072b 77000000 		.4byte	0x77
 2170 072f F5040000 		.4byte	.LLST40
 2171 0733 07       		.uleb128 0x7
 2172 0734 51050000 		.4byte	.LASF18
 2173 0738 01       		.byte	0x1
 2174 0739 F304     		.2byte	0x4f3
 2175 073b 6B000000 		.4byte	0x6b
 2176 073f 21050000 		.4byte	.LLST41
 2177 0743 08       		.uleb128 0x8
 2178 0744 0A000000 		.4byte	.LVL79
 2179 0748 D8080000 		.4byte	0x8d8
 2180 074c 08       		.uleb128 0x8
 2181 074d 14000000 		.4byte	.LVL81
 2182 0751 E3080000 		.4byte	0x8e3
 2183 0755 00       		.byte	0
 2184 0756 0B       		.uleb128 0xb
 2185 0757 62050000 		.4byte	.LASF66
 2186 075b 01       		.byte	0x1
 2187 075c B1       		.byte	0xb1
 2188 075d 00000000 		.4byte	.LFB1
 2189 0761 24000000 		.4byte	.LFE1-.LFB1
 2190 0765 01       		.uleb128 0x1
 2191 0766 9C       		.byte	0x9c
 2192 0767 A1070000 		.4byte	0x7a1
 2193 076b 0C       		.uleb128 0xc
 2194 076c 51050000 		.4byte	.LASF18
 2195 0770 01       		.byte	0x1
 2196 0771 B3       		.byte	0xb3
 2197 0772 6B000000 		.4byte	0x6b
 2198 0776 34050000 		.4byte	.LLST42
 2199 077a 08       		.uleb128 0x8
 2200 077b 06000000 		.4byte	.LVL83
 2201 077f D8080000 		.4byte	0x8d8
 2202 0783 08       		.uleb128 0x8
 2203 0784 14000000 		.4byte	.LVL84
 2204 0788 E3080000 		.4byte	0x8e3
 2205 078c 0D       		.uleb128 0xd
 2206 078d 1C000000 		.4byte	.LVL85
 2207 0791 FD060000 		.4byte	0x6fd
 2208 0795 0E       		.uleb128 0xe
 2209 0796 01       		.uleb128 0x1
 2210 0797 51       		.byte	0x51
 2211 0798 01       		.uleb128 0x1
 2212 0799 48       		.byte	0x48
 2213 079a 0E       		.uleb128 0xe
 2214 079b 01       		.uleb128 0x1
ARM GAS  C:\Users\g\AppData\Local\Temp\ccNCqeMN.s 			page 65


 2215 079c 50       		.byte	0x50
 2216 079d 01       		.uleb128 0x1
 2217 079e 34       		.byte	0x34
 2218 079f 00       		.byte	0
 2219 07a0 00       		.byte	0
 2220 07a1 0A       		.uleb128 0xa
 2221 07a2 C4030000 		.4byte	.LASF67
 2222 07a6 01       		.byte	0x1
 2223 07a7 0E05     		.2byte	0x50e
 2224 07a9 77000000 		.4byte	0x77
 2225 07ad 00000000 		.4byte	.LFB34
 2226 07b1 14000000 		.4byte	.LFE34-.LFB34
 2227 07b5 01       		.uleb128 0x1
 2228 07b6 9C       		.byte	0x9c
 2229 07b7 06       		.uleb128 0x6
 2230 07b8 9D050000 		.4byte	.LASF68
 2231 07bc 01       		.byte	0x1
 2232 07bd 2705     		.2byte	0x527
 2233 07bf 00000000 		.4byte	.LFB35
 2234 07c3 0C000000 		.4byte	.LFE35-.LFB35
 2235 07c7 01       		.uleb128 0x1
 2236 07c8 9C       		.byte	0x9c
 2237 07c9 DC070000 		.4byte	0x7dc
 2238 07cd 0F       		.uleb128 0xf
 2239 07ce 65040000 		.4byte	.LASF69
 2240 07d2 01       		.byte	0x1
 2241 07d3 2705     		.2byte	0x527
 2242 07d5 77000000 		.4byte	0x77
 2243 07d9 01       		.uleb128 0x1
 2244 07da 50       		.byte	0x50
 2245 07db 00       		.byte	0
 2246 07dc 0B       		.uleb128 0xb
 2247 07dd 35010000 		.4byte	.LASF70
 2248 07e1 01       		.byte	0x1
 2249 07e2 26       		.byte	0x26
 2250 07e3 00000000 		.4byte	.LFB0
 2251 07e7 30000000 		.4byte	.LFE0-.LFB0
 2252 07eb 01       		.uleb128 0x1
 2253 07ec 9C       		.byte	0x9c
 2254 07ed 29080000 		.4byte	0x829
 2255 07f1 10       		.uleb128 0x10
 2256 07f2 16000000 		.4byte	.LVL87
 2257 07f6 B7070000 		.4byte	0x7b7
 2258 07fa 04080000 		.4byte	0x804
 2259 07fe 0E       		.uleb128 0xe
 2260 07ff 01       		.uleb128 0x1
 2261 0800 50       		.byte	0x50
 2262 0801 01       		.uleb128 0x1
 2263 0802 30       		.byte	0x30
 2264 0803 00       		.byte	0
 2265 0804 10       		.uleb128 0x10
 2266 0805 1E000000 		.4byte	.LVL88
 2267 0809 DE030000 		.4byte	0x3de
 2268 080d 19080000 		.4byte	0x819
 2269 0811 0E       		.uleb128 0xe
 2270 0812 01       		.uleb128 0x1
 2271 0813 50       		.byte	0x50
ARM GAS  C:\Users\g\AppData\Local\Temp\ccNCqeMN.s 			page 66


 2272 0814 03       		.uleb128 0x3
 2273 0815 0A       		.byte	0xa
 2274 0816 E803     		.2byte	0x3e8
 2275 0818 00       		.byte	0
 2276 0819 0D       		.uleb128 0xd
 2277 081a 24000000 		.4byte	.LVL89
 2278 081e 58030000 		.4byte	0x358
 2279 0822 0E       		.uleb128 0xe
 2280 0823 01       		.uleb128 0x1
 2281 0824 50       		.byte	0x50
 2282 0825 01       		.uleb128 0x1
 2283 0826 30       		.byte	0x30
 2284 0827 00       		.byte	0
 2285 0828 00       		.byte	0
 2286 0829 0B       		.uleb128 0xb
 2287 082a E9010000 		.4byte	.LASF71
 2288 082e 01       		.byte	0x1
 2289 082f E6       		.byte	0xe6
 2290 0830 00000000 		.4byte	.LFB2
 2291 0834 20000000 		.4byte	.LFE2-.LFB2
 2292 0838 01       		.uleb128 0x1
 2293 0839 9C       		.byte	0x9c
 2294 083a 51080000 		.4byte	0x851
 2295 083e 08       		.uleb128 0x8
 2296 083f 0E000000 		.4byte	.LVL90
 2297 0843 DC070000 		.4byte	0x7dc
 2298 0847 08       		.uleb128 0x8
 2299 0848 18000000 		.4byte	.LVL91
 2300 084c 56070000 		.4byte	0x756
 2301 0850 00       		.byte	0
 2302 0851 0A       		.uleb128 0xa
 2303 0852 14040000 		.4byte	.LASF72
 2304 0856 01       		.byte	0x1
 2305 0857 3E05     		.2byte	0x53e
 2306 0859 77000000 		.4byte	0x77
 2307 085d 00000000 		.4byte	.LFB36
 2308 0861 0C000000 		.4byte	.LFE36-.LFB36
 2309 0865 01       		.uleb128 0x1
 2310 0866 9C       		.byte	0x9c
 2311 0867 0A       		.uleb128 0xa
 2312 0868 9C020000 		.4byte	.LASF73
 2313 086c 01       		.byte	0x1
 2314 086d 5505     		.2byte	0x555
 2315 086f 77000000 		.4byte	0x77
 2316 0873 00000000 		.4byte	.LFB37
 2317 0877 0C000000 		.4byte	.LFE37-.LFB37
 2318 087b 01       		.uleb128 0x1
 2319 087c 9C       		.byte	0x9c
 2320 087d 06       		.uleb128 0x6
 2321 087e 33000000 		.4byte	.LASF74
 2322 0882 01       		.byte	0x1
 2323 0883 6C05     		.2byte	0x56c
 2324 0885 00000000 		.4byte	.LFB38
 2325 0889 0C000000 		.4byte	.LFE38-.LFB38
 2326 088d 01       		.uleb128 0x1
 2327 088e 9C       		.byte	0x9c
 2328 088f A2080000 		.4byte	0x8a2
ARM GAS  C:\Users\g\AppData\Local\Temp\ccNCqeMN.s 			page 67


 2329 0893 0F       		.uleb128 0xf
 2330 0894 65040000 		.4byte	.LASF69
 2331 0898 01       		.byte	0x1
 2332 0899 6C05     		.2byte	0x56c
 2333 089b 77000000 		.4byte	0x77
 2334 089f 01       		.uleb128 0x1
 2335 08a0 50       		.byte	0x50
 2336 08a1 00       		.byte	0
 2337 08a2 06       		.uleb128 0x6
 2338 08a3 C3010000 		.4byte	.LASF75
 2339 08a7 01       		.byte	0x1
 2340 08a8 8305     		.2byte	0x583
 2341 08aa 00000000 		.4byte	.LFB39
 2342 08ae 0C000000 		.4byte	.LFE39-.LFB39
 2343 08b2 01       		.uleb128 0x1
 2344 08b3 9C       		.byte	0x9c
 2345 08b4 C7080000 		.4byte	0x8c7
 2346 08b8 0F       		.uleb128 0xf
 2347 08b9 65040000 		.4byte	.LASF69
 2348 08bd 01       		.byte	0x1
 2349 08be 8305     		.2byte	0x583
 2350 08c0 77000000 		.4byte	0x77
 2351 08c4 01       		.uleb128 0x1
 2352 08c5 50       		.byte	0x50
 2353 08c6 00       		.byte	0
 2354 08c7 11       		.uleb128 0x11
 2355 08c8 5C010000 		.4byte	.LASF79
 2356 08cc 01       		.byte	0x1
 2357 08cd 15       		.byte	0x15
 2358 08ce 6B000000 		.4byte	0x6b
 2359 08d2 05       		.uleb128 0x5
 2360 08d3 03       		.byte	0x3
 2361 08d4 00000000 		.4byte	TX_SEND_initVar
 2362 08d8 12       		.uleb128 0x12
 2363 08d9 85020000 		.4byte	.LASF80
 2364 08dd 03       		.byte	0x3
 2365 08de E3       		.byte	0xe3
 2366 08df 6B000000 		.4byte	0x6b
 2367 08e3 13       		.uleb128 0x13
 2368 08e4 06000000 		.4byte	.LASF81
 2369 08e8 03       		.byte	0x3
 2370 08e9 E4       		.byte	0xe4
 2371 08ea 14       		.uleb128 0x14
 2372 08eb 6B000000 		.4byte	0x6b
 2373 08ef 00       		.byte	0
 2374 08f0 00       		.byte	0
 2375              		.section	.debug_abbrev,"",%progbits
 2376              	.Ldebug_abbrev0:
 2377 0000 01       		.uleb128 0x1
 2378 0001 11       		.uleb128 0x11
 2379 0002 01       		.byte	0x1
 2380 0003 25       		.uleb128 0x25
 2381 0004 0E       		.uleb128 0xe
 2382 0005 13       		.uleb128 0x13
 2383 0006 0B       		.uleb128 0xb
 2384 0007 03       		.uleb128 0x3
 2385 0008 0E       		.uleb128 0xe
ARM GAS  C:\Users\g\AppData\Local\Temp\ccNCqeMN.s 			page 68


 2386 0009 1B       		.uleb128 0x1b
 2387 000a 0E       		.uleb128 0xe
 2388 000b 55       		.uleb128 0x55
 2389 000c 17       		.uleb128 0x17
 2390 000d 11       		.uleb128 0x11
 2391 000e 01       		.uleb128 0x1
 2392 000f 10       		.uleb128 0x10
 2393 0010 17       		.uleb128 0x17
 2394 0011 00       		.byte	0
 2395 0012 00       		.byte	0
 2396 0013 02       		.uleb128 0x2
 2397 0014 24       		.uleb128 0x24
 2398 0015 00       		.byte	0
 2399 0016 0B       		.uleb128 0xb
 2400 0017 0B       		.uleb128 0xb
 2401 0018 3E       		.uleb128 0x3e
 2402 0019 0B       		.uleb128 0xb
 2403 001a 03       		.uleb128 0x3
 2404 001b 0E       		.uleb128 0xe
 2405 001c 00       		.byte	0
 2406 001d 00       		.byte	0
 2407 001e 03       		.uleb128 0x3
 2408 001f 24       		.uleb128 0x24
 2409 0020 00       		.byte	0
 2410 0021 0B       		.uleb128 0xb
 2411 0022 0B       		.uleb128 0xb
 2412 0023 3E       		.uleb128 0x3e
 2413 0024 0B       		.uleb128 0xb
 2414 0025 03       		.uleb128 0x3
 2415 0026 08       		.uleb128 0x8
 2416 0027 00       		.byte	0
 2417 0028 00       		.byte	0
 2418 0029 04       		.uleb128 0x4
 2419 002a 16       		.uleb128 0x16
 2420 002b 00       		.byte	0
 2421 002c 03       		.uleb128 0x3
 2422 002d 0E       		.uleb128 0xe
 2423 002e 3A       		.uleb128 0x3a
 2424 002f 0B       		.uleb128 0xb
 2425 0030 3B       		.uleb128 0x3b
 2426 0031 05       		.uleb128 0x5
 2427 0032 49       		.uleb128 0x49
 2428 0033 13       		.uleb128 0x13
 2429 0034 00       		.byte	0
 2430 0035 00       		.byte	0
 2431 0036 05       		.uleb128 0x5
 2432 0037 35       		.uleb128 0x35
 2433 0038 00       		.byte	0
 2434 0039 49       		.uleb128 0x49
 2435 003a 13       		.uleb128 0x13
 2436 003b 00       		.byte	0
 2437 003c 00       		.byte	0
 2438 003d 06       		.uleb128 0x6
 2439 003e 2E       		.uleb128 0x2e
 2440 003f 01       		.byte	0x1
 2441 0040 3F       		.uleb128 0x3f
 2442 0041 19       		.uleb128 0x19
ARM GAS  C:\Users\g\AppData\Local\Temp\ccNCqeMN.s 			page 69


 2443 0042 03       		.uleb128 0x3
 2444 0043 0E       		.uleb128 0xe
 2445 0044 3A       		.uleb128 0x3a
 2446 0045 0B       		.uleb128 0xb
 2447 0046 3B       		.uleb128 0x3b
 2448 0047 05       		.uleb128 0x5
 2449 0048 27       		.uleb128 0x27
 2450 0049 19       		.uleb128 0x19
 2451 004a 11       		.uleb128 0x11
 2452 004b 01       		.uleb128 0x1
 2453 004c 12       		.uleb128 0x12
 2454 004d 06       		.uleb128 0x6
 2455 004e 40       		.uleb128 0x40
 2456 004f 18       		.uleb128 0x18
 2457 0050 9742     		.uleb128 0x2117
 2458 0052 19       		.uleb128 0x19
 2459 0053 01       		.uleb128 0x1
 2460 0054 13       		.uleb128 0x13
 2461 0055 00       		.byte	0
 2462 0056 00       		.byte	0
 2463 0057 07       		.uleb128 0x7
 2464 0058 34       		.uleb128 0x34
 2465 0059 00       		.byte	0
 2466 005a 03       		.uleb128 0x3
 2467 005b 0E       		.uleb128 0xe
 2468 005c 3A       		.uleb128 0x3a
 2469 005d 0B       		.uleb128 0xb
 2470 005e 3B       		.uleb128 0x3b
 2471 005f 05       		.uleb128 0x5
 2472 0060 49       		.uleb128 0x49
 2473 0061 13       		.uleb128 0x13
 2474 0062 02       		.uleb128 0x2
 2475 0063 17       		.uleb128 0x17
 2476 0064 00       		.byte	0
 2477 0065 00       		.byte	0
 2478 0066 08       		.uleb128 0x8
 2479 0067 898201   		.uleb128 0x4109
 2480 006a 00       		.byte	0
 2481 006b 11       		.uleb128 0x11
 2482 006c 01       		.uleb128 0x1
 2483 006d 31       		.uleb128 0x31
 2484 006e 13       		.uleb128 0x13
 2485 006f 00       		.byte	0
 2486 0070 00       		.byte	0
 2487 0071 09       		.uleb128 0x9
 2488 0072 05       		.uleb128 0x5
 2489 0073 00       		.byte	0
 2490 0074 03       		.uleb128 0x3
 2491 0075 0E       		.uleb128 0xe
 2492 0076 3A       		.uleb128 0x3a
 2493 0077 0B       		.uleb128 0xb
 2494 0078 3B       		.uleb128 0x3b
 2495 0079 05       		.uleb128 0x5
 2496 007a 49       		.uleb128 0x49
 2497 007b 13       		.uleb128 0x13
 2498 007c 02       		.uleb128 0x2
 2499 007d 17       		.uleb128 0x17
ARM GAS  C:\Users\g\AppData\Local\Temp\ccNCqeMN.s 			page 70


 2500 007e 00       		.byte	0
 2501 007f 00       		.byte	0
 2502 0080 0A       		.uleb128 0xa
 2503 0081 2E       		.uleb128 0x2e
 2504 0082 00       		.byte	0
 2505 0083 3F       		.uleb128 0x3f
 2506 0084 19       		.uleb128 0x19
 2507 0085 03       		.uleb128 0x3
 2508 0086 0E       		.uleb128 0xe
 2509 0087 3A       		.uleb128 0x3a
 2510 0088 0B       		.uleb128 0xb
 2511 0089 3B       		.uleb128 0x3b
 2512 008a 05       		.uleb128 0x5
 2513 008b 27       		.uleb128 0x27
 2514 008c 19       		.uleb128 0x19
 2515 008d 49       		.uleb128 0x49
 2516 008e 13       		.uleb128 0x13
 2517 008f 11       		.uleb128 0x11
 2518 0090 01       		.uleb128 0x1
 2519 0091 12       		.uleb128 0x12
 2520 0092 06       		.uleb128 0x6
 2521 0093 40       		.uleb128 0x40
 2522 0094 18       		.uleb128 0x18
 2523 0095 9742     		.uleb128 0x2117
 2524 0097 19       		.uleb128 0x19
 2525 0098 00       		.byte	0
 2526 0099 00       		.byte	0
 2527 009a 0B       		.uleb128 0xb
 2528 009b 2E       		.uleb128 0x2e
 2529 009c 01       		.byte	0x1
 2530 009d 3F       		.uleb128 0x3f
 2531 009e 19       		.uleb128 0x19
 2532 009f 03       		.uleb128 0x3
 2533 00a0 0E       		.uleb128 0xe
 2534 00a1 3A       		.uleb128 0x3a
 2535 00a2 0B       		.uleb128 0xb
 2536 00a3 3B       		.uleb128 0x3b
 2537 00a4 0B       		.uleb128 0xb
 2538 00a5 27       		.uleb128 0x27
 2539 00a6 19       		.uleb128 0x19
 2540 00a7 11       		.uleb128 0x11
 2541 00a8 01       		.uleb128 0x1
 2542 00a9 12       		.uleb128 0x12
 2543 00aa 06       		.uleb128 0x6
 2544 00ab 40       		.uleb128 0x40
 2545 00ac 18       		.uleb128 0x18
 2546 00ad 9742     		.uleb128 0x2117
 2547 00af 19       		.uleb128 0x19
 2548 00b0 01       		.uleb128 0x1
 2549 00b1 13       		.uleb128 0x13
 2550 00b2 00       		.byte	0
 2551 00b3 00       		.byte	0
 2552 00b4 0C       		.uleb128 0xc
 2553 00b5 34       		.uleb128 0x34
 2554 00b6 00       		.byte	0
 2555 00b7 03       		.uleb128 0x3
 2556 00b8 0E       		.uleb128 0xe
ARM GAS  C:\Users\g\AppData\Local\Temp\ccNCqeMN.s 			page 71


 2557 00b9 3A       		.uleb128 0x3a
 2558 00ba 0B       		.uleb128 0xb
 2559 00bb 3B       		.uleb128 0x3b
 2560 00bc 0B       		.uleb128 0xb
 2561 00bd 49       		.uleb128 0x49
 2562 00be 13       		.uleb128 0x13
 2563 00bf 02       		.uleb128 0x2
 2564 00c0 17       		.uleb128 0x17
 2565 00c1 00       		.byte	0
 2566 00c2 00       		.byte	0
 2567 00c3 0D       		.uleb128 0xd
 2568 00c4 898201   		.uleb128 0x4109
 2569 00c7 01       		.byte	0x1
 2570 00c8 11       		.uleb128 0x11
 2571 00c9 01       		.uleb128 0x1
 2572 00ca 31       		.uleb128 0x31
 2573 00cb 13       		.uleb128 0x13
 2574 00cc 00       		.byte	0
 2575 00cd 00       		.byte	0
 2576 00ce 0E       		.uleb128 0xe
 2577 00cf 8A8201   		.uleb128 0x410a
 2578 00d2 00       		.byte	0
 2579 00d3 02       		.uleb128 0x2
 2580 00d4 18       		.uleb128 0x18
 2581 00d5 9142     		.uleb128 0x2111
 2582 00d7 18       		.uleb128 0x18
 2583 00d8 00       		.byte	0
 2584 00d9 00       		.byte	0
 2585 00da 0F       		.uleb128 0xf
 2586 00db 05       		.uleb128 0x5
 2587 00dc 00       		.byte	0
 2588 00dd 03       		.uleb128 0x3
 2589 00de 0E       		.uleb128 0xe
 2590 00df 3A       		.uleb128 0x3a
 2591 00e0 0B       		.uleb128 0xb
 2592 00e1 3B       		.uleb128 0x3b
 2593 00e2 05       		.uleb128 0x5
 2594 00e3 49       		.uleb128 0x49
 2595 00e4 13       		.uleb128 0x13
 2596 00e5 02       		.uleb128 0x2
 2597 00e6 18       		.uleb128 0x18
 2598 00e7 00       		.byte	0
 2599 00e8 00       		.byte	0
 2600 00e9 10       		.uleb128 0x10
 2601 00ea 898201   		.uleb128 0x4109
 2602 00ed 01       		.byte	0x1
 2603 00ee 11       		.uleb128 0x11
 2604 00ef 01       		.uleb128 0x1
 2605 00f0 31       		.uleb128 0x31
 2606 00f1 13       		.uleb128 0x13
 2607 00f2 01       		.uleb128 0x1
 2608 00f3 13       		.uleb128 0x13
 2609 00f4 00       		.byte	0
 2610 00f5 00       		.byte	0
 2611 00f6 11       		.uleb128 0x11
 2612 00f7 34       		.uleb128 0x34
 2613 00f8 00       		.byte	0
ARM GAS  C:\Users\g\AppData\Local\Temp\ccNCqeMN.s 			page 72


 2614 00f9 03       		.uleb128 0x3
 2615 00fa 0E       		.uleb128 0xe
 2616 00fb 3A       		.uleb128 0x3a
 2617 00fc 0B       		.uleb128 0xb
 2618 00fd 3B       		.uleb128 0x3b
 2619 00fe 0B       		.uleb128 0xb
 2620 00ff 49       		.uleb128 0x49
 2621 0100 13       		.uleb128 0x13
 2622 0101 3F       		.uleb128 0x3f
 2623 0102 19       		.uleb128 0x19
 2624 0103 02       		.uleb128 0x2
 2625 0104 18       		.uleb128 0x18
 2626 0105 00       		.byte	0
 2627 0106 00       		.byte	0
 2628 0107 12       		.uleb128 0x12
 2629 0108 2E       		.uleb128 0x2e
 2630 0109 00       		.byte	0
 2631 010a 3F       		.uleb128 0x3f
 2632 010b 19       		.uleb128 0x19
 2633 010c 03       		.uleb128 0x3
 2634 010d 0E       		.uleb128 0xe
 2635 010e 3A       		.uleb128 0x3a
 2636 010f 0B       		.uleb128 0xb
 2637 0110 3B       		.uleb128 0x3b
 2638 0111 0B       		.uleb128 0xb
 2639 0112 27       		.uleb128 0x27
 2640 0113 19       		.uleb128 0x19
 2641 0114 49       		.uleb128 0x49
 2642 0115 13       		.uleb128 0x13
 2643 0116 3C       		.uleb128 0x3c
 2644 0117 19       		.uleb128 0x19
 2645 0118 00       		.byte	0
 2646 0119 00       		.byte	0
 2647 011a 13       		.uleb128 0x13
 2648 011b 2E       		.uleb128 0x2e
 2649 011c 01       		.byte	0x1
 2650 011d 3F       		.uleb128 0x3f
 2651 011e 19       		.uleb128 0x19
 2652 011f 03       		.uleb128 0x3
 2653 0120 0E       		.uleb128 0xe
 2654 0121 3A       		.uleb128 0x3a
 2655 0122 0B       		.uleb128 0xb
 2656 0123 3B       		.uleb128 0x3b
 2657 0124 0B       		.uleb128 0xb
 2658 0125 27       		.uleb128 0x27
 2659 0126 19       		.uleb128 0x19
 2660 0127 3C       		.uleb128 0x3c
 2661 0128 19       		.uleb128 0x19
 2662 0129 00       		.byte	0
 2663 012a 00       		.byte	0
 2664 012b 14       		.uleb128 0x14
 2665 012c 05       		.uleb128 0x5
 2666 012d 00       		.byte	0
 2667 012e 49       		.uleb128 0x49
 2668 012f 13       		.uleb128 0x13
 2669 0130 00       		.byte	0
 2670 0131 00       		.byte	0
ARM GAS  C:\Users\g\AppData\Local\Temp\ccNCqeMN.s 			page 73


 2671 0132 00       		.byte	0
 2672              		.section	.debug_loc,"",%progbits
 2673              	.Ldebug_loc0:
 2674              	.LLST0:
 2675 0000 06000000 		.4byte	.LVL0
 2676 0004 13000000 		.4byte	.LVL1-1
 2677 0008 0100     		.2byte	0x1
 2678 000a 50       		.byte	0x50
 2679 000b 00000000 		.4byte	0
 2680 000f 00000000 		.4byte	0
 2681              	.LLST1:
 2682 0013 00000000 		.4byte	.LVL2
 2683 0017 07000000 		.4byte	.LVL3-1
 2684 001b 0100     		.2byte	0x1
 2685 001d 50       		.byte	0x50
 2686 001e 07000000 		.4byte	.LVL3-1
 2687 0022 16000000 		.4byte	.LVL4
 2688 0026 0100     		.2byte	0x1
 2689 0028 54       		.byte	0x54
 2690 0029 16000000 		.4byte	.LVL4
 2691 002d 28000000 		.4byte	.LFE4
 2692 0031 0400     		.2byte	0x4
 2693 0033 F3       		.byte	0xf3
 2694 0034 01       		.uleb128 0x1
 2695 0035 50       		.byte	0x50
 2696 0036 9F       		.byte	0x9f
 2697 0037 00000000 		.4byte	0
 2698 003b 00000000 		.4byte	0
 2699              	.LLST2:
 2700 003f 08000000 		.4byte	.LVL3
 2701 0043 1B000000 		.4byte	.LVL5-1
 2702 0047 0100     		.2byte	0x1
 2703 0049 50       		.byte	0x50
 2704 004a 00000000 		.4byte	0
 2705 004e 00000000 		.4byte	0
 2706              	.LLST3:
 2707 0052 00000000 		.4byte	.LVL6
 2708 0056 07000000 		.4byte	.LVL7-1
 2709 005a 0100     		.2byte	0x1
 2710 005c 50       		.byte	0x50
 2711 005d 07000000 		.4byte	.LVL7-1
 2712 0061 16000000 		.4byte	.LVL8
 2713 0065 0100     		.2byte	0x1
 2714 0067 54       		.byte	0x54
 2715 0068 16000000 		.4byte	.LVL8
 2716 006c 28000000 		.4byte	.LFE5
 2717 0070 0400     		.2byte	0x4
 2718 0072 F3       		.byte	0xf3
 2719 0073 01       		.uleb128 0x1
 2720 0074 50       		.byte	0x50
 2721 0075 9F       		.byte	0x9f
 2722 0076 00000000 		.4byte	0
 2723 007a 00000000 		.4byte	0
 2724              	.LLST4:
 2725 007e 08000000 		.4byte	.LVL7
 2726 0082 1B000000 		.4byte	.LVL9-1
 2727 0086 0100     		.2byte	0x1
ARM GAS  C:\Users\g\AppData\Local\Temp\ccNCqeMN.s 			page 74


 2728 0088 50       		.byte	0x50
 2729 0089 00000000 		.4byte	0
 2730 008d 00000000 		.4byte	0
 2731              	.LLST5:
 2732 0091 00000000 		.4byte	.LVL10
 2733 0095 07000000 		.4byte	.LVL11-1
 2734 0099 0100     		.2byte	0x1
 2735 009b 50       		.byte	0x50
 2736 009c 07000000 		.4byte	.LVL11-1
 2737 00a0 16000000 		.4byte	.LVL12
 2738 00a4 0100     		.2byte	0x1
 2739 00a6 54       		.byte	0x54
 2740 00a7 16000000 		.4byte	.LVL12
 2741 00ab 28000000 		.4byte	.LFE6
 2742 00af 0400     		.2byte	0x4
 2743 00b1 F3       		.byte	0xf3
 2744 00b2 01       		.uleb128 0x1
 2745 00b3 50       		.byte	0x50
 2746 00b4 9F       		.byte	0x9f
 2747 00b5 00000000 		.4byte	0
 2748 00b9 00000000 		.4byte	0
 2749              	.LLST6:
 2750 00bd 08000000 		.4byte	.LVL11
 2751 00c1 1B000000 		.4byte	.LVL13-1
 2752 00c5 0100     		.2byte	0x1
 2753 00c7 50       		.byte	0x50
 2754 00c8 00000000 		.4byte	0
 2755 00cc 00000000 		.4byte	0
 2756              	.LLST7:
 2757 00d0 00000000 		.4byte	.LVL14
 2758 00d4 07000000 		.4byte	.LVL15-1
 2759 00d8 0100     		.2byte	0x1
 2760 00da 50       		.byte	0x50
 2761 00db 07000000 		.4byte	.LVL15-1
 2762 00df 18000000 		.4byte	.LVL16
 2763 00e3 0100     		.2byte	0x1
 2764 00e5 54       		.byte	0x54
 2765 00e6 18000000 		.4byte	.LVL16
 2766 00ea 2C000000 		.4byte	.LFE7
 2767 00ee 0400     		.2byte	0x4
 2768 00f0 F3       		.byte	0xf3
 2769 00f1 01       		.uleb128 0x1
 2770 00f2 50       		.byte	0x50
 2771 00f3 9F       		.byte	0x9f
 2772 00f4 00000000 		.4byte	0
 2773 00f8 00000000 		.4byte	0
 2774              	.LLST8:
 2775 00fc 08000000 		.4byte	.LVL15
 2776 0100 21000000 		.4byte	.LVL17-1
 2777 0104 0100     		.2byte	0x1
 2778 0106 50       		.byte	0x50
 2779 0107 00000000 		.4byte	0
 2780 010b 00000000 		.4byte	0
 2781              	.LLST9:
 2782 010f 00000000 		.4byte	.LVL18
 2783 0113 04000000 		.4byte	.LVL19
 2784 0117 0100     		.2byte	0x1
ARM GAS  C:\Users\g\AppData\Local\Temp\ccNCqeMN.s 			page 75


 2785 0119 50       		.byte	0x50
 2786 011a 04000000 		.4byte	.LVL19
 2787 011e 10000000 		.4byte	.LFE8
 2788 0122 0400     		.2byte	0x4
 2789 0124 F3       		.byte	0xf3
 2790 0125 01       		.uleb128 0x1
 2791 0126 50       		.byte	0x50
 2792 0127 9F       		.byte	0x9f
 2793 0128 00000000 		.4byte	0
 2794 012c 00000000 		.4byte	0
 2795              	.LLST10:
 2796 0130 00000000 		.4byte	.LVL20
 2797 0134 07000000 		.4byte	.LVL21-1
 2798 0138 0100     		.2byte	0x1
 2799 013a 50       		.byte	0x50
 2800 013b 07000000 		.4byte	.LVL21-1
 2801 013f 18000000 		.4byte	.LVL22
 2802 0143 0100     		.2byte	0x1
 2803 0145 54       		.byte	0x54
 2804 0146 18000000 		.4byte	.LVL22
 2805 014a 28000000 		.4byte	.LFE9
 2806 014e 0400     		.2byte	0x4
 2807 0150 F3       		.byte	0xf3
 2808 0151 01       		.uleb128 0x1
 2809 0152 50       		.byte	0x50
 2810 0153 9F       		.byte	0x9f
 2811 0154 00000000 		.4byte	0
 2812 0158 00000000 		.4byte	0
 2813              	.LLST11:
 2814 015c 08000000 		.4byte	.LVL21
 2815 0160 21000000 		.4byte	.LVL23-1
 2816 0164 0100     		.2byte	0x1
 2817 0166 50       		.byte	0x50
 2818 0167 00000000 		.4byte	0
 2819 016b 00000000 		.4byte	0
 2820              	.LLST12:
 2821 016f 00000000 		.4byte	.LVL24
 2822 0173 07000000 		.4byte	.LVL25-1
 2823 0177 0100     		.2byte	0x1
 2824 0179 50       		.byte	0x50
 2825 017a 07000000 		.4byte	.LVL25-1
 2826 017e 18000000 		.4byte	.LVL26
 2827 0182 0100     		.2byte	0x1
 2828 0184 54       		.byte	0x54
 2829 0185 18000000 		.4byte	.LVL26
 2830 0189 28000000 		.4byte	.LFE10
 2831 018d 0400     		.2byte	0x4
 2832 018f F3       		.byte	0xf3
 2833 0190 01       		.uleb128 0x1
 2834 0191 50       		.byte	0x50
 2835 0192 9F       		.byte	0x9f
 2836 0193 00000000 		.4byte	0
 2837 0197 00000000 		.4byte	0
 2838              	.LLST13:
 2839 019b 08000000 		.4byte	.LVL25
 2840 019f 21000000 		.4byte	.LVL27-1
 2841 01a3 0100     		.2byte	0x1
ARM GAS  C:\Users\g\AppData\Local\Temp\ccNCqeMN.s 			page 76


 2842 01a5 50       		.byte	0x50
 2843 01a6 00000000 		.4byte	0
 2844 01aa 00000000 		.4byte	0
 2845              	.LLST14:
 2846 01ae 00000000 		.4byte	.LVL28
 2847 01b2 07000000 		.4byte	.LVL29-1
 2848 01b6 0100     		.2byte	0x1
 2849 01b8 50       		.byte	0x50
 2850 01b9 07000000 		.4byte	.LVL29-1
 2851 01bd 16000000 		.4byte	.LVL30
 2852 01c1 0100     		.2byte	0x1
 2853 01c3 54       		.byte	0x54
 2854 01c4 16000000 		.4byte	.LVL30
 2855 01c8 2C000000 		.4byte	.LFE11
 2856 01cc 0400     		.2byte	0x4
 2857 01ce F3       		.byte	0xf3
 2858 01cf 01       		.uleb128 0x1
 2859 01d0 50       		.byte	0x50
 2860 01d1 9F       		.byte	0x9f
 2861 01d2 00000000 		.4byte	0
 2862 01d6 00000000 		.4byte	0
 2863              	.LLST15:
 2864 01da 08000000 		.4byte	.LVL29
 2865 01de 1F000000 		.4byte	.LVL31-1
 2866 01e2 0100     		.2byte	0x1
 2867 01e4 50       		.byte	0x50
 2868 01e5 00000000 		.4byte	0
 2869 01e9 00000000 		.4byte	0
 2870              	.LLST16:
 2871 01ed 00000000 		.4byte	.LVL32
 2872 01f1 07000000 		.4byte	.LVL33-1
 2873 01f5 0100     		.2byte	0x1
 2874 01f7 50       		.byte	0x50
 2875 01f8 07000000 		.4byte	.LVL33-1
 2876 01fc 16000000 		.4byte	.LVL34
 2877 0200 0100     		.2byte	0x1
 2878 0202 54       		.byte	0x54
 2879 0203 16000000 		.4byte	.LVL34
 2880 0207 28000000 		.4byte	.LFE12
 2881 020b 0400     		.2byte	0x4
 2882 020d F3       		.byte	0xf3
 2883 020e 01       		.uleb128 0x1
 2884 020f 50       		.byte	0x50
 2885 0210 9F       		.byte	0x9f
 2886 0211 00000000 		.4byte	0
 2887 0215 00000000 		.4byte	0
 2888              	.LLST17:
 2889 0219 08000000 		.4byte	.LVL33
 2890 021d 1B000000 		.4byte	.LVL35-1
 2891 0221 0100     		.2byte	0x1
 2892 0223 50       		.byte	0x50
 2893 0224 00000000 		.4byte	0
 2894 0228 00000000 		.4byte	0
 2895              	.LLST18:
 2896 022c 00000000 		.4byte	.LVL36
 2897 0230 02000000 		.4byte	.LVL37
 2898 0234 0100     		.2byte	0x1
ARM GAS  C:\Users\g\AppData\Local\Temp\ccNCqeMN.s 			page 77


 2899 0236 50       		.byte	0x50
 2900 0237 02000000 		.4byte	.LVL37
 2901 023b 10000000 		.4byte	.LFE13
 2902 023f 0400     		.2byte	0x4
 2903 0241 F3       		.byte	0xf3
 2904 0242 01       		.uleb128 0x1
 2905 0243 50       		.byte	0x50
 2906 0244 9F       		.byte	0x9f
 2907 0245 00000000 		.4byte	0
 2908 0249 00000000 		.4byte	0
 2909              	.LLST19:
 2910 024d 00000000 		.4byte	.LVL38
 2911 0251 07000000 		.4byte	.LVL39-1
 2912 0255 0100     		.2byte	0x1
 2913 0257 50       		.byte	0x50
 2914 0258 07000000 		.4byte	.LVL39-1
 2915 025c 16000000 		.4byte	.LVL40
 2916 0260 0100     		.2byte	0x1
 2917 0262 54       		.byte	0x54
 2918 0263 16000000 		.4byte	.LVL40
 2919 0267 28000000 		.4byte	.LFE15
 2920 026b 0400     		.2byte	0x4
 2921 026d F3       		.byte	0xf3
 2922 026e 01       		.uleb128 0x1
 2923 026f 50       		.byte	0x50
 2924 0270 9F       		.byte	0x9f
 2925 0271 00000000 		.4byte	0
 2926 0275 00000000 		.4byte	0
 2927              	.LLST20:
 2928 0279 08000000 		.4byte	.LVL39
 2929 027d 1B000000 		.4byte	.LVL41-1
 2930 0281 0100     		.2byte	0x1
 2931 0283 50       		.byte	0x50
 2932 0284 00000000 		.4byte	0
 2933 0288 00000000 		.4byte	0
 2934              	.LLST21:
 2935 028c 00000000 		.4byte	.LVL42
 2936 0290 02000000 		.4byte	.LVL43
 2937 0294 0100     		.2byte	0x1
 2938 0296 50       		.byte	0x50
 2939 0297 02000000 		.4byte	.LVL43
 2940 029b 10000000 		.4byte	.LFE16
 2941 029f 0400     		.2byte	0x4
 2942 02a1 F3       		.byte	0xf3
 2943 02a2 01       		.uleb128 0x1
 2944 02a3 50       		.byte	0x50
 2945 02a4 9F       		.byte	0x9f
 2946 02a5 00000000 		.4byte	0
 2947 02a9 00000000 		.4byte	0
 2948              	.LLST22:
 2949 02ad 00000000 		.4byte	.LVL44
 2950 02b1 07000000 		.4byte	.LVL45-1
 2951 02b5 0100     		.2byte	0x1
 2952 02b7 50       		.byte	0x50
 2953 02b8 07000000 		.4byte	.LVL45-1
 2954 02bc 16000000 		.4byte	.LVL46
 2955 02c0 0100     		.2byte	0x1
ARM GAS  C:\Users\g\AppData\Local\Temp\ccNCqeMN.s 			page 78


 2956 02c2 54       		.byte	0x54
 2957 02c3 16000000 		.4byte	.LVL46
 2958 02c7 24000000 		.4byte	.LFE18
 2959 02cb 0400     		.2byte	0x4
 2960 02cd F3       		.byte	0xf3
 2961 02ce 01       		.uleb128 0x1
 2962 02cf 50       		.byte	0x50
 2963 02d0 9F       		.byte	0x9f
 2964 02d1 00000000 		.4byte	0
 2965 02d5 00000000 		.4byte	0
 2966              	.LLST23:
 2967 02d9 08000000 		.4byte	.LVL45
 2968 02dd 1D000000 		.4byte	.LVL47-1
 2969 02e1 0100     		.2byte	0x1
 2970 02e3 50       		.byte	0x50
 2971 02e4 00000000 		.4byte	0
 2972 02e8 00000000 		.4byte	0
 2973              	.LLST24:
 2974 02ec 00000000 		.4byte	.LVL48
 2975 02f0 02000000 		.4byte	.LVL49
 2976 02f4 0100     		.2byte	0x1
 2977 02f6 50       		.byte	0x50
 2978 02f7 02000000 		.4byte	.LVL49
 2979 02fb 10000000 		.4byte	.LFE19
 2980 02ff 0400     		.2byte	0x4
 2981 0301 F3       		.byte	0xf3
 2982 0302 01       		.uleb128 0x1
 2983 0303 50       		.byte	0x50
 2984 0304 9F       		.byte	0x9f
 2985 0305 00000000 		.4byte	0
 2986 0309 00000000 		.4byte	0
 2987              	.LLST25:
 2988 030d 00000000 		.4byte	.LVL50
 2989 0311 07000000 		.4byte	.LVL51-1
 2990 0315 0100     		.2byte	0x1
 2991 0317 50       		.byte	0x50
 2992 0318 07000000 		.4byte	.LVL51-1
 2993 031c 18000000 		.4byte	.LVL52
 2994 0320 0100     		.2byte	0x1
 2995 0322 54       		.byte	0x54
 2996 0323 18000000 		.4byte	.LVL52
 2997 0327 28000000 		.4byte	.LFE21
 2998 032b 0400     		.2byte	0x4
 2999 032d F3       		.byte	0xf3
 3000 032e 01       		.uleb128 0x1
 3001 032f 50       		.byte	0x50
 3002 0330 9F       		.byte	0x9f
 3003 0331 00000000 		.4byte	0
 3004 0335 00000000 		.4byte	0
 3005              	.LLST26:
 3006 0339 08000000 		.4byte	.LVL51
 3007 033d 21000000 		.4byte	.LVL53-1
 3008 0341 0100     		.2byte	0x1
 3009 0343 50       		.byte	0x50
 3010 0344 00000000 		.4byte	0
 3011 0348 00000000 		.4byte	0
 3012              	.LLST27:
ARM GAS  C:\Users\g\AppData\Local\Temp\ccNCqeMN.s 			page 79


 3013 034c 00000000 		.4byte	.LVL54
 3014 0350 02000000 		.4byte	.LVL55
 3015 0354 0100     		.2byte	0x1
 3016 0356 50       		.byte	0x50
 3017 0357 02000000 		.4byte	.LVL55
 3018 035b 10000000 		.4byte	.LFE22
 3019 035f 0400     		.2byte	0x4
 3020 0361 F3       		.byte	0xf3
 3021 0362 01       		.uleb128 0x1
 3022 0363 50       		.byte	0x50
 3023 0364 9F       		.byte	0x9f
 3024 0365 00000000 		.4byte	0
 3025 0369 00000000 		.4byte	0
 3026              	.LLST28:
 3027 036d 00000000 		.4byte	.LVL56
 3028 0371 02000000 		.4byte	.LVL57
 3029 0375 0100     		.2byte	0x1
 3030 0377 50       		.byte	0x50
 3031 0378 02000000 		.4byte	.LVL57
 3032 037c 10000000 		.4byte	.LFE24
 3033 0380 0400     		.2byte	0x4
 3034 0382 F3       		.byte	0xf3
 3035 0383 01       		.uleb128 0x1
 3036 0384 50       		.byte	0x50
 3037 0385 9F       		.byte	0x9f
 3038 0386 00000000 		.4byte	0
 3039 038a 00000000 		.4byte	0
 3040              	.LLST29:
 3041 038e 00000000 		.4byte	.LVL58
 3042 0392 07000000 		.4byte	.LVL59-1
 3043 0396 0100     		.2byte	0x1
 3044 0398 50       		.byte	0x50
 3045 0399 07000000 		.4byte	.LVL59-1
 3046 039d 16000000 		.4byte	.LVL60
 3047 03a1 0100     		.2byte	0x1
 3048 03a3 54       		.byte	0x54
 3049 03a4 16000000 		.4byte	.LVL60
 3050 03a8 24000000 		.4byte	.LFE28
 3051 03ac 0400     		.2byte	0x4
 3052 03ae F3       		.byte	0xf3
 3053 03af 01       		.uleb128 0x1
 3054 03b0 50       		.byte	0x50
 3055 03b1 9F       		.byte	0x9f
 3056 03b2 00000000 		.4byte	0
 3057 03b6 00000000 		.4byte	0
 3058              	.LLST30:
 3059 03ba 08000000 		.4byte	.LVL59
 3060 03be 1B000000 		.4byte	.LVL61-1
 3061 03c2 0100     		.2byte	0x1
 3062 03c4 50       		.byte	0x50
 3063 03c5 00000000 		.4byte	0
 3064 03c9 00000000 		.4byte	0
 3065              	.LLST31:
 3066 03cd 00000000 		.4byte	.LVL62
 3067 03d1 07000000 		.4byte	.LVL63-1
 3068 03d5 0100     		.2byte	0x1
 3069 03d7 50       		.byte	0x50
ARM GAS  C:\Users\g\AppData\Local\Temp\ccNCqeMN.s 			page 80


 3070 03d8 07000000 		.4byte	.LVL63-1
 3071 03dc 16000000 		.4byte	.LVL64
 3072 03e0 0100     		.2byte	0x1
 3073 03e2 54       		.byte	0x54
 3074 03e3 16000000 		.4byte	.LVL64
 3075 03e7 24000000 		.4byte	.LFE29
 3076 03eb 0400     		.2byte	0x4
 3077 03ed F3       		.byte	0xf3
 3078 03ee 01       		.uleb128 0x1
 3079 03ef 50       		.byte	0x50
 3080 03f0 9F       		.byte	0x9f
 3081 03f1 00000000 		.4byte	0
 3082 03f5 00000000 		.4byte	0
 3083              	.LLST32:
 3084 03f9 08000000 		.4byte	.LVL63
 3085 03fd 1D000000 		.4byte	.LVL65-1
 3086 0401 0100     		.2byte	0x1
 3087 0403 50       		.byte	0x50
 3088 0404 00000000 		.4byte	0
 3089 0408 00000000 		.4byte	0
 3090              	.LLST33:
 3091 040c 00000000 		.4byte	.LVL66
 3092 0410 07000000 		.4byte	.LVL67-1
 3093 0414 0100     		.2byte	0x1
 3094 0416 50       		.byte	0x50
 3095 0417 07000000 		.4byte	.LVL67-1
 3096 041b 16000000 		.4byte	.LVL68
 3097 041f 0100     		.2byte	0x1
 3098 0421 54       		.byte	0x54
 3099 0422 16000000 		.4byte	.LVL68
 3100 0426 28000000 		.4byte	.LFE30
 3101 042a 0400     		.2byte	0x4
 3102 042c F3       		.byte	0xf3
 3103 042d 01       		.uleb128 0x1
 3104 042e 50       		.byte	0x50
 3105 042f 9F       		.byte	0x9f
 3106 0430 00000000 		.4byte	0
 3107 0434 00000000 		.4byte	0
 3108              	.LLST34:
 3109 0438 08000000 		.4byte	.LVL67
 3110 043c 1D000000 		.4byte	.LVL69-1
 3111 0440 0100     		.2byte	0x1
 3112 0442 50       		.byte	0x50
 3113 0443 00000000 		.4byte	0
 3114 0447 00000000 		.4byte	0
 3115              	.LLST35:
 3116 044b 00000000 		.4byte	.LVL70
 3117 044f 07000000 		.4byte	.LVL71-1
 3118 0453 0100     		.2byte	0x1
 3119 0455 50       		.byte	0x50
 3120 0456 07000000 		.4byte	.LVL71-1
 3121 045a 16000000 		.4byte	.LVL72
 3122 045e 0100     		.2byte	0x1
 3123 0460 54       		.byte	0x54
 3124 0461 16000000 		.4byte	.LVL72
 3125 0465 24000000 		.4byte	.LFE31
 3126 0469 0400     		.2byte	0x4
ARM GAS  C:\Users\g\AppData\Local\Temp\ccNCqeMN.s 			page 81


 3127 046b F3       		.byte	0xf3
 3128 046c 01       		.uleb128 0x1
 3129 046d 50       		.byte	0x50
 3130 046e 9F       		.byte	0x9f
 3131 046f 00000000 		.4byte	0
 3132 0473 00000000 		.4byte	0
 3133              	.LLST36:
 3134 0477 08000000 		.4byte	.LVL71
 3135 047b 1D000000 		.4byte	.LVL73-1
 3136 047f 0100     		.2byte	0x1
 3137 0481 50       		.byte	0x50
 3138 0482 00000000 		.4byte	0
 3139 0486 00000000 		.4byte	0
 3140              	.LLST37:
 3141 048a 00000000 		.4byte	.LVL74
 3142 048e 07000000 		.4byte	.LVL75-1
 3143 0492 0100     		.2byte	0x1
 3144 0494 50       		.byte	0x50
 3145 0495 07000000 		.4byte	.LVL75-1
 3146 0499 16000000 		.4byte	.LVL76
 3147 049d 0100     		.2byte	0x1
 3148 049f 54       		.byte	0x54
 3149 04a0 16000000 		.4byte	.LVL76
 3150 04a4 24000000 		.4byte	.LFE32
 3151 04a8 0400     		.2byte	0x4
 3152 04aa F3       		.byte	0xf3
 3153 04ab 01       		.uleb128 0x1
 3154 04ac 50       		.byte	0x50
 3155 04ad 9F       		.byte	0x9f
 3156 04ae 00000000 		.4byte	0
 3157 04b2 00000000 		.4byte	0
 3158              	.LLST38:
 3159 04b6 08000000 		.4byte	.LVL75
 3160 04ba 1D000000 		.4byte	.LVL77-1
 3161 04be 0100     		.2byte	0x1
 3162 04c0 50       		.byte	0x50
 3163 04c1 00000000 		.4byte	0
 3164 04c5 00000000 		.4byte	0
 3165              	.LLST39:
 3166 04c9 00000000 		.4byte	.LVL78
 3167 04cd 09000000 		.4byte	.LVL79-1
 3168 04d1 0100     		.2byte	0x1
 3169 04d3 50       		.byte	0x50
 3170 04d4 09000000 		.4byte	.LVL79-1
 3171 04d8 0C000000 		.4byte	.LVL80
 3172 04dc 0100     		.2byte	0x1
 3173 04de 54       		.byte	0x54
 3174 04df 0C000000 		.4byte	.LVL80
 3175 04e3 1C000000 		.4byte	.LFE33
 3176 04e7 0400     		.2byte	0x4
 3177 04e9 F3       		.byte	0xf3
 3178 04ea 01       		.uleb128 0x1
 3179 04eb 50       		.byte	0x50
 3180 04ec 9F       		.byte	0x9f
 3181 04ed 00000000 		.4byte	0
 3182 04f1 00000000 		.4byte	0
 3183              	.LLST40:
ARM GAS  C:\Users\g\AppData\Local\Temp\ccNCqeMN.s 			page 82


 3184 04f5 00000000 		.4byte	.LVL78
 3185 04f9 09000000 		.4byte	.LVL79-1
 3186 04fd 0100     		.2byte	0x1
 3187 04ff 51       		.byte	0x51
 3188 0500 09000000 		.4byte	.LVL79-1
 3189 0504 14000000 		.4byte	.LVL82
 3190 0508 0100     		.2byte	0x1
 3191 050a 55       		.byte	0x55
 3192 050b 14000000 		.4byte	.LVL82
 3193 050f 1C000000 		.4byte	.LFE33
 3194 0513 0400     		.2byte	0x4
 3195 0515 F3       		.byte	0xf3
 3196 0516 01       		.uleb128 0x1
 3197 0517 51       		.byte	0x51
 3198 0518 9F       		.byte	0x9f
 3199 0519 00000000 		.4byte	0
 3200 051d 00000000 		.4byte	0
 3201              	.LLST41:
 3202 0521 0A000000 		.4byte	.LVL79
 3203 0525 13000000 		.4byte	.LVL81-1
 3204 0529 0100     		.2byte	0x1
 3205 052b 50       		.byte	0x50
 3206 052c 00000000 		.4byte	0
 3207 0530 00000000 		.4byte	0
 3208              	.LLST42:
 3209 0534 06000000 		.4byte	.LVL83
 3210 0538 13000000 		.4byte	.LVL84-1
 3211 053c 0100     		.2byte	0x1
 3212 053e 50       		.byte	0x50
 3213 053f 00000000 		.4byte	0
 3214 0543 00000000 		.4byte	0
 3215              		.section	.debug_aranges,"",%progbits
 3216 0000 54010000 		.4byte	0x154
 3217 0004 0200     		.2byte	0x2
 3218 0006 00000000 		.4byte	.Ldebug_info0
 3219 000a 04       		.byte	0x4
 3220 000b 00       		.byte	0
 3221 000c 0000     		.2byte	0
 3222 000e 0000     		.2byte	0
 3223 0010 00000000 		.4byte	.LFB3
 3224 0014 1C000000 		.4byte	.LFE3-.LFB3
 3225 0018 00000000 		.4byte	.LFB4
 3226 001c 28000000 		.4byte	.LFE4-.LFB4
 3227 0020 00000000 		.4byte	.LFB5
 3228 0024 28000000 		.4byte	.LFE5-.LFB5
 3229 0028 00000000 		.4byte	.LFB6
 3230 002c 28000000 		.4byte	.LFE6-.LFB6
 3231 0030 00000000 		.4byte	.LFB7
 3232 0034 2C000000 		.4byte	.LFE7-.LFB7
 3233 0038 00000000 		.4byte	.LFB8
 3234 003c 10000000 		.4byte	.LFE8-.LFB8
 3235 0040 00000000 		.4byte	.LFB9
 3236 0044 28000000 		.4byte	.LFE9-.LFB9
 3237 0048 00000000 		.4byte	.LFB10
 3238 004c 28000000 		.4byte	.LFE10-.LFB10
 3239 0050 00000000 		.4byte	.LFB11
 3240 0054 2C000000 		.4byte	.LFE11-.LFB11
ARM GAS  C:\Users\g\AppData\Local\Temp\ccNCqeMN.s 			page 83


 3241 0058 00000000 		.4byte	.LFB12
 3242 005c 28000000 		.4byte	.LFE12-.LFB12
 3243 0060 00000000 		.4byte	.LFB13
 3244 0064 10000000 		.4byte	.LFE13-.LFB13
 3245 0068 00000000 		.4byte	.LFB14
 3246 006c 10000000 		.4byte	.LFE14-.LFB14
 3247 0070 00000000 		.4byte	.LFB15
 3248 0074 28000000 		.4byte	.LFE15-.LFB15
 3249 0078 00000000 		.4byte	.LFB16
 3250 007c 10000000 		.4byte	.LFE16-.LFB16
 3251 0080 00000000 		.4byte	.LFB17
 3252 0084 10000000 		.4byte	.LFE17-.LFB17
 3253 0088 00000000 		.4byte	.LFB18
 3254 008c 24000000 		.4byte	.LFE18-.LFB18
 3255 0090 00000000 		.4byte	.LFB19
 3256 0094 10000000 		.4byte	.LFE19-.LFB19
 3257 0098 00000000 		.4byte	.LFB20
 3258 009c 10000000 		.4byte	.LFE20-.LFB20
 3259 00a0 00000000 		.4byte	.LFB21
 3260 00a4 28000000 		.4byte	.LFE21-.LFB21
 3261 00a8 00000000 		.4byte	.LFB22
 3262 00ac 10000000 		.4byte	.LFE22-.LFB22
 3263 00b0 00000000 		.4byte	.LFB23
 3264 00b4 10000000 		.4byte	.LFE23-.LFB23
 3265 00b8 00000000 		.4byte	.LFB24
 3266 00bc 10000000 		.4byte	.LFE24-.LFB24
 3267 00c0 00000000 		.4byte	.LFB25
 3268 00c4 10000000 		.4byte	.LFE25-.LFB25
 3269 00c8 00000000 		.4byte	.LFB26
 3270 00cc 10000000 		.4byte	.LFE26-.LFB26
 3271 00d0 00000000 		.4byte	.LFB27
 3272 00d4 10000000 		.4byte	.LFE27-.LFB27
 3273 00d8 00000000 		.4byte	.LFB28
 3274 00dc 24000000 		.4byte	.LFE28-.LFB28
 3275 00e0 00000000 		.4byte	.LFB29
 3276 00e4 24000000 		.4byte	.LFE29-.LFB29
 3277 00e8 00000000 		.4byte	.LFB30
 3278 00ec 28000000 		.4byte	.LFE30-.LFB30
 3279 00f0 00000000 		.4byte	.LFB31
 3280 00f4 24000000 		.4byte	.LFE31-.LFB31
 3281 00f8 00000000 		.4byte	.LFB32
 3282 00fc 24000000 		.4byte	.LFE32-.LFB32
 3283 0100 00000000 		.4byte	.LFB33
 3284 0104 1C000000 		.4byte	.LFE33-.LFB33
 3285 0108 00000000 		.4byte	.LFB1
 3286 010c 24000000 		.4byte	.LFE1-.LFB1
 3287 0110 00000000 		.4byte	.LFB34
 3288 0114 14000000 		.4byte	.LFE34-.LFB34
 3289 0118 00000000 		.4byte	.LFB35
 3290 011c 0C000000 		.4byte	.LFE35-.LFB35
 3291 0120 00000000 		.4byte	.LFB0
 3292 0124 30000000 		.4byte	.LFE0-.LFB0
 3293 0128 00000000 		.4byte	.LFB2
 3294 012c 20000000 		.4byte	.LFE2-.LFB2
 3295 0130 00000000 		.4byte	.LFB36
 3296 0134 0C000000 		.4byte	.LFE36-.LFB36
 3297 0138 00000000 		.4byte	.LFB37
ARM GAS  C:\Users\g\AppData\Local\Temp\ccNCqeMN.s 			page 84


 3298 013c 0C000000 		.4byte	.LFE37-.LFB37
 3299 0140 00000000 		.4byte	.LFB38
 3300 0144 0C000000 		.4byte	.LFE38-.LFB38
 3301 0148 00000000 		.4byte	.LFB39
 3302 014c 0C000000 		.4byte	.LFE39-.LFB39
 3303 0150 00000000 		.4byte	0
 3304 0154 00000000 		.4byte	0
 3305              		.section	.debug_ranges,"",%progbits
 3306              	.Ldebug_ranges0:
 3307 0000 00000000 		.4byte	.LFB3
 3308 0004 1C000000 		.4byte	.LFE3
 3309 0008 00000000 		.4byte	.LFB4
 3310 000c 28000000 		.4byte	.LFE4
 3311 0010 00000000 		.4byte	.LFB5
 3312 0014 28000000 		.4byte	.LFE5
 3313 0018 00000000 		.4byte	.LFB6
 3314 001c 28000000 		.4byte	.LFE6
 3315 0020 00000000 		.4byte	.LFB7
 3316 0024 2C000000 		.4byte	.LFE7
 3317 0028 00000000 		.4byte	.LFB8
 3318 002c 10000000 		.4byte	.LFE8
 3319 0030 00000000 		.4byte	.LFB9
 3320 0034 28000000 		.4byte	.LFE9
 3321 0038 00000000 		.4byte	.LFB10
 3322 003c 28000000 		.4byte	.LFE10
 3323 0040 00000000 		.4byte	.LFB11
 3324 0044 2C000000 		.4byte	.LFE11
 3325 0048 00000000 		.4byte	.LFB12
 3326 004c 28000000 		.4byte	.LFE12
 3327 0050 00000000 		.4byte	.LFB13
 3328 0054 10000000 		.4byte	.LFE13
 3329 0058 00000000 		.4byte	.LFB14
 3330 005c 10000000 		.4byte	.LFE14
 3331 0060 00000000 		.4byte	.LFB15
 3332 0064 28000000 		.4byte	.LFE15
 3333 0068 00000000 		.4byte	.LFB16
 3334 006c 10000000 		.4byte	.LFE16
 3335 0070 00000000 		.4byte	.LFB17
 3336 0074 10000000 		.4byte	.LFE17
 3337 0078 00000000 		.4byte	.LFB18
 3338 007c 24000000 		.4byte	.LFE18
 3339 0080 00000000 		.4byte	.LFB19
 3340 0084 10000000 		.4byte	.LFE19
 3341 0088 00000000 		.4byte	.LFB20
 3342 008c 10000000 		.4byte	.LFE20
 3343 0090 00000000 		.4byte	.LFB21
 3344 0094 28000000 		.4byte	.LFE21
 3345 0098 00000000 		.4byte	.LFB22
 3346 009c 10000000 		.4byte	.LFE22
 3347 00a0 00000000 		.4byte	.LFB23
 3348 00a4 10000000 		.4byte	.LFE23
 3349 00a8 00000000 		.4byte	.LFB24
 3350 00ac 10000000 		.4byte	.LFE24
 3351 00b0 00000000 		.4byte	.LFB25
 3352 00b4 10000000 		.4byte	.LFE25
 3353 00b8 00000000 		.4byte	.LFB26
 3354 00bc 10000000 		.4byte	.LFE26
ARM GAS  C:\Users\g\AppData\Local\Temp\ccNCqeMN.s 			page 85


 3355 00c0 00000000 		.4byte	.LFB27
 3356 00c4 10000000 		.4byte	.LFE27
 3357 00c8 00000000 		.4byte	.LFB28
 3358 00cc 24000000 		.4byte	.LFE28
 3359 00d0 00000000 		.4byte	.LFB29
 3360 00d4 24000000 		.4byte	.LFE29
 3361 00d8 00000000 		.4byte	.LFB30
 3362 00dc 28000000 		.4byte	.LFE30
 3363 00e0 00000000 		.4byte	.LFB31
 3364 00e4 24000000 		.4byte	.LFE31
 3365 00e8 00000000 		.4byte	.LFB32
 3366 00ec 24000000 		.4byte	.LFE32
 3367 00f0 00000000 		.4byte	.LFB33
 3368 00f4 1C000000 		.4byte	.LFE33
 3369 00f8 00000000 		.4byte	.LFB1
 3370 00fc 24000000 		.4byte	.LFE1
 3371 0100 00000000 		.4byte	.LFB34
 3372 0104 14000000 		.4byte	.LFE34
 3373 0108 00000000 		.4byte	.LFB35
 3374 010c 0C000000 		.4byte	.LFE35
 3375 0110 00000000 		.4byte	.LFB0
 3376 0114 30000000 		.4byte	.LFE0
 3377 0118 00000000 		.4byte	.LFB2
 3378 011c 20000000 		.4byte	.LFE2
 3379 0120 00000000 		.4byte	.LFB36
 3380 0124 0C000000 		.4byte	.LFE36
 3381 0128 00000000 		.4byte	.LFB37
 3382 012c 0C000000 		.4byte	.LFE37
 3383 0130 00000000 		.4byte	.LFB38
 3384 0134 0C000000 		.4byte	.LFE38
 3385 0138 00000000 		.4byte	.LFB39
 3386 013c 0C000000 		.4byte	.LFE39
 3387 0140 00000000 		.4byte	0
 3388 0144 00000000 		.4byte	0
 3389              		.section	.debug_line,"",%progbits
 3390              	.Ldebug_line0:
 3391 0000 79030000 		.section	.debug_str,"MS",%progbits,1
 3391      02005100 
 3391      00000201 
 3391      FB0E0D00 
 3391      01010101 
 3392              	.LASF37:
 3393 0000 636F756E 		.ascii	"count\000"
 3393      7400
 3394              	.LASF81:
 3395 0006 43794578 		.ascii	"CyExitCriticalSection\000"
 3395      69744372 
 3395      69746963 
 3395      616C5365 
 3395      6374696F 
 3396              	.LASF64:
 3397 001c 54585F53 		.ascii	"TX_SEND_TriggerCommand\000"
 3397      454E445F 
 3397      54726967 
 3397      67657243 
 3397      6F6D6D61 
 3398              	.LASF74:
ARM GAS  C:\Users\g\AppData\Local\Temp\ccNCqeMN.s 			page 86


 3399 0033 54585F53 		.ascii	"TX_SEND_ClearInterrupt\000"
 3399      454E445F 
 3399      436C6561 
 3399      72496E74 
 3399      65727275 
 3400              	.LASF41:
 3401 004a 70657269 		.ascii	"period\000"
 3401      6F6400
 3402              	.LASF60:
 3403 0051 54585F53 		.ascii	"TX_SEND_SetReloadMode\000"
 3403      454E445F 
 3403      53657452 
 3403      656C6F61 
 3403      644D6F64 
 3404              	.LASF7:
 3405 0067 6C6F6E67 		.ascii	"long long unsigned int\000"
 3405      206C6F6E 
 3405      6720756E 
 3405      7369676E 
 3405      65642069 
 3406              	.LASF21:
 3407 007e 71644D6F 		.ascii	"qdMode\000"
 3407      646500
 3408              	.LASF55:
 3409 0085 54585F53 		.ascii	"TX_SEND_ReadCompareBuf\000"
 3409      454E445F 
 3409      52656164 
 3409      436F6D70 
 3409      61726542 
 3410              	.LASF76:
 3411 009c 474E5520 		.ascii	"GNU C 4.9.3 20150303 (release) [ARM/embedded-4_9-br"
 3411      4320342E 
 3411      392E3320 
 3411      32303135 
 3411      30333033 
 3412 00cf 616E6368 		.ascii	"anch revision 221220] -mcpu=cortex-m0 -mthumb -g -O"
 3412      20726576 
 3412      6973696F 
 3412      6E203232 
 3412      31323230 
 3413 0102 67202D73 		.ascii	"g -std=gnu99 -ffunction-sections -ffat-lto-objects\000"
 3413      74643D67 
 3413      6E753939 
 3413      202D6666 
 3413      756E6374 
 3414              	.LASF70:
 3415 0135 54585F53 		.ascii	"TX_SEND_Init\000"
 3415      454E445F 
 3415      496E6974 
 3415      00
 3416              	.LASF6:
 3417 0142 6C6F6E67 		.ascii	"long long int\000"
 3417      206C6F6E 
 3417      6720696E 
 3417      7400
 3418              	.LASF0:
 3419 0150 7369676E 		.ascii	"signed char\000"
ARM GAS  C:\Users\g\AppData\Local\Temp\ccNCqeMN.s 			page 87


 3419      65642063 
 3419      68617200 
 3420              	.LASF79:
 3421 015c 54585F53 		.ascii	"TX_SEND_initVar\000"
 3421      454E445F 
 3421      696E6974 
 3421      56617200 
 3422              	.LASF4:
 3423 016c 6C6F6E67 		.ascii	"long int\000"
 3423      20696E74 
 3423      00
 3424              	.LASF32:
 3425 0175 54585F53 		.ascii	"TX_SEND_SetPWMDeadTime\000"
 3425      454E445F 
 3425      53657450 
 3425      574D4465 
 3425      61645469 
 3426              	.LASF9:
 3427 018c 75696E74 		.ascii	"uint8\000"
 3427      3800
 3428              	.LASF12:
 3429 0192 646F7562 		.ascii	"double\000"
 3429      6C6500
 3430              	.LASF77:
 3431 0199 2E5C4765 		.ascii	".\\Generated_Source\\PSoC4\\TX_SEND.c\000"
 3431      6E657261 
 3431      7465645F 
 3431      536F7572 
 3431      63655C50 
 3432              	.LASF10:
 3433 01bc 75696E74 		.ascii	"uint32\000"
 3433      333200
 3434              	.LASF75:
 3435 01c3 54585F53 		.ascii	"TX_SEND_SetInterrupt\000"
 3435      454E445F 
 3435      53657449 
 3435      6E746572 
 3435      72757074 
 3436              	.LASF59:
 3437 01d8 74726967 		.ascii	"triggerMode\000"
 3437      6765724D 
 3437      6F646500 
 3438              	.LASF35:
 3439 01e4 6D61736B 		.ascii	"mask\000"
 3439      00
 3440              	.LASF71:
 3441 01e9 54585F53 		.ascii	"TX_SEND_Start\000"
 3441      454E445F 
 3441      53746172 
 3441      7400
 3442              	.LASF40:
 3443 01f7 54585F53 		.ascii	"TX_SEND_WritePeriod\000"
 3443      454E445F 
 3443      57726974 
 3443      65506572 
 3443      696F6400 
 3444              	.LASF33:
ARM GAS  C:\Users\g\AppData\Local\Temp\ccNCqeMN.s 			page 88


 3445 020b 64656164 		.ascii	"deadTime\000"
 3445      54696D65 
 3445      00
 3446              	.LASF19:
 3447 0214 54585F53 		.ascii	"TX_SEND_SetQDMode\000"
 3447      454E445F 
 3447      53657451 
 3447      444D6F64 
 3447      6500
 3448              	.LASF53:
 3449 0226 54585F53 		.ascii	"TX_SEND_WriteCompareBuf\000"
 3449      454E445F 
 3449      57726974 
 3449      65436F6D 
 3449      70617265 
 3450              	.LASF46:
 3451 023e 54585F53 		.ascii	"TX_SEND_WritePeriodBuf\000"
 3451      454E445F 
 3451      57726974 
 3451      65506572 
 3451      696F6442 
 3452              	.LASF8:
 3453 0255 756E7369 		.ascii	"unsigned int\000"
 3453      676E6564 
 3453      20696E74 
 3453      00
 3454              	.LASF65:
 3455 0262 636F6D6D 		.ascii	"command\000"
 3455      616E6400 
 3456              	.LASF5:
 3457 026a 6C6F6E67 		.ascii	"long unsigned int\000"
 3457      20756E73 
 3457      69676E65 
 3457      6420696E 
 3457      7400
 3458              	.LASF27:
 3459 027c 6D6F6465 		.ascii	"modeMask\000"
 3459      4D61736B 
 3459      00
 3460              	.LASF80:
 3461 0285 4379456E 		.ascii	"CyEnterCriticalSection\000"
 3461      74657243 
 3461      72697469 
 3461      63616C53 
 3461      65637469 
 3462              	.LASF73:
 3463 029c 54585F53 		.ascii	"TX_SEND_GetInterruptSource\000"
 3463      454E445F 
 3463      47657449 
 3463      6E746572 
 3463      72757074 
 3464              	.LASF3:
 3465 02b7 73686F72 		.ascii	"short unsigned int\000"
 3465      7420756E 
 3465      7369676E 
 3465      65642069 
 3465      6E7400
ARM GAS  C:\Users\g\AppData\Local\Temp\ccNCqeMN.s 			page 89


 3466              	.LASF63:
 3467 02ca 54585F53 		.ascii	"TX_SEND_SetCountMode\000"
 3467      454E445F 
 3467      53657443 
 3467      6F756E74 
 3467      4D6F6465 
 3468              	.LASF25:
 3469 02df 6F6E6553 		.ascii	"oneShotEnable\000"
 3469      686F7445 
 3469      6E61626C 
 3469      6500
 3470              	.LASF56:
 3471 02ed 54585F53 		.ascii	"TX_SEND_ReadCapture\000"
 3471      454E445F 
 3471      52656164 
 3471      43617074 
 3471      75726500 
 3472              	.LASF61:
 3473 0301 54585F53 		.ascii	"TX_SEND_SetStartMode\000"
 3473      454E445F 
 3473      53657453 
 3473      74617274 
 3473      4D6F6465 
 3474              	.LASF14:
 3475 0316 72656733 		.ascii	"reg32\000"
 3475      3200
 3476              	.LASF50:
 3477 031c 54585F53 		.ascii	"TX_SEND_WriteCompare\000"
 3477      454E445F 
 3477      57726974 
 3477      65436F6D 
 3477      70617265 
 3478              	.LASF15:
 3479 0331 73697A65 		.ascii	"sizetype\000"
 3479      74797065 
 3479      00
 3480              	.LASF29:
 3481 033a 73796E63 		.ascii	"syncKillEnable\000"
 3481      4B696C6C 
 3481      456E6162 
 3481      6C6500
 3482              	.LASF52:
 3483 0349 54585F53 		.ascii	"TX_SEND_ReadCompare\000"
 3483      454E445F 
 3483      52656164 
 3483      436F6D70 
 3483      61726500 
 3484              	.LASF51:
 3485 035d 636F6D70 		.ascii	"compare\000"
 3485      61726500 
 3486              	.LASF38:
 3487 0365 54585F53 		.ascii	"TX_SEND_SetCounterMode\000"
 3487      454E445F 
 3487      53657443 
 3487      6F756E74 
 3487      65724D6F 
 3488              	.LASF24:
ARM GAS  C:\Users\g\AppData\Local\Temp\ccNCqeMN.s 			page 90


 3489 037c 54585F53 		.ascii	"TX_SEND_SetOneShot\000"
 3489      454E445F 
 3489      5365744F 
 3489      6E655368 
 3489      6F7400
 3490              	.LASF17:
 3491 038f 54585F53 		.ascii	"TX_SEND_SetMode\000"
 3491      454E445F 
 3491      5365744D 
 3491      6F646500 
 3492              	.LASF11:
 3493 039f 666C6F61 		.ascii	"float\000"
 3493      7400
 3494              	.LASF23:
 3495 03a5 70726573 		.ascii	"prescaler\000"
 3495      63616C65 
 3495      7200
 3496              	.LASF36:
 3497 03af 54585F53 		.ascii	"TX_SEND_WriteCounter\000"
 3497      454E445F 
 3497      57726974 
 3497      65436F75 
 3497      6E746572 
 3498              	.LASF67:
 3499 03c4 54585F53 		.ascii	"TX_SEND_ReadStatus\000"
 3499      454E445F 
 3499      52656164 
 3499      53746174 
 3499      757300
 3500              	.LASF1:
 3501 03d7 756E7369 		.ascii	"unsigned char\000"
 3501      676E6564 
 3501      20636861 
 3501      7200
 3502              	.LASF31:
 3503 03e5 73746F70 		.ascii	"stopOnKillEnable\000"
 3503      4F6E4B69 
 3503      6C6C456E 
 3503      61626C65 
 3503      00
 3504              	.LASF42:
 3505 03f6 54585F53 		.ascii	"TX_SEND_ReadCounter\000"
 3505      454E445F 
 3505      52656164 
 3505      436F756E 
 3505      74657200 
 3506              	.LASF2:
 3507 040a 73686F72 		.ascii	"short int\000"
 3507      7420696E 
 3507      7400
 3508              	.LASF72:
 3509 0414 54585F53 		.ascii	"TX_SEND_GetInterruptSourceMasked\000"
 3509      454E445F 
 3509      47657449 
 3509      6E746572 
 3509      72757074 
 3510              	.LASF58:
ARM GAS  C:\Users\g\AppData\Local\Temp\ccNCqeMN.s 			page 91


 3511 0435 54585F53 		.ascii	"TX_SEND_SetCaptureMode\000"
 3511      454E445F 
 3511      53657443 
 3511      61707475 
 3511      72654D6F 
 3512              	.LASF30:
 3513 044c 54585F53 		.ascii	"TX_SEND_SetPWMStopOnKill\000"
 3513      454E445F 
 3513      53657450 
 3513      574D5374 
 3513      6F704F6E 
 3514              	.LASF69:
 3515 0465 696E7465 		.ascii	"interruptMask\000"
 3515      72727570 
 3515      744D6173 
 3515      6B00
 3516              	.LASF57:
 3517 0473 54585F53 		.ascii	"TX_SEND_ReadCaptureBuf\000"
 3517      454E445F 
 3517      52656164 
 3517      43617074 
 3517      75726542 
 3518              	.LASF34:
 3519 048a 54585F53 		.ascii	"TX_SEND_SetPWMInvert\000"
 3519      454E445F 
 3519      53657450 
 3519      574D496E 
 3519      76657274 
 3520              	.LASF13:
 3521 049f 63686172 		.ascii	"char\000"
 3521      00
 3522              	.LASF20:
 3523 04a4 6D6F6465 		.ascii	"mode\000"
 3523      00
 3524              	.LASF49:
 3525 04a9 54585F53 		.ascii	"TX_SEND_SetPeriodSwap\000"
 3525      454E445F 
 3525      53657450 
 3525      6572696F 
 3525      64537761 
 3526              	.LASF39:
 3527 04bf 636F756E 		.ascii	"counterMode\000"
 3527      7465724D 
 3527      6F646500 
 3528              	.LASF44:
 3529 04cb 54585F53 		.ascii	"TX_SEND_SetCompareSwap\000"
 3529      454E445F 
 3529      53657443 
 3529      6F6D7061 
 3529      72655377 
 3530              	.LASF43:
 3531 04e2 54585F53 		.ascii	"TX_SEND_ReadPeriod\000"
 3531      454E445F 
 3531      52656164 
 3531      50657269 
 3531      6F6400
 3532              	.LASF54:
ARM GAS  C:\Users\g\AppData\Local\Temp\ccNCqeMN.s 			page 92


 3533 04f5 636F6D70 		.ascii	"compareBuf\000"
 3533      61726542 
 3533      756600
 3534              	.LASF48:
 3535 0500 54585F53 		.ascii	"TX_SEND_ReadPeriodBuf\000"
 3535      454E445F 
 3535      52656164 
 3535      50657269 
 3535      6F644275 
 3536              	.LASF78:
 3537 0516 443A5C63 		.ascii	"D:\\code\\cypress\\controllers\\bldc.cydsn\000"
 3537      6F64655C 
 3537      63797072 
 3537      6573735C 
 3537      636F6E74 
 3538              	.LASF62:
 3539 053d 54585F53 		.ascii	"TX_SEND_SetStopMode\000"
 3539      454E445F 
 3539      53657453 
 3539      746F704D 
 3539      6F646500 
 3540              	.LASF18:
 3541 0551 656E6162 		.ascii	"enableInterrupts\000"
 3541      6C65496E 
 3541      74657272 
 3541      75707473 
 3541      00
 3542              	.LASF66:
 3543 0562 54585F53 		.ascii	"TX_SEND_Enable\000"
 3543      454E445F 
 3543      456E6162 
 3543      6C6500
 3544              	.LASF28:
 3545 0571 54585F53 		.ascii	"TX_SEND_SetPWMSyncKill\000"
 3545      454E445F 
 3545      53657450 
 3545      574D5379 
 3545      6E634B69 
 3546              	.LASF22:
 3547 0588 54585F53 		.ascii	"TX_SEND_SetPrescaler\000"
 3547      454E445F 
 3547      53657450 
 3547      72657363 
 3547      616C6572 
 3548              	.LASF68:
 3549 059d 54585F53 		.ascii	"TX_SEND_SetInterruptMode\000"
 3549      454E445F 
 3549      53657449 
 3549      6E746572 
 3549      72757074 
 3550              	.LASF45:
 3551 05b6 73776170 		.ascii	"swapEnable\000"
 3551      456E6162 
 3551      6C6500
 3552              	.LASF47:
 3553 05c1 70657269 		.ascii	"periodBuf\000"
 3553      6F644275 
ARM GAS  C:\Users\g\AppData\Local\Temp\ccNCqeMN.s 			page 93


 3553      6600
 3554              	.LASF16:
 3555 05cb 54585F53 		.ascii	"TX_SEND_Stop\000"
 3555      454E445F 
 3555      53746F70 
 3555      00
 3556              	.LASF26:
 3557 05d8 54585F53 		.ascii	"TX_SEND_SetPWMMode\000"
 3557      454E445F 
 3557      53657450 
 3557      574D4D6F 
 3557      646500
 3558              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 4.9.3 20150303 (release) [ARM/embedded-4_9-br
