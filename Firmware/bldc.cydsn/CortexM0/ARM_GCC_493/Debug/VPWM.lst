ARM GAS  C:\Users\g\AppData\Local\Temp\ccGu2P49.s 			page 1


   1              		.cpu cortex-m0
   2              		.fpu softvfp
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 1
  10              		.eabi_attribute 34, 0
  11              		.eabi_attribute 18, 4
  12              		.code	16
  13              		.file	"VPWM.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.VPWM_Stop,"ax",%progbits
  18              		.align	2
  19              		.global	VPWM_Stop
  20              		.code	16
  21              		.thumb_func
  22              		.type	VPWM_Stop, %function
  23              	VPWM_Stop:
  24              	.LFB3:
  25              		.file 1 ".\\Generated_Source\\PSoC4\\VPWM.c"
   1:.\Generated_Source\PSoC4/VPWM.c **** /*******************************************************************************
   2:.\Generated_Source\PSoC4/VPWM.c **** * File Name: VPWM.c
   3:.\Generated_Source\PSoC4/VPWM.c **** * Version 2.10
   4:.\Generated_Source\PSoC4/VPWM.c **** *
   5:.\Generated_Source\PSoC4/VPWM.c **** * Description:
   6:.\Generated_Source\PSoC4/VPWM.c **** *  This file provides the source code to the API for the VPWM
   7:.\Generated_Source\PSoC4/VPWM.c **** *  component
   8:.\Generated_Source\PSoC4/VPWM.c **** *
   9:.\Generated_Source\PSoC4/VPWM.c **** * Note:
  10:.\Generated_Source\PSoC4/VPWM.c **** *  None
  11:.\Generated_Source\PSoC4/VPWM.c **** *
  12:.\Generated_Source\PSoC4/VPWM.c **** ********************************************************************************
  13:.\Generated_Source\PSoC4/VPWM.c **** * Copyright 2013-2015, Cypress Semiconductor Corporation.  All rights reserved.
  14:.\Generated_Source\PSoC4/VPWM.c **** * You may use this file only in accordance with the license, terms, conditions,
  15:.\Generated_Source\PSoC4/VPWM.c **** * disclaimers, and limitations in the end user license agreement accompanying
  16:.\Generated_Source\PSoC4/VPWM.c **** * the software package with which this file was provided.
  17:.\Generated_Source\PSoC4/VPWM.c **** *******************************************************************************/
  18:.\Generated_Source\PSoC4/VPWM.c **** 
  19:.\Generated_Source\PSoC4/VPWM.c **** #include "VPWM.h"
  20:.\Generated_Source\PSoC4/VPWM.c **** 
  21:.\Generated_Source\PSoC4/VPWM.c **** uint8 VPWM_initVar = 0u;
  22:.\Generated_Source\PSoC4/VPWM.c **** 
  23:.\Generated_Source\PSoC4/VPWM.c **** 
  24:.\Generated_Source\PSoC4/VPWM.c **** /*******************************************************************************
  25:.\Generated_Source\PSoC4/VPWM.c **** * Function Name: VPWM_Init
  26:.\Generated_Source\PSoC4/VPWM.c **** ********************************************************************************
  27:.\Generated_Source\PSoC4/VPWM.c **** *
  28:.\Generated_Source\PSoC4/VPWM.c **** * Summary:
  29:.\Generated_Source\PSoC4/VPWM.c **** *  Initialize/Restore default VPWM configuration.
  30:.\Generated_Source\PSoC4/VPWM.c **** *
  31:.\Generated_Source\PSoC4/VPWM.c **** * Parameters:
  32:.\Generated_Source\PSoC4/VPWM.c **** *  None
ARM GAS  C:\Users\g\AppData\Local\Temp\ccGu2P49.s 			page 2


  33:.\Generated_Source\PSoC4/VPWM.c **** *
  34:.\Generated_Source\PSoC4/VPWM.c **** * Return:
  35:.\Generated_Source\PSoC4/VPWM.c **** *  None
  36:.\Generated_Source\PSoC4/VPWM.c **** *
  37:.\Generated_Source\PSoC4/VPWM.c **** *******************************************************************************/
  38:.\Generated_Source\PSoC4/VPWM.c **** void VPWM_Init(void)
  39:.\Generated_Source\PSoC4/VPWM.c **** {
  40:.\Generated_Source\PSoC4/VPWM.c **** 
  41:.\Generated_Source\PSoC4/VPWM.c ****     /* Set values from customizer to CTRL */
  42:.\Generated_Source\PSoC4/VPWM.c ****     #if (VPWM__QUAD == VPWM_CONFIG)
  43:.\Generated_Source\PSoC4/VPWM.c ****         VPWM_CONTROL_REG = VPWM_CTRL_QUAD_BASE_CONFIG;
  44:.\Generated_Source\PSoC4/VPWM.c ****         
  45:.\Generated_Source\PSoC4/VPWM.c ****         /* Set values from customizer to CTRL1 */
  46:.\Generated_Source\PSoC4/VPWM.c ****         VPWM_TRIG_CONTROL1_REG  = VPWM_QUAD_SIGNALS_MODES;
  47:.\Generated_Source\PSoC4/VPWM.c **** 
  48:.\Generated_Source\PSoC4/VPWM.c ****         /* Set values from customizer to INTR */
  49:.\Generated_Source\PSoC4/VPWM.c ****         VPWM_SetInterruptMode(VPWM_QUAD_INTERRUPT_MASK);
  50:.\Generated_Source\PSoC4/VPWM.c ****         
  51:.\Generated_Source\PSoC4/VPWM.c ****          /* Set other values */
  52:.\Generated_Source\PSoC4/VPWM.c ****         VPWM_SetCounterMode(VPWM_COUNT_DOWN);
  53:.\Generated_Source\PSoC4/VPWM.c ****         VPWM_WritePeriod(VPWM_QUAD_PERIOD_INIT_VALUE);
  54:.\Generated_Source\PSoC4/VPWM.c ****         VPWM_WriteCounter(VPWM_QUAD_PERIOD_INIT_VALUE);
  55:.\Generated_Source\PSoC4/VPWM.c ****     #endif  /* (VPWM__QUAD == VPWM_CONFIG) */
  56:.\Generated_Source\PSoC4/VPWM.c **** 
  57:.\Generated_Source\PSoC4/VPWM.c ****     #if (VPWM__TIMER == VPWM_CONFIG)
  58:.\Generated_Source\PSoC4/VPWM.c ****         VPWM_CONTROL_REG = VPWM_CTRL_TIMER_BASE_CONFIG;
  59:.\Generated_Source\PSoC4/VPWM.c ****         
  60:.\Generated_Source\PSoC4/VPWM.c ****         /* Set values from customizer to CTRL1 */
  61:.\Generated_Source\PSoC4/VPWM.c ****         VPWM_TRIG_CONTROL1_REG  = VPWM_TIMER_SIGNALS_MODES;
  62:.\Generated_Source\PSoC4/VPWM.c ****     
  63:.\Generated_Source\PSoC4/VPWM.c ****         /* Set values from customizer to INTR */
  64:.\Generated_Source\PSoC4/VPWM.c ****         VPWM_SetInterruptMode(VPWM_TC_INTERRUPT_MASK);
  65:.\Generated_Source\PSoC4/VPWM.c ****         
  66:.\Generated_Source\PSoC4/VPWM.c ****         /* Set other values from customizer */
  67:.\Generated_Source\PSoC4/VPWM.c ****         VPWM_WritePeriod(VPWM_TC_PERIOD_VALUE );
  68:.\Generated_Source\PSoC4/VPWM.c **** 
  69:.\Generated_Source\PSoC4/VPWM.c ****         #if (VPWM__COMPARE == VPWM_TC_COMP_CAP_MODE)
  70:.\Generated_Source\PSoC4/VPWM.c ****             VPWM_WriteCompare(VPWM_TC_COMPARE_VALUE);
  71:.\Generated_Source\PSoC4/VPWM.c **** 
  72:.\Generated_Source\PSoC4/VPWM.c ****             #if (1u == VPWM_TC_COMPARE_SWAP)
  73:.\Generated_Source\PSoC4/VPWM.c ****                 VPWM_SetCompareSwap(1u);
  74:.\Generated_Source\PSoC4/VPWM.c ****                 VPWM_WriteCompareBuf(VPWM_TC_COMPARE_BUF_VALUE);
  75:.\Generated_Source\PSoC4/VPWM.c ****             #endif  /* (1u == VPWM_TC_COMPARE_SWAP) */
  76:.\Generated_Source\PSoC4/VPWM.c ****         #endif  /* (VPWM__COMPARE == VPWM_TC_COMP_CAP_MODE) */
  77:.\Generated_Source\PSoC4/VPWM.c **** 
  78:.\Generated_Source\PSoC4/VPWM.c ****         /* Initialize counter value */
  79:.\Generated_Source\PSoC4/VPWM.c ****         #if (VPWM_CY_TCPWM_V2 && VPWM_TIMER_UPDOWN_CNT_USED && !VPWM_CY_TCPWM_4000)
  80:.\Generated_Source\PSoC4/VPWM.c ****             VPWM_WriteCounter(1u);
  81:.\Generated_Source\PSoC4/VPWM.c ****         #elif(VPWM__COUNT_DOWN == VPWM_TC_COUNTER_MODE)
  82:.\Generated_Source\PSoC4/VPWM.c ****             VPWM_WriteCounter(VPWM_TC_PERIOD_VALUE);
  83:.\Generated_Source\PSoC4/VPWM.c ****         #else
  84:.\Generated_Source\PSoC4/VPWM.c ****             VPWM_WriteCounter(0u);
  85:.\Generated_Source\PSoC4/VPWM.c ****         #endif /* (VPWM_CY_TCPWM_V2 && VPWM_TIMER_UPDOWN_CNT_USED && !VPWM_CY_TCPWM_4000) */
  86:.\Generated_Source\PSoC4/VPWM.c ****     #endif  /* (VPWM__TIMER == VPWM_CONFIG) */
  87:.\Generated_Source\PSoC4/VPWM.c **** 
  88:.\Generated_Source\PSoC4/VPWM.c ****     #if (VPWM__PWM_SEL == VPWM_CONFIG)
  89:.\Generated_Source\PSoC4/VPWM.c ****         VPWM_CONTROL_REG = VPWM_CTRL_PWM_BASE_CONFIG;
ARM GAS  C:\Users\g\AppData\Local\Temp\ccGu2P49.s 			page 3


  90:.\Generated_Source\PSoC4/VPWM.c **** 
  91:.\Generated_Source\PSoC4/VPWM.c ****         #if (VPWM__PWM_PR == VPWM_PWM_MODE)
  92:.\Generated_Source\PSoC4/VPWM.c ****             VPWM_CONTROL_REG |= VPWM_CTRL_PWM_RUN_MODE;
  93:.\Generated_Source\PSoC4/VPWM.c ****             VPWM_WriteCounter(VPWM_PWM_PR_INIT_VALUE);
  94:.\Generated_Source\PSoC4/VPWM.c ****         #else
  95:.\Generated_Source\PSoC4/VPWM.c ****             VPWM_CONTROL_REG |= VPWM_CTRL_PWM_ALIGN | VPWM_CTRL_PWM_KILL_EVENT;
  96:.\Generated_Source\PSoC4/VPWM.c ****             
  97:.\Generated_Source\PSoC4/VPWM.c ****             /* Initialize counter value */
  98:.\Generated_Source\PSoC4/VPWM.c ****             #if (VPWM_CY_TCPWM_V2 && VPWM_PWM_UPDOWN_CNT_USED && !VPWM_CY_TCPWM_4000)
  99:.\Generated_Source\PSoC4/VPWM.c ****                 VPWM_WriteCounter(1u);
 100:.\Generated_Source\PSoC4/VPWM.c ****             #elif (VPWM__RIGHT == VPWM_PWM_ALIGN)
 101:.\Generated_Source\PSoC4/VPWM.c ****                 VPWM_WriteCounter(VPWM_PWM_PERIOD_VALUE);
 102:.\Generated_Source\PSoC4/VPWM.c ****             #else 
 103:.\Generated_Source\PSoC4/VPWM.c ****                 VPWM_WriteCounter(0u);
 104:.\Generated_Source\PSoC4/VPWM.c ****             #endif  /* (VPWM_CY_TCPWM_V2 && VPWM_PWM_UPDOWN_CNT_USED && !VPWM_CY_TCPWM_4000) */
 105:.\Generated_Source\PSoC4/VPWM.c ****         #endif  /* (VPWM__PWM_PR == VPWM_PWM_MODE) */
 106:.\Generated_Source\PSoC4/VPWM.c **** 
 107:.\Generated_Source\PSoC4/VPWM.c ****         #if (VPWM__PWM_DT == VPWM_PWM_MODE)
 108:.\Generated_Source\PSoC4/VPWM.c ****             VPWM_CONTROL_REG |= VPWM_CTRL_PWM_DEAD_TIME_CYCLE;
 109:.\Generated_Source\PSoC4/VPWM.c ****         #endif  /* (VPWM__PWM_DT == VPWM_PWM_MODE) */
 110:.\Generated_Source\PSoC4/VPWM.c **** 
 111:.\Generated_Source\PSoC4/VPWM.c ****         #if (VPWM__PWM == VPWM_PWM_MODE)
 112:.\Generated_Source\PSoC4/VPWM.c ****             VPWM_CONTROL_REG |= VPWM_CTRL_PWM_PRESCALER;
 113:.\Generated_Source\PSoC4/VPWM.c ****         #endif  /* (VPWM__PWM == VPWM_PWM_MODE) */
 114:.\Generated_Source\PSoC4/VPWM.c **** 
 115:.\Generated_Source\PSoC4/VPWM.c ****         /* Set values from customizer to CTRL1 */
 116:.\Generated_Source\PSoC4/VPWM.c ****         VPWM_TRIG_CONTROL1_REG  = VPWM_PWM_SIGNALS_MODES;
 117:.\Generated_Source\PSoC4/VPWM.c ****     
 118:.\Generated_Source\PSoC4/VPWM.c ****         /* Set values from customizer to INTR */
 119:.\Generated_Source\PSoC4/VPWM.c ****         VPWM_SetInterruptMode(VPWM_PWM_INTERRUPT_MASK);
 120:.\Generated_Source\PSoC4/VPWM.c **** 
 121:.\Generated_Source\PSoC4/VPWM.c ****         /* Set values from customizer to CTRL2 */
 122:.\Generated_Source\PSoC4/VPWM.c ****         #if (VPWM__PWM_PR == VPWM_PWM_MODE)
 123:.\Generated_Source\PSoC4/VPWM.c ****             VPWM_TRIG_CONTROL2_REG =
 124:.\Generated_Source\PSoC4/VPWM.c ****                     (VPWM_CC_MATCH_NO_CHANGE    |
 125:.\Generated_Source\PSoC4/VPWM.c ****                     VPWM_OVERLOW_NO_CHANGE      |
 126:.\Generated_Source\PSoC4/VPWM.c ****                     VPWM_UNDERFLOW_NO_CHANGE);
 127:.\Generated_Source\PSoC4/VPWM.c ****         #else
 128:.\Generated_Source\PSoC4/VPWM.c ****             #if (VPWM__LEFT == VPWM_PWM_ALIGN)
 129:.\Generated_Source\PSoC4/VPWM.c ****                 VPWM_TRIG_CONTROL2_REG = VPWM_PWM_MODE_LEFT;
 130:.\Generated_Source\PSoC4/VPWM.c ****             #endif  /* ( VPWM_PWM_LEFT == VPWM_PWM_ALIGN) */
 131:.\Generated_Source\PSoC4/VPWM.c **** 
 132:.\Generated_Source\PSoC4/VPWM.c ****             #if (VPWM__RIGHT == VPWM_PWM_ALIGN)
 133:.\Generated_Source\PSoC4/VPWM.c ****                 VPWM_TRIG_CONTROL2_REG = VPWM_PWM_MODE_RIGHT;
 134:.\Generated_Source\PSoC4/VPWM.c ****             #endif  /* ( VPWM_PWM_RIGHT == VPWM_PWM_ALIGN) */
 135:.\Generated_Source\PSoC4/VPWM.c **** 
 136:.\Generated_Source\PSoC4/VPWM.c ****             #if (VPWM__CENTER == VPWM_PWM_ALIGN)
 137:.\Generated_Source\PSoC4/VPWM.c ****                 VPWM_TRIG_CONTROL2_REG = VPWM_PWM_MODE_CENTER;
 138:.\Generated_Source\PSoC4/VPWM.c ****             #endif  /* ( VPWM_PWM_CENTER == VPWM_PWM_ALIGN) */
 139:.\Generated_Source\PSoC4/VPWM.c **** 
 140:.\Generated_Source\PSoC4/VPWM.c ****             #if (VPWM__ASYMMETRIC == VPWM_PWM_ALIGN)
 141:.\Generated_Source\PSoC4/VPWM.c ****                 VPWM_TRIG_CONTROL2_REG = VPWM_PWM_MODE_ASYM;
 142:.\Generated_Source\PSoC4/VPWM.c ****             #endif  /* (VPWM__ASYMMETRIC == VPWM_PWM_ALIGN) */
 143:.\Generated_Source\PSoC4/VPWM.c ****         #endif  /* (VPWM__PWM_PR == VPWM_PWM_MODE) */
 144:.\Generated_Source\PSoC4/VPWM.c **** 
 145:.\Generated_Source\PSoC4/VPWM.c ****         /* Set other values from customizer */
 146:.\Generated_Source\PSoC4/VPWM.c ****         VPWM_WritePeriod(VPWM_PWM_PERIOD_VALUE );
ARM GAS  C:\Users\g\AppData\Local\Temp\ccGu2P49.s 			page 4


 147:.\Generated_Source\PSoC4/VPWM.c ****         VPWM_WriteCompare(VPWM_PWM_COMPARE_VALUE);
 148:.\Generated_Source\PSoC4/VPWM.c **** 
 149:.\Generated_Source\PSoC4/VPWM.c ****         #if (1u == VPWM_PWM_COMPARE_SWAP)
 150:.\Generated_Source\PSoC4/VPWM.c ****             VPWM_SetCompareSwap(1u);
 151:.\Generated_Source\PSoC4/VPWM.c ****             VPWM_WriteCompareBuf(VPWM_PWM_COMPARE_BUF_VALUE);
 152:.\Generated_Source\PSoC4/VPWM.c ****         #endif  /* (1u == VPWM_PWM_COMPARE_SWAP) */
 153:.\Generated_Source\PSoC4/VPWM.c **** 
 154:.\Generated_Source\PSoC4/VPWM.c ****         #if (1u == VPWM_PWM_PERIOD_SWAP)
 155:.\Generated_Source\PSoC4/VPWM.c ****             VPWM_SetPeriodSwap(1u);
 156:.\Generated_Source\PSoC4/VPWM.c ****             VPWM_WritePeriodBuf(VPWM_PWM_PERIOD_BUF_VALUE);
 157:.\Generated_Source\PSoC4/VPWM.c ****         #endif  /* (1u == VPWM_PWM_PERIOD_SWAP) */
 158:.\Generated_Source\PSoC4/VPWM.c ****     #endif  /* (VPWM__PWM_SEL == VPWM_CONFIG) */
 159:.\Generated_Source\PSoC4/VPWM.c ****     
 160:.\Generated_Source\PSoC4/VPWM.c **** }
 161:.\Generated_Source\PSoC4/VPWM.c **** 
 162:.\Generated_Source\PSoC4/VPWM.c **** 
 163:.\Generated_Source\PSoC4/VPWM.c **** /*******************************************************************************
 164:.\Generated_Source\PSoC4/VPWM.c **** * Function Name: VPWM_Enable
 165:.\Generated_Source\PSoC4/VPWM.c **** ********************************************************************************
 166:.\Generated_Source\PSoC4/VPWM.c **** *
 167:.\Generated_Source\PSoC4/VPWM.c **** * Summary:
 168:.\Generated_Source\PSoC4/VPWM.c **** *  Enables the VPWM.
 169:.\Generated_Source\PSoC4/VPWM.c **** *
 170:.\Generated_Source\PSoC4/VPWM.c **** * Parameters:
 171:.\Generated_Source\PSoC4/VPWM.c **** *  None
 172:.\Generated_Source\PSoC4/VPWM.c **** *
 173:.\Generated_Source\PSoC4/VPWM.c **** * Return:
 174:.\Generated_Source\PSoC4/VPWM.c **** *  None
 175:.\Generated_Source\PSoC4/VPWM.c **** *
 176:.\Generated_Source\PSoC4/VPWM.c **** *******************************************************************************/
 177:.\Generated_Source\PSoC4/VPWM.c **** void VPWM_Enable(void)
 178:.\Generated_Source\PSoC4/VPWM.c **** {
 179:.\Generated_Source\PSoC4/VPWM.c ****     uint8 enableInterrupts;
 180:.\Generated_Source\PSoC4/VPWM.c **** 
 181:.\Generated_Source\PSoC4/VPWM.c ****     enableInterrupts = CyEnterCriticalSection();
 182:.\Generated_Source\PSoC4/VPWM.c ****     VPWM_BLOCK_CONTROL_REG |= VPWM_MASK;
 183:.\Generated_Source\PSoC4/VPWM.c ****     CyExitCriticalSection(enableInterrupts);
 184:.\Generated_Source\PSoC4/VPWM.c **** 
 185:.\Generated_Source\PSoC4/VPWM.c ****     /* Start Timer or PWM if start input is absent */
 186:.\Generated_Source\PSoC4/VPWM.c ****     #if (VPWM__PWM_SEL == VPWM_CONFIG)
 187:.\Generated_Source\PSoC4/VPWM.c ****         #if (0u == VPWM_PWM_START_SIGNAL_PRESENT)
 188:.\Generated_Source\PSoC4/VPWM.c ****             VPWM_TriggerCommand(VPWM_MASK, VPWM_CMD_START);
 189:.\Generated_Source\PSoC4/VPWM.c ****         #endif /* (0u == VPWM_PWM_START_SIGNAL_PRESENT) */
 190:.\Generated_Source\PSoC4/VPWM.c ****     #endif /* (VPWM__PWM_SEL == VPWM_CONFIG) */
 191:.\Generated_Source\PSoC4/VPWM.c **** 
 192:.\Generated_Source\PSoC4/VPWM.c ****     #if (VPWM__TIMER == VPWM_CONFIG)
 193:.\Generated_Source\PSoC4/VPWM.c ****         #if (0u == VPWM_TC_START_SIGNAL_PRESENT)
 194:.\Generated_Source\PSoC4/VPWM.c ****             VPWM_TriggerCommand(VPWM_MASK, VPWM_CMD_START);
 195:.\Generated_Source\PSoC4/VPWM.c ****         #endif /* (0u == VPWM_TC_START_SIGNAL_PRESENT) */
 196:.\Generated_Source\PSoC4/VPWM.c ****     #endif /* (VPWM__TIMER == VPWM_CONFIG) */
 197:.\Generated_Source\PSoC4/VPWM.c ****     
 198:.\Generated_Source\PSoC4/VPWM.c ****     #if (VPWM__QUAD == VPWM_CONFIG)
 199:.\Generated_Source\PSoC4/VPWM.c ****         #if (0u != VPWM_QUAD_AUTO_START)
 200:.\Generated_Source\PSoC4/VPWM.c ****             VPWM_TriggerCommand(VPWM_MASK, VPWM_CMD_RELOAD);
 201:.\Generated_Source\PSoC4/VPWM.c ****         #endif /* (0u != VPWM_QUAD_AUTO_START) */
 202:.\Generated_Source\PSoC4/VPWM.c ****     #endif  /* (VPWM__QUAD == VPWM_CONFIG) */
 203:.\Generated_Source\PSoC4/VPWM.c **** }
ARM GAS  C:\Users\g\AppData\Local\Temp\ccGu2P49.s 			page 5


 204:.\Generated_Source\PSoC4/VPWM.c **** 
 205:.\Generated_Source\PSoC4/VPWM.c **** 
 206:.\Generated_Source\PSoC4/VPWM.c **** /*******************************************************************************
 207:.\Generated_Source\PSoC4/VPWM.c **** * Function Name: VPWM_Start
 208:.\Generated_Source\PSoC4/VPWM.c **** ********************************************************************************
 209:.\Generated_Source\PSoC4/VPWM.c **** *
 210:.\Generated_Source\PSoC4/VPWM.c **** * Summary:
 211:.\Generated_Source\PSoC4/VPWM.c **** *  Initializes the VPWM with default customizer
 212:.\Generated_Source\PSoC4/VPWM.c **** *  values when called the first time and enables the VPWM.
 213:.\Generated_Source\PSoC4/VPWM.c **** *  For subsequent calls the configuration is left unchanged and the component is
 214:.\Generated_Source\PSoC4/VPWM.c **** *  just enabled.
 215:.\Generated_Source\PSoC4/VPWM.c **** *
 216:.\Generated_Source\PSoC4/VPWM.c **** * Parameters:
 217:.\Generated_Source\PSoC4/VPWM.c **** *  None
 218:.\Generated_Source\PSoC4/VPWM.c **** *
 219:.\Generated_Source\PSoC4/VPWM.c **** * Return:
 220:.\Generated_Source\PSoC4/VPWM.c **** *  None
 221:.\Generated_Source\PSoC4/VPWM.c **** *
 222:.\Generated_Source\PSoC4/VPWM.c **** * Global variables:
 223:.\Generated_Source\PSoC4/VPWM.c **** *  VPWM_initVar: global variable is used to indicate initial
 224:.\Generated_Source\PSoC4/VPWM.c **** *  configuration of this component.  The variable is initialized to zero and set
 225:.\Generated_Source\PSoC4/VPWM.c **** *  to 1 the first time VPWM_Start() is called. This allows
 226:.\Generated_Source\PSoC4/VPWM.c **** *  enabling/disabling a component without re-initialization in all subsequent
 227:.\Generated_Source\PSoC4/VPWM.c **** *  calls to the VPWM_Start() routine.
 228:.\Generated_Source\PSoC4/VPWM.c **** *
 229:.\Generated_Source\PSoC4/VPWM.c **** *******************************************************************************/
 230:.\Generated_Source\PSoC4/VPWM.c **** void VPWM_Start(void)
 231:.\Generated_Source\PSoC4/VPWM.c **** {
 232:.\Generated_Source\PSoC4/VPWM.c ****     if (0u == VPWM_initVar)
 233:.\Generated_Source\PSoC4/VPWM.c ****     {
 234:.\Generated_Source\PSoC4/VPWM.c ****         VPWM_Init();
 235:.\Generated_Source\PSoC4/VPWM.c ****         VPWM_initVar = 1u;
 236:.\Generated_Source\PSoC4/VPWM.c ****     }
 237:.\Generated_Source\PSoC4/VPWM.c **** 
 238:.\Generated_Source\PSoC4/VPWM.c ****     VPWM_Enable();
 239:.\Generated_Source\PSoC4/VPWM.c **** }
 240:.\Generated_Source\PSoC4/VPWM.c **** 
 241:.\Generated_Source\PSoC4/VPWM.c **** 
 242:.\Generated_Source\PSoC4/VPWM.c **** /*******************************************************************************
 243:.\Generated_Source\PSoC4/VPWM.c **** * Function Name: VPWM_Stop
 244:.\Generated_Source\PSoC4/VPWM.c **** ********************************************************************************
 245:.\Generated_Source\PSoC4/VPWM.c **** *
 246:.\Generated_Source\PSoC4/VPWM.c **** * Summary:
 247:.\Generated_Source\PSoC4/VPWM.c **** *  Disables the VPWM.
 248:.\Generated_Source\PSoC4/VPWM.c **** *
 249:.\Generated_Source\PSoC4/VPWM.c **** * Parameters:
 250:.\Generated_Source\PSoC4/VPWM.c **** *  None
 251:.\Generated_Source\PSoC4/VPWM.c **** *
 252:.\Generated_Source\PSoC4/VPWM.c **** * Return:
 253:.\Generated_Source\PSoC4/VPWM.c **** *  None
 254:.\Generated_Source\PSoC4/VPWM.c **** *
 255:.\Generated_Source\PSoC4/VPWM.c **** *******************************************************************************/
 256:.\Generated_Source\PSoC4/VPWM.c **** void VPWM_Stop(void)
 257:.\Generated_Source\PSoC4/VPWM.c **** {
  26              		.loc 1 257 0
  27              		.cfi_startproc
  28 0000 08B5     		push	{r3, lr}
ARM GAS  C:\Users\g\AppData\Local\Temp\ccGu2P49.s 			page 6


  29              		.cfi_def_cfa_offset 8
  30              		.cfi_offset 3, -8
  31              		.cfi_offset 14, -4
 258:.\Generated_Source\PSoC4/VPWM.c ****     uint8 enableInterrupts;
 259:.\Generated_Source\PSoC4/VPWM.c **** 
 260:.\Generated_Source\PSoC4/VPWM.c ****     enableInterrupts = CyEnterCriticalSection();
  32              		.loc 1 260 0
  33 0002 FFF7FEFF 		bl	CyEnterCriticalSection
  34              	.LVL0:
 261:.\Generated_Source\PSoC4/VPWM.c **** 
 262:.\Generated_Source\PSoC4/VPWM.c ****     VPWM_BLOCK_CONTROL_REG &= (uint32)~VPWM_MASK;
  35              		.loc 1 262 0
  36 0006 044A     		ldr	r2, .L2
  37 0008 1368     		ldr	r3, [r2]
  38 000a 0121     		mov	r1, #1
  39 000c 8B43     		bic	r3, r1
  40 000e 1360     		str	r3, [r2]
 263:.\Generated_Source\PSoC4/VPWM.c **** 
 264:.\Generated_Source\PSoC4/VPWM.c ****     CyExitCriticalSection(enableInterrupts);
  41              		.loc 1 264 0
  42 0010 FFF7FEFF 		bl	CyExitCriticalSection
  43              	.LVL1:
 265:.\Generated_Source\PSoC4/VPWM.c **** }
  44              		.loc 1 265 0
  45              		@ sp needed
  46 0014 08BD     		pop	{r3, pc}
  47              	.L3:
  48 0016 C046     		.align	2
  49              	.L2:
  50 0018 00000540 		.word	1074069504
  51              		.cfi_endproc
  52              	.LFE3:
  53              		.size	VPWM_Stop, .-VPWM_Stop
  54              		.section	.text.VPWM_SetMode,"ax",%progbits
  55              		.align	2
  56              		.global	VPWM_SetMode
  57              		.code	16
  58              		.thumb_func
  59              		.type	VPWM_SetMode, %function
  60              	VPWM_SetMode:
  61              	.LFB4:
 266:.\Generated_Source\PSoC4/VPWM.c **** 
 267:.\Generated_Source\PSoC4/VPWM.c **** 
 268:.\Generated_Source\PSoC4/VPWM.c **** /*******************************************************************************
 269:.\Generated_Source\PSoC4/VPWM.c **** * Function Name: VPWM_SetMode
 270:.\Generated_Source\PSoC4/VPWM.c **** ********************************************************************************
 271:.\Generated_Source\PSoC4/VPWM.c **** *
 272:.\Generated_Source\PSoC4/VPWM.c **** * Summary:
 273:.\Generated_Source\PSoC4/VPWM.c **** *  Sets the operation mode of the VPWM. This function is used when
 274:.\Generated_Source\PSoC4/VPWM.c **** *  configured as a generic VPWM and the actual mode of operation is
 275:.\Generated_Source\PSoC4/VPWM.c **** *  set at runtime. The mode must be set while the component is disabled.
 276:.\Generated_Source\PSoC4/VPWM.c **** *
 277:.\Generated_Source\PSoC4/VPWM.c **** * Parameters:
 278:.\Generated_Source\PSoC4/VPWM.c **** *  mode: Mode for the VPWM to operate in
 279:.\Generated_Source\PSoC4/VPWM.c **** *   Values:
 280:.\Generated_Source\PSoC4/VPWM.c **** *   - VPWM_MODE_TIMER_COMPARE - Timer / Counter with
 281:.\Generated_Source\PSoC4/VPWM.c **** *                                                 compare capability
ARM GAS  C:\Users\g\AppData\Local\Temp\ccGu2P49.s 			page 7


 282:.\Generated_Source\PSoC4/VPWM.c **** *         - VPWM_MODE_TIMER_CAPTURE - Timer / Counter with
 283:.\Generated_Source\PSoC4/VPWM.c **** *                                                 capture capability
 284:.\Generated_Source\PSoC4/VPWM.c **** *         - VPWM_MODE_QUAD - Quadrature decoder
 285:.\Generated_Source\PSoC4/VPWM.c **** *         - VPWM_MODE_PWM - PWM
 286:.\Generated_Source\PSoC4/VPWM.c **** *         - VPWM_MODE_PWM_DT - PWM with dead time
 287:.\Generated_Source\PSoC4/VPWM.c **** *         - VPWM_MODE_PWM_PR - PWM with pseudo random capability
 288:.\Generated_Source\PSoC4/VPWM.c **** *
 289:.\Generated_Source\PSoC4/VPWM.c **** * Return:
 290:.\Generated_Source\PSoC4/VPWM.c **** *  None
 291:.\Generated_Source\PSoC4/VPWM.c **** *
 292:.\Generated_Source\PSoC4/VPWM.c **** *******************************************************************************/
 293:.\Generated_Source\PSoC4/VPWM.c **** void VPWM_SetMode(uint32 mode)
 294:.\Generated_Source\PSoC4/VPWM.c **** {
  62              		.loc 1 294 0
  63              		.cfi_startproc
  64              	.LVL2:
  65 0000 10B5     		push	{r4, lr}
  66              		.cfi_def_cfa_offset 8
  67              		.cfi_offset 4, -8
  68              		.cfi_offset 14, -4
  69 0002 041C     		mov	r4, r0
 295:.\Generated_Source\PSoC4/VPWM.c ****     uint8 enableInterrupts;
 296:.\Generated_Source\PSoC4/VPWM.c **** 
 297:.\Generated_Source\PSoC4/VPWM.c ****     enableInterrupts = CyEnterCriticalSection();
  70              		.loc 1 297 0
  71 0004 FFF7FEFF 		bl	CyEnterCriticalSection
  72              	.LVL3:
 298:.\Generated_Source\PSoC4/VPWM.c **** 
 299:.\Generated_Source\PSoC4/VPWM.c ****     VPWM_CONTROL_REG &= (uint32)~VPWM_MODE_MASK;
  73              		.loc 1 299 0
  74 0008 054B     		ldr	r3, .L5
  75 000a 1968     		ldr	r1, [r3]
  76 000c 054A     		ldr	r2, .L5+4
  77 000e 0A40     		and	r2, r1
  78 0010 1A60     		str	r2, [r3]
 300:.\Generated_Source\PSoC4/VPWM.c ****     VPWM_CONTROL_REG |= mode;
  79              		.loc 1 300 0
  80 0012 1A68     		ldr	r2, [r3]
  81 0014 1443     		orr	r4, r2
  82              	.LVL4:
  83 0016 1C60     		str	r4, [r3]
 301:.\Generated_Source\PSoC4/VPWM.c **** 
 302:.\Generated_Source\PSoC4/VPWM.c ****     CyExitCriticalSection(enableInterrupts);
  84              		.loc 1 302 0
  85 0018 FFF7FEFF 		bl	CyExitCriticalSection
  86              	.LVL5:
 303:.\Generated_Source\PSoC4/VPWM.c **** }
  87              		.loc 1 303 0
  88              		@ sp needed
  89 001c 10BD     		pop	{r4, pc}
  90              	.L6:
  91 001e C046     		.align	2
  92              	.L5:
  93 0020 00010540 		.word	1074069760
  94 0024 FFFFFFF8 		.word	-117440513
  95              		.cfi_endproc
  96              	.LFE4:
ARM GAS  C:\Users\g\AppData\Local\Temp\ccGu2P49.s 			page 8


  97              		.size	VPWM_SetMode, .-VPWM_SetMode
  98              		.section	.text.VPWM_SetQDMode,"ax",%progbits
  99              		.align	2
 100              		.global	VPWM_SetQDMode
 101              		.code	16
 102              		.thumb_func
 103              		.type	VPWM_SetQDMode, %function
 104              	VPWM_SetQDMode:
 105              	.LFB5:
 304:.\Generated_Source\PSoC4/VPWM.c **** 
 305:.\Generated_Source\PSoC4/VPWM.c **** 
 306:.\Generated_Source\PSoC4/VPWM.c **** /*******************************************************************************
 307:.\Generated_Source\PSoC4/VPWM.c **** * Function Name: VPWM_SetQDMode
 308:.\Generated_Source\PSoC4/VPWM.c **** ********************************************************************************
 309:.\Generated_Source\PSoC4/VPWM.c **** *
 310:.\Generated_Source\PSoC4/VPWM.c **** * Summary:
 311:.\Generated_Source\PSoC4/VPWM.c **** *  Sets the the Quadrature Decoder to one of the 3 supported modes.
 312:.\Generated_Source\PSoC4/VPWM.c **** *  Its functionality is only applicable to Quadrature Decoder operation.
 313:.\Generated_Source\PSoC4/VPWM.c **** *
 314:.\Generated_Source\PSoC4/VPWM.c **** * Parameters:
 315:.\Generated_Source\PSoC4/VPWM.c **** *  qdMode: Quadrature Decoder mode
 316:.\Generated_Source\PSoC4/VPWM.c **** *   Values:
 317:.\Generated_Source\PSoC4/VPWM.c **** *         - VPWM_MODE_X1 - Counts on phi 1 rising
 318:.\Generated_Source\PSoC4/VPWM.c **** *         - VPWM_MODE_X2 - Counts on both edges of phi1 (2x faster)
 319:.\Generated_Source\PSoC4/VPWM.c **** *         - VPWM_MODE_X4 - Counts on both edges of phi1 and phi2
 320:.\Generated_Source\PSoC4/VPWM.c **** *                                        (4x faster)
 321:.\Generated_Source\PSoC4/VPWM.c **** *
 322:.\Generated_Source\PSoC4/VPWM.c **** * Return:
 323:.\Generated_Source\PSoC4/VPWM.c **** *  None
 324:.\Generated_Source\PSoC4/VPWM.c **** *
 325:.\Generated_Source\PSoC4/VPWM.c **** *******************************************************************************/
 326:.\Generated_Source\PSoC4/VPWM.c **** void VPWM_SetQDMode(uint32 qdMode)
 327:.\Generated_Source\PSoC4/VPWM.c **** {
 106              		.loc 1 327 0
 107              		.cfi_startproc
 108              	.LVL6:
 109 0000 10B5     		push	{r4, lr}
 110              		.cfi_def_cfa_offset 8
 111              		.cfi_offset 4, -8
 112              		.cfi_offset 14, -4
 113 0002 041C     		mov	r4, r0
 328:.\Generated_Source\PSoC4/VPWM.c ****     uint8 enableInterrupts;
 329:.\Generated_Source\PSoC4/VPWM.c **** 
 330:.\Generated_Source\PSoC4/VPWM.c ****     enableInterrupts = CyEnterCriticalSection();
 114              		.loc 1 330 0
 115 0004 FFF7FEFF 		bl	CyEnterCriticalSection
 116              	.LVL7:
 331:.\Generated_Source\PSoC4/VPWM.c **** 
 332:.\Generated_Source\PSoC4/VPWM.c ****     VPWM_CONTROL_REG &= (uint32)~VPWM_QUAD_MODE_MASK;
 117              		.loc 1 332 0
 118 0008 054B     		ldr	r3, .L8
 119 000a 1968     		ldr	r1, [r3]
 120 000c 054A     		ldr	r2, .L8+4
 121 000e 0A40     		and	r2, r1
 122 0010 1A60     		str	r2, [r3]
 333:.\Generated_Source\PSoC4/VPWM.c ****     VPWM_CONTROL_REG |= qdMode;
 123              		.loc 1 333 0
ARM GAS  C:\Users\g\AppData\Local\Temp\ccGu2P49.s 			page 9


 124 0012 1A68     		ldr	r2, [r3]
 125 0014 1443     		orr	r4, r2
 126              	.LVL8:
 127 0016 1C60     		str	r4, [r3]
 334:.\Generated_Source\PSoC4/VPWM.c **** 
 335:.\Generated_Source\PSoC4/VPWM.c ****     CyExitCriticalSection(enableInterrupts);
 128              		.loc 1 335 0
 129 0018 FFF7FEFF 		bl	CyExitCriticalSection
 130              	.LVL9:
 336:.\Generated_Source\PSoC4/VPWM.c **** }
 131              		.loc 1 336 0
 132              		@ sp needed
 133 001c 10BD     		pop	{r4, pc}
 134              	.L9:
 135 001e C046     		.align	2
 136              	.L8:
 137 0020 00010540 		.word	1074069760
 138 0024 FFFF8FFF 		.word	-7340033
 139              		.cfi_endproc
 140              	.LFE5:
 141              		.size	VPWM_SetQDMode, .-VPWM_SetQDMode
 142              		.section	.text.VPWM_SetPrescaler,"ax",%progbits
 143              		.align	2
 144              		.global	VPWM_SetPrescaler
 145              		.code	16
 146              		.thumb_func
 147              		.type	VPWM_SetPrescaler, %function
 148              	VPWM_SetPrescaler:
 149              	.LFB6:
 337:.\Generated_Source\PSoC4/VPWM.c **** 
 338:.\Generated_Source\PSoC4/VPWM.c **** 
 339:.\Generated_Source\PSoC4/VPWM.c **** /*******************************************************************************
 340:.\Generated_Source\PSoC4/VPWM.c **** * Function Name: VPWM_SetPrescaler
 341:.\Generated_Source\PSoC4/VPWM.c **** ********************************************************************************
 342:.\Generated_Source\PSoC4/VPWM.c **** *
 343:.\Generated_Source\PSoC4/VPWM.c **** * Summary:
 344:.\Generated_Source\PSoC4/VPWM.c **** *  Sets the prescaler value that is applied to the clock input.  Not applicable
 345:.\Generated_Source\PSoC4/VPWM.c **** *  to a PWM with the dead time mode or Quadrature Decoder mode.
 346:.\Generated_Source\PSoC4/VPWM.c **** *
 347:.\Generated_Source\PSoC4/VPWM.c **** * Parameters:
 348:.\Generated_Source\PSoC4/VPWM.c **** *  prescaler: Prescaler divider value
 349:.\Generated_Source\PSoC4/VPWM.c **** *   Values:
 350:.\Generated_Source\PSoC4/VPWM.c **** *         - VPWM_PRESCALE_DIVBY1    - Divide by 1 (no prescaling)
 351:.\Generated_Source\PSoC4/VPWM.c **** *         - VPWM_PRESCALE_DIVBY2    - Divide by 2
 352:.\Generated_Source\PSoC4/VPWM.c **** *         - VPWM_PRESCALE_DIVBY4    - Divide by 4
 353:.\Generated_Source\PSoC4/VPWM.c **** *         - VPWM_PRESCALE_DIVBY8    - Divide by 8
 354:.\Generated_Source\PSoC4/VPWM.c **** *         - VPWM_PRESCALE_DIVBY16   - Divide by 16
 355:.\Generated_Source\PSoC4/VPWM.c **** *         - VPWM_PRESCALE_DIVBY32   - Divide by 32
 356:.\Generated_Source\PSoC4/VPWM.c **** *         - VPWM_PRESCALE_DIVBY64   - Divide by 64
 357:.\Generated_Source\PSoC4/VPWM.c **** *         - VPWM_PRESCALE_DIVBY128  - Divide by 128
 358:.\Generated_Source\PSoC4/VPWM.c **** *
 359:.\Generated_Source\PSoC4/VPWM.c **** * Return:
 360:.\Generated_Source\PSoC4/VPWM.c **** *  None
 361:.\Generated_Source\PSoC4/VPWM.c **** *
 362:.\Generated_Source\PSoC4/VPWM.c **** *******************************************************************************/
 363:.\Generated_Source\PSoC4/VPWM.c **** void VPWM_SetPrescaler(uint32 prescaler)
 364:.\Generated_Source\PSoC4/VPWM.c **** {
ARM GAS  C:\Users\g\AppData\Local\Temp\ccGu2P49.s 			page 10


 150              		.loc 1 364 0
 151              		.cfi_startproc
 152              	.LVL10:
 153 0000 10B5     		push	{r4, lr}
 154              		.cfi_def_cfa_offset 8
 155              		.cfi_offset 4, -8
 156              		.cfi_offset 14, -4
 157 0002 041C     		mov	r4, r0
 365:.\Generated_Source\PSoC4/VPWM.c ****     uint8 enableInterrupts;
 366:.\Generated_Source\PSoC4/VPWM.c **** 
 367:.\Generated_Source\PSoC4/VPWM.c ****     enableInterrupts = CyEnterCriticalSection();
 158              		.loc 1 367 0
 159 0004 FFF7FEFF 		bl	CyEnterCriticalSection
 160              	.LVL11:
 368:.\Generated_Source\PSoC4/VPWM.c **** 
 369:.\Generated_Source\PSoC4/VPWM.c ****     VPWM_CONTROL_REG &= (uint32)~VPWM_PRESCALER_MASK;
 161              		.loc 1 369 0
 162 0008 054B     		ldr	r3, .L11
 163 000a 1968     		ldr	r1, [r3]
 164 000c 054A     		ldr	r2, .L11+4
 165 000e 0A40     		and	r2, r1
 166 0010 1A60     		str	r2, [r3]
 370:.\Generated_Source\PSoC4/VPWM.c ****     VPWM_CONTROL_REG |= prescaler;
 167              		.loc 1 370 0
 168 0012 1A68     		ldr	r2, [r3]
 169 0014 1443     		orr	r4, r2
 170              	.LVL12:
 171 0016 1C60     		str	r4, [r3]
 371:.\Generated_Source\PSoC4/VPWM.c **** 
 372:.\Generated_Source\PSoC4/VPWM.c ****     CyExitCriticalSection(enableInterrupts);
 172              		.loc 1 372 0
 173 0018 FFF7FEFF 		bl	CyExitCriticalSection
 174              	.LVL13:
 373:.\Generated_Source\PSoC4/VPWM.c **** }
 175              		.loc 1 373 0
 176              		@ sp needed
 177 001c 10BD     		pop	{r4, pc}
 178              	.L12:
 179 001e C046     		.align	2
 180              	.L11:
 181 0020 00010540 		.word	1074069760
 182 0024 FF00FFFF 		.word	-65281
 183              		.cfi_endproc
 184              	.LFE6:
 185              		.size	VPWM_SetPrescaler, .-VPWM_SetPrescaler
 186              		.section	.text.VPWM_SetOneShot,"ax",%progbits
 187              		.align	2
 188              		.global	VPWM_SetOneShot
 189              		.code	16
 190              		.thumb_func
 191              		.type	VPWM_SetOneShot, %function
 192              	VPWM_SetOneShot:
 193              	.LFB7:
 374:.\Generated_Source\PSoC4/VPWM.c **** 
 375:.\Generated_Source\PSoC4/VPWM.c **** 
 376:.\Generated_Source\PSoC4/VPWM.c **** /*******************************************************************************
 377:.\Generated_Source\PSoC4/VPWM.c **** * Function Name: VPWM_SetOneShot
ARM GAS  C:\Users\g\AppData\Local\Temp\ccGu2P49.s 			page 11


 378:.\Generated_Source\PSoC4/VPWM.c **** ********************************************************************************
 379:.\Generated_Source\PSoC4/VPWM.c **** *
 380:.\Generated_Source\PSoC4/VPWM.c **** * Summary:
 381:.\Generated_Source\PSoC4/VPWM.c **** *  Writes the register that controls whether the VPWM runs
 382:.\Generated_Source\PSoC4/VPWM.c **** *  continuously or stops when terminal count is reached.  By default the
 383:.\Generated_Source\PSoC4/VPWM.c **** *  VPWM operates in the continuous mode.
 384:.\Generated_Source\PSoC4/VPWM.c **** *
 385:.\Generated_Source\PSoC4/VPWM.c **** * Parameters:
 386:.\Generated_Source\PSoC4/VPWM.c **** *  oneShotEnable
 387:.\Generated_Source\PSoC4/VPWM.c **** *   Values:
 388:.\Generated_Source\PSoC4/VPWM.c **** *     - 0 - Continuous
 389:.\Generated_Source\PSoC4/VPWM.c **** *     - 1 - Enable One Shot
 390:.\Generated_Source\PSoC4/VPWM.c **** *
 391:.\Generated_Source\PSoC4/VPWM.c **** * Return:
 392:.\Generated_Source\PSoC4/VPWM.c **** *  None
 393:.\Generated_Source\PSoC4/VPWM.c **** *
 394:.\Generated_Source\PSoC4/VPWM.c **** *******************************************************************************/
 395:.\Generated_Source\PSoC4/VPWM.c **** void VPWM_SetOneShot(uint32 oneShotEnable)
 396:.\Generated_Source\PSoC4/VPWM.c **** {
 194              		.loc 1 396 0
 195              		.cfi_startproc
 196              	.LVL14:
 197 0000 10B5     		push	{r4, lr}
 198              		.cfi_def_cfa_offset 8
 199              		.cfi_offset 4, -8
 200              		.cfi_offset 14, -4
 201 0002 041C     		mov	r4, r0
 397:.\Generated_Source\PSoC4/VPWM.c ****     uint8 enableInterrupts;
 398:.\Generated_Source\PSoC4/VPWM.c **** 
 399:.\Generated_Source\PSoC4/VPWM.c ****     enableInterrupts = CyEnterCriticalSection();
 202              		.loc 1 399 0
 203 0004 FFF7FEFF 		bl	CyEnterCriticalSection
 204              	.LVL15:
 400:.\Generated_Source\PSoC4/VPWM.c **** 
 401:.\Generated_Source\PSoC4/VPWM.c ****     VPWM_CONTROL_REG &= (uint32)~VPWM_ONESHOT_MASK;
 205              		.loc 1 401 0
 206 0008 064B     		ldr	r3, .L14
 207 000a 1968     		ldr	r1, [r3]
 208 000c 064A     		ldr	r2, .L14+4
 209 000e 0A40     		and	r2, r1
 210 0010 1A60     		str	r2, [r3]
 402:.\Generated_Source\PSoC4/VPWM.c ****     VPWM_CONTROL_REG |= ((uint32)((oneShotEnable & VPWM_1BIT_MASK) <<
 211              		.loc 1 402 0
 212 0012 1A68     		ldr	r2, [r3]
 213 0014 0121     		mov	r1, #1
 214 0016 0C40     		and	r4, r1
 215              	.LVL16:
 216 0018 A404     		lsl	r4, r4, #18
 217 001a 1443     		orr	r4, r2
 218 001c 1C60     		str	r4, [r3]
 403:.\Generated_Source\PSoC4/VPWM.c ****                                                                VPWM_ONESHOT_SHIFT));
 404:.\Generated_Source\PSoC4/VPWM.c **** 
 405:.\Generated_Source\PSoC4/VPWM.c ****     CyExitCriticalSection(enableInterrupts);
 219              		.loc 1 405 0
 220 001e FFF7FEFF 		bl	CyExitCriticalSection
 221              	.LVL17:
 406:.\Generated_Source\PSoC4/VPWM.c **** }
ARM GAS  C:\Users\g\AppData\Local\Temp\ccGu2P49.s 			page 12


 222              		.loc 1 406 0
 223              		@ sp needed
 224 0022 10BD     		pop	{r4, pc}
 225              	.L15:
 226              		.align	2
 227              	.L14:
 228 0024 00010540 		.word	1074069760
 229 0028 FFFFFBFF 		.word	-262145
 230              		.cfi_endproc
 231              	.LFE7:
 232              		.size	VPWM_SetOneShot, .-VPWM_SetOneShot
 233              		.section	.text.VPWM_SetPWMMode,"ax",%progbits
 234              		.align	2
 235              		.global	VPWM_SetPWMMode
 236              		.code	16
 237              		.thumb_func
 238              		.type	VPWM_SetPWMMode, %function
 239              	VPWM_SetPWMMode:
 240              	.LFB8:
 407:.\Generated_Source\PSoC4/VPWM.c **** 
 408:.\Generated_Source\PSoC4/VPWM.c **** 
 409:.\Generated_Source\PSoC4/VPWM.c **** /*******************************************************************************
 410:.\Generated_Source\PSoC4/VPWM.c **** * Function Name: VPWM_SetPWMMode
 411:.\Generated_Source\PSoC4/VPWM.c **** ********************************************************************************
 412:.\Generated_Source\PSoC4/VPWM.c **** *
 413:.\Generated_Source\PSoC4/VPWM.c **** * Summary:
 414:.\Generated_Source\PSoC4/VPWM.c **** *  Writes the control register that determines what mode of operation the PWM
 415:.\Generated_Source\PSoC4/VPWM.c **** *  output lines are driven in.  There is a setting for what to do on a
 416:.\Generated_Source\PSoC4/VPWM.c **** *  comparison match (CC_MATCH), on an overflow (OVERFLOW) and on an underflow
 417:.\Generated_Source\PSoC4/VPWM.c **** *  (UNDERFLOW).  The value for each of the three must be ORed together to form
 418:.\Generated_Source\PSoC4/VPWM.c **** *  the mode.
 419:.\Generated_Source\PSoC4/VPWM.c **** *
 420:.\Generated_Source\PSoC4/VPWM.c **** * Parameters:
 421:.\Generated_Source\PSoC4/VPWM.c **** *  modeMask: A combination of three mode settings.  Mask must include a value
 422:.\Generated_Source\PSoC4/VPWM.c **** *  for each of the three or use one of the preconfigured PWM settings.
 423:.\Generated_Source\PSoC4/VPWM.c **** *   Values:
 424:.\Generated_Source\PSoC4/VPWM.c **** *     - CC_MATCH_SET        - Set on comparison match
 425:.\Generated_Source\PSoC4/VPWM.c **** *     - CC_MATCH_CLEAR      - Clear on comparison match
 426:.\Generated_Source\PSoC4/VPWM.c **** *     - CC_MATCH_INVERT     - Invert on comparison match
 427:.\Generated_Source\PSoC4/VPWM.c **** *     - CC_MATCH_NO_CHANGE  - No change on comparison match
 428:.\Generated_Source\PSoC4/VPWM.c **** *     - OVERLOW_SET         - Set on overflow
 429:.\Generated_Source\PSoC4/VPWM.c **** *     - OVERLOW_CLEAR       - Clear on  overflow
 430:.\Generated_Source\PSoC4/VPWM.c **** *     - OVERLOW_INVERT      - Invert on overflow
 431:.\Generated_Source\PSoC4/VPWM.c **** *     - OVERLOW_NO_CHANGE   - No change on overflow
 432:.\Generated_Source\PSoC4/VPWM.c **** *     - UNDERFLOW_SET       - Set on underflow
 433:.\Generated_Source\PSoC4/VPWM.c **** *     - UNDERFLOW_CLEAR     - Clear on underflow
 434:.\Generated_Source\PSoC4/VPWM.c **** *     - UNDERFLOW_INVERT    - Invert on underflow
 435:.\Generated_Source\PSoC4/VPWM.c **** *     - UNDERFLOW_NO_CHANGE - No change on underflow
 436:.\Generated_Source\PSoC4/VPWM.c **** *     - PWM_MODE_LEFT       - Setting for left aligned PWM.  Should be combined
 437:.\Generated_Source\PSoC4/VPWM.c **** *                             with up counting mode
 438:.\Generated_Source\PSoC4/VPWM.c **** *     - PWM_MODE_RIGHT      - Setting for right aligned PWM.  Should be combined
 439:.\Generated_Source\PSoC4/VPWM.c **** *                             with down counting mode
 440:.\Generated_Source\PSoC4/VPWM.c **** *     - PWM_MODE_CENTER     - Setting for center aligned PWM.  Should be
 441:.\Generated_Source\PSoC4/VPWM.c **** *                             combined with up/down 0 mode
 442:.\Generated_Source\PSoC4/VPWM.c **** *     - PWM_MODE_ASYM       - Setting for asymmetric PWM.  Should be combined
 443:.\Generated_Source\PSoC4/VPWM.c **** *                             with up/down 1 mode
 444:.\Generated_Source\PSoC4/VPWM.c **** *
ARM GAS  C:\Users\g\AppData\Local\Temp\ccGu2P49.s 			page 13


 445:.\Generated_Source\PSoC4/VPWM.c **** * Return:
 446:.\Generated_Source\PSoC4/VPWM.c **** *  None
 447:.\Generated_Source\PSoC4/VPWM.c **** *
 448:.\Generated_Source\PSoC4/VPWM.c **** *******************************************************************************/
 449:.\Generated_Source\PSoC4/VPWM.c **** void VPWM_SetPWMMode(uint32 modeMask)
 450:.\Generated_Source\PSoC4/VPWM.c **** {
 241              		.loc 1 450 0
 242              		.cfi_startproc
 243              	.LVL18:
 451:.\Generated_Source\PSoC4/VPWM.c ****     VPWM_TRIG_CONTROL2_REG = (modeMask & VPWM_6BIT_MASK);
 244              		.loc 1 451 0
 245 0000 3F23     		mov	r3, #63
 246 0002 1840     		and	r0, r3
 247              	.LVL19:
 248 0004 014B     		ldr	r3, .L17
 249 0006 1860     		str	r0, [r3]
 452:.\Generated_Source\PSoC4/VPWM.c **** }
 250              		.loc 1 452 0
 251              		@ sp needed
 252 0008 7047     		bx	lr
 253              	.L18:
 254 000a C046     		.align	2
 255              	.L17:
 256 000c 28010540 		.word	1074069800
 257              		.cfi_endproc
 258              	.LFE8:
 259              		.size	VPWM_SetPWMMode, .-VPWM_SetPWMMode
 260              		.section	.text.VPWM_SetPWMSyncKill,"ax",%progbits
 261              		.align	2
 262              		.global	VPWM_SetPWMSyncKill
 263              		.code	16
 264              		.thumb_func
 265              		.type	VPWM_SetPWMSyncKill, %function
 266              	VPWM_SetPWMSyncKill:
 267              	.LFB9:
 453:.\Generated_Source\PSoC4/VPWM.c **** 
 454:.\Generated_Source\PSoC4/VPWM.c **** 
 455:.\Generated_Source\PSoC4/VPWM.c **** 
 456:.\Generated_Source\PSoC4/VPWM.c **** /*******************************************************************************
 457:.\Generated_Source\PSoC4/VPWM.c **** * Function Name: VPWM_SetPWMSyncKill
 458:.\Generated_Source\PSoC4/VPWM.c **** ********************************************************************************
 459:.\Generated_Source\PSoC4/VPWM.c **** *
 460:.\Generated_Source\PSoC4/VPWM.c **** * Summary:
 461:.\Generated_Source\PSoC4/VPWM.c **** *  Writes the register that controls whether the PWM kill signal (stop input)
 462:.\Generated_Source\PSoC4/VPWM.c **** *  causes asynchronous or synchronous kill operation.  By default the kill
 463:.\Generated_Source\PSoC4/VPWM.c **** *  operation is asynchronous.  This functionality is only applicable to the PWM
 464:.\Generated_Source\PSoC4/VPWM.c **** *  and PWM with dead time modes.
 465:.\Generated_Source\PSoC4/VPWM.c **** *
 466:.\Generated_Source\PSoC4/VPWM.c **** *  For Synchronous mode the kill signal disables both the line and line_n
 467:.\Generated_Source\PSoC4/VPWM.c **** *  signals until the next terminal count.
 468:.\Generated_Source\PSoC4/VPWM.c **** *
 469:.\Generated_Source\PSoC4/VPWM.c **** *  For Asynchronous mode the kill signal disables both the line and line_n
 470:.\Generated_Source\PSoC4/VPWM.c **** *  signals when the kill signal is present.  This mode should only be used
 471:.\Generated_Source\PSoC4/VPWM.c **** *  when the kill signal (stop input) is configured in the pass through mode
 472:.\Generated_Source\PSoC4/VPWM.c **** *  (Level sensitive signal).
 473:.\Generated_Source\PSoC4/VPWM.c **** 
 474:.\Generated_Source\PSoC4/VPWM.c **** *
ARM GAS  C:\Users\g\AppData\Local\Temp\ccGu2P49.s 			page 14


 475:.\Generated_Source\PSoC4/VPWM.c **** * Parameters:
 476:.\Generated_Source\PSoC4/VPWM.c **** *  syncKillEnable
 477:.\Generated_Source\PSoC4/VPWM.c **** *   Values:
 478:.\Generated_Source\PSoC4/VPWM.c **** *     - 0 - Asynchronous
 479:.\Generated_Source\PSoC4/VPWM.c **** *     - 1 - Synchronous
 480:.\Generated_Source\PSoC4/VPWM.c **** *
 481:.\Generated_Source\PSoC4/VPWM.c **** * Return:
 482:.\Generated_Source\PSoC4/VPWM.c **** *  None
 483:.\Generated_Source\PSoC4/VPWM.c **** *
 484:.\Generated_Source\PSoC4/VPWM.c **** *******************************************************************************/
 485:.\Generated_Source\PSoC4/VPWM.c **** void VPWM_SetPWMSyncKill(uint32 syncKillEnable)
 486:.\Generated_Source\PSoC4/VPWM.c **** {
 268              		.loc 1 486 0
 269              		.cfi_startproc
 270              	.LVL20:
 271 0000 10B5     		push	{r4, lr}
 272              		.cfi_def_cfa_offset 8
 273              		.cfi_offset 4, -8
 274              		.cfi_offset 14, -4
 275 0002 041C     		mov	r4, r0
 487:.\Generated_Source\PSoC4/VPWM.c ****     uint8 enableInterrupts;
 488:.\Generated_Source\PSoC4/VPWM.c **** 
 489:.\Generated_Source\PSoC4/VPWM.c ****     enableInterrupts = CyEnterCriticalSection();
 276              		.loc 1 489 0
 277 0004 FFF7FEFF 		bl	CyEnterCriticalSection
 278              	.LVL21:
 490:.\Generated_Source\PSoC4/VPWM.c **** 
 491:.\Generated_Source\PSoC4/VPWM.c ****     VPWM_CONTROL_REG &= (uint32)~VPWM_PWM_SYNC_KILL_MASK;
 279              		.loc 1 491 0
 280 0008 064B     		ldr	r3, .L20
 281 000a 1A68     		ldr	r2, [r3]
 282 000c 0421     		mov	r1, #4
 283 000e 8A43     		bic	r2, r1
 284 0010 1A60     		str	r2, [r3]
 492:.\Generated_Source\PSoC4/VPWM.c ****     VPWM_CONTROL_REG |= ((uint32)((syncKillEnable & VPWM_1BIT_MASK)  <<
 285              		.loc 1 492 0
 286 0012 1A68     		ldr	r2, [r3]
 287 0014 0339     		sub	r1, r1, #3
 288 0016 0C40     		and	r4, r1
 289              	.LVL22:
 290 0018 A400     		lsl	r4, r4, #2
 291 001a 1443     		orr	r4, r2
 292 001c 1C60     		str	r4, [r3]
 493:.\Generated_Source\PSoC4/VPWM.c ****                                                VPWM_PWM_SYNC_KILL_SHIFT));
 494:.\Generated_Source\PSoC4/VPWM.c **** 
 495:.\Generated_Source\PSoC4/VPWM.c ****     CyExitCriticalSection(enableInterrupts);
 293              		.loc 1 495 0
 294 001e FFF7FEFF 		bl	CyExitCriticalSection
 295              	.LVL23:
 496:.\Generated_Source\PSoC4/VPWM.c **** }
 296              		.loc 1 496 0
 297              		@ sp needed
 298 0022 10BD     		pop	{r4, pc}
 299              	.L21:
 300              		.align	2
 301              	.L20:
 302 0024 00010540 		.word	1074069760
ARM GAS  C:\Users\g\AppData\Local\Temp\ccGu2P49.s 			page 15


 303              		.cfi_endproc
 304              	.LFE9:
 305              		.size	VPWM_SetPWMSyncKill, .-VPWM_SetPWMSyncKill
 306              		.section	.text.VPWM_SetPWMStopOnKill,"ax",%progbits
 307              		.align	2
 308              		.global	VPWM_SetPWMStopOnKill
 309              		.code	16
 310              		.thumb_func
 311              		.type	VPWM_SetPWMStopOnKill, %function
 312              	VPWM_SetPWMStopOnKill:
 313              	.LFB10:
 497:.\Generated_Source\PSoC4/VPWM.c **** 
 498:.\Generated_Source\PSoC4/VPWM.c **** 
 499:.\Generated_Source\PSoC4/VPWM.c **** /*******************************************************************************
 500:.\Generated_Source\PSoC4/VPWM.c **** * Function Name: VPWM_SetPWMStopOnKill
 501:.\Generated_Source\PSoC4/VPWM.c **** ********************************************************************************
 502:.\Generated_Source\PSoC4/VPWM.c **** *
 503:.\Generated_Source\PSoC4/VPWM.c **** * Summary:
 504:.\Generated_Source\PSoC4/VPWM.c **** *  Writes the register that controls whether the PWM kill signal (stop input)
 505:.\Generated_Source\PSoC4/VPWM.c **** *  causes the PWM counter to stop.  By default the kill operation does not stop
 506:.\Generated_Source\PSoC4/VPWM.c **** *  the counter.  This functionality is only applicable to the three PWM modes.
 507:.\Generated_Source\PSoC4/VPWM.c **** *
 508:.\Generated_Source\PSoC4/VPWM.c **** *
 509:.\Generated_Source\PSoC4/VPWM.c **** * Parameters:
 510:.\Generated_Source\PSoC4/VPWM.c **** *  stopOnKillEnable
 511:.\Generated_Source\PSoC4/VPWM.c **** *   Values:
 512:.\Generated_Source\PSoC4/VPWM.c **** *     - 0 - Don't stop
 513:.\Generated_Source\PSoC4/VPWM.c **** *     - 1 - Stop
 514:.\Generated_Source\PSoC4/VPWM.c **** *
 515:.\Generated_Source\PSoC4/VPWM.c **** * Return:
 516:.\Generated_Source\PSoC4/VPWM.c **** *  None
 517:.\Generated_Source\PSoC4/VPWM.c **** *
 518:.\Generated_Source\PSoC4/VPWM.c **** *******************************************************************************/
 519:.\Generated_Source\PSoC4/VPWM.c **** void VPWM_SetPWMStopOnKill(uint32 stopOnKillEnable)
 520:.\Generated_Source\PSoC4/VPWM.c **** {
 314              		.loc 1 520 0
 315              		.cfi_startproc
 316              	.LVL24:
 317 0000 10B5     		push	{r4, lr}
 318              		.cfi_def_cfa_offset 8
 319              		.cfi_offset 4, -8
 320              		.cfi_offset 14, -4
 321 0002 041C     		mov	r4, r0
 521:.\Generated_Source\PSoC4/VPWM.c ****     uint8 enableInterrupts;
 522:.\Generated_Source\PSoC4/VPWM.c **** 
 523:.\Generated_Source\PSoC4/VPWM.c ****     enableInterrupts = CyEnterCriticalSection();
 322              		.loc 1 523 0
 323 0004 FFF7FEFF 		bl	CyEnterCriticalSection
 324              	.LVL25:
 524:.\Generated_Source\PSoC4/VPWM.c **** 
 525:.\Generated_Source\PSoC4/VPWM.c ****     VPWM_CONTROL_REG &= (uint32)~VPWM_PWM_STOP_KILL_MASK;
 325              		.loc 1 525 0
 326 0008 064B     		ldr	r3, .L23
 327 000a 1A68     		ldr	r2, [r3]
 328 000c 0821     		mov	r1, #8
 329 000e 8A43     		bic	r2, r1
 330 0010 1A60     		str	r2, [r3]
ARM GAS  C:\Users\g\AppData\Local\Temp\ccGu2P49.s 			page 16


 526:.\Generated_Source\PSoC4/VPWM.c ****     VPWM_CONTROL_REG |= ((uint32)((stopOnKillEnable & VPWM_1BIT_MASK)  <<
 331              		.loc 1 526 0
 332 0012 1A68     		ldr	r2, [r3]
 333 0014 0739     		sub	r1, r1, #7
 334 0016 0C40     		and	r4, r1
 335              	.LVL26:
 336 0018 E400     		lsl	r4, r4, #3
 337 001a 1443     		orr	r4, r2
 338 001c 1C60     		str	r4, [r3]
 527:.\Generated_Source\PSoC4/VPWM.c ****                                                          VPWM_PWM_STOP_KILL_SHIFT));
 528:.\Generated_Source\PSoC4/VPWM.c **** 
 529:.\Generated_Source\PSoC4/VPWM.c ****     CyExitCriticalSection(enableInterrupts);
 339              		.loc 1 529 0
 340 001e FFF7FEFF 		bl	CyExitCriticalSection
 341              	.LVL27:
 530:.\Generated_Source\PSoC4/VPWM.c **** }
 342              		.loc 1 530 0
 343              		@ sp needed
 344 0022 10BD     		pop	{r4, pc}
 345              	.L24:
 346              		.align	2
 347              	.L23:
 348 0024 00010540 		.word	1074069760
 349              		.cfi_endproc
 350              	.LFE10:
 351              		.size	VPWM_SetPWMStopOnKill, .-VPWM_SetPWMStopOnKill
 352              		.section	.text.VPWM_SetPWMDeadTime,"ax",%progbits
 353              		.align	2
 354              		.global	VPWM_SetPWMDeadTime
 355              		.code	16
 356              		.thumb_func
 357              		.type	VPWM_SetPWMDeadTime, %function
 358              	VPWM_SetPWMDeadTime:
 359              	.LFB11:
 531:.\Generated_Source\PSoC4/VPWM.c **** 
 532:.\Generated_Source\PSoC4/VPWM.c **** 
 533:.\Generated_Source\PSoC4/VPWM.c **** /*******************************************************************************
 534:.\Generated_Source\PSoC4/VPWM.c **** * Function Name: VPWM_SetPWMDeadTime
 535:.\Generated_Source\PSoC4/VPWM.c **** ********************************************************************************
 536:.\Generated_Source\PSoC4/VPWM.c **** *
 537:.\Generated_Source\PSoC4/VPWM.c **** * Summary:
 538:.\Generated_Source\PSoC4/VPWM.c **** *  Writes the dead time control value.  This value delays the rising edge of
 539:.\Generated_Source\PSoC4/VPWM.c **** *  both the line and line_n signals the designated number of cycles resulting
 540:.\Generated_Source\PSoC4/VPWM.c **** *  in both signals being inactive for that many cycles.  This functionality is
 541:.\Generated_Source\PSoC4/VPWM.c **** *  only applicable to the PWM in the dead time mode.
 542:.\Generated_Source\PSoC4/VPWM.c **** 
 543:.\Generated_Source\PSoC4/VPWM.c **** *
 544:.\Generated_Source\PSoC4/VPWM.c **** * Parameters:
 545:.\Generated_Source\PSoC4/VPWM.c **** *  Dead time to insert
 546:.\Generated_Source\PSoC4/VPWM.c **** *   Values: 0 to 255
 547:.\Generated_Source\PSoC4/VPWM.c **** *
 548:.\Generated_Source\PSoC4/VPWM.c **** * Return:
 549:.\Generated_Source\PSoC4/VPWM.c **** *  None
 550:.\Generated_Source\PSoC4/VPWM.c **** *
 551:.\Generated_Source\PSoC4/VPWM.c **** *******************************************************************************/
 552:.\Generated_Source\PSoC4/VPWM.c **** void VPWM_SetPWMDeadTime(uint32 deadTime)
 553:.\Generated_Source\PSoC4/VPWM.c **** {
ARM GAS  C:\Users\g\AppData\Local\Temp\ccGu2P49.s 			page 17


 360              		.loc 1 553 0
 361              		.cfi_startproc
 362              	.LVL28:
 363 0000 10B5     		push	{r4, lr}
 364              		.cfi_def_cfa_offset 8
 365              		.cfi_offset 4, -8
 366              		.cfi_offset 14, -4
 367 0002 041C     		mov	r4, r0
 554:.\Generated_Source\PSoC4/VPWM.c ****     uint8 enableInterrupts;
 555:.\Generated_Source\PSoC4/VPWM.c **** 
 556:.\Generated_Source\PSoC4/VPWM.c ****     enableInterrupts = CyEnterCriticalSection();
 368              		.loc 1 556 0
 369 0004 FFF7FEFF 		bl	CyEnterCriticalSection
 370              	.LVL29:
 557:.\Generated_Source\PSoC4/VPWM.c **** 
 558:.\Generated_Source\PSoC4/VPWM.c ****     VPWM_CONTROL_REG &= (uint32)~VPWM_PRESCALER_MASK;
 371              		.loc 1 558 0
 372 0008 064B     		ldr	r3, .L26
 373 000a 1968     		ldr	r1, [r3]
 374 000c 064A     		ldr	r2, .L26+4
 375 000e 0A40     		and	r2, r1
 376 0010 1A60     		str	r2, [r3]
 559:.\Generated_Source\PSoC4/VPWM.c ****     VPWM_CONTROL_REG |= ((uint32)((deadTime & VPWM_8BIT_MASK) <<
 377              		.loc 1 559 0
 378 0012 1A68     		ldr	r2, [r3]
 379 0014 2406     		lsl	r4, r4, #24
 380              	.LVL30:
 381 0016 240C     		lsr	r4, r4, #16
 382 0018 1443     		orr	r4, r2
 383 001a 1C60     		str	r4, [r3]
 560:.\Generated_Source\PSoC4/VPWM.c ****                                                           VPWM_PRESCALER_SHIFT));
 561:.\Generated_Source\PSoC4/VPWM.c **** 
 562:.\Generated_Source\PSoC4/VPWM.c ****     CyExitCriticalSection(enableInterrupts);
 384              		.loc 1 562 0
 385 001c FFF7FEFF 		bl	CyExitCriticalSection
 386              	.LVL31:
 563:.\Generated_Source\PSoC4/VPWM.c **** }
 387              		.loc 1 563 0
 388              		@ sp needed
 389 0020 10BD     		pop	{r4, pc}
 390              	.L27:
 391 0022 C046     		.align	2
 392              	.L26:
 393 0024 00010540 		.word	1074069760
 394 0028 FF00FFFF 		.word	-65281
 395              		.cfi_endproc
 396              	.LFE11:
 397              		.size	VPWM_SetPWMDeadTime, .-VPWM_SetPWMDeadTime
 398              		.section	.text.VPWM_SetPWMInvert,"ax",%progbits
 399              		.align	2
 400              		.global	VPWM_SetPWMInvert
 401              		.code	16
 402              		.thumb_func
 403              		.type	VPWM_SetPWMInvert, %function
 404              	VPWM_SetPWMInvert:
 405              	.LFB12:
 564:.\Generated_Source\PSoC4/VPWM.c **** 
ARM GAS  C:\Users\g\AppData\Local\Temp\ccGu2P49.s 			page 18


 565:.\Generated_Source\PSoC4/VPWM.c **** 
 566:.\Generated_Source\PSoC4/VPWM.c **** /*******************************************************************************
 567:.\Generated_Source\PSoC4/VPWM.c **** * Function Name: VPWM_SetPWMInvert
 568:.\Generated_Source\PSoC4/VPWM.c **** ********************************************************************************
 569:.\Generated_Source\PSoC4/VPWM.c **** *
 570:.\Generated_Source\PSoC4/VPWM.c **** * Summary:
 571:.\Generated_Source\PSoC4/VPWM.c **** *  Writes the bits that control whether the line and line_n outputs are
 572:.\Generated_Source\PSoC4/VPWM.c **** *  inverted from their normal output values.  This functionality is only
 573:.\Generated_Source\PSoC4/VPWM.c **** *  applicable to the three PWM modes.
 574:.\Generated_Source\PSoC4/VPWM.c **** *
 575:.\Generated_Source\PSoC4/VPWM.c **** * Parameters:
 576:.\Generated_Source\PSoC4/VPWM.c **** *  mask: Mask of outputs to invert.
 577:.\Generated_Source\PSoC4/VPWM.c **** *   Values:
 578:.\Generated_Source\PSoC4/VPWM.c **** *         - VPWM_INVERT_LINE   - Inverts the line output
 579:.\Generated_Source\PSoC4/VPWM.c **** *         - VPWM_INVERT_LINE_N - Inverts the line_n output
 580:.\Generated_Source\PSoC4/VPWM.c **** *
 581:.\Generated_Source\PSoC4/VPWM.c **** * Return:
 582:.\Generated_Source\PSoC4/VPWM.c **** *  None
 583:.\Generated_Source\PSoC4/VPWM.c **** *
 584:.\Generated_Source\PSoC4/VPWM.c **** *******************************************************************************/
 585:.\Generated_Source\PSoC4/VPWM.c **** void VPWM_SetPWMInvert(uint32 mask)
 586:.\Generated_Source\PSoC4/VPWM.c **** {
 406              		.loc 1 586 0
 407              		.cfi_startproc
 408              	.LVL32:
 409 0000 10B5     		push	{r4, lr}
 410              		.cfi_def_cfa_offset 8
 411              		.cfi_offset 4, -8
 412              		.cfi_offset 14, -4
 413 0002 041C     		mov	r4, r0
 587:.\Generated_Source\PSoC4/VPWM.c ****     uint8 enableInterrupts;
 588:.\Generated_Source\PSoC4/VPWM.c **** 
 589:.\Generated_Source\PSoC4/VPWM.c ****     enableInterrupts = CyEnterCriticalSection();
 414              		.loc 1 589 0
 415 0004 FFF7FEFF 		bl	CyEnterCriticalSection
 416              	.LVL33:
 590:.\Generated_Source\PSoC4/VPWM.c **** 
 591:.\Generated_Source\PSoC4/VPWM.c ****     VPWM_CONTROL_REG &= (uint32)~VPWM_INV_OUT_MASK;
 417              		.loc 1 591 0
 418 0008 054B     		ldr	r3, .L29
 419 000a 1968     		ldr	r1, [r3]
 420 000c 054A     		ldr	r2, .L29+4
 421 000e 0A40     		and	r2, r1
 422 0010 1A60     		str	r2, [r3]
 592:.\Generated_Source\PSoC4/VPWM.c ****     VPWM_CONTROL_REG |= mask;
 423              		.loc 1 592 0
 424 0012 1A68     		ldr	r2, [r3]
 425 0014 1443     		orr	r4, r2
 426              	.LVL34:
 427 0016 1C60     		str	r4, [r3]
 593:.\Generated_Source\PSoC4/VPWM.c **** 
 594:.\Generated_Source\PSoC4/VPWM.c ****     CyExitCriticalSection(enableInterrupts);
 428              		.loc 1 594 0
 429 0018 FFF7FEFF 		bl	CyExitCriticalSection
 430              	.LVL35:
 595:.\Generated_Source\PSoC4/VPWM.c **** }
 431              		.loc 1 595 0
ARM GAS  C:\Users\g\AppData\Local\Temp\ccGu2P49.s 			page 19


 432              		@ sp needed
 433 001c 10BD     		pop	{r4, pc}
 434              	.L30:
 435 001e C046     		.align	2
 436              	.L29:
 437 0020 00010540 		.word	1074069760
 438 0024 FFFFCFFF 		.word	-3145729
 439              		.cfi_endproc
 440              	.LFE12:
 441              		.size	VPWM_SetPWMInvert, .-VPWM_SetPWMInvert
 442              		.section	.text.VPWM_WriteCounter,"ax",%progbits
 443              		.align	2
 444              		.global	VPWM_WriteCounter
 445              		.code	16
 446              		.thumb_func
 447              		.type	VPWM_WriteCounter, %function
 448              	VPWM_WriteCounter:
 449              	.LFB13:
 596:.\Generated_Source\PSoC4/VPWM.c **** 
 597:.\Generated_Source\PSoC4/VPWM.c **** 
 598:.\Generated_Source\PSoC4/VPWM.c **** 
 599:.\Generated_Source\PSoC4/VPWM.c **** /*******************************************************************************
 600:.\Generated_Source\PSoC4/VPWM.c **** * Function Name: VPWM_WriteCounter
 601:.\Generated_Source\PSoC4/VPWM.c **** ********************************************************************************
 602:.\Generated_Source\PSoC4/VPWM.c **** *
 603:.\Generated_Source\PSoC4/VPWM.c **** * Summary:
 604:.\Generated_Source\PSoC4/VPWM.c **** *  Writes a new 16bit counter value directly into the counter register, thus
 605:.\Generated_Source\PSoC4/VPWM.c **** *  setting the counter (not the period) to the value written. It is not
 606:.\Generated_Source\PSoC4/VPWM.c **** *  advised to write to this field when the counter is running.
 607:.\Generated_Source\PSoC4/VPWM.c **** *
 608:.\Generated_Source\PSoC4/VPWM.c **** * Parameters:
 609:.\Generated_Source\PSoC4/VPWM.c **** *  count: value to write
 610:.\Generated_Source\PSoC4/VPWM.c **** *
 611:.\Generated_Source\PSoC4/VPWM.c **** * Return:
 612:.\Generated_Source\PSoC4/VPWM.c **** *  None
 613:.\Generated_Source\PSoC4/VPWM.c **** *
 614:.\Generated_Source\PSoC4/VPWM.c **** *******************************************************************************/
 615:.\Generated_Source\PSoC4/VPWM.c **** void VPWM_WriteCounter(uint32 count)
 616:.\Generated_Source\PSoC4/VPWM.c **** {
 450              		.loc 1 616 0
 451              		.cfi_startproc
 452              	.LVL36:
 617:.\Generated_Source\PSoC4/VPWM.c ****     VPWM_COUNTER_REG = (count & VPWM_16BIT_MASK);
 453              		.loc 1 617 0
 454 0000 0004     		lsl	r0, r0, #16
 455              	.LVL37:
 456 0002 000C     		lsr	r0, r0, #16
 457 0004 014B     		ldr	r3, .L32
 458 0006 1860     		str	r0, [r3]
 618:.\Generated_Source\PSoC4/VPWM.c **** }
 459              		.loc 1 618 0
 460              		@ sp needed
 461 0008 7047     		bx	lr
 462              	.L33:
 463 000a C046     		.align	2
 464              	.L32:
 465 000c 08010540 		.word	1074069768
ARM GAS  C:\Users\g\AppData\Local\Temp\ccGu2P49.s 			page 20


 466              		.cfi_endproc
 467              	.LFE13:
 468              		.size	VPWM_WriteCounter, .-VPWM_WriteCounter
 469              		.section	.text.VPWM_ReadCounter,"ax",%progbits
 470              		.align	2
 471              		.global	VPWM_ReadCounter
 472              		.code	16
 473              		.thumb_func
 474              		.type	VPWM_ReadCounter, %function
 475              	VPWM_ReadCounter:
 476              	.LFB14:
 619:.\Generated_Source\PSoC4/VPWM.c **** 
 620:.\Generated_Source\PSoC4/VPWM.c **** 
 621:.\Generated_Source\PSoC4/VPWM.c **** /*******************************************************************************
 622:.\Generated_Source\PSoC4/VPWM.c **** * Function Name: VPWM_ReadCounter
 623:.\Generated_Source\PSoC4/VPWM.c **** ********************************************************************************
 624:.\Generated_Source\PSoC4/VPWM.c **** *
 625:.\Generated_Source\PSoC4/VPWM.c **** * Summary:
 626:.\Generated_Source\PSoC4/VPWM.c **** *  Reads the current counter value.
 627:.\Generated_Source\PSoC4/VPWM.c **** *
 628:.\Generated_Source\PSoC4/VPWM.c **** * Parameters:
 629:.\Generated_Source\PSoC4/VPWM.c **** *  None
 630:.\Generated_Source\PSoC4/VPWM.c **** *
 631:.\Generated_Source\PSoC4/VPWM.c **** * Return:
 632:.\Generated_Source\PSoC4/VPWM.c **** *  Current counter value
 633:.\Generated_Source\PSoC4/VPWM.c **** *
 634:.\Generated_Source\PSoC4/VPWM.c **** *******************************************************************************/
 635:.\Generated_Source\PSoC4/VPWM.c **** uint32 VPWM_ReadCounter(void)
 636:.\Generated_Source\PSoC4/VPWM.c **** {
 477              		.loc 1 636 0
 478              		.cfi_startproc
 637:.\Generated_Source\PSoC4/VPWM.c ****     return (VPWM_COUNTER_REG & VPWM_16BIT_MASK);
 479              		.loc 1 637 0
 480 0000 024B     		ldr	r3, .L35
 481 0002 1868     		ldr	r0, [r3]
 482 0004 0004     		lsl	r0, r0, #16
 483 0006 000C     		lsr	r0, r0, #16
 638:.\Generated_Source\PSoC4/VPWM.c **** }
 484              		.loc 1 638 0
 485              		@ sp needed
 486 0008 7047     		bx	lr
 487              	.L36:
 488 000a C046     		.align	2
 489              	.L35:
 490 000c 08010540 		.word	1074069768
 491              		.cfi_endproc
 492              	.LFE14:
 493              		.size	VPWM_ReadCounter, .-VPWM_ReadCounter
 494              		.section	.text.VPWM_SetCounterMode,"ax",%progbits
 495              		.align	2
 496              		.global	VPWM_SetCounterMode
 497              		.code	16
 498              		.thumb_func
 499              		.type	VPWM_SetCounterMode, %function
 500              	VPWM_SetCounterMode:
 501              	.LFB15:
 639:.\Generated_Source\PSoC4/VPWM.c **** 
ARM GAS  C:\Users\g\AppData\Local\Temp\ccGu2P49.s 			page 21


 640:.\Generated_Source\PSoC4/VPWM.c **** 
 641:.\Generated_Source\PSoC4/VPWM.c **** /*******************************************************************************
 642:.\Generated_Source\PSoC4/VPWM.c **** * Function Name: VPWM_SetCounterMode
 643:.\Generated_Source\PSoC4/VPWM.c **** ********************************************************************************
 644:.\Generated_Source\PSoC4/VPWM.c **** *
 645:.\Generated_Source\PSoC4/VPWM.c **** * Summary:
 646:.\Generated_Source\PSoC4/VPWM.c **** *  Sets the counter mode.  Applicable to all modes except Quadrature Decoder
 647:.\Generated_Source\PSoC4/VPWM.c **** *  and the PWM with a pseudo random output.
 648:.\Generated_Source\PSoC4/VPWM.c **** *
 649:.\Generated_Source\PSoC4/VPWM.c **** * Parameters:
 650:.\Generated_Source\PSoC4/VPWM.c **** *  counterMode: Enumerated counter type values
 651:.\Generated_Source\PSoC4/VPWM.c **** *   Values:
 652:.\Generated_Source\PSoC4/VPWM.c **** *     - VPWM_COUNT_UP       - Counts up
 653:.\Generated_Source\PSoC4/VPWM.c **** *     - VPWM_COUNT_DOWN     - Counts down
 654:.\Generated_Source\PSoC4/VPWM.c **** *     - VPWM_COUNT_UPDOWN0  - Counts up and down. Terminal count
 655:.\Generated_Source\PSoC4/VPWM.c **** *                                         generated when counter reaches 0
 656:.\Generated_Source\PSoC4/VPWM.c **** *     - VPWM_COUNT_UPDOWN1  - Counts up and down. Terminal count
 657:.\Generated_Source\PSoC4/VPWM.c **** *                                         generated both when counter reaches 0
 658:.\Generated_Source\PSoC4/VPWM.c **** *                                         and period
 659:.\Generated_Source\PSoC4/VPWM.c **** *
 660:.\Generated_Source\PSoC4/VPWM.c **** * Return:
 661:.\Generated_Source\PSoC4/VPWM.c **** *  None
 662:.\Generated_Source\PSoC4/VPWM.c **** *
 663:.\Generated_Source\PSoC4/VPWM.c **** *******************************************************************************/
 664:.\Generated_Source\PSoC4/VPWM.c **** void VPWM_SetCounterMode(uint32 counterMode)
 665:.\Generated_Source\PSoC4/VPWM.c **** {
 502              		.loc 1 665 0
 503              		.cfi_startproc
 504              	.LVL38:
 505 0000 10B5     		push	{r4, lr}
 506              		.cfi_def_cfa_offset 8
 507              		.cfi_offset 4, -8
 508              		.cfi_offset 14, -4
 509 0002 041C     		mov	r4, r0
 666:.\Generated_Source\PSoC4/VPWM.c ****     uint8 enableInterrupts;
 667:.\Generated_Source\PSoC4/VPWM.c **** 
 668:.\Generated_Source\PSoC4/VPWM.c ****     enableInterrupts = CyEnterCriticalSection();
 510              		.loc 1 668 0
 511 0004 FFF7FEFF 		bl	CyEnterCriticalSection
 512              	.LVL39:
 669:.\Generated_Source\PSoC4/VPWM.c **** 
 670:.\Generated_Source\PSoC4/VPWM.c ****     VPWM_CONTROL_REG &= (uint32)~VPWM_UPDOWN_MASK;
 513              		.loc 1 670 0
 514 0008 054B     		ldr	r3, .L38
 515 000a 1968     		ldr	r1, [r3]
 516 000c 054A     		ldr	r2, .L38+4
 517 000e 0A40     		and	r2, r1
 518 0010 1A60     		str	r2, [r3]
 671:.\Generated_Source\PSoC4/VPWM.c ****     VPWM_CONTROL_REG |= counterMode;
 519              		.loc 1 671 0
 520 0012 1A68     		ldr	r2, [r3]
 521 0014 1443     		orr	r4, r2
 522              	.LVL40:
 523 0016 1C60     		str	r4, [r3]
 672:.\Generated_Source\PSoC4/VPWM.c **** 
 673:.\Generated_Source\PSoC4/VPWM.c ****     CyExitCriticalSection(enableInterrupts);
 524              		.loc 1 673 0
ARM GAS  C:\Users\g\AppData\Local\Temp\ccGu2P49.s 			page 22


 525 0018 FFF7FEFF 		bl	CyExitCriticalSection
 526              	.LVL41:
 674:.\Generated_Source\PSoC4/VPWM.c **** }
 527              		.loc 1 674 0
 528              		@ sp needed
 529 001c 10BD     		pop	{r4, pc}
 530              	.L39:
 531 001e C046     		.align	2
 532              	.L38:
 533 0020 00010540 		.word	1074069760
 534 0024 FFFFFCFF 		.word	-196609
 535              		.cfi_endproc
 536              	.LFE15:
 537              		.size	VPWM_SetCounterMode, .-VPWM_SetCounterMode
 538              		.section	.text.VPWM_WritePeriod,"ax",%progbits
 539              		.align	2
 540              		.global	VPWM_WritePeriod
 541              		.code	16
 542              		.thumb_func
 543              		.type	VPWM_WritePeriod, %function
 544              	VPWM_WritePeriod:
 545              	.LFB16:
 675:.\Generated_Source\PSoC4/VPWM.c **** 
 676:.\Generated_Source\PSoC4/VPWM.c **** 
 677:.\Generated_Source\PSoC4/VPWM.c **** /*******************************************************************************
 678:.\Generated_Source\PSoC4/VPWM.c **** * Function Name: VPWM_WritePeriod
 679:.\Generated_Source\PSoC4/VPWM.c **** ********************************************************************************
 680:.\Generated_Source\PSoC4/VPWM.c **** *
 681:.\Generated_Source\PSoC4/VPWM.c **** * Summary:
 682:.\Generated_Source\PSoC4/VPWM.c **** *  Writes the 16 bit period register with the new period value.
 683:.\Generated_Source\PSoC4/VPWM.c **** *  To cause the counter to count for N cycles this register should be written
 684:.\Generated_Source\PSoC4/VPWM.c **** *  with N-1 (counts from 0 to period inclusive).
 685:.\Generated_Source\PSoC4/VPWM.c **** *
 686:.\Generated_Source\PSoC4/VPWM.c **** * Parameters:
 687:.\Generated_Source\PSoC4/VPWM.c **** *  period: Period value
 688:.\Generated_Source\PSoC4/VPWM.c **** *
 689:.\Generated_Source\PSoC4/VPWM.c **** * Return:
 690:.\Generated_Source\PSoC4/VPWM.c **** *  None
 691:.\Generated_Source\PSoC4/VPWM.c **** *
 692:.\Generated_Source\PSoC4/VPWM.c **** *******************************************************************************/
 693:.\Generated_Source\PSoC4/VPWM.c **** void VPWM_WritePeriod(uint32 period)
 694:.\Generated_Source\PSoC4/VPWM.c **** {
 546              		.loc 1 694 0
 547              		.cfi_startproc
 548              	.LVL42:
 695:.\Generated_Source\PSoC4/VPWM.c ****     VPWM_PERIOD_REG = (period & VPWM_16BIT_MASK);
 549              		.loc 1 695 0
 550 0000 0004     		lsl	r0, r0, #16
 551              	.LVL43:
 552 0002 000C     		lsr	r0, r0, #16
 553 0004 014B     		ldr	r3, .L41
 554 0006 1860     		str	r0, [r3]
 696:.\Generated_Source\PSoC4/VPWM.c **** }
 555              		.loc 1 696 0
 556              		@ sp needed
 557 0008 7047     		bx	lr
 558              	.L42:
ARM GAS  C:\Users\g\AppData\Local\Temp\ccGu2P49.s 			page 23


 559 000a C046     		.align	2
 560              	.L41:
 561 000c 14010540 		.word	1074069780
 562              		.cfi_endproc
 563              	.LFE16:
 564              		.size	VPWM_WritePeriod, .-VPWM_WritePeriod
 565              		.section	.text.VPWM_ReadPeriod,"ax",%progbits
 566              		.align	2
 567              		.global	VPWM_ReadPeriod
 568              		.code	16
 569              		.thumb_func
 570              		.type	VPWM_ReadPeriod, %function
 571              	VPWM_ReadPeriod:
 572              	.LFB17:
 697:.\Generated_Source\PSoC4/VPWM.c **** 
 698:.\Generated_Source\PSoC4/VPWM.c **** 
 699:.\Generated_Source\PSoC4/VPWM.c **** /*******************************************************************************
 700:.\Generated_Source\PSoC4/VPWM.c **** * Function Name: VPWM_ReadPeriod
 701:.\Generated_Source\PSoC4/VPWM.c **** ********************************************************************************
 702:.\Generated_Source\PSoC4/VPWM.c **** *
 703:.\Generated_Source\PSoC4/VPWM.c **** * Summary:
 704:.\Generated_Source\PSoC4/VPWM.c **** *  Reads the 16 bit period register.
 705:.\Generated_Source\PSoC4/VPWM.c **** *
 706:.\Generated_Source\PSoC4/VPWM.c **** * Parameters:
 707:.\Generated_Source\PSoC4/VPWM.c **** *  None
 708:.\Generated_Source\PSoC4/VPWM.c **** *
 709:.\Generated_Source\PSoC4/VPWM.c **** * Return:
 710:.\Generated_Source\PSoC4/VPWM.c **** *  Period value
 711:.\Generated_Source\PSoC4/VPWM.c **** *
 712:.\Generated_Source\PSoC4/VPWM.c **** *******************************************************************************/
 713:.\Generated_Source\PSoC4/VPWM.c **** uint32 VPWM_ReadPeriod(void)
 714:.\Generated_Source\PSoC4/VPWM.c **** {
 573              		.loc 1 714 0
 574              		.cfi_startproc
 715:.\Generated_Source\PSoC4/VPWM.c ****     return (VPWM_PERIOD_REG & VPWM_16BIT_MASK);
 575              		.loc 1 715 0
 576 0000 024B     		ldr	r3, .L44
 577 0002 1868     		ldr	r0, [r3]
 578 0004 0004     		lsl	r0, r0, #16
 579 0006 000C     		lsr	r0, r0, #16
 716:.\Generated_Source\PSoC4/VPWM.c **** }
 580              		.loc 1 716 0
 581              		@ sp needed
 582 0008 7047     		bx	lr
 583              	.L45:
 584 000a C046     		.align	2
 585              	.L44:
 586 000c 14010540 		.word	1074069780
 587              		.cfi_endproc
 588              	.LFE17:
 589              		.size	VPWM_ReadPeriod, .-VPWM_ReadPeriod
 590              		.section	.text.VPWM_SetCompareSwap,"ax",%progbits
 591              		.align	2
 592              		.global	VPWM_SetCompareSwap
 593              		.code	16
 594              		.thumb_func
 595              		.type	VPWM_SetCompareSwap, %function
ARM GAS  C:\Users\g\AppData\Local\Temp\ccGu2P49.s 			page 24


 596              	VPWM_SetCompareSwap:
 597              	.LFB18:
 717:.\Generated_Source\PSoC4/VPWM.c **** 
 718:.\Generated_Source\PSoC4/VPWM.c **** 
 719:.\Generated_Source\PSoC4/VPWM.c **** /*******************************************************************************
 720:.\Generated_Source\PSoC4/VPWM.c **** * Function Name: VPWM_SetCompareSwap
 721:.\Generated_Source\PSoC4/VPWM.c **** ********************************************************************************
 722:.\Generated_Source\PSoC4/VPWM.c **** *
 723:.\Generated_Source\PSoC4/VPWM.c **** * Summary:
 724:.\Generated_Source\PSoC4/VPWM.c **** *  Writes the register that controls whether the compare registers are
 725:.\Generated_Source\PSoC4/VPWM.c **** *  swapped. When enabled in the Timer/Counter mode(without capture) the swap
 726:.\Generated_Source\PSoC4/VPWM.c **** *  occurs at a TC event. In the PWM mode the swap occurs at the next TC event
 727:.\Generated_Source\PSoC4/VPWM.c **** *  following a hardware switch event.
 728:.\Generated_Source\PSoC4/VPWM.c **** *
 729:.\Generated_Source\PSoC4/VPWM.c **** * Parameters:
 730:.\Generated_Source\PSoC4/VPWM.c **** *  swapEnable
 731:.\Generated_Source\PSoC4/VPWM.c **** *   Values:
 732:.\Generated_Source\PSoC4/VPWM.c **** *     - 0 - Disable swap
 733:.\Generated_Source\PSoC4/VPWM.c **** *     - 1 - Enable swap
 734:.\Generated_Source\PSoC4/VPWM.c **** *
 735:.\Generated_Source\PSoC4/VPWM.c **** * Return:
 736:.\Generated_Source\PSoC4/VPWM.c **** *  None
 737:.\Generated_Source\PSoC4/VPWM.c **** *
 738:.\Generated_Source\PSoC4/VPWM.c **** *******************************************************************************/
 739:.\Generated_Source\PSoC4/VPWM.c **** void VPWM_SetCompareSwap(uint32 swapEnable)
 740:.\Generated_Source\PSoC4/VPWM.c **** {
 598              		.loc 1 740 0
 599              		.cfi_startproc
 600              	.LVL44:
 601 0000 10B5     		push	{r4, lr}
 602              		.cfi_def_cfa_offset 8
 603              		.cfi_offset 4, -8
 604              		.cfi_offset 14, -4
 605 0002 041C     		mov	r4, r0
 741:.\Generated_Source\PSoC4/VPWM.c ****     uint8 enableInterrupts;
 742:.\Generated_Source\PSoC4/VPWM.c **** 
 743:.\Generated_Source\PSoC4/VPWM.c ****     enableInterrupts = CyEnterCriticalSection();
 606              		.loc 1 743 0
 607 0004 FFF7FEFF 		bl	CyEnterCriticalSection
 608              	.LVL45:
 744:.\Generated_Source\PSoC4/VPWM.c **** 
 745:.\Generated_Source\PSoC4/VPWM.c ****     VPWM_CONTROL_REG &= (uint32)~VPWM_RELOAD_CC_MASK;
 609              		.loc 1 745 0
 610 0008 054B     		ldr	r3, .L47
 611 000a 1A68     		ldr	r2, [r3]
 612 000c 0121     		mov	r1, #1
 613 000e 8A43     		bic	r2, r1
 614 0010 1A60     		str	r2, [r3]
 746:.\Generated_Source\PSoC4/VPWM.c ****     VPWM_CONTROL_REG |= (swapEnable & VPWM_1BIT_MASK);
 615              		.loc 1 746 0
 616 0012 1A68     		ldr	r2, [r3]
 617 0014 0C40     		and	r4, r1
 618              	.LVL46:
 619 0016 1443     		orr	r4, r2
 620 0018 1C60     		str	r4, [r3]
 747:.\Generated_Source\PSoC4/VPWM.c **** 
 748:.\Generated_Source\PSoC4/VPWM.c ****     CyExitCriticalSection(enableInterrupts);
ARM GAS  C:\Users\g\AppData\Local\Temp\ccGu2P49.s 			page 25


 621              		.loc 1 748 0
 622 001a FFF7FEFF 		bl	CyExitCriticalSection
 623              	.LVL47:
 749:.\Generated_Source\PSoC4/VPWM.c **** }
 624              		.loc 1 749 0
 625              		@ sp needed
 626 001e 10BD     		pop	{r4, pc}
 627              	.L48:
 628              		.align	2
 629              	.L47:
 630 0020 00010540 		.word	1074069760
 631              		.cfi_endproc
 632              	.LFE18:
 633              		.size	VPWM_SetCompareSwap, .-VPWM_SetCompareSwap
 634              		.section	.text.VPWM_WritePeriodBuf,"ax",%progbits
 635              		.align	2
 636              		.global	VPWM_WritePeriodBuf
 637              		.code	16
 638              		.thumb_func
 639              		.type	VPWM_WritePeriodBuf, %function
 640              	VPWM_WritePeriodBuf:
 641              	.LFB19:
 750:.\Generated_Source\PSoC4/VPWM.c **** 
 751:.\Generated_Source\PSoC4/VPWM.c **** 
 752:.\Generated_Source\PSoC4/VPWM.c **** /*******************************************************************************
 753:.\Generated_Source\PSoC4/VPWM.c **** * Function Name: VPWM_WritePeriodBuf
 754:.\Generated_Source\PSoC4/VPWM.c **** ********************************************************************************
 755:.\Generated_Source\PSoC4/VPWM.c **** *
 756:.\Generated_Source\PSoC4/VPWM.c **** * Summary:
 757:.\Generated_Source\PSoC4/VPWM.c **** *  Writes the 16 bit period buf register with the new period value.
 758:.\Generated_Source\PSoC4/VPWM.c **** *
 759:.\Generated_Source\PSoC4/VPWM.c **** * Parameters:
 760:.\Generated_Source\PSoC4/VPWM.c **** *  periodBuf: Period value
 761:.\Generated_Source\PSoC4/VPWM.c **** *
 762:.\Generated_Source\PSoC4/VPWM.c **** * Return:
 763:.\Generated_Source\PSoC4/VPWM.c **** *  None
 764:.\Generated_Source\PSoC4/VPWM.c **** *
 765:.\Generated_Source\PSoC4/VPWM.c **** *******************************************************************************/
 766:.\Generated_Source\PSoC4/VPWM.c **** void VPWM_WritePeriodBuf(uint32 periodBuf)
 767:.\Generated_Source\PSoC4/VPWM.c **** {
 642              		.loc 1 767 0
 643              		.cfi_startproc
 644              	.LVL48:
 768:.\Generated_Source\PSoC4/VPWM.c ****     VPWM_PERIOD_BUF_REG = (periodBuf & VPWM_16BIT_MASK);
 645              		.loc 1 768 0
 646 0000 0004     		lsl	r0, r0, #16
 647              	.LVL49:
 648 0002 000C     		lsr	r0, r0, #16
 649 0004 014B     		ldr	r3, .L50
 650 0006 1860     		str	r0, [r3]
 769:.\Generated_Source\PSoC4/VPWM.c **** }
 651              		.loc 1 769 0
 652              		@ sp needed
 653 0008 7047     		bx	lr
 654              	.L51:
 655 000a C046     		.align	2
 656              	.L50:
ARM GAS  C:\Users\g\AppData\Local\Temp\ccGu2P49.s 			page 26


 657 000c 18010540 		.word	1074069784
 658              		.cfi_endproc
 659              	.LFE19:
 660              		.size	VPWM_WritePeriodBuf, .-VPWM_WritePeriodBuf
 661              		.section	.text.VPWM_ReadPeriodBuf,"ax",%progbits
 662              		.align	2
 663              		.global	VPWM_ReadPeriodBuf
 664              		.code	16
 665              		.thumb_func
 666              		.type	VPWM_ReadPeriodBuf, %function
 667              	VPWM_ReadPeriodBuf:
 668              	.LFB20:
 770:.\Generated_Source\PSoC4/VPWM.c **** 
 771:.\Generated_Source\PSoC4/VPWM.c **** 
 772:.\Generated_Source\PSoC4/VPWM.c **** /*******************************************************************************
 773:.\Generated_Source\PSoC4/VPWM.c **** * Function Name: VPWM_ReadPeriodBuf
 774:.\Generated_Source\PSoC4/VPWM.c **** ********************************************************************************
 775:.\Generated_Source\PSoC4/VPWM.c **** *
 776:.\Generated_Source\PSoC4/VPWM.c **** * Summary:
 777:.\Generated_Source\PSoC4/VPWM.c **** *  Reads the 16 bit period buf register.
 778:.\Generated_Source\PSoC4/VPWM.c **** *
 779:.\Generated_Source\PSoC4/VPWM.c **** * Parameters:
 780:.\Generated_Source\PSoC4/VPWM.c **** *  None
 781:.\Generated_Source\PSoC4/VPWM.c **** *
 782:.\Generated_Source\PSoC4/VPWM.c **** * Return:
 783:.\Generated_Source\PSoC4/VPWM.c **** *  Period value
 784:.\Generated_Source\PSoC4/VPWM.c **** *
 785:.\Generated_Source\PSoC4/VPWM.c **** *******************************************************************************/
 786:.\Generated_Source\PSoC4/VPWM.c **** uint32 VPWM_ReadPeriodBuf(void)
 787:.\Generated_Source\PSoC4/VPWM.c **** {
 669              		.loc 1 787 0
 670              		.cfi_startproc
 788:.\Generated_Source\PSoC4/VPWM.c ****     return (VPWM_PERIOD_BUF_REG & VPWM_16BIT_MASK);
 671              		.loc 1 788 0
 672 0000 024B     		ldr	r3, .L53
 673 0002 1868     		ldr	r0, [r3]
 674 0004 0004     		lsl	r0, r0, #16
 675 0006 000C     		lsr	r0, r0, #16
 789:.\Generated_Source\PSoC4/VPWM.c **** }
 676              		.loc 1 789 0
 677              		@ sp needed
 678 0008 7047     		bx	lr
 679              	.L54:
 680 000a C046     		.align	2
 681              	.L53:
 682 000c 18010540 		.word	1074069784
 683              		.cfi_endproc
 684              	.LFE20:
 685              		.size	VPWM_ReadPeriodBuf, .-VPWM_ReadPeriodBuf
 686              		.section	.text.VPWM_SetPeriodSwap,"ax",%progbits
 687              		.align	2
 688              		.global	VPWM_SetPeriodSwap
 689              		.code	16
 690              		.thumb_func
 691              		.type	VPWM_SetPeriodSwap, %function
 692              	VPWM_SetPeriodSwap:
 693              	.LFB21:
ARM GAS  C:\Users\g\AppData\Local\Temp\ccGu2P49.s 			page 27


 790:.\Generated_Source\PSoC4/VPWM.c **** 
 791:.\Generated_Source\PSoC4/VPWM.c **** 
 792:.\Generated_Source\PSoC4/VPWM.c **** /*******************************************************************************
 793:.\Generated_Source\PSoC4/VPWM.c **** * Function Name: VPWM_SetPeriodSwap
 794:.\Generated_Source\PSoC4/VPWM.c **** ********************************************************************************
 795:.\Generated_Source\PSoC4/VPWM.c **** *
 796:.\Generated_Source\PSoC4/VPWM.c **** * Summary:
 797:.\Generated_Source\PSoC4/VPWM.c **** *  Writes the register that controls whether the period registers are
 798:.\Generated_Source\PSoC4/VPWM.c **** *  swapped. When enabled in Timer/Counter mode the swap occurs at a TC event.
 799:.\Generated_Source\PSoC4/VPWM.c **** *  In the PWM mode the swap occurs at the next TC event following a hardware
 800:.\Generated_Source\PSoC4/VPWM.c **** *  switch event.
 801:.\Generated_Source\PSoC4/VPWM.c **** *
 802:.\Generated_Source\PSoC4/VPWM.c **** * Parameters:
 803:.\Generated_Source\PSoC4/VPWM.c **** *  swapEnable
 804:.\Generated_Source\PSoC4/VPWM.c **** *   Values:
 805:.\Generated_Source\PSoC4/VPWM.c **** *     - 0 - Disable swap
 806:.\Generated_Source\PSoC4/VPWM.c **** *     - 1 - Enable swap
 807:.\Generated_Source\PSoC4/VPWM.c **** *
 808:.\Generated_Source\PSoC4/VPWM.c **** * Return:
 809:.\Generated_Source\PSoC4/VPWM.c **** *  None
 810:.\Generated_Source\PSoC4/VPWM.c **** *
 811:.\Generated_Source\PSoC4/VPWM.c **** *******************************************************************************/
 812:.\Generated_Source\PSoC4/VPWM.c **** void VPWM_SetPeriodSwap(uint32 swapEnable)
 813:.\Generated_Source\PSoC4/VPWM.c **** {
 694              		.loc 1 813 0
 695              		.cfi_startproc
 696              	.LVL50:
 697 0000 10B5     		push	{r4, lr}
 698              		.cfi_def_cfa_offset 8
 699              		.cfi_offset 4, -8
 700              		.cfi_offset 14, -4
 701 0002 041C     		mov	r4, r0
 814:.\Generated_Source\PSoC4/VPWM.c ****     uint8 enableInterrupts;
 815:.\Generated_Source\PSoC4/VPWM.c **** 
 816:.\Generated_Source\PSoC4/VPWM.c ****     enableInterrupts = CyEnterCriticalSection();
 702              		.loc 1 816 0
 703 0004 FFF7FEFF 		bl	CyEnterCriticalSection
 704              	.LVL51:
 817:.\Generated_Source\PSoC4/VPWM.c **** 
 818:.\Generated_Source\PSoC4/VPWM.c ****     VPWM_CONTROL_REG &= (uint32)~VPWM_RELOAD_PERIOD_MASK;
 705              		.loc 1 818 0
 706 0008 064B     		ldr	r3, .L56
 707 000a 1A68     		ldr	r2, [r3]
 708 000c 0221     		mov	r1, #2
 709 000e 8A43     		bic	r2, r1
 710 0010 1A60     		str	r2, [r3]
 819:.\Generated_Source\PSoC4/VPWM.c ****     VPWM_CONTROL_REG |= ((uint32)((swapEnable & VPWM_1BIT_MASK) <<
 711              		.loc 1 819 0
 712 0012 1A68     		ldr	r2, [r3]
 713 0014 0139     		sub	r1, r1, #1
 714 0016 0C40     		and	r4, r1
 715              	.LVL52:
 716 0018 6400     		lsl	r4, r4, #1
 717 001a 1443     		orr	r4, r2
 718 001c 1C60     		str	r4, [r3]
 820:.\Generated_Source\PSoC4/VPWM.c ****                                                             VPWM_RELOAD_PERIOD_SHIFT));
 821:.\Generated_Source\PSoC4/VPWM.c **** 
ARM GAS  C:\Users\g\AppData\Local\Temp\ccGu2P49.s 			page 28


 822:.\Generated_Source\PSoC4/VPWM.c ****     CyExitCriticalSection(enableInterrupts);
 719              		.loc 1 822 0
 720 001e FFF7FEFF 		bl	CyExitCriticalSection
 721              	.LVL53:
 823:.\Generated_Source\PSoC4/VPWM.c **** }
 722              		.loc 1 823 0
 723              		@ sp needed
 724 0022 10BD     		pop	{r4, pc}
 725              	.L57:
 726              		.align	2
 727              	.L56:
 728 0024 00010540 		.word	1074069760
 729              		.cfi_endproc
 730              	.LFE21:
 731              		.size	VPWM_SetPeriodSwap, .-VPWM_SetPeriodSwap
 732              		.section	.text.VPWM_WriteCompare,"ax",%progbits
 733              		.align	2
 734              		.global	VPWM_WriteCompare
 735              		.code	16
 736              		.thumb_func
 737              		.type	VPWM_WriteCompare, %function
 738              	VPWM_WriteCompare:
 739              	.LFB22:
 824:.\Generated_Source\PSoC4/VPWM.c **** 
 825:.\Generated_Source\PSoC4/VPWM.c **** 
 826:.\Generated_Source\PSoC4/VPWM.c **** /*******************************************************************************
 827:.\Generated_Source\PSoC4/VPWM.c **** * Function Name: VPWM_WriteCompare
 828:.\Generated_Source\PSoC4/VPWM.c **** ********************************************************************************
 829:.\Generated_Source\PSoC4/VPWM.c **** *
 830:.\Generated_Source\PSoC4/VPWM.c **** * Summary:
 831:.\Generated_Source\PSoC4/VPWM.c **** *  Writes the 16 bit compare register with the new compare value. Not
 832:.\Generated_Source\PSoC4/VPWM.c **** *  applicable for Timer/Counter with Capture or in Quadrature Decoder modes.
 833:.\Generated_Source\PSoC4/VPWM.c **** *
 834:.\Generated_Source\PSoC4/VPWM.c **** * Parameters:
 835:.\Generated_Source\PSoC4/VPWM.c **** *  compare: Compare value
 836:.\Generated_Source\PSoC4/VPWM.c **** *
 837:.\Generated_Source\PSoC4/VPWM.c **** * Return:
 838:.\Generated_Source\PSoC4/VPWM.c **** *  None
 839:.\Generated_Source\PSoC4/VPWM.c **** *
 840:.\Generated_Source\PSoC4/VPWM.c **** * Note:
 841:.\Generated_Source\PSoC4/VPWM.c **** *  It is not recommended to use the value equal to "0" or equal to 
 842:.\Generated_Source\PSoC4/VPWM.c **** *  "period value" in Center or Asymmetric align PWM modes on the 
 843:.\Generated_Source\PSoC4/VPWM.c **** *  PSoC 4100/PSoC 4200 devices.
 844:.\Generated_Source\PSoC4/VPWM.c **** *  PSoC 4000 devices write the 16 bit compare register with the decremented 
 845:.\Generated_Source\PSoC4/VPWM.c **** *  compare value in the Up counting mode (except 0x0u), and the incremented 
 846:.\Generated_Source\PSoC4/VPWM.c **** *  compare value in the Down counting mode (except 0xFFFFu).
 847:.\Generated_Source\PSoC4/VPWM.c **** *
 848:.\Generated_Source\PSoC4/VPWM.c **** *******************************************************************************/
 849:.\Generated_Source\PSoC4/VPWM.c **** void VPWM_WriteCompare(uint32 compare)
 850:.\Generated_Source\PSoC4/VPWM.c **** {
 740              		.loc 1 850 0
 741              		.cfi_startproc
 742              	.LVL54:
 851:.\Generated_Source\PSoC4/VPWM.c ****     #if (VPWM_CY_TCPWM_4000)
 852:.\Generated_Source\PSoC4/VPWM.c ****         uint32 currentMode;
 853:.\Generated_Source\PSoC4/VPWM.c ****     #endif /* (VPWM_CY_TCPWM_4000) */
 854:.\Generated_Source\PSoC4/VPWM.c **** 
ARM GAS  C:\Users\g\AppData\Local\Temp\ccGu2P49.s 			page 29


 855:.\Generated_Source\PSoC4/VPWM.c ****     #if (VPWM_CY_TCPWM_4000)
 856:.\Generated_Source\PSoC4/VPWM.c ****         currentMode = ((VPWM_CONTROL_REG & VPWM_UPDOWN_MASK) >> VPWM_UPDOWN_SHIFT);
 857:.\Generated_Source\PSoC4/VPWM.c **** 
 858:.\Generated_Source\PSoC4/VPWM.c ****         if (((uint32)VPWM__COUNT_DOWN == currentMode) && (0xFFFFu != compare))
 859:.\Generated_Source\PSoC4/VPWM.c ****         {
 860:.\Generated_Source\PSoC4/VPWM.c ****             compare++;
 861:.\Generated_Source\PSoC4/VPWM.c ****         }
 862:.\Generated_Source\PSoC4/VPWM.c ****         else if (((uint32)VPWM__COUNT_UP == currentMode) && (0u != compare))
 863:.\Generated_Source\PSoC4/VPWM.c ****         {
 864:.\Generated_Source\PSoC4/VPWM.c ****             compare--;
 865:.\Generated_Source\PSoC4/VPWM.c ****         }
 866:.\Generated_Source\PSoC4/VPWM.c ****         else
 867:.\Generated_Source\PSoC4/VPWM.c ****         {
 868:.\Generated_Source\PSoC4/VPWM.c ****         }
 869:.\Generated_Source\PSoC4/VPWM.c ****         
 870:.\Generated_Source\PSoC4/VPWM.c ****     
 871:.\Generated_Source\PSoC4/VPWM.c ****     #endif /* (VPWM_CY_TCPWM_4000) */
 872:.\Generated_Source\PSoC4/VPWM.c ****     
 873:.\Generated_Source\PSoC4/VPWM.c ****     VPWM_COMP_CAP_REG = (compare & VPWM_16BIT_MASK);
 743              		.loc 1 873 0
 744 0000 0004     		lsl	r0, r0, #16
 745              	.LVL55:
 746 0002 000C     		lsr	r0, r0, #16
 747 0004 014B     		ldr	r3, .L59
 748 0006 1860     		str	r0, [r3]
 874:.\Generated_Source\PSoC4/VPWM.c **** }
 749              		.loc 1 874 0
 750              		@ sp needed
 751 0008 7047     		bx	lr
 752              	.L60:
 753 000a C046     		.align	2
 754              	.L59:
 755 000c 0C010540 		.word	1074069772
 756              		.cfi_endproc
 757              	.LFE22:
 758              		.size	VPWM_WriteCompare, .-VPWM_WriteCompare
 759              		.section	.text.VPWM_ReadCompare,"ax",%progbits
 760              		.align	2
 761              		.global	VPWM_ReadCompare
 762              		.code	16
 763              		.thumb_func
 764              		.type	VPWM_ReadCompare, %function
 765              	VPWM_ReadCompare:
 766              	.LFB23:
 875:.\Generated_Source\PSoC4/VPWM.c **** 
 876:.\Generated_Source\PSoC4/VPWM.c **** 
 877:.\Generated_Source\PSoC4/VPWM.c **** /*******************************************************************************
 878:.\Generated_Source\PSoC4/VPWM.c **** * Function Name: VPWM_ReadCompare
 879:.\Generated_Source\PSoC4/VPWM.c **** ********************************************************************************
 880:.\Generated_Source\PSoC4/VPWM.c **** *
 881:.\Generated_Source\PSoC4/VPWM.c **** * Summary:
 882:.\Generated_Source\PSoC4/VPWM.c **** *  Reads the compare register. Not applicable for Timer/Counter with Capture
 883:.\Generated_Source\PSoC4/VPWM.c **** *  or in Quadrature Decoder modes.
 884:.\Generated_Source\PSoC4/VPWM.c **** *  PSoC 4000 devices read the incremented compare register value in the 
 885:.\Generated_Source\PSoC4/VPWM.c **** *  Up counting mode (except 0xFFFFu), and the decremented value in the 
 886:.\Generated_Source\PSoC4/VPWM.c **** *  Down counting mode (except 0x0u).
 887:.\Generated_Source\PSoC4/VPWM.c **** *
ARM GAS  C:\Users\g\AppData\Local\Temp\ccGu2P49.s 			page 30


 888:.\Generated_Source\PSoC4/VPWM.c **** * Parameters:
 889:.\Generated_Source\PSoC4/VPWM.c **** *  None
 890:.\Generated_Source\PSoC4/VPWM.c **** *
 891:.\Generated_Source\PSoC4/VPWM.c **** * Return:
 892:.\Generated_Source\PSoC4/VPWM.c **** *  Compare value
 893:.\Generated_Source\PSoC4/VPWM.c **** *
 894:.\Generated_Source\PSoC4/VPWM.c **** * Note:
 895:.\Generated_Source\PSoC4/VPWM.c **** *  PSoC 4000 devices read the incremented compare register value in the 
 896:.\Generated_Source\PSoC4/VPWM.c **** *  Up counting mode (except 0xFFFFu), and the decremented value in the 
 897:.\Generated_Source\PSoC4/VPWM.c **** *  Down counting mode (except 0x0u).
 898:.\Generated_Source\PSoC4/VPWM.c **** *
 899:.\Generated_Source\PSoC4/VPWM.c **** *******************************************************************************/
 900:.\Generated_Source\PSoC4/VPWM.c **** uint32 VPWM_ReadCompare(void)
 901:.\Generated_Source\PSoC4/VPWM.c **** {
 767              		.loc 1 901 0
 768              		.cfi_startproc
 902:.\Generated_Source\PSoC4/VPWM.c ****     #if (VPWM_CY_TCPWM_4000)
 903:.\Generated_Source\PSoC4/VPWM.c ****         uint32 currentMode;
 904:.\Generated_Source\PSoC4/VPWM.c ****         uint32 regVal;
 905:.\Generated_Source\PSoC4/VPWM.c ****     #endif /* (VPWM_CY_TCPWM_4000) */
 906:.\Generated_Source\PSoC4/VPWM.c **** 
 907:.\Generated_Source\PSoC4/VPWM.c ****     #if (VPWM_CY_TCPWM_4000)
 908:.\Generated_Source\PSoC4/VPWM.c ****         currentMode = ((VPWM_CONTROL_REG & VPWM_UPDOWN_MASK) >> VPWM_UPDOWN_SHIFT);
 909:.\Generated_Source\PSoC4/VPWM.c ****         
 910:.\Generated_Source\PSoC4/VPWM.c ****         regVal = VPWM_COMP_CAP_REG;
 911:.\Generated_Source\PSoC4/VPWM.c ****         
 912:.\Generated_Source\PSoC4/VPWM.c ****         if (((uint32)VPWM__COUNT_DOWN == currentMode) && (0u != regVal))
 913:.\Generated_Source\PSoC4/VPWM.c ****         {
 914:.\Generated_Source\PSoC4/VPWM.c ****             regVal--;
 915:.\Generated_Source\PSoC4/VPWM.c ****         }
 916:.\Generated_Source\PSoC4/VPWM.c ****         else if (((uint32)VPWM__COUNT_UP == currentMode) && (0xFFFFu != regVal))
 917:.\Generated_Source\PSoC4/VPWM.c ****         {
 918:.\Generated_Source\PSoC4/VPWM.c ****             regVal++;
 919:.\Generated_Source\PSoC4/VPWM.c ****         }
 920:.\Generated_Source\PSoC4/VPWM.c ****         else
 921:.\Generated_Source\PSoC4/VPWM.c ****         {
 922:.\Generated_Source\PSoC4/VPWM.c ****         }
 923:.\Generated_Source\PSoC4/VPWM.c **** 
 924:.\Generated_Source\PSoC4/VPWM.c ****         return (regVal & VPWM_16BIT_MASK);
 925:.\Generated_Source\PSoC4/VPWM.c ****     #else
 926:.\Generated_Source\PSoC4/VPWM.c ****         return (VPWM_COMP_CAP_REG & VPWM_16BIT_MASK);
 769              		.loc 1 926 0
 770 0000 024B     		ldr	r3, .L62
 771 0002 1868     		ldr	r0, [r3]
 772 0004 0004     		lsl	r0, r0, #16
 773 0006 000C     		lsr	r0, r0, #16
 927:.\Generated_Source\PSoC4/VPWM.c ****     #endif /* (VPWM_CY_TCPWM_4000) */
 928:.\Generated_Source\PSoC4/VPWM.c **** }
 774              		.loc 1 928 0
 775              		@ sp needed
 776 0008 7047     		bx	lr
 777              	.L63:
 778 000a C046     		.align	2
 779              	.L62:
 780 000c 0C010540 		.word	1074069772
 781              		.cfi_endproc
 782              	.LFE23:
ARM GAS  C:\Users\g\AppData\Local\Temp\ccGu2P49.s 			page 31


 783              		.size	VPWM_ReadCompare, .-VPWM_ReadCompare
 784              		.section	.text.VPWM_WriteCompareBuf,"ax",%progbits
 785              		.align	2
 786              		.global	VPWM_WriteCompareBuf
 787              		.code	16
 788              		.thumb_func
 789              		.type	VPWM_WriteCompareBuf, %function
 790              	VPWM_WriteCompareBuf:
 791              	.LFB24:
 929:.\Generated_Source\PSoC4/VPWM.c **** 
 930:.\Generated_Source\PSoC4/VPWM.c **** 
 931:.\Generated_Source\PSoC4/VPWM.c **** /*******************************************************************************
 932:.\Generated_Source\PSoC4/VPWM.c **** * Function Name: VPWM_WriteCompareBuf
 933:.\Generated_Source\PSoC4/VPWM.c **** ********************************************************************************
 934:.\Generated_Source\PSoC4/VPWM.c **** *
 935:.\Generated_Source\PSoC4/VPWM.c **** * Summary:
 936:.\Generated_Source\PSoC4/VPWM.c **** *  Writes the 16 bit compare buffer register with the new compare value. Not
 937:.\Generated_Source\PSoC4/VPWM.c **** *  applicable for Timer/Counter with Capture or in Quadrature Decoder modes.
 938:.\Generated_Source\PSoC4/VPWM.c **** *
 939:.\Generated_Source\PSoC4/VPWM.c **** * Parameters:
 940:.\Generated_Source\PSoC4/VPWM.c **** *  compareBuf: Compare value
 941:.\Generated_Source\PSoC4/VPWM.c **** *
 942:.\Generated_Source\PSoC4/VPWM.c **** * Return:
 943:.\Generated_Source\PSoC4/VPWM.c **** *  None
 944:.\Generated_Source\PSoC4/VPWM.c **** *
 945:.\Generated_Source\PSoC4/VPWM.c **** * Note:
 946:.\Generated_Source\PSoC4/VPWM.c **** *  It is not recommended to use the value equal to "0" or equal to 
 947:.\Generated_Source\PSoC4/VPWM.c **** *  "period value" in Center or Asymmetric align PWM modes on the 
 948:.\Generated_Source\PSoC4/VPWM.c **** *  PSoC 4100/PSoC 4200 devices.
 949:.\Generated_Source\PSoC4/VPWM.c **** *  PSoC 4000 devices write the 16 bit compare register with the decremented 
 950:.\Generated_Source\PSoC4/VPWM.c **** *  compare value in the Up counting mode (except 0x0u), and the incremented 
 951:.\Generated_Source\PSoC4/VPWM.c **** *  compare value in the Down counting mode (except 0xFFFFu).
 952:.\Generated_Source\PSoC4/VPWM.c **** *
 953:.\Generated_Source\PSoC4/VPWM.c **** *******************************************************************************/
 954:.\Generated_Source\PSoC4/VPWM.c **** void VPWM_WriteCompareBuf(uint32 compareBuf)
 955:.\Generated_Source\PSoC4/VPWM.c **** {
 792              		.loc 1 955 0
 793              		.cfi_startproc
 794              	.LVL56:
 956:.\Generated_Source\PSoC4/VPWM.c ****     #if (VPWM_CY_TCPWM_4000)
 957:.\Generated_Source\PSoC4/VPWM.c ****         uint32 currentMode;
 958:.\Generated_Source\PSoC4/VPWM.c ****     #endif /* (VPWM_CY_TCPWM_4000) */
 959:.\Generated_Source\PSoC4/VPWM.c **** 
 960:.\Generated_Source\PSoC4/VPWM.c ****     #if (VPWM_CY_TCPWM_4000)
 961:.\Generated_Source\PSoC4/VPWM.c ****         currentMode = ((VPWM_CONTROL_REG & VPWM_UPDOWN_MASK) >> VPWM_UPDOWN_SHIFT);
 962:.\Generated_Source\PSoC4/VPWM.c **** 
 963:.\Generated_Source\PSoC4/VPWM.c ****         if (((uint32)VPWM__COUNT_DOWN == currentMode) && (0xFFFFu != compareBuf))
 964:.\Generated_Source\PSoC4/VPWM.c ****         {
 965:.\Generated_Source\PSoC4/VPWM.c ****             compareBuf++;
 966:.\Generated_Source\PSoC4/VPWM.c ****         }
 967:.\Generated_Source\PSoC4/VPWM.c ****         else if (((uint32)VPWM__COUNT_UP == currentMode) && (0u != compareBuf))
 968:.\Generated_Source\PSoC4/VPWM.c ****         {
 969:.\Generated_Source\PSoC4/VPWM.c ****             compareBuf --;
 970:.\Generated_Source\PSoC4/VPWM.c ****         }
 971:.\Generated_Source\PSoC4/VPWM.c ****         else
 972:.\Generated_Source\PSoC4/VPWM.c ****         {
 973:.\Generated_Source\PSoC4/VPWM.c ****         }
ARM GAS  C:\Users\g\AppData\Local\Temp\ccGu2P49.s 			page 32


 974:.\Generated_Source\PSoC4/VPWM.c ****     #endif /* (VPWM_CY_TCPWM_4000) */
 975:.\Generated_Source\PSoC4/VPWM.c ****     
 976:.\Generated_Source\PSoC4/VPWM.c ****     VPWM_COMP_CAP_BUF_REG = (compareBuf & VPWM_16BIT_MASK);
 795              		.loc 1 976 0
 796 0000 0004     		lsl	r0, r0, #16
 797              	.LVL57:
 798 0002 000C     		lsr	r0, r0, #16
 799 0004 014B     		ldr	r3, .L65
 800 0006 1860     		str	r0, [r3]
 977:.\Generated_Source\PSoC4/VPWM.c **** }
 801              		.loc 1 977 0
 802              		@ sp needed
 803 0008 7047     		bx	lr
 804              	.L66:
 805 000a C046     		.align	2
 806              	.L65:
 807 000c 10010540 		.word	1074069776
 808              		.cfi_endproc
 809              	.LFE24:
 810              		.size	VPWM_WriteCompareBuf, .-VPWM_WriteCompareBuf
 811              		.section	.text.VPWM_ReadCompareBuf,"ax",%progbits
 812              		.align	2
 813              		.global	VPWM_ReadCompareBuf
 814              		.code	16
 815              		.thumb_func
 816              		.type	VPWM_ReadCompareBuf, %function
 817              	VPWM_ReadCompareBuf:
 818              	.LFB25:
 978:.\Generated_Source\PSoC4/VPWM.c **** 
 979:.\Generated_Source\PSoC4/VPWM.c **** 
 980:.\Generated_Source\PSoC4/VPWM.c **** /*******************************************************************************
 981:.\Generated_Source\PSoC4/VPWM.c **** * Function Name: VPWM_ReadCompareBuf
 982:.\Generated_Source\PSoC4/VPWM.c **** ********************************************************************************
 983:.\Generated_Source\PSoC4/VPWM.c **** *
 984:.\Generated_Source\PSoC4/VPWM.c **** * Summary:
 985:.\Generated_Source\PSoC4/VPWM.c **** *  Reads the compare buffer register. Not applicable for Timer/Counter with
 986:.\Generated_Source\PSoC4/VPWM.c **** *  Capture or in Quadrature Decoder modes.
 987:.\Generated_Source\PSoC4/VPWM.c **** *
 988:.\Generated_Source\PSoC4/VPWM.c **** * Parameters:
 989:.\Generated_Source\PSoC4/VPWM.c **** *  None
 990:.\Generated_Source\PSoC4/VPWM.c **** *
 991:.\Generated_Source\PSoC4/VPWM.c **** * Return:
 992:.\Generated_Source\PSoC4/VPWM.c **** *  Compare buffer value
 993:.\Generated_Source\PSoC4/VPWM.c **** *
 994:.\Generated_Source\PSoC4/VPWM.c **** * Note:
 995:.\Generated_Source\PSoC4/VPWM.c **** *  PSoC 4000 devices read the incremented compare register value in the 
 996:.\Generated_Source\PSoC4/VPWM.c **** *  Up counting mode (except 0xFFFFu), and the decremented value in the 
 997:.\Generated_Source\PSoC4/VPWM.c **** *  Down counting mode (except 0x0u).
 998:.\Generated_Source\PSoC4/VPWM.c **** *
 999:.\Generated_Source\PSoC4/VPWM.c **** *******************************************************************************/
1000:.\Generated_Source\PSoC4/VPWM.c **** uint32 VPWM_ReadCompareBuf(void)
1001:.\Generated_Source\PSoC4/VPWM.c **** {
 819              		.loc 1 1001 0
 820              		.cfi_startproc
1002:.\Generated_Source\PSoC4/VPWM.c ****     #if (VPWM_CY_TCPWM_4000)
1003:.\Generated_Source\PSoC4/VPWM.c ****         uint32 currentMode;
1004:.\Generated_Source\PSoC4/VPWM.c ****         uint32 regVal;
ARM GAS  C:\Users\g\AppData\Local\Temp\ccGu2P49.s 			page 33


1005:.\Generated_Source\PSoC4/VPWM.c ****     #endif /* (VPWM_CY_TCPWM_4000) */
1006:.\Generated_Source\PSoC4/VPWM.c **** 
1007:.\Generated_Source\PSoC4/VPWM.c ****     #if (VPWM_CY_TCPWM_4000)
1008:.\Generated_Source\PSoC4/VPWM.c ****         currentMode = ((VPWM_CONTROL_REG & VPWM_UPDOWN_MASK) >> VPWM_UPDOWN_SHIFT);
1009:.\Generated_Source\PSoC4/VPWM.c **** 
1010:.\Generated_Source\PSoC4/VPWM.c ****         regVal = VPWM_COMP_CAP_BUF_REG;
1011:.\Generated_Source\PSoC4/VPWM.c ****         
1012:.\Generated_Source\PSoC4/VPWM.c ****         if (((uint32)VPWM__COUNT_DOWN == currentMode) && (0u != regVal))
1013:.\Generated_Source\PSoC4/VPWM.c ****         {
1014:.\Generated_Source\PSoC4/VPWM.c ****             regVal--;
1015:.\Generated_Source\PSoC4/VPWM.c ****         }
1016:.\Generated_Source\PSoC4/VPWM.c ****         else if (((uint32)VPWM__COUNT_UP == currentMode) && (0xFFFFu != regVal))
1017:.\Generated_Source\PSoC4/VPWM.c ****         {
1018:.\Generated_Source\PSoC4/VPWM.c ****             regVal++;
1019:.\Generated_Source\PSoC4/VPWM.c ****         }
1020:.\Generated_Source\PSoC4/VPWM.c ****         else
1021:.\Generated_Source\PSoC4/VPWM.c ****         {
1022:.\Generated_Source\PSoC4/VPWM.c ****         }
1023:.\Generated_Source\PSoC4/VPWM.c **** 
1024:.\Generated_Source\PSoC4/VPWM.c ****         return (regVal & VPWM_16BIT_MASK);
1025:.\Generated_Source\PSoC4/VPWM.c ****     #else
1026:.\Generated_Source\PSoC4/VPWM.c ****         return (VPWM_COMP_CAP_BUF_REG & VPWM_16BIT_MASK);
 821              		.loc 1 1026 0
 822 0000 024B     		ldr	r3, .L68
 823 0002 1868     		ldr	r0, [r3]
 824 0004 0004     		lsl	r0, r0, #16
 825 0006 000C     		lsr	r0, r0, #16
1027:.\Generated_Source\PSoC4/VPWM.c ****     #endif /* (VPWM_CY_TCPWM_4000) */
1028:.\Generated_Source\PSoC4/VPWM.c **** }
 826              		.loc 1 1028 0
 827              		@ sp needed
 828 0008 7047     		bx	lr
 829              	.L69:
 830 000a C046     		.align	2
 831              	.L68:
 832 000c 10010540 		.word	1074069776
 833              		.cfi_endproc
 834              	.LFE25:
 835              		.size	VPWM_ReadCompareBuf, .-VPWM_ReadCompareBuf
 836              		.section	.text.VPWM_ReadCapture,"ax",%progbits
 837              		.align	2
 838              		.global	VPWM_ReadCapture
 839              		.code	16
 840              		.thumb_func
 841              		.type	VPWM_ReadCapture, %function
 842              	VPWM_ReadCapture:
 843              	.LFB26:
1029:.\Generated_Source\PSoC4/VPWM.c **** 
1030:.\Generated_Source\PSoC4/VPWM.c **** 
1031:.\Generated_Source\PSoC4/VPWM.c **** /*******************************************************************************
1032:.\Generated_Source\PSoC4/VPWM.c **** * Function Name: VPWM_ReadCapture
1033:.\Generated_Source\PSoC4/VPWM.c **** ********************************************************************************
1034:.\Generated_Source\PSoC4/VPWM.c **** *
1035:.\Generated_Source\PSoC4/VPWM.c **** * Summary:
1036:.\Generated_Source\PSoC4/VPWM.c **** *  Reads the captured counter value. This API is applicable only for
1037:.\Generated_Source\PSoC4/VPWM.c **** *  Timer/Counter with the capture mode and Quadrature Decoder modes.
1038:.\Generated_Source\PSoC4/VPWM.c **** *
ARM GAS  C:\Users\g\AppData\Local\Temp\ccGu2P49.s 			page 34


1039:.\Generated_Source\PSoC4/VPWM.c **** * Parameters:
1040:.\Generated_Source\PSoC4/VPWM.c **** *  None
1041:.\Generated_Source\PSoC4/VPWM.c **** *
1042:.\Generated_Source\PSoC4/VPWM.c **** * Return:
1043:.\Generated_Source\PSoC4/VPWM.c **** *  Capture value
1044:.\Generated_Source\PSoC4/VPWM.c **** *
1045:.\Generated_Source\PSoC4/VPWM.c **** *******************************************************************************/
1046:.\Generated_Source\PSoC4/VPWM.c **** uint32 VPWM_ReadCapture(void)
1047:.\Generated_Source\PSoC4/VPWM.c **** {
 844              		.loc 1 1047 0
 845              		.cfi_startproc
1048:.\Generated_Source\PSoC4/VPWM.c ****     return (VPWM_COMP_CAP_REG & VPWM_16BIT_MASK);
 846              		.loc 1 1048 0
 847 0000 024B     		ldr	r3, .L71
 848 0002 1868     		ldr	r0, [r3]
 849 0004 0004     		lsl	r0, r0, #16
 850 0006 000C     		lsr	r0, r0, #16
1049:.\Generated_Source\PSoC4/VPWM.c **** }
 851              		.loc 1 1049 0
 852              		@ sp needed
 853 0008 7047     		bx	lr
 854              	.L72:
 855 000a C046     		.align	2
 856              	.L71:
 857 000c 0C010540 		.word	1074069772
 858              		.cfi_endproc
 859              	.LFE26:
 860              		.size	VPWM_ReadCapture, .-VPWM_ReadCapture
 861              		.section	.text.VPWM_ReadCaptureBuf,"ax",%progbits
 862              		.align	2
 863              		.global	VPWM_ReadCaptureBuf
 864              		.code	16
 865              		.thumb_func
 866              		.type	VPWM_ReadCaptureBuf, %function
 867              	VPWM_ReadCaptureBuf:
 868              	.LFB27:
1050:.\Generated_Source\PSoC4/VPWM.c **** 
1051:.\Generated_Source\PSoC4/VPWM.c **** 
1052:.\Generated_Source\PSoC4/VPWM.c **** /*******************************************************************************
1053:.\Generated_Source\PSoC4/VPWM.c **** * Function Name: VPWM_ReadCaptureBuf
1054:.\Generated_Source\PSoC4/VPWM.c **** ********************************************************************************
1055:.\Generated_Source\PSoC4/VPWM.c **** *
1056:.\Generated_Source\PSoC4/VPWM.c **** * Summary:
1057:.\Generated_Source\PSoC4/VPWM.c **** *  Reads the capture buffer register. This API is applicable only for
1058:.\Generated_Source\PSoC4/VPWM.c **** *  Timer/Counter with the capture mode and Quadrature Decoder modes.
1059:.\Generated_Source\PSoC4/VPWM.c **** *
1060:.\Generated_Source\PSoC4/VPWM.c **** * Parameters:
1061:.\Generated_Source\PSoC4/VPWM.c **** *  None
1062:.\Generated_Source\PSoC4/VPWM.c **** *
1063:.\Generated_Source\PSoC4/VPWM.c **** * Return:
1064:.\Generated_Source\PSoC4/VPWM.c **** *  Capture buffer value
1065:.\Generated_Source\PSoC4/VPWM.c **** *
1066:.\Generated_Source\PSoC4/VPWM.c **** *******************************************************************************/
1067:.\Generated_Source\PSoC4/VPWM.c **** uint32 VPWM_ReadCaptureBuf(void)
1068:.\Generated_Source\PSoC4/VPWM.c **** {
 869              		.loc 1 1068 0
 870              		.cfi_startproc
ARM GAS  C:\Users\g\AppData\Local\Temp\ccGu2P49.s 			page 35


1069:.\Generated_Source\PSoC4/VPWM.c ****     return (VPWM_COMP_CAP_BUF_REG & VPWM_16BIT_MASK);
 871              		.loc 1 1069 0
 872 0000 024B     		ldr	r3, .L74
 873 0002 1868     		ldr	r0, [r3]
 874 0004 0004     		lsl	r0, r0, #16
 875 0006 000C     		lsr	r0, r0, #16
1070:.\Generated_Source\PSoC4/VPWM.c **** }
 876              		.loc 1 1070 0
 877              		@ sp needed
 878 0008 7047     		bx	lr
 879              	.L75:
 880 000a C046     		.align	2
 881              	.L74:
 882 000c 10010540 		.word	1074069776
 883              		.cfi_endproc
 884              	.LFE27:
 885              		.size	VPWM_ReadCaptureBuf, .-VPWM_ReadCaptureBuf
 886              		.section	.text.VPWM_SetCaptureMode,"ax",%progbits
 887              		.align	2
 888              		.global	VPWM_SetCaptureMode
 889              		.code	16
 890              		.thumb_func
 891              		.type	VPWM_SetCaptureMode, %function
 892              	VPWM_SetCaptureMode:
 893              	.LFB28:
1071:.\Generated_Source\PSoC4/VPWM.c **** 
1072:.\Generated_Source\PSoC4/VPWM.c **** 
1073:.\Generated_Source\PSoC4/VPWM.c **** /*******************************************************************************
1074:.\Generated_Source\PSoC4/VPWM.c **** * Function Name: VPWM_SetCaptureMode
1075:.\Generated_Source\PSoC4/VPWM.c **** ********************************************************************************
1076:.\Generated_Source\PSoC4/VPWM.c **** *
1077:.\Generated_Source\PSoC4/VPWM.c **** * Summary:
1078:.\Generated_Source\PSoC4/VPWM.c **** *  Sets the capture trigger mode. For PWM mode this is the switch input.
1079:.\Generated_Source\PSoC4/VPWM.c **** *  This input is not applicable to the Timer/Counter without Capture and
1080:.\Generated_Source\PSoC4/VPWM.c **** *  Quadrature Decoder modes.
1081:.\Generated_Source\PSoC4/VPWM.c **** *
1082:.\Generated_Source\PSoC4/VPWM.c **** * Parameters:
1083:.\Generated_Source\PSoC4/VPWM.c **** *  triggerMode: Enumerated trigger mode value
1084:.\Generated_Source\PSoC4/VPWM.c **** *   Values:
1085:.\Generated_Source\PSoC4/VPWM.c **** *     - VPWM_TRIG_LEVEL     - Level
1086:.\Generated_Source\PSoC4/VPWM.c **** *     - VPWM_TRIG_RISING    - Rising edge
1087:.\Generated_Source\PSoC4/VPWM.c **** *     - VPWM_TRIG_FALLING   - Falling edge
1088:.\Generated_Source\PSoC4/VPWM.c **** *     - VPWM_TRIG_BOTH      - Both rising and falling edge
1089:.\Generated_Source\PSoC4/VPWM.c **** *
1090:.\Generated_Source\PSoC4/VPWM.c **** * Return:
1091:.\Generated_Source\PSoC4/VPWM.c **** *  None
1092:.\Generated_Source\PSoC4/VPWM.c **** *
1093:.\Generated_Source\PSoC4/VPWM.c **** *******************************************************************************/
1094:.\Generated_Source\PSoC4/VPWM.c **** void VPWM_SetCaptureMode(uint32 triggerMode)
1095:.\Generated_Source\PSoC4/VPWM.c **** {
 894              		.loc 1 1095 0
 895              		.cfi_startproc
 896              	.LVL58:
 897 0000 10B5     		push	{r4, lr}
 898              		.cfi_def_cfa_offset 8
 899              		.cfi_offset 4, -8
 900              		.cfi_offset 14, -4
ARM GAS  C:\Users\g\AppData\Local\Temp\ccGu2P49.s 			page 36


 901 0002 041C     		mov	r4, r0
1096:.\Generated_Source\PSoC4/VPWM.c ****     uint8 enableInterrupts;
1097:.\Generated_Source\PSoC4/VPWM.c **** 
1098:.\Generated_Source\PSoC4/VPWM.c ****     enableInterrupts = CyEnterCriticalSection();
 902              		.loc 1 1098 0
 903 0004 FFF7FEFF 		bl	CyEnterCriticalSection
 904              	.LVL59:
1099:.\Generated_Source\PSoC4/VPWM.c **** 
1100:.\Generated_Source\PSoC4/VPWM.c ****     VPWM_TRIG_CONTROL1_REG &= (uint32)~VPWM_CAPTURE_MASK;
 905              		.loc 1 1100 0
 906 0008 054B     		ldr	r3, .L77
 907 000a 1A68     		ldr	r2, [r3]
 908 000c 0321     		mov	r1, #3
 909 000e 8A43     		bic	r2, r1
 910 0010 1A60     		str	r2, [r3]
1101:.\Generated_Source\PSoC4/VPWM.c ****     VPWM_TRIG_CONTROL1_REG |= triggerMode;
 911              		.loc 1 1101 0
 912 0012 1A68     		ldr	r2, [r3]
 913 0014 1443     		orr	r4, r2
 914              	.LVL60:
 915 0016 1C60     		str	r4, [r3]
1102:.\Generated_Source\PSoC4/VPWM.c **** 
1103:.\Generated_Source\PSoC4/VPWM.c ****     CyExitCriticalSection(enableInterrupts);
 916              		.loc 1 1103 0
 917 0018 FFF7FEFF 		bl	CyExitCriticalSection
 918              	.LVL61:
1104:.\Generated_Source\PSoC4/VPWM.c **** }
 919              		.loc 1 1104 0
 920              		@ sp needed
 921 001c 10BD     		pop	{r4, pc}
 922              	.L78:
 923 001e C046     		.align	2
 924              	.L77:
 925 0020 24010540 		.word	1074069796
 926              		.cfi_endproc
 927              	.LFE28:
 928              		.size	VPWM_SetCaptureMode, .-VPWM_SetCaptureMode
 929              		.section	.text.VPWM_SetReloadMode,"ax",%progbits
 930              		.align	2
 931              		.global	VPWM_SetReloadMode
 932              		.code	16
 933              		.thumb_func
 934              		.type	VPWM_SetReloadMode, %function
 935              	VPWM_SetReloadMode:
 936              	.LFB29:
1105:.\Generated_Source\PSoC4/VPWM.c **** 
1106:.\Generated_Source\PSoC4/VPWM.c **** 
1107:.\Generated_Source\PSoC4/VPWM.c **** /*******************************************************************************
1108:.\Generated_Source\PSoC4/VPWM.c **** * Function Name: VPWM_SetReloadMode
1109:.\Generated_Source\PSoC4/VPWM.c **** ********************************************************************************
1110:.\Generated_Source\PSoC4/VPWM.c **** *
1111:.\Generated_Source\PSoC4/VPWM.c **** * Summary:
1112:.\Generated_Source\PSoC4/VPWM.c **** *  Sets the reload trigger mode. For Quadrature Decoder mode this is the index
1113:.\Generated_Source\PSoC4/VPWM.c **** *  input.
1114:.\Generated_Source\PSoC4/VPWM.c **** *
1115:.\Generated_Source\PSoC4/VPWM.c **** * Parameters:
1116:.\Generated_Source\PSoC4/VPWM.c **** *  triggerMode: Enumerated trigger mode value
ARM GAS  C:\Users\g\AppData\Local\Temp\ccGu2P49.s 			page 37


1117:.\Generated_Source\PSoC4/VPWM.c **** *   Values:
1118:.\Generated_Source\PSoC4/VPWM.c **** *     - VPWM_TRIG_LEVEL     - Level
1119:.\Generated_Source\PSoC4/VPWM.c **** *     - VPWM_TRIG_RISING    - Rising edge
1120:.\Generated_Source\PSoC4/VPWM.c **** *     - VPWM_TRIG_FALLING   - Falling edge
1121:.\Generated_Source\PSoC4/VPWM.c **** *     - VPWM_TRIG_BOTH      - Both rising and falling edge
1122:.\Generated_Source\PSoC4/VPWM.c **** *
1123:.\Generated_Source\PSoC4/VPWM.c **** * Return:
1124:.\Generated_Source\PSoC4/VPWM.c **** *  None
1125:.\Generated_Source\PSoC4/VPWM.c **** *
1126:.\Generated_Source\PSoC4/VPWM.c **** *******************************************************************************/
1127:.\Generated_Source\PSoC4/VPWM.c **** void VPWM_SetReloadMode(uint32 triggerMode)
1128:.\Generated_Source\PSoC4/VPWM.c **** {
 937              		.loc 1 1128 0
 938              		.cfi_startproc
 939              	.LVL62:
 940 0000 10B5     		push	{r4, lr}
 941              		.cfi_def_cfa_offset 8
 942              		.cfi_offset 4, -8
 943              		.cfi_offset 14, -4
 944 0002 041C     		mov	r4, r0
1129:.\Generated_Source\PSoC4/VPWM.c ****     uint8 enableInterrupts;
1130:.\Generated_Source\PSoC4/VPWM.c **** 
1131:.\Generated_Source\PSoC4/VPWM.c ****     enableInterrupts = CyEnterCriticalSection();
 945              		.loc 1 1131 0
 946 0004 FFF7FEFF 		bl	CyEnterCriticalSection
 947              	.LVL63:
1132:.\Generated_Source\PSoC4/VPWM.c **** 
1133:.\Generated_Source\PSoC4/VPWM.c ****     VPWM_TRIG_CONTROL1_REG &= (uint32)~VPWM_RELOAD_MASK;
 948              		.loc 1 1133 0
 949 0008 054B     		ldr	r3, .L80
 950 000a 1A68     		ldr	r2, [r3]
 951 000c 3021     		mov	r1, #48
 952 000e 8A43     		bic	r2, r1
 953 0010 1A60     		str	r2, [r3]
1134:.\Generated_Source\PSoC4/VPWM.c ****     VPWM_TRIG_CONTROL1_REG |= ((uint32)(triggerMode << VPWM_RELOAD_SHIFT));
 954              		.loc 1 1134 0
 955 0012 1A68     		ldr	r2, [r3]
 956 0014 2401     		lsl	r4, r4, #4
 957              	.LVL64:
 958 0016 1443     		orr	r4, r2
 959 0018 1C60     		str	r4, [r3]
1135:.\Generated_Source\PSoC4/VPWM.c **** 
1136:.\Generated_Source\PSoC4/VPWM.c ****     CyExitCriticalSection(enableInterrupts);
 960              		.loc 1 1136 0
 961 001a FFF7FEFF 		bl	CyExitCriticalSection
 962              	.LVL65:
1137:.\Generated_Source\PSoC4/VPWM.c **** }
 963              		.loc 1 1137 0
 964              		@ sp needed
 965 001e 10BD     		pop	{r4, pc}
 966              	.L81:
 967              		.align	2
 968              	.L80:
 969 0020 24010540 		.word	1074069796
 970              		.cfi_endproc
 971              	.LFE29:
 972              		.size	VPWM_SetReloadMode, .-VPWM_SetReloadMode
ARM GAS  C:\Users\g\AppData\Local\Temp\ccGu2P49.s 			page 38


 973              		.section	.text.VPWM_SetStartMode,"ax",%progbits
 974              		.align	2
 975              		.global	VPWM_SetStartMode
 976              		.code	16
 977              		.thumb_func
 978              		.type	VPWM_SetStartMode, %function
 979              	VPWM_SetStartMode:
 980              	.LFB30:
1138:.\Generated_Source\PSoC4/VPWM.c **** 
1139:.\Generated_Source\PSoC4/VPWM.c **** 
1140:.\Generated_Source\PSoC4/VPWM.c **** /*******************************************************************************
1141:.\Generated_Source\PSoC4/VPWM.c **** * Function Name: VPWM_SetStartMode
1142:.\Generated_Source\PSoC4/VPWM.c **** ********************************************************************************
1143:.\Generated_Source\PSoC4/VPWM.c **** *
1144:.\Generated_Source\PSoC4/VPWM.c **** * Summary:
1145:.\Generated_Source\PSoC4/VPWM.c **** *  Sets the start trigger mode. For Quadrature Decoder mode this is the
1146:.\Generated_Source\PSoC4/VPWM.c **** *  phiB input.
1147:.\Generated_Source\PSoC4/VPWM.c **** *
1148:.\Generated_Source\PSoC4/VPWM.c **** * Parameters:
1149:.\Generated_Source\PSoC4/VPWM.c **** *  triggerMode: Enumerated trigger mode value
1150:.\Generated_Source\PSoC4/VPWM.c **** *   Values:
1151:.\Generated_Source\PSoC4/VPWM.c **** *     - VPWM_TRIG_LEVEL     - Level
1152:.\Generated_Source\PSoC4/VPWM.c **** *     - VPWM_TRIG_RISING    - Rising edge
1153:.\Generated_Source\PSoC4/VPWM.c **** *     - VPWM_TRIG_FALLING   - Falling edge
1154:.\Generated_Source\PSoC4/VPWM.c **** *     - VPWM_TRIG_BOTH      - Both rising and falling edge
1155:.\Generated_Source\PSoC4/VPWM.c **** *
1156:.\Generated_Source\PSoC4/VPWM.c **** * Return:
1157:.\Generated_Source\PSoC4/VPWM.c **** *  None
1158:.\Generated_Source\PSoC4/VPWM.c **** *
1159:.\Generated_Source\PSoC4/VPWM.c **** *******************************************************************************/
1160:.\Generated_Source\PSoC4/VPWM.c **** void VPWM_SetStartMode(uint32 triggerMode)
1161:.\Generated_Source\PSoC4/VPWM.c **** {
 981              		.loc 1 1161 0
 982              		.cfi_startproc
 983              	.LVL66:
 984 0000 10B5     		push	{r4, lr}
 985              		.cfi_def_cfa_offset 8
 986              		.cfi_offset 4, -8
 987              		.cfi_offset 14, -4
 988 0002 041C     		mov	r4, r0
1162:.\Generated_Source\PSoC4/VPWM.c ****     uint8 enableInterrupts;
1163:.\Generated_Source\PSoC4/VPWM.c **** 
1164:.\Generated_Source\PSoC4/VPWM.c ****     enableInterrupts = CyEnterCriticalSection();
 989              		.loc 1 1164 0
 990 0004 FFF7FEFF 		bl	CyEnterCriticalSection
 991              	.LVL67:
1165:.\Generated_Source\PSoC4/VPWM.c **** 
1166:.\Generated_Source\PSoC4/VPWM.c ****     VPWM_TRIG_CONTROL1_REG &= (uint32)~VPWM_START_MASK;
 992              		.loc 1 1166 0
 993 0008 054B     		ldr	r3, .L83
 994 000a 1968     		ldr	r1, [r3]
 995 000c 054A     		ldr	r2, .L83+4
 996 000e 0A40     		and	r2, r1
 997 0010 1A60     		str	r2, [r3]
1167:.\Generated_Source\PSoC4/VPWM.c ****     VPWM_TRIG_CONTROL1_REG |= ((uint32)(triggerMode << VPWM_START_SHIFT));
 998              		.loc 1 1167 0
 999 0012 1A68     		ldr	r2, [r3]
ARM GAS  C:\Users\g\AppData\Local\Temp\ccGu2P49.s 			page 39


 1000 0014 2402     		lsl	r4, r4, #8
 1001              	.LVL68:
 1002 0016 1443     		orr	r4, r2
 1003 0018 1C60     		str	r4, [r3]
1168:.\Generated_Source\PSoC4/VPWM.c **** 
1169:.\Generated_Source\PSoC4/VPWM.c ****     CyExitCriticalSection(enableInterrupts);
 1004              		.loc 1 1169 0
 1005 001a FFF7FEFF 		bl	CyExitCriticalSection
 1006              	.LVL69:
1170:.\Generated_Source\PSoC4/VPWM.c **** }
 1007              		.loc 1 1170 0
 1008              		@ sp needed
 1009 001e 10BD     		pop	{r4, pc}
 1010              	.L84:
 1011              		.align	2
 1012              	.L83:
 1013 0020 24010540 		.word	1074069796
 1014 0024 FFFCFFFF 		.word	-769
 1015              		.cfi_endproc
 1016              	.LFE30:
 1017              		.size	VPWM_SetStartMode, .-VPWM_SetStartMode
 1018              		.section	.text.VPWM_SetStopMode,"ax",%progbits
 1019              		.align	2
 1020              		.global	VPWM_SetStopMode
 1021              		.code	16
 1022              		.thumb_func
 1023              		.type	VPWM_SetStopMode, %function
 1024              	VPWM_SetStopMode:
 1025              	.LFB31:
1171:.\Generated_Source\PSoC4/VPWM.c **** 
1172:.\Generated_Source\PSoC4/VPWM.c **** 
1173:.\Generated_Source\PSoC4/VPWM.c **** /*******************************************************************************
1174:.\Generated_Source\PSoC4/VPWM.c **** * Function Name: VPWM_SetStopMode
1175:.\Generated_Source\PSoC4/VPWM.c **** ********************************************************************************
1176:.\Generated_Source\PSoC4/VPWM.c **** *
1177:.\Generated_Source\PSoC4/VPWM.c **** * Summary:
1178:.\Generated_Source\PSoC4/VPWM.c **** *  Sets the stop trigger mode. For PWM mode this is the kill input.
1179:.\Generated_Source\PSoC4/VPWM.c **** *
1180:.\Generated_Source\PSoC4/VPWM.c **** * Parameters:
1181:.\Generated_Source\PSoC4/VPWM.c **** *  triggerMode: Enumerated trigger mode value
1182:.\Generated_Source\PSoC4/VPWM.c **** *   Values:
1183:.\Generated_Source\PSoC4/VPWM.c **** *     - VPWM_TRIG_LEVEL     - Level
1184:.\Generated_Source\PSoC4/VPWM.c **** *     - VPWM_TRIG_RISING    - Rising edge
1185:.\Generated_Source\PSoC4/VPWM.c **** *     - VPWM_TRIG_FALLING   - Falling edge
1186:.\Generated_Source\PSoC4/VPWM.c **** *     - VPWM_TRIG_BOTH      - Both rising and falling edge
1187:.\Generated_Source\PSoC4/VPWM.c **** *
1188:.\Generated_Source\PSoC4/VPWM.c **** * Return:
1189:.\Generated_Source\PSoC4/VPWM.c **** *  None
1190:.\Generated_Source\PSoC4/VPWM.c **** *
1191:.\Generated_Source\PSoC4/VPWM.c **** *******************************************************************************/
1192:.\Generated_Source\PSoC4/VPWM.c **** void VPWM_SetStopMode(uint32 triggerMode)
1193:.\Generated_Source\PSoC4/VPWM.c **** {
 1026              		.loc 1 1193 0
 1027              		.cfi_startproc
 1028              	.LVL70:
 1029 0000 10B5     		push	{r4, lr}
 1030              		.cfi_def_cfa_offset 8
ARM GAS  C:\Users\g\AppData\Local\Temp\ccGu2P49.s 			page 40


 1031              		.cfi_offset 4, -8
 1032              		.cfi_offset 14, -4
 1033 0002 041C     		mov	r4, r0
1194:.\Generated_Source\PSoC4/VPWM.c ****     uint8 enableInterrupts;
1195:.\Generated_Source\PSoC4/VPWM.c **** 
1196:.\Generated_Source\PSoC4/VPWM.c ****     enableInterrupts = CyEnterCriticalSection();
 1034              		.loc 1 1196 0
 1035 0004 FFF7FEFF 		bl	CyEnterCriticalSection
 1036              	.LVL71:
1197:.\Generated_Source\PSoC4/VPWM.c **** 
1198:.\Generated_Source\PSoC4/VPWM.c ****     VPWM_TRIG_CONTROL1_REG &= (uint32)~VPWM_STOP_MASK;
 1037              		.loc 1 1198 0
 1038 0008 054B     		ldr	r3, .L86
 1039 000a 1A68     		ldr	r2, [r3]
 1040 000c C021     		mov	r1, #192
 1041 000e 8A43     		bic	r2, r1
 1042 0010 1A60     		str	r2, [r3]
1199:.\Generated_Source\PSoC4/VPWM.c ****     VPWM_TRIG_CONTROL1_REG |= ((uint32)(triggerMode << VPWM_STOP_SHIFT));
 1043              		.loc 1 1199 0
 1044 0012 1A68     		ldr	r2, [r3]
 1045 0014 A401     		lsl	r4, r4, #6
 1046              	.LVL72:
 1047 0016 1443     		orr	r4, r2
 1048 0018 1C60     		str	r4, [r3]
1200:.\Generated_Source\PSoC4/VPWM.c **** 
1201:.\Generated_Source\PSoC4/VPWM.c ****     CyExitCriticalSection(enableInterrupts);
 1049              		.loc 1 1201 0
 1050 001a FFF7FEFF 		bl	CyExitCriticalSection
 1051              	.LVL73:
1202:.\Generated_Source\PSoC4/VPWM.c **** }
 1052              		.loc 1 1202 0
 1053              		@ sp needed
 1054 001e 10BD     		pop	{r4, pc}
 1055              	.L87:
 1056              		.align	2
 1057              	.L86:
 1058 0020 24010540 		.word	1074069796
 1059              		.cfi_endproc
 1060              	.LFE31:
 1061              		.size	VPWM_SetStopMode, .-VPWM_SetStopMode
 1062              		.section	.text.VPWM_SetCountMode,"ax",%progbits
 1063              		.align	2
 1064              		.global	VPWM_SetCountMode
 1065              		.code	16
 1066              		.thumb_func
 1067              		.type	VPWM_SetCountMode, %function
 1068              	VPWM_SetCountMode:
 1069              	.LFB32:
1203:.\Generated_Source\PSoC4/VPWM.c **** 
1204:.\Generated_Source\PSoC4/VPWM.c **** 
1205:.\Generated_Source\PSoC4/VPWM.c **** /*******************************************************************************
1206:.\Generated_Source\PSoC4/VPWM.c **** * Function Name: VPWM_SetCountMode
1207:.\Generated_Source\PSoC4/VPWM.c **** ********************************************************************************
1208:.\Generated_Source\PSoC4/VPWM.c **** *
1209:.\Generated_Source\PSoC4/VPWM.c **** * Summary:
1210:.\Generated_Source\PSoC4/VPWM.c **** *  Sets the count trigger mode. For Quadrature Decoder mode this is the phiA
1211:.\Generated_Source\PSoC4/VPWM.c **** *  input.
ARM GAS  C:\Users\g\AppData\Local\Temp\ccGu2P49.s 			page 41


1212:.\Generated_Source\PSoC4/VPWM.c **** *
1213:.\Generated_Source\PSoC4/VPWM.c **** * Parameters:
1214:.\Generated_Source\PSoC4/VPWM.c **** *  triggerMode: Enumerated trigger mode value
1215:.\Generated_Source\PSoC4/VPWM.c **** *   Values:
1216:.\Generated_Source\PSoC4/VPWM.c **** *     - VPWM_TRIG_LEVEL     - Level
1217:.\Generated_Source\PSoC4/VPWM.c **** *     - VPWM_TRIG_RISING    - Rising edge
1218:.\Generated_Source\PSoC4/VPWM.c **** *     - VPWM_TRIG_FALLING   - Falling edge
1219:.\Generated_Source\PSoC4/VPWM.c **** *     - VPWM_TRIG_BOTH      - Both rising and falling edge
1220:.\Generated_Source\PSoC4/VPWM.c **** *
1221:.\Generated_Source\PSoC4/VPWM.c **** * Return:
1222:.\Generated_Source\PSoC4/VPWM.c **** *  None
1223:.\Generated_Source\PSoC4/VPWM.c **** *
1224:.\Generated_Source\PSoC4/VPWM.c **** *******************************************************************************/
1225:.\Generated_Source\PSoC4/VPWM.c **** void VPWM_SetCountMode(uint32 triggerMode)
1226:.\Generated_Source\PSoC4/VPWM.c **** {
 1070              		.loc 1 1226 0
 1071              		.cfi_startproc
 1072              	.LVL74:
 1073 0000 10B5     		push	{r4, lr}
 1074              		.cfi_def_cfa_offset 8
 1075              		.cfi_offset 4, -8
 1076              		.cfi_offset 14, -4
 1077 0002 041C     		mov	r4, r0
1227:.\Generated_Source\PSoC4/VPWM.c ****     uint8 enableInterrupts;
1228:.\Generated_Source\PSoC4/VPWM.c **** 
1229:.\Generated_Source\PSoC4/VPWM.c ****     enableInterrupts = CyEnterCriticalSection();
 1078              		.loc 1 1229 0
 1079 0004 FFF7FEFF 		bl	CyEnterCriticalSection
 1080              	.LVL75:
1230:.\Generated_Source\PSoC4/VPWM.c **** 
1231:.\Generated_Source\PSoC4/VPWM.c ****     VPWM_TRIG_CONTROL1_REG &= (uint32)~VPWM_COUNT_MASK;
 1081              		.loc 1 1231 0
 1082 0008 054B     		ldr	r3, .L89
 1083 000a 1A68     		ldr	r2, [r3]
 1084 000c 0C21     		mov	r1, #12
 1085 000e 8A43     		bic	r2, r1
 1086 0010 1A60     		str	r2, [r3]
1232:.\Generated_Source\PSoC4/VPWM.c ****     VPWM_TRIG_CONTROL1_REG |= ((uint32)(triggerMode << VPWM_COUNT_SHIFT));
 1087              		.loc 1 1232 0
 1088 0012 1A68     		ldr	r2, [r3]
 1089 0014 A400     		lsl	r4, r4, #2
 1090              	.LVL76:
 1091 0016 1443     		orr	r4, r2
 1092 0018 1C60     		str	r4, [r3]
1233:.\Generated_Source\PSoC4/VPWM.c **** 
1234:.\Generated_Source\PSoC4/VPWM.c ****     CyExitCriticalSection(enableInterrupts);
 1093              		.loc 1 1234 0
 1094 001a FFF7FEFF 		bl	CyExitCriticalSection
 1095              	.LVL77:
1235:.\Generated_Source\PSoC4/VPWM.c **** }
 1096              		.loc 1 1235 0
 1097              		@ sp needed
 1098 001e 10BD     		pop	{r4, pc}
 1099              	.L90:
 1100              		.align	2
 1101              	.L89:
 1102 0020 24010540 		.word	1074069796
ARM GAS  C:\Users\g\AppData\Local\Temp\ccGu2P49.s 			page 42


 1103              		.cfi_endproc
 1104              	.LFE32:
 1105              		.size	VPWM_SetCountMode, .-VPWM_SetCountMode
 1106              		.section	.text.VPWM_TriggerCommand,"ax",%progbits
 1107              		.align	2
 1108              		.global	VPWM_TriggerCommand
 1109              		.code	16
 1110              		.thumb_func
 1111              		.type	VPWM_TriggerCommand, %function
 1112              	VPWM_TriggerCommand:
 1113              	.LFB33:
1236:.\Generated_Source\PSoC4/VPWM.c **** 
1237:.\Generated_Source\PSoC4/VPWM.c **** 
1238:.\Generated_Source\PSoC4/VPWM.c **** /*******************************************************************************
1239:.\Generated_Source\PSoC4/VPWM.c **** * Function Name: VPWM_TriggerCommand
1240:.\Generated_Source\PSoC4/VPWM.c **** ********************************************************************************
1241:.\Generated_Source\PSoC4/VPWM.c **** *
1242:.\Generated_Source\PSoC4/VPWM.c **** * Summary:
1243:.\Generated_Source\PSoC4/VPWM.c **** *  Triggers the designated command to occur on the designated TCPWM instances.
1244:.\Generated_Source\PSoC4/VPWM.c **** *  The mask can be used to apply this command simultaneously to more than one
1245:.\Generated_Source\PSoC4/VPWM.c **** *  instance.  This allows multiple TCPWM instances to be synchronized.
1246:.\Generated_Source\PSoC4/VPWM.c **** *
1247:.\Generated_Source\PSoC4/VPWM.c **** * Parameters:
1248:.\Generated_Source\PSoC4/VPWM.c **** *  mask: A combination of mask bits for each instance of the TCPWM that the
1249:.\Generated_Source\PSoC4/VPWM.c **** *        command should apply to.  This function from one instance can be used
1250:.\Generated_Source\PSoC4/VPWM.c **** *        to apply the command to any of the instances in the design.
1251:.\Generated_Source\PSoC4/VPWM.c **** *        The mask value for a specific instance is available with the MASK
1252:.\Generated_Source\PSoC4/VPWM.c **** *        define.
1253:.\Generated_Source\PSoC4/VPWM.c **** *  command: Enumerated command values. Capture command only applicable for
1254:.\Generated_Source\PSoC4/VPWM.c **** *           Timer/Counter with Capture and PWM modes.
1255:.\Generated_Source\PSoC4/VPWM.c **** *   Values:
1256:.\Generated_Source\PSoC4/VPWM.c **** *     - VPWM_CMD_CAPTURE    - Trigger Capture/Switch command
1257:.\Generated_Source\PSoC4/VPWM.c **** *     - VPWM_CMD_RELOAD     - Trigger Reload/Index command
1258:.\Generated_Source\PSoC4/VPWM.c **** *     - VPWM_CMD_STOP       - Trigger Stop/Kill command
1259:.\Generated_Source\PSoC4/VPWM.c **** *     - VPWM_CMD_START      - Trigger Start/phiB command
1260:.\Generated_Source\PSoC4/VPWM.c **** *
1261:.\Generated_Source\PSoC4/VPWM.c **** * Return:
1262:.\Generated_Source\PSoC4/VPWM.c **** *  None
1263:.\Generated_Source\PSoC4/VPWM.c **** *
1264:.\Generated_Source\PSoC4/VPWM.c **** *******************************************************************************/
1265:.\Generated_Source\PSoC4/VPWM.c **** void VPWM_TriggerCommand(uint32 mask, uint32 command)
1266:.\Generated_Source\PSoC4/VPWM.c **** {
 1114              		.loc 1 1266 0
 1115              		.cfi_startproc
 1116              	.LVL78:
 1117 0000 38B5     		push	{r3, r4, r5, lr}
 1118              		.cfi_def_cfa_offset 16
 1119              		.cfi_offset 3, -16
 1120              		.cfi_offset 4, -12
 1121              		.cfi_offset 5, -8
 1122              		.cfi_offset 14, -4
 1123 0002 041C     		mov	r4, r0
 1124 0004 0D1C     		mov	r5, r1
1267:.\Generated_Source\PSoC4/VPWM.c ****     uint8 enableInterrupts;
1268:.\Generated_Source\PSoC4/VPWM.c **** 
1269:.\Generated_Source\PSoC4/VPWM.c ****     enableInterrupts = CyEnterCriticalSection();
 1125              		.loc 1 1269 0
ARM GAS  C:\Users\g\AppData\Local\Temp\ccGu2P49.s 			page 43


 1126 0006 FFF7FEFF 		bl	CyEnterCriticalSection
 1127              	.LVL79:
1270:.\Generated_Source\PSoC4/VPWM.c **** 
1271:.\Generated_Source\PSoC4/VPWM.c ****     VPWM_COMMAND_REG = ((uint32)(mask << command));
 1128              		.loc 1 1271 0
 1129 000a AC40     		lsl	r4, r4, r5
 1130              	.LVL80:
 1131 000c 024B     		ldr	r3, .L92
 1132 000e 1C60     		str	r4, [r3]
1272:.\Generated_Source\PSoC4/VPWM.c **** 
1273:.\Generated_Source\PSoC4/VPWM.c ****     CyExitCriticalSection(enableInterrupts);
 1133              		.loc 1 1273 0
 1134 0010 FFF7FEFF 		bl	CyExitCriticalSection
 1135              	.LVL81:
1274:.\Generated_Source\PSoC4/VPWM.c **** }
 1136              		.loc 1 1274 0
 1137              		@ sp needed
 1138              	.LVL82:
 1139 0014 38BD     		pop	{r3, r4, r5, pc}
 1140              	.L93:
 1141 0016 C046     		.align	2
 1142              	.L92:
 1143 0018 08000540 		.word	1074069512
 1144              		.cfi_endproc
 1145              	.LFE33:
 1146              		.size	VPWM_TriggerCommand, .-VPWM_TriggerCommand
 1147              		.section	.text.VPWM_Enable,"ax",%progbits
 1148              		.align	2
 1149              		.global	VPWM_Enable
 1150              		.code	16
 1151              		.thumb_func
 1152              		.type	VPWM_Enable, %function
 1153              	VPWM_Enable:
 1154              	.LFB1:
 178:.\Generated_Source\PSoC4/VPWM.c ****     uint8 enableInterrupts;
 1155              		.loc 1 178 0
 1156              		.cfi_startproc
 1157 0000 08B5     		push	{r3, lr}
 1158              		.cfi_def_cfa_offset 8
 1159              		.cfi_offset 3, -8
 1160              		.cfi_offset 14, -4
 181:.\Generated_Source\PSoC4/VPWM.c ****     VPWM_BLOCK_CONTROL_REG |= VPWM_MASK;
 1161              		.loc 1 181 0
 1162 0002 FFF7FEFF 		bl	CyEnterCriticalSection
 1163              	.LVL83:
 182:.\Generated_Source\PSoC4/VPWM.c ****     CyExitCriticalSection(enableInterrupts);
 1164              		.loc 1 182 0
 1165 0006 064A     		ldr	r2, .L95
 1166 0008 1168     		ldr	r1, [r2]
 1167 000a 0123     		mov	r3, #1
 1168 000c 0B43     		orr	r3, r1
 1169 000e 1360     		str	r3, [r2]
 183:.\Generated_Source\PSoC4/VPWM.c **** 
 1170              		.loc 1 183 0
 1171 0010 FFF7FEFF 		bl	CyExitCriticalSection
 1172              	.LVL84:
 188:.\Generated_Source\PSoC4/VPWM.c ****         #endif /* (0u == VPWM_PWM_START_SIGNAL_PRESENT) */
ARM GAS  C:\Users\g\AppData\Local\Temp\ccGu2P49.s 			page 44


 1173              		.loc 1 188 0
 1174 0014 0120     		mov	r0, #1
 1175 0016 1821     		mov	r1, #24
 1176 0018 FFF7FEFF 		bl	VPWM_TriggerCommand
 1177              	.LVL85:
 203:.\Generated_Source\PSoC4/VPWM.c **** 
 1178              		.loc 1 203 0
 1179              		@ sp needed
 1180 001c 08BD     		pop	{r3, pc}
 1181              	.L96:
 1182 001e C046     		.align	2
 1183              	.L95:
 1184 0020 00000540 		.word	1074069504
 1185              		.cfi_endproc
 1186              	.LFE1:
 1187              		.size	VPWM_Enable, .-VPWM_Enable
 1188              		.section	.text.VPWM_ReadStatus,"ax",%progbits
 1189              		.align	2
 1190              		.global	VPWM_ReadStatus
 1191              		.code	16
 1192              		.thumb_func
 1193              		.type	VPWM_ReadStatus, %function
 1194              	VPWM_ReadStatus:
 1195              	.LFB34:
1275:.\Generated_Source\PSoC4/VPWM.c **** 
1276:.\Generated_Source\PSoC4/VPWM.c **** 
1277:.\Generated_Source\PSoC4/VPWM.c **** /*******************************************************************************
1278:.\Generated_Source\PSoC4/VPWM.c **** * Function Name: VPWM_ReadStatus
1279:.\Generated_Source\PSoC4/VPWM.c **** ********************************************************************************
1280:.\Generated_Source\PSoC4/VPWM.c **** *
1281:.\Generated_Source\PSoC4/VPWM.c **** * Summary:
1282:.\Generated_Source\PSoC4/VPWM.c **** *  Reads the status of the VPWM.
1283:.\Generated_Source\PSoC4/VPWM.c **** *
1284:.\Generated_Source\PSoC4/VPWM.c **** * Parameters:
1285:.\Generated_Source\PSoC4/VPWM.c **** *  None
1286:.\Generated_Source\PSoC4/VPWM.c **** *
1287:.\Generated_Source\PSoC4/VPWM.c **** * Return:
1288:.\Generated_Source\PSoC4/VPWM.c **** *  Status
1289:.\Generated_Source\PSoC4/VPWM.c **** *   Values:
1290:.\Generated_Source\PSoC4/VPWM.c **** *     - VPWM_STATUS_DOWN    - Set if counting down
1291:.\Generated_Source\PSoC4/VPWM.c **** *     - VPWM_STATUS_RUNNING - Set if counter is running
1292:.\Generated_Source\PSoC4/VPWM.c **** *
1293:.\Generated_Source\PSoC4/VPWM.c **** *******************************************************************************/
1294:.\Generated_Source\PSoC4/VPWM.c **** uint32 VPWM_ReadStatus(void)
1295:.\Generated_Source\PSoC4/VPWM.c **** {
 1196              		.loc 1 1295 0
 1197              		.cfi_startproc
1296:.\Generated_Source\PSoC4/VPWM.c ****     return ((VPWM_STATUS_REG >> VPWM_RUNNING_STATUS_SHIFT) |
 1198              		.loc 1 1296 0
 1199 0000 034B     		ldr	r3, .L98
 1200 0002 1868     		ldr	r0, [r3]
 1201 0004 820F     		lsr	r2, r0, #30
1297:.\Generated_Source\PSoC4/VPWM.c ****             (VPWM_STATUS_REG & VPWM_STATUS_DOWN));
 1202              		.loc 1 1297 0
 1203 0006 1B68     		ldr	r3, [r3]
 1204 0008 0120     		mov	r0, #1
 1205 000a 1840     		and	r0, r3
ARM GAS  C:\Users\g\AppData\Local\Temp\ccGu2P49.s 			page 45


1296:.\Generated_Source\PSoC4/VPWM.c ****     return ((VPWM_STATUS_REG >> VPWM_RUNNING_STATUS_SHIFT) |
 1206              		.loc 1 1296 0
 1207 000c 1043     		orr	r0, r2
1298:.\Generated_Source\PSoC4/VPWM.c **** }
 1208              		.loc 1 1298 0
 1209              		@ sp needed
 1210 000e 7047     		bx	lr
 1211              	.L99:
 1212              		.align	2
 1213              	.L98:
 1214 0010 04010540 		.word	1074069764
 1215              		.cfi_endproc
 1216              	.LFE34:
 1217              		.size	VPWM_ReadStatus, .-VPWM_ReadStatus
 1218              		.section	.text.VPWM_SetInterruptMode,"ax",%progbits
 1219              		.align	2
 1220              		.global	VPWM_SetInterruptMode
 1221              		.code	16
 1222              		.thumb_func
 1223              		.type	VPWM_SetInterruptMode, %function
 1224              	VPWM_SetInterruptMode:
 1225              	.LFB35:
1299:.\Generated_Source\PSoC4/VPWM.c **** 
1300:.\Generated_Source\PSoC4/VPWM.c **** 
1301:.\Generated_Source\PSoC4/VPWM.c **** /*******************************************************************************
1302:.\Generated_Source\PSoC4/VPWM.c **** * Function Name: VPWM_SetInterruptMode
1303:.\Generated_Source\PSoC4/VPWM.c **** ********************************************************************************
1304:.\Generated_Source\PSoC4/VPWM.c **** *
1305:.\Generated_Source\PSoC4/VPWM.c **** * Summary:
1306:.\Generated_Source\PSoC4/VPWM.c **** *  Sets the interrupt mask to control which interrupt
1307:.\Generated_Source\PSoC4/VPWM.c **** *  requests generate the interrupt signal.
1308:.\Generated_Source\PSoC4/VPWM.c **** *
1309:.\Generated_Source\PSoC4/VPWM.c **** * Parameters:
1310:.\Generated_Source\PSoC4/VPWM.c **** *   interruptMask: Mask of bits to be enabled
1311:.\Generated_Source\PSoC4/VPWM.c **** *   Values:
1312:.\Generated_Source\PSoC4/VPWM.c **** *     - VPWM_INTR_MASK_TC       - Terminal count mask
1313:.\Generated_Source\PSoC4/VPWM.c **** *     - VPWM_INTR_MASK_CC_MATCH - Compare count / capture mask
1314:.\Generated_Source\PSoC4/VPWM.c **** *
1315:.\Generated_Source\PSoC4/VPWM.c **** * Return:
1316:.\Generated_Source\PSoC4/VPWM.c **** *  None
1317:.\Generated_Source\PSoC4/VPWM.c **** *
1318:.\Generated_Source\PSoC4/VPWM.c **** *******************************************************************************/
1319:.\Generated_Source\PSoC4/VPWM.c **** void VPWM_SetInterruptMode(uint32 interruptMask)
1320:.\Generated_Source\PSoC4/VPWM.c **** {
 1226              		.loc 1 1320 0
 1227              		.cfi_startproc
 1228              	.LVL86:
1321:.\Generated_Source\PSoC4/VPWM.c ****     VPWM_INTERRUPT_MASK_REG =  interruptMask;
 1229              		.loc 1 1321 0
 1230 0000 014B     		ldr	r3, .L101
 1231 0002 1860     		str	r0, [r3]
1322:.\Generated_Source\PSoC4/VPWM.c **** }
 1232              		.loc 1 1322 0
 1233              		@ sp needed
 1234 0004 7047     		bx	lr
 1235              	.L102:
 1236 0006 C046     		.align	2
ARM GAS  C:\Users\g\AppData\Local\Temp\ccGu2P49.s 			page 46


 1237              	.L101:
 1238 0008 38010540 		.word	1074069816
 1239              		.cfi_endproc
 1240              	.LFE35:
 1241              		.size	VPWM_SetInterruptMode, .-VPWM_SetInterruptMode
 1242              		.section	.text.VPWM_Init,"ax",%progbits
 1243              		.align	2
 1244              		.global	VPWM_Init
 1245              		.code	16
 1246              		.thumb_func
 1247              		.type	VPWM_Init, %function
 1248              	VPWM_Init:
 1249              	.LFB0:
  39:.\Generated_Source\PSoC4/VPWM.c **** 
 1250              		.loc 1 39 0
 1251              		.cfi_startproc
 1252 0000 10B5     		push	{r4, lr}
 1253              		.cfi_def_cfa_offset 8
 1254              		.cfi_offset 4, -8
 1255              		.cfi_offset 14, -4
  89:.\Generated_Source\PSoC4/VPWM.c **** 
 1256              		.loc 1 89 0
 1257 0002 114C     		ldr	r4, .L104
 1258 0004 A023     		mov	r3, #160
 1259 0006 DB04     		lsl	r3, r3, #19
 1260 0008 2360     		str	r3, [r4]
  95:.\Generated_Source\PSoC4/VPWM.c ****             
 1261              		.loc 1 95 0
 1262 000a 2368     		ldr	r3, [r4]
 1263 000c 8022     		mov	r2, #128
 1264 000e 9202     		lsl	r2, r2, #10
 1265 0010 1343     		orr	r3, r2
 1266 0012 2360     		str	r3, [r4]
 103:.\Generated_Source\PSoC4/VPWM.c ****             #endif  /* (VPWM_CY_TCPWM_V2 && VPWM_PWM_UPDOWN_CNT_USED && !VPWM_CY_TCPWM_4000) */
 1267              		.loc 1 103 0
 1268 0014 0020     		mov	r0, #0
 1269 0016 FFF7FEFF 		bl	VPWM_WriteCounter
 1270              	.LVL87:
 108:.\Generated_Source\PSoC4/VPWM.c ****         #endif  /* (VPWM__PWM_DT == VPWM_PWM_MODE) */
 1271              		.loc 1 108 0
 1272 001a 2368     		ldr	r3, [r4]
 1273 001c C822     		mov	r2, #200
 1274 001e D201     		lsl	r2, r2, #7
 1275 0020 1343     		orr	r3, r2
 1276 0022 2360     		str	r3, [r4]
 116:.\Generated_Source\PSoC4/VPWM.c ****     
 1277              		.loc 1 116 0
 1278 0024 C322     		mov	r2, #195
 1279 0026 9200     		lsl	r2, r2, #2
 1280 0028 084B     		ldr	r3, .L104+4
 1281 002a 1A60     		str	r2, [r3]
 119:.\Generated_Source\PSoC4/VPWM.c **** 
 1282              		.loc 1 119 0
 1283 002c 0120     		mov	r0, #1
 1284 002e FFF7FEFF 		bl	VPWM_SetInterruptMode
 1285              	.LVL88:
 137:.\Generated_Source\PSoC4/VPWM.c ****             #endif  /* ( VPWM_PWM_CENTER == VPWM_PWM_ALIGN) */
ARM GAS  C:\Users\g\AppData\Local\Temp\ccGu2P49.s 			page 47


 1286              		.loc 1 137 0
 1287 0032 1E22     		mov	r2, #30
 1288 0034 064B     		ldr	r3, .L104+8
 1289 0036 1A60     		str	r2, [r3]
 146:.\Generated_Source\PSoC4/VPWM.c ****         VPWM_WriteCompare(VPWM_PWM_COMPARE_VALUE);
 1290              		.loc 1 146 0
 1291 0038 8020     		mov	r0, #128
 1292 003a 4001     		lsl	r0, r0, #5
 1293 003c FFF7FEFF 		bl	VPWM_WritePeriod
 1294              	.LVL89:
 147:.\Generated_Source\PSoC4/VPWM.c **** 
 1295              		.loc 1 147 0
 1296 0040 0120     		mov	r0, #1
 1297 0042 FFF7FEFF 		bl	VPWM_WriteCompare
 1298              	.LVL90:
 160:.\Generated_Source\PSoC4/VPWM.c **** 
 1299              		.loc 1 160 0
 1300              		@ sp needed
 1301 0046 10BD     		pop	{r4, pc}
 1302              	.L105:
 1303              		.align	2
 1304              	.L104:
 1305 0048 00010540 		.word	1074069760
 1306 004c 24010540 		.word	1074069796
 1307 0050 28010540 		.word	1074069800
 1308              		.cfi_endproc
 1309              	.LFE0:
 1310              		.size	VPWM_Init, .-VPWM_Init
 1311              		.section	.text.VPWM_Start,"ax",%progbits
 1312              		.align	2
 1313              		.global	VPWM_Start
 1314              		.code	16
 1315              		.thumb_func
 1316              		.type	VPWM_Start, %function
 1317              	VPWM_Start:
 1318              	.LFB2:
 231:.\Generated_Source\PSoC4/VPWM.c ****     if (0u == VPWM_initVar)
 1319              		.loc 1 231 0
 1320              		.cfi_startproc
 1321 0000 08B5     		push	{r3, lr}
 1322              		.cfi_def_cfa_offset 8
 1323              		.cfi_offset 3, -8
 1324              		.cfi_offset 14, -4
 232:.\Generated_Source\PSoC4/VPWM.c ****     {
 1325              		.loc 1 232 0
 1326 0002 064B     		ldr	r3, .L108
 1327 0004 1B78     		ldrb	r3, [r3]
 1328 0006 002B     		cmp	r3, #0
 1329 0008 04D1     		bne	.L107
 234:.\Generated_Source\PSoC4/VPWM.c ****         VPWM_initVar = 1u;
 1330              		.loc 1 234 0
 1331 000a FFF7FEFF 		bl	VPWM_Init
 1332              	.LVL91:
 235:.\Generated_Source\PSoC4/VPWM.c ****     }
 1333              		.loc 1 235 0
 1334 000e 0122     		mov	r2, #1
 1335 0010 024B     		ldr	r3, .L108
ARM GAS  C:\Users\g\AppData\Local\Temp\ccGu2P49.s 			page 48


 1336 0012 1A70     		strb	r2, [r3]
 1337              	.L107:
 238:.\Generated_Source\PSoC4/VPWM.c **** }
 1338              		.loc 1 238 0
 1339 0014 FFF7FEFF 		bl	VPWM_Enable
 1340              	.LVL92:
 239:.\Generated_Source\PSoC4/VPWM.c **** 
 1341              		.loc 1 239 0
 1342              		@ sp needed
 1343 0018 08BD     		pop	{r3, pc}
 1344              	.L109:
 1345 001a C046     		.align	2
 1346              	.L108:
 1347 001c 00000000 		.word	.LANCHOR0
 1348              		.cfi_endproc
 1349              	.LFE2:
 1350              		.size	VPWM_Start, .-VPWM_Start
 1351              		.section	.text.VPWM_GetInterruptSourceMasked,"ax",%progbits
 1352              		.align	2
 1353              		.global	VPWM_GetInterruptSourceMasked
 1354              		.code	16
 1355              		.thumb_func
 1356              		.type	VPWM_GetInterruptSourceMasked, %function
 1357              	VPWM_GetInterruptSourceMasked:
 1358              	.LFB36:
1323:.\Generated_Source\PSoC4/VPWM.c **** 
1324:.\Generated_Source\PSoC4/VPWM.c **** 
1325:.\Generated_Source\PSoC4/VPWM.c **** /*******************************************************************************
1326:.\Generated_Source\PSoC4/VPWM.c **** * Function Name: VPWM_GetInterruptSourceMasked
1327:.\Generated_Source\PSoC4/VPWM.c **** ********************************************************************************
1328:.\Generated_Source\PSoC4/VPWM.c **** *
1329:.\Generated_Source\PSoC4/VPWM.c **** * Summary:
1330:.\Generated_Source\PSoC4/VPWM.c **** *  Gets the interrupt requests masked by the interrupt mask.
1331:.\Generated_Source\PSoC4/VPWM.c **** *
1332:.\Generated_Source\PSoC4/VPWM.c **** * Parameters:
1333:.\Generated_Source\PSoC4/VPWM.c **** *   None
1334:.\Generated_Source\PSoC4/VPWM.c **** *
1335:.\Generated_Source\PSoC4/VPWM.c **** * Return:
1336:.\Generated_Source\PSoC4/VPWM.c **** *  Masked interrupt source
1337:.\Generated_Source\PSoC4/VPWM.c **** *   Values:
1338:.\Generated_Source\PSoC4/VPWM.c **** *     - VPWM_INTR_MASK_TC       - Terminal count mask
1339:.\Generated_Source\PSoC4/VPWM.c **** *     - VPWM_INTR_MASK_CC_MATCH - Compare count / capture mask
1340:.\Generated_Source\PSoC4/VPWM.c **** *
1341:.\Generated_Source\PSoC4/VPWM.c **** *******************************************************************************/
1342:.\Generated_Source\PSoC4/VPWM.c **** uint32 VPWM_GetInterruptSourceMasked(void)
1343:.\Generated_Source\PSoC4/VPWM.c **** {
 1359              		.loc 1 1343 0
 1360              		.cfi_startproc
1344:.\Generated_Source\PSoC4/VPWM.c ****     return (VPWM_INTERRUPT_MASKED_REG);
 1361              		.loc 1 1344 0
 1362 0000 014B     		ldr	r3, .L111
 1363 0002 1868     		ldr	r0, [r3]
1345:.\Generated_Source\PSoC4/VPWM.c **** }
 1364              		.loc 1 1345 0
 1365              		@ sp needed
 1366 0004 7047     		bx	lr
 1367              	.L112:
ARM GAS  C:\Users\g\AppData\Local\Temp\ccGu2P49.s 			page 49


 1368 0006 C046     		.align	2
 1369              	.L111:
 1370 0008 3C010540 		.word	1074069820
 1371              		.cfi_endproc
 1372              	.LFE36:
 1373              		.size	VPWM_GetInterruptSourceMasked, .-VPWM_GetInterruptSourceMasked
 1374              		.section	.text.VPWM_GetInterruptSource,"ax",%progbits
 1375              		.align	2
 1376              		.global	VPWM_GetInterruptSource
 1377              		.code	16
 1378              		.thumb_func
 1379              		.type	VPWM_GetInterruptSource, %function
 1380              	VPWM_GetInterruptSource:
 1381              	.LFB37:
1346:.\Generated_Source\PSoC4/VPWM.c **** 
1347:.\Generated_Source\PSoC4/VPWM.c **** 
1348:.\Generated_Source\PSoC4/VPWM.c **** /*******************************************************************************
1349:.\Generated_Source\PSoC4/VPWM.c **** * Function Name: VPWM_GetInterruptSource
1350:.\Generated_Source\PSoC4/VPWM.c **** ********************************************************************************
1351:.\Generated_Source\PSoC4/VPWM.c **** *
1352:.\Generated_Source\PSoC4/VPWM.c **** * Summary:
1353:.\Generated_Source\PSoC4/VPWM.c **** *  Gets the interrupt requests (without masking).
1354:.\Generated_Source\PSoC4/VPWM.c **** *
1355:.\Generated_Source\PSoC4/VPWM.c **** * Parameters:
1356:.\Generated_Source\PSoC4/VPWM.c **** *  None
1357:.\Generated_Source\PSoC4/VPWM.c **** *
1358:.\Generated_Source\PSoC4/VPWM.c **** * Return:
1359:.\Generated_Source\PSoC4/VPWM.c **** *  Interrupt request value
1360:.\Generated_Source\PSoC4/VPWM.c **** *   Values:
1361:.\Generated_Source\PSoC4/VPWM.c **** *     - VPWM_INTR_MASK_TC       - Terminal count mask
1362:.\Generated_Source\PSoC4/VPWM.c **** *     - VPWM_INTR_MASK_CC_MATCH - Compare count / capture mask
1363:.\Generated_Source\PSoC4/VPWM.c **** *
1364:.\Generated_Source\PSoC4/VPWM.c **** *******************************************************************************/
1365:.\Generated_Source\PSoC4/VPWM.c **** uint32 VPWM_GetInterruptSource(void)
1366:.\Generated_Source\PSoC4/VPWM.c **** {
 1382              		.loc 1 1366 0
 1383              		.cfi_startproc
1367:.\Generated_Source\PSoC4/VPWM.c ****     return (VPWM_INTERRUPT_REQ_REG);
 1384              		.loc 1 1367 0
 1385 0000 014B     		ldr	r3, .L114
 1386 0002 1868     		ldr	r0, [r3]
1368:.\Generated_Source\PSoC4/VPWM.c **** }
 1387              		.loc 1 1368 0
 1388              		@ sp needed
 1389 0004 7047     		bx	lr
 1390              	.L115:
 1391 0006 C046     		.align	2
 1392              	.L114:
 1393 0008 30010540 		.word	1074069808
 1394              		.cfi_endproc
 1395              	.LFE37:
 1396              		.size	VPWM_GetInterruptSource, .-VPWM_GetInterruptSource
 1397              		.section	.text.VPWM_ClearInterrupt,"ax",%progbits
 1398              		.align	2
 1399              		.global	VPWM_ClearInterrupt
 1400              		.code	16
 1401              		.thumb_func
ARM GAS  C:\Users\g\AppData\Local\Temp\ccGu2P49.s 			page 50


 1402              		.type	VPWM_ClearInterrupt, %function
 1403              	VPWM_ClearInterrupt:
 1404              	.LFB38:
1369:.\Generated_Source\PSoC4/VPWM.c **** 
1370:.\Generated_Source\PSoC4/VPWM.c **** 
1371:.\Generated_Source\PSoC4/VPWM.c **** /*******************************************************************************
1372:.\Generated_Source\PSoC4/VPWM.c **** * Function Name: VPWM_ClearInterrupt
1373:.\Generated_Source\PSoC4/VPWM.c **** ********************************************************************************
1374:.\Generated_Source\PSoC4/VPWM.c **** *
1375:.\Generated_Source\PSoC4/VPWM.c **** * Summary:
1376:.\Generated_Source\PSoC4/VPWM.c **** *  Clears the interrupt request.
1377:.\Generated_Source\PSoC4/VPWM.c **** *
1378:.\Generated_Source\PSoC4/VPWM.c **** * Parameters:
1379:.\Generated_Source\PSoC4/VPWM.c **** *   interruptMask: Mask of interrupts to clear
1380:.\Generated_Source\PSoC4/VPWM.c **** *   Values:
1381:.\Generated_Source\PSoC4/VPWM.c **** *     - VPWM_INTR_MASK_TC       - Terminal count mask
1382:.\Generated_Source\PSoC4/VPWM.c **** *     - VPWM_INTR_MASK_CC_MATCH - Compare count / capture mask
1383:.\Generated_Source\PSoC4/VPWM.c **** *
1384:.\Generated_Source\PSoC4/VPWM.c **** * Return:
1385:.\Generated_Source\PSoC4/VPWM.c **** *  None
1386:.\Generated_Source\PSoC4/VPWM.c **** *
1387:.\Generated_Source\PSoC4/VPWM.c **** *******************************************************************************/
1388:.\Generated_Source\PSoC4/VPWM.c **** void VPWM_ClearInterrupt(uint32 interruptMask)
1389:.\Generated_Source\PSoC4/VPWM.c **** {
 1405              		.loc 1 1389 0
 1406              		.cfi_startproc
 1407              	.LVL93:
1390:.\Generated_Source\PSoC4/VPWM.c ****     VPWM_INTERRUPT_REQ_REG = interruptMask;
 1408              		.loc 1 1390 0
 1409 0000 014B     		ldr	r3, .L117
 1410 0002 1860     		str	r0, [r3]
1391:.\Generated_Source\PSoC4/VPWM.c **** }
 1411              		.loc 1 1391 0
 1412              		@ sp needed
 1413 0004 7047     		bx	lr
 1414              	.L118:
 1415 0006 C046     		.align	2
 1416              	.L117:
 1417 0008 30010540 		.word	1074069808
 1418              		.cfi_endproc
 1419              	.LFE38:
 1420              		.size	VPWM_ClearInterrupt, .-VPWM_ClearInterrupt
 1421              		.section	.text.VPWM_SetInterrupt,"ax",%progbits
 1422              		.align	2
 1423              		.global	VPWM_SetInterrupt
 1424              		.code	16
 1425              		.thumb_func
 1426              		.type	VPWM_SetInterrupt, %function
 1427              	VPWM_SetInterrupt:
 1428              	.LFB39:
1392:.\Generated_Source\PSoC4/VPWM.c **** 
1393:.\Generated_Source\PSoC4/VPWM.c **** 
1394:.\Generated_Source\PSoC4/VPWM.c **** /*******************************************************************************
1395:.\Generated_Source\PSoC4/VPWM.c **** * Function Name: VPWM_SetInterrupt
1396:.\Generated_Source\PSoC4/VPWM.c **** ********************************************************************************
1397:.\Generated_Source\PSoC4/VPWM.c **** *
1398:.\Generated_Source\PSoC4/VPWM.c **** * Summary:
ARM GAS  C:\Users\g\AppData\Local\Temp\ccGu2P49.s 			page 51


1399:.\Generated_Source\PSoC4/VPWM.c **** *  Sets a software interrupt request.
1400:.\Generated_Source\PSoC4/VPWM.c **** *
1401:.\Generated_Source\PSoC4/VPWM.c **** * Parameters:
1402:.\Generated_Source\PSoC4/VPWM.c **** *   interruptMask: Mask of interrupts to set
1403:.\Generated_Source\PSoC4/VPWM.c **** *   Values:
1404:.\Generated_Source\PSoC4/VPWM.c **** *     - VPWM_INTR_MASK_TC       - Terminal count mask
1405:.\Generated_Source\PSoC4/VPWM.c **** *     - VPWM_INTR_MASK_CC_MATCH - Compare count / capture mask
1406:.\Generated_Source\PSoC4/VPWM.c **** *
1407:.\Generated_Source\PSoC4/VPWM.c **** * Return:
1408:.\Generated_Source\PSoC4/VPWM.c **** *  None
1409:.\Generated_Source\PSoC4/VPWM.c **** *
1410:.\Generated_Source\PSoC4/VPWM.c **** *******************************************************************************/
1411:.\Generated_Source\PSoC4/VPWM.c **** void VPWM_SetInterrupt(uint32 interruptMask)
1412:.\Generated_Source\PSoC4/VPWM.c **** {
 1429              		.loc 1 1412 0
 1430              		.cfi_startproc
 1431              	.LVL94:
1413:.\Generated_Source\PSoC4/VPWM.c ****     VPWM_INTERRUPT_SET_REG = interruptMask;
 1432              		.loc 1 1413 0
 1433 0000 014B     		ldr	r3, .L120
 1434 0002 1860     		str	r0, [r3]
1414:.\Generated_Source\PSoC4/VPWM.c **** }
 1435              		.loc 1 1414 0
 1436              		@ sp needed
 1437 0004 7047     		bx	lr
 1438              	.L121:
 1439 0006 C046     		.align	2
 1440              	.L120:
 1441 0008 34010540 		.word	1074069812
 1442              		.cfi_endproc
 1443              	.LFE39:
 1444              		.size	VPWM_SetInterrupt, .-VPWM_SetInterrupt
 1445              		.global	VPWM_initVar
 1446              		.bss
 1447              		.set	.LANCHOR0,. + 0
 1448              		.type	VPWM_initVar, %object
 1449              		.size	VPWM_initVar, 1
 1450              	VPWM_initVar:
 1451 0000 00       		.space	1
 1452              		.text
 1453              	.Letext0:
 1454              		.file 2 ".\\Generated_Source\\PSoC4\\cytypes.h"
 1455              		.file 3 ".\\Generated_Source\\PSoC4\\CyLib.h"
 1456              		.section	.debug_info,"",%progbits
 1457              	.Ldebug_info0:
 1458 0000 00090000 		.4byte	0x900
 1459 0004 0400     		.2byte	0x4
 1460 0006 00000000 		.4byte	.Ldebug_abbrev0
 1461 000a 04       		.byte	0x4
 1462 000b 01       		.uleb128 0x1
 1463 000c C7000000 		.4byte	.LASF76
 1464 0010 01       		.byte	0x1
 1465 0011 F3030000 		.4byte	.LASF77
 1466 0015 C2040000 		.4byte	.LASF78
 1467 0019 00000000 		.4byte	.Ldebug_ranges0+0
 1468 001d 00000000 		.4byte	0
 1469 0021 00000000 		.4byte	.Ldebug_line0
ARM GAS  C:\Users\g\AppData\Local\Temp\ccGu2P49.s 			page 52


 1470 0025 02       		.uleb128 0x2
 1471 0026 01       		.byte	0x1
 1472 0027 06       		.byte	0x6
 1473 0028 7B010000 		.4byte	.LASF0
 1474 002c 02       		.uleb128 0x2
 1475 002d 01       		.byte	0x1
 1476 002e 08       		.byte	0x8
 1477 002f 97030000 		.4byte	.LASF1
 1478 0033 02       		.uleb128 0x2
 1479 0034 02       		.byte	0x2
 1480 0035 05       		.byte	0x5
 1481 0036 C7030000 		.4byte	.LASF2
 1482 003a 02       		.uleb128 0x2
 1483 003b 02       		.byte	0x2
 1484 003c 07       		.byte	0x7
 1485 003d 89020000 		.4byte	.LASF3
 1486 0041 02       		.uleb128 0x2
 1487 0042 04       		.byte	0x4
 1488 0043 05       		.byte	0x5
 1489 0044 AD010000 		.4byte	.LASF4
 1490 0048 02       		.uleb128 0x2
 1491 0049 04       		.byte	0x4
 1492 004a 07       		.byte	0x7
 1493 004b 57020000 		.4byte	.LASF5
 1494 004f 02       		.uleb128 0x2
 1495 0050 08       		.byte	0x8
 1496 0051 05       		.byte	0x5
 1497 0052 6D010000 		.4byte	.LASF6
 1498 0056 02       		.uleb128 0x2
 1499 0057 08       		.byte	0x8
 1500 0058 07       		.byte	0x7
 1501 0059 82000000 		.4byte	.LASF7
 1502 005d 03       		.uleb128 0x3
 1503 005e 04       		.byte	0x4
 1504 005f 05       		.byte	0x5
 1505 0060 696E7400 		.ascii	"int\000"
 1506 0064 02       		.uleb128 0x2
 1507 0065 04       		.byte	0x4
 1508 0066 07       		.byte	0x7
 1509 0067 31020000 		.4byte	.LASF8
 1510 006b 04       		.uleb128 0x4
 1511 006c C0010000 		.4byte	.LASF9
 1512 0070 02       		.byte	0x2
 1513 0071 9801     		.2byte	0x198
 1514 0073 2C000000 		.4byte	0x2c
 1515 0077 04       		.uleb128 0x4
 1516 0078 FC010000 		.4byte	.LASF10
 1517 007c 02       		.byte	0x2
 1518 007d 9A01     		.2byte	0x19a
 1519 007f 48000000 		.4byte	0x48
 1520 0083 02       		.uleb128 0x2
 1521 0084 04       		.byte	0x4
 1522 0085 04       		.byte	0x4
 1523 0086 7D030000 		.4byte	.LASF11
 1524 008a 02       		.uleb128 0x2
 1525 008b 08       		.byte	0x8
 1526 008c 04       		.byte	0x4
ARM GAS  C:\Users\g\AppData\Local\Temp\ccGu2P49.s 			page 53


 1527 008d D1010000 		.4byte	.LASF12
 1528 0091 02       		.uleb128 0x2
 1529 0092 01       		.byte	0x1
 1530 0093 08       		.byte	0x8
 1531 0094 53040000 		.4byte	.LASF13
 1532 0098 04       		.uleb128 0x4
 1533 0099 E2020000 		.4byte	.LASF14
 1534 009d 02       		.byte	0x2
 1535 009e 4402     		.2byte	0x244
 1536 00a0 A4000000 		.4byte	0xa4
 1537 00a4 05       		.uleb128 0x5
 1538 00a5 77000000 		.4byte	0x77
 1539 00a9 02       		.uleb128 0x2
 1540 00aa 04       		.byte	0x4
 1541 00ab 07       		.byte	0x7
 1542 00ac 04030000 		.4byte	.LASF15
 1543 00b0 06       		.uleb128 0x6
 1544 00b1 B6010000 		.4byte	.LASF16
 1545 00b5 01       		.byte	0x1
 1546 00b6 0001     		.2byte	0x100
 1547 00b8 00000000 		.4byte	.LFB3
 1548 00bc 1C000000 		.4byte	.LFE3-.LFB3
 1549 00c0 01       		.uleb128 0x1
 1550 00c1 9C       		.byte	0x9c
 1551 00c2 E9000000 		.4byte	0xe9
 1552 00c6 07       		.uleb128 0x7
 1553 00c7 FD040000 		.4byte	.LASF18
 1554 00cb 01       		.byte	0x1
 1555 00cc 0201     		.2byte	0x102
 1556 00ce 6B000000 		.4byte	0x6b
 1557 00d2 00000000 		.4byte	.LLST0
 1558 00d6 08       		.uleb128 0x8
 1559 00d7 06000000 		.4byte	.LVL0
 1560 00db EB080000 		.4byte	0x8eb
 1561 00df 08       		.uleb128 0x8
 1562 00e0 14000000 		.4byte	.LVL1
 1563 00e4 F6080000 		.4byte	0x8f6
 1564 00e8 00       		.byte	0
 1565 00e9 06       		.uleb128 0x6
 1566 00ea 34030000 		.4byte	.LASF17
 1567 00ee 01       		.byte	0x1
 1568 00ef 2501     		.2byte	0x125
 1569 00f1 00000000 		.4byte	.LFB4
 1570 00f5 28000000 		.4byte	.LFE4-.LFB4
 1571 00f9 01       		.uleb128 0x1
 1572 00fa 9C       		.byte	0x9c
 1573 00fb 32010000 		.4byte	0x132
 1574 00ff 09       		.uleb128 0x9
 1575 0100 58040000 		.4byte	.LASF20
 1576 0104 01       		.byte	0x1
 1577 0105 2501     		.2byte	0x125
 1578 0107 77000000 		.4byte	0x77
 1579 010b 13000000 		.4byte	.LLST1
 1580 010f 07       		.uleb128 0x7
 1581 0110 FD040000 		.4byte	.LASF18
 1582 0114 01       		.byte	0x1
 1583 0115 2701     		.2byte	0x127
ARM GAS  C:\Users\g\AppData\Local\Temp\ccGu2P49.s 			page 54


 1584 0117 6B000000 		.4byte	0x6b
 1585 011b 3F000000 		.4byte	.LLST2
 1586 011f 08       		.uleb128 0x8
 1587 0120 08000000 		.4byte	.LVL3
 1588 0124 EB080000 		.4byte	0x8eb
 1589 0128 08       		.uleb128 0x8
 1590 0129 1C000000 		.4byte	.LVL5
 1591 012d F6080000 		.4byte	0x8f6
 1592 0131 00       		.byte	0
 1593 0132 06       		.uleb128 0x6
 1594 0133 9C020000 		.4byte	.LASF19
 1595 0137 01       		.byte	0x1
 1596 0138 4601     		.2byte	0x146
 1597 013a 00000000 		.4byte	.LFB5
 1598 013e 28000000 		.4byte	.LFE5-.LFB5
 1599 0142 01       		.uleb128 0x1
 1600 0143 9C       		.byte	0x9c
 1601 0144 7B010000 		.4byte	0x17b
 1602 0148 09       		.uleb128 0x9
 1603 0149 AA000000 		.4byte	.LASF21
 1604 014d 01       		.byte	0x1
 1605 014e 4601     		.2byte	0x146
 1606 0150 77000000 		.4byte	0x77
 1607 0154 52000000 		.4byte	.LLST3
 1608 0158 07       		.uleb128 0x7
 1609 0159 FD040000 		.4byte	.LASF18
 1610 015d 01       		.byte	0x1
 1611 015e 4801     		.2byte	0x148
 1612 0160 6B000000 		.4byte	0x6b
 1613 0164 7E000000 		.4byte	.LLST4
 1614 0168 08       		.uleb128 0x8
 1615 0169 08000000 		.4byte	.LVL7
 1616 016d EB080000 		.4byte	0x8eb
 1617 0171 08       		.uleb128 0x8
 1618 0172 1C000000 		.4byte	.LVL9
 1619 0176 F6080000 		.4byte	0x8f6
 1620 017a 00       		.byte	0
 1621 017b 06       		.uleb128 0x6
 1622 017c 9B010000 		.4byte	.LASF22
 1623 0180 01       		.byte	0x1
 1624 0181 6B01     		.2byte	0x16b
 1625 0183 00000000 		.4byte	.LFB6
 1626 0187 28000000 		.4byte	.LFE6-.LFB6
 1627 018b 01       		.uleb128 0x1
 1628 018c 9C       		.byte	0x9c
 1629 018d C4010000 		.4byte	0x1c4
 1630 0191 09       		.uleb128 0x9
 1631 0192 83030000 		.4byte	.LASF23
 1632 0196 01       		.byte	0x1
 1633 0197 6B01     		.2byte	0x16b
 1634 0199 77000000 		.4byte	0x77
 1635 019d 91000000 		.4byte	.LLST5
 1636 01a1 07       		.uleb128 0x7
 1637 01a2 FD040000 		.4byte	.LASF18
 1638 01a6 01       		.byte	0x1
 1639 01a7 6D01     		.2byte	0x16d
 1640 01a9 6B000000 		.4byte	0x6b
ARM GAS  C:\Users\g\AppData\Local\Temp\ccGu2P49.s 			page 55


 1641 01ad BD000000 		.4byte	.LLST6
 1642 01b1 08       		.uleb128 0x8
 1643 01b2 08000000 		.4byte	.LVL11
 1644 01b6 EB080000 		.4byte	0x8eb
 1645 01ba 08       		.uleb128 0x8
 1646 01bb 1C000000 		.4byte	.LVL13
 1647 01bf F6080000 		.4byte	0x8f6
 1648 01c3 00       		.byte	0
 1649 01c4 06       		.uleb128 0x6
 1650 01c5 E8020000 		.4byte	.LASF24
 1651 01c9 01       		.byte	0x1
 1652 01ca 8B01     		.2byte	0x18b
 1653 01cc 00000000 		.4byte	.LFB7
 1654 01d0 2C000000 		.4byte	.LFE7-.LFB7
 1655 01d4 01       		.uleb128 0x1
 1656 01d5 9C       		.byte	0x9c
 1657 01d6 0D020000 		.4byte	0x20d
 1658 01da 09       		.uleb128 0x9
 1659 01db AB020000 		.4byte	.LASF25
 1660 01df 01       		.byte	0x1
 1661 01e0 8B01     		.2byte	0x18b
 1662 01e2 77000000 		.4byte	0x77
 1663 01e6 D0000000 		.4byte	.LLST7
 1664 01ea 07       		.uleb128 0x7
 1665 01eb FD040000 		.4byte	.LASF18
 1666 01ef 01       		.byte	0x1
 1667 01f0 8D01     		.2byte	0x18d
 1668 01f2 6B000000 		.4byte	0x6b
 1669 01f6 FC000000 		.4byte	.LLST8
 1670 01fa 08       		.uleb128 0x8
 1671 01fb 08000000 		.4byte	.LVL15
 1672 01ff EB080000 		.4byte	0x8eb
 1673 0203 08       		.uleb128 0x8
 1674 0204 22000000 		.4byte	.LVL17
 1675 0208 F6080000 		.4byte	0x8f6
 1676 020c 00       		.byte	0
 1677 020d 06       		.uleb128 0x6
 1678 020e 0E050000 		.4byte	.LASF26
 1679 0212 01       		.byte	0x1
 1680 0213 C101     		.2byte	0x1c1
 1681 0215 00000000 		.4byte	.LFB8
 1682 0219 10000000 		.4byte	.LFE8-.LFB8
 1683 021d 01       		.uleb128 0x1
 1684 021e 9C       		.byte	0x9c
 1685 021f 34020000 		.4byte	0x234
 1686 0223 09       		.uleb128 0x9
 1687 0224 69020000 		.4byte	.LASF27
 1688 0228 01       		.byte	0x1
 1689 0229 C101     		.2byte	0x1c1
 1690 022b 77000000 		.4byte	0x77
 1691 022f 0F010000 		.4byte	.LLST9
 1692 0233 00       		.byte	0
 1693 0234 06       		.uleb128 0x6
 1694 0235 E9040000 		.4byte	.LASF28
 1695 0239 01       		.byte	0x1
 1696 023a E501     		.2byte	0x1e5
 1697 023c 00000000 		.4byte	.LFB9
ARM GAS  C:\Users\g\AppData\Local\Temp\ccGu2P49.s 			page 56


 1698 0240 28000000 		.4byte	.LFE9-.LFB9
 1699 0244 01       		.uleb128 0x1
 1700 0245 9C       		.byte	0x9c
 1701 0246 7D020000 		.4byte	0x27d
 1702 024a 09       		.uleb128 0x9
 1703 024b 0D030000 		.4byte	.LASF29
 1704 024f 01       		.byte	0x1
 1705 0250 E501     		.2byte	0x1e5
 1706 0252 77000000 		.4byte	0x77
 1707 0256 30010000 		.4byte	.LLST10
 1708 025a 07       		.uleb128 0x7
 1709 025b FD040000 		.4byte	.LASF18
 1710 025f 01       		.byte	0x1
 1711 0260 E701     		.2byte	0x1e7
 1712 0262 6B000000 		.4byte	0x6b
 1713 0266 5C010000 		.4byte	.LLST11
 1714 026a 08       		.uleb128 0x8
 1715 026b 08000000 		.4byte	.LVL21
 1716 026f EB080000 		.4byte	0x8eb
 1717 0273 08       		.uleb128 0x8
 1718 0274 22000000 		.4byte	.LVL23
 1719 0278 F6080000 		.4byte	0x8f6
 1720 027c 00       		.byte	0
 1721 027d 06       		.uleb128 0x6
 1722 027e 55030000 		.4byte	.LASF30
 1723 0282 01       		.byte	0x1
 1724 0283 0702     		.2byte	0x207
 1725 0285 00000000 		.4byte	.LFB10
 1726 0289 28000000 		.4byte	.LFE10-.LFB10
 1727 028d 01       		.uleb128 0x1
 1728 028e 9C       		.byte	0x9c
 1729 028f C6020000 		.4byte	0x2c6
 1730 0293 09       		.uleb128 0x9
 1731 0294 B6030000 		.4byte	.LASF31
 1732 0298 01       		.byte	0x1
 1733 0299 0702     		.2byte	0x207
 1734 029b 77000000 		.4byte	0x77
 1735 029f 6F010000 		.4byte	.LLST12
 1736 02a3 07       		.uleb128 0x7
 1737 02a4 FD040000 		.4byte	.LASF18
 1738 02a8 01       		.byte	0x1
 1739 02a9 0902     		.2byte	0x209
 1740 02ab 6B000000 		.4byte	0x6b
 1741 02af 9B010000 		.4byte	.LLST13
 1742 02b3 08       		.uleb128 0x8
 1743 02b4 08000000 		.4byte	.LVL25
 1744 02b8 EB080000 		.4byte	0x8eb
 1745 02bc 08       		.uleb128 0x8
 1746 02bd 22000000 		.4byte	.LVL27
 1747 02c1 F6080000 		.4byte	0x8f6
 1748 02c5 00       		.byte	0
 1749 02c6 06       		.uleb128 0x6
 1750 02c7 87010000 		.4byte	.LASF32
 1751 02cb 01       		.byte	0x1
 1752 02cc 2802     		.2byte	0x228
 1753 02ce 00000000 		.4byte	.LFB11
 1754 02d2 2C000000 		.4byte	.LFE11-.LFB11
ARM GAS  C:\Users\g\AppData\Local\Temp\ccGu2P49.s 			page 57


 1755 02d6 01       		.uleb128 0x1
 1756 02d7 9C       		.byte	0x9c
 1757 02d8 0F030000 		.4byte	0x30f
 1758 02dc 09       		.uleb128 0x9
 1759 02dd 28020000 		.4byte	.LASF33
 1760 02e1 01       		.byte	0x1
 1761 02e2 2802     		.2byte	0x228
 1762 02e4 77000000 		.4byte	0x77
 1763 02e8 AE010000 		.4byte	.LLST14
 1764 02ec 07       		.uleb128 0x7
 1765 02ed FD040000 		.4byte	.LASF18
 1766 02f1 01       		.byte	0x1
 1767 02f2 2A02     		.2byte	0x22a
 1768 02f4 6B000000 		.4byte	0x6b
 1769 02f8 DA010000 		.4byte	.LLST15
 1770 02fc 08       		.uleb128 0x8
 1771 02fd 08000000 		.4byte	.LVL29
 1772 0301 EB080000 		.4byte	0x8eb
 1773 0305 08       		.uleb128 0x8
 1774 0306 20000000 		.4byte	.LVL31
 1775 030a F6080000 		.4byte	0x8f6
 1776 030e 00       		.byte	0
 1777 030f 06       		.uleb128 0x6
 1778 0310 57000000 		.4byte	.LASF34
 1779 0314 01       		.byte	0x1
 1780 0315 4902     		.2byte	0x249
 1781 0317 00000000 		.4byte	.LFB12
 1782 031b 28000000 		.4byte	.LFE12-.LFB12
 1783 031f 01       		.uleb128 0x1
 1784 0320 9C       		.byte	0x9c
 1785 0321 58030000 		.4byte	0x358
 1786 0325 09       		.uleb128 0x9
 1787 0326 23020000 		.4byte	.LASF35
 1788 032a 01       		.byte	0x1
 1789 032b 4902     		.2byte	0x249
 1790 032d 77000000 		.4byte	0x77
 1791 0331 ED010000 		.4byte	.LLST16
 1792 0335 07       		.uleb128 0x7
 1793 0336 FD040000 		.4byte	.LASF18
 1794 033a 01       		.byte	0x1
 1795 033b 4B02     		.2byte	0x24b
 1796 033d 6B000000 		.4byte	0x6b
 1797 0341 19020000 		.4byte	.LLST17
 1798 0345 08       		.uleb128 0x8
 1799 0346 08000000 		.4byte	.LVL33
 1800 034a EB080000 		.4byte	0x8eb
 1801 034e 08       		.uleb128 0x8
 1802 034f 1C000000 		.4byte	.LVL35
 1803 0353 F6080000 		.4byte	0x8f6
 1804 0357 00       		.byte	0
 1805 0358 06       		.uleb128 0x6
 1806 0359 3D050000 		.4byte	.LASF36
 1807 035d 01       		.byte	0x1
 1808 035e 6702     		.2byte	0x267
 1809 0360 00000000 		.4byte	.LFB13
 1810 0364 10000000 		.4byte	.LFE13-.LFB13
 1811 0368 01       		.uleb128 0x1
ARM GAS  C:\Users\g\AppData\Local\Temp\ccGu2P49.s 			page 58


 1812 0369 9C       		.byte	0x9c
 1813 036a 7F030000 		.4byte	0x37f
 1814 036e 09       		.uleb128 0x9
 1815 036f 00000000 		.4byte	.LASF37
 1816 0373 01       		.byte	0x1
 1817 0374 6702     		.2byte	0x267
 1818 0376 77000000 		.4byte	0x77
 1819 037a 2C020000 		.4byte	.LLST18
 1820 037e 00       		.byte	0
 1821 037f 0A       		.uleb128 0xa
 1822 0380 D1020000 		.4byte	.LASF42
 1823 0384 01       		.byte	0x1
 1824 0385 7B02     		.2byte	0x27b
 1825 0387 77000000 		.4byte	0x77
 1826 038b 00000000 		.4byte	.LFB14
 1827 038f 10000000 		.4byte	.LFE14-.LFB14
 1828 0393 01       		.uleb128 0x1
 1829 0394 9C       		.byte	0x9c
 1830 0395 06       		.uleb128 0x6
 1831 0396 85040000 		.4byte	.LASF38
 1832 039a 01       		.byte	0x1
 1833 039b 9802     		.2byte	0x298
 1834 039d 00000000 		.4byte	.LFB15
 1835 03a1 28000000 		.4byte	.LFE15-.LFB15
 1836 03a5 01       		.uleb128 0x1
 1837 03a6 9C       		.byte	0x9c
 1838 03a7 DE030000 		.4byte	0x3de
 1839 03ab 09       		.uleb128 0x9
 1840 03ac 99040000 		.4byte	.LASF39
 1841 03b0 01       		.byte	0x1
 1842 03b1 9802     		.2byte	0x298
 1843 03b3 77000000 		.4byte	0x77
 1844 03b7 4D020000 		.4byte	.LLST19
 1845 03bb 07       		.uleb128 0x7
 1846 03bc FD040000 		.4byte	.LASF18
 1847 03c0 01       		.byte	0x1
 1848 03c1 9A02     		.2byte	0x29a
 1849 03c3 6B000000 		.4byte	0x6b
 1850 03c7 79020000 		.4byte	.LLST20
 1851 03cb 08       		.uleb128 0x8
 1852 03cc 08000000 		.4byte	.LVL39
 1853 03d0 EB080000 		.4byte	0x8eb
 1854 03d4 08       		.uleb128 0x8
 1855 03d5 1C000000 		.4byte	.LVL41
 1856 03d9 F6080000 		.4byte	0x8f6
 1857 03dd 00       		.byte	0
 1858 03de 06       		.uleb128 0x6
 1859 03df 99000000 		.4byte	.LASF40
 1860 03e3 01       		.byte	0x1
 1861 03e4 B502     		.2byte	0x2b5
 1862 03e6 00000000 		.4byte	.LFB16
 1863 03ea 10000000 		.4byte	.LFE16-.LFB16
 1864 03ee 01       		.uleb128 0x1
 1865 03ef 9C       		.byte	0x9c
 1866 03f0 05040000 		.4byte	0x405
 1867 03f4 09       		.uleb128 0x9
 1868 03f5 69000000 		.4byte	.LASF41
ARM GAS  C:\Users\g\AppData\Local\Temp\ccGu2P49.s 			page 59


 1869 03f9 01       		.byte	0x1
 1870 03fa B502     		.2byte	0x2b5
 1871 03fc 77000000 		.4byte	0x77
 1872 0400 8C020000 		.4byte	.LLST21
 1873 0404 00       		.byte	0
 1874 0405 0A       		.uleb128 0xa
 1875 0406 43040000 		.4byte	.LASF43
 1876 040a 01       		.byte	0x1
 1877 040b C902     		.2byte	0x2c9
 1878 040d 77000000 		.4byte	0x77
 1879 0411 00000000 		.4byte	.LFB17
 1880 0415 10000000 		.4byte	.LFE17-.LFB17
 1881 0419 01       		.uleb128 0x1
 1882 041a 9C       		.byte	0x9c
 1883 041b 06       		.uleb128 0x6
 1884 041c 43000000 		.4byte	.LASF44
 1885 0420 01       		.byte	0x1
 1886 0421 E302     		.2byte	0x2e3
 1887 0423 00000000 		.4byte	.LFB18
 1888 0427 24000000 		.4byte	.LFE18-.LFB18
 1889 042b 01       		.uleb128 0x1
 1890 042c 9C       		.byte	0x9c
 1891 042d 64040000 		.4byte	0x464
 1892 0431 09       		.uleb128 0x9
 1893 0432 32050000 		.4byte	.LASF45
 1894 0436 01       		.byte	0x1
 1895 0437 E302     		.2byte	0x2e3
 1896 0439 77000000 		.4byte	0x77
 1897 043d AD020000 		.4byte	.LLST22
 1898 0441 07       		.uleb128 0x7
 1899 0442 FD040000 		.4byte	.LASF18
 1900 0446 01       		.byte	0x1
 1901 0447 E502     		.2byte	0x2e5
 1902 0449 6B000000 		.4byte	0x6b
 1903 044d D9020000 		.4byte	.LLST23
 1904 0451 08       		.uleb128 0x8
 1905 0452 08000000 		.4byte	.LVL45
 1906 0456 EB080000 		.4byte	0x8eb
 1907 045a 08       		.uleb128 0x8
 1908 045b 1E000000 		.4byte	.LVL47
 1909 045f F6080000 		.4byte	0x8f6
 1910 0463 00       		.byte	0
 1911 0464 06       		.uleb128 0x6
 1912 0465 41030000 		.4byte	.LASF46
 1913 0469 01       		.byte	0x1
 1914 046a FE02     		.2byte	0x2fe
 1915 046c 00000000 		.4byte	.LFB19
 1916 0470 10000000 		.4byte	.LFE19-.LFB19
 1917 0474 01       		.uleb128 0x1
 1918 0475 9C       		.byte	0x9c
 1919 0476 8B040000 		.4byte	0x48b
 1920 047a 09       		.uleb128 0x9
 1921 047b 63050000 		.4byte	.LASF47
 1922 047f 01       		.byte	0x1
 1923 0480 FE02     		.2byte	0x2fe
 1924 0482 77000000 		.4byte	0x77
 1925 0486 EC020000 		.4byte	.LLST24
ARM GAS  C:\Users\g\AppData\Local\Temp\ccGu2P49.s 			page 60


 1926 048a 00       		.byte	0
 1927 048b 0A       		.uleb128 0xa
 1928 048c 06000000 		.4byte	.LASF48
 1929 0490 01       		.byte	0x1
 1930 0491 1203     		.2byte	0x312
 1931 0493 77000000 		.4byte	0x77
 1932 0497 00000000 		.4byte	.LFB20
 1933 049b 10000000 		.4byte	.LFE20-.LFB20
 1934 049f 01       		.uleb128 0x1
 1935 04a0 9C       		.byte	0x9c
 1936 04a1 06       		.uleb128 0x6
 1937 04a2 72040000 		.4byte	.LASF49
 1938 04a6 01       		.byte	0x1
 1939 04a7 2C03     		.2byte	0x32c
 1940 04a9 00000000 		.4byte	.LFB21
 1941 04ad 28000000 		.4byte	.LFE21-.LFB21
 1942 04b1 01       		.uleb128 0x1
 1943 04b2 9C       		.byte	0x9c
 1944 04b3 EA040000 		.4byte	0x4ea
 1945 04b7 09       		.uleb128 0x9
 1946 04b8 32050000 		.4byte	.LASF45
 1947 04bc 01       		.byte	0x1
 1948 04bd 2C03     		.2byte	0x32c
 1949 04bf 77000000 		.4byte	0x77
 1950 04c3 0D030000 		.4byte	.LLST25
 1951 04c7 07       		.uleb128 0x7
 1952 04c8 FD040000 		.4byte	.LASF18
 1953 04cc 01       		.byte	0x1
 1954 04cd 2E03     		.2byte	0x32e
 1955 04cf 6B000000 		.4byte	0x6b
 1956 04d3 39030000 		.4byte	.LLST26
 1957 04d7 08       		.uleb128 0x8
 1958 04d8 08000000 		.4byte	.LVL51
 1959 04dc EB080000 		.4byte	0x8eb
 1960 04e0 08       		.uleb128 0x8
 1961 04e1 22000000 		.4byte	.LVL53
 1962 04e5 F6080000 		.4byte	0x8f6
 1963 04e9 00       		.byte	0
 1964 04ea 06       		.uleb128 0x6
 1965 04eb A5040000 		.4byte	.LASF50
 1966 04ef 01       		.byte	0x1
 1967 04f0 5103     		.2byte	0x351
 1968 04f2 00000000 		.4byte	.LFB22
 1969 04f6 10000000 		.4byte	.LFE22-.LFB22
 1970 04fa 01       		.uleb128 0x1
 1971 04fb 9C       		.byte	0x9c
 1972 04fc 11050000 		.4byte	0x511
 1973 0500 09       		.uleb128 0x9
 1974 0501 1C030000 		.4byte	.LASF51
 1975 0505 01       		.byte	0x1
 1976 0506 5103     		.2byte	0x351
 1977 0508 77000000 		.4byte	0x77
 1978 050c 4C030000 		.4byte	.LLST27
 1979 0510 00       		.byte	0
 1980 0511 0A       		.uleb128 0xa
 1981 0512 3E020000 		.4byte	.LASF52
 1982 0516 01       		.byte	0x1
ARM GAS  C:\Users\g\AppData\Local\Temp\ccGu2P49.s 			page 61


 1983 0517 8403     		.2byte	0x384
 1984 0519 77000000 		.4byte	0x77
 1985 051d 00000000 		.4byte	.LFB23
 1986 0521 10000000 		.4byte	.LFE23-.LFB23
 1987 0525 01       		.uleb128 0x1
 1988 0526 9C       		.byte	0x9c
 1989 0527 06       		.uleb128 0x6
 1990 0528 5D040000 		.4byte	.LASF53
 1991 052c 01       		.byte	0x1
 1992 052d BA03     		.2byte	0x3ba
 1993 052f 00000000 		.4byte	.LFB24
 1994 0533 10000000 		.4byte	.LFE24-.LFB24
 1995 0537 01       		.uleb128 0x1
 1996 0538 9C       		.byte	0x9c
 1997 0539 4E050000 		.4byte	0x54e
 1998 053d 09       		.uleb128 0x9
 1999 053e B7040000 		.4byte	.LASF54
 2000 0542 01       		.byte	0x1
 2001 0543 BA03     		.2byte	0x3ba
 2002 0545 77000000 		.4byte	0x77
 2003 0549 6D030000 		.4byte	.LLST28
 2004 054d 00       		.byte	0
 2005 054e 0A       		.uleb128 0xa
 2006 054f 2F000000 		.4byte	.LASF55
 2007 0553 01       		.byte	0x1
 2008 0554 E803     		.2byte	0x3e8
 2009 0556 77000000 		.4byte	0x77
 2010 055a 00000000 		.4byte	.LFB25
 2011 055e 10000000 		.4byte	.LFE25-.LFB25
 2012 0562 01       		.uleb128 0x1
 2013 0563 9C       		.byte	0x9c
 2014 0564 0A       		.uleb128 0xa
 2015 0565 D8010000 		.4byte	.LASF56
 2016 0569 01       		.byte	0x1
 2017 056a 1604     		.2byte	0x416
 2018 056c 77000000 		.4byte	0x77
 2019 0570 00000000 		.4byte	.LFB26
 2020 0574 10000000 		.4byte	.LFE26-.LFB26
 2021 0578 01       		.uleb128 0x1
 2022 0579 9C       		.byte	0x9c
 2023 057a 0A       		.uleb128 0xa
 2024 057b D1030000 		.4byte	.LASF57
 2025 057f 01       		.byte	0x1
 2026 0580 2B04     		.2byte	0x42b
 2027 0582 77000000 		.4byte	0x77
 2028 0586 00000000 		.4byte	.LFB27
 2029 058a 10000000 		.4byte	.LFE27-.LFB27
 2030 058e 01       		.uleb128 0x1
 2031 058f 9C       		.byte	0x9c
 2032 0590 06       		.uleb128 0x6
 2033 0591 1E050000 		.4byte	.LASF58
 2034 0595 01       		.byte	0x1
 2035 0596 4604     		.2byte	0x446
 2036 0598 00000000 		.4byte	.LFB28
 2037 059c 24000000 		.4byte	.LFE28-.LFB28
 2038 05a0 01       		.uleb128 0x1
 2039 05a1 9C       		.byte	0x9c
ARM GAS  C:\Users\g\AppData\Local\Temp\ccGu2P49.s 			page 62


 2040 05a2 D9050000 		.4byte	0x5d9
 2041 05a6 09       		.uleb128 0x9
 2042 05a7 17020000 		.4byte	.LASF59
 2043 05ab 01       		.byte	0x1
 2044 05ac 4604     		.2byte	0x446
 2045 05ae 77000000 		.4byte	0x77
 2046 05b2 8E030000 		.4byte	.LLST29
 2047 05b6 07       		.uleb128 0x7
 2048 05b7 FD040000 		.4byte	.LASF18
 2049 05bb 01       		.byte	0x1
 2050 05bc 4804     		.2byte	0x448
 2051 05be 6B000000 		.4byte	0x6b
 2052 05c2 BA030000 		.4byte	.LLST30
 2053 05c6 08       		.uleb128 0x8
 2054 05c7 08000000 		.4byte	.LVL59
 2055 05cb EB080000 		.4byte	0x8eb
 2056 05cf 08       		.uleb128 0x8
 2057 05d0 1C000000 		.4byte	.LVL61
 2058 05d4 F6080000 		.4byte	0x8f6
 2059 05d8 00       		.byte	0
 2060 05d9 06       		.uleb128 0x6
 2061 05da E9010000 		.4byte	.LASF60
 2062 05de 01       		.byte	0x1
 2063 05df 6704     		.2byte	0x467
 2064 05e1 00000000 		.4byte	.LFB29
 2065 05e5 24000000 		.4byte	.LFE29-.LFB29
 2066 05e9 01       		.uleb128 0x1
 2067 05ea 9C       		.byte	0x9c
 2068 05eb 22060000 		.4byte	0x622
 2069 05ef 09       		.uleb128 0x9
 2070 05f0 17020000 		.4byte	.LASF59
 2071 05f4 01       		.byte	0x1
 2072 05f5 6704     		.2byte	0x467
 2073 05f7 77000000 		.4byte	0x77
 2074 05fb CD030000 		.4byte	.LLST31
 2075 05ff 07       		.uleb128 0x7
 2076 0600 FD040000 		.4byte	.LASF18
 2077 0604 01       		.byte	0x1
 2078 0605 6904     		.2byte	0x469
 2079 0607 6B000000 		.4byte	0x6b
 2080 060b F9030000 		.4byte	.LLST32
 2081 060f 08       		.uleb128 0x8
 2082 0610 08000000 		.4byte	.LVL63
 2083 0614 EB080000 		.4byte	0x8eb
 2084 0618 08       		.uleb128 0x8
 2085 0619 1E000000 		.4byte	.LVL65
 2086 061d F6080000 		.4byte	0x8f6
 2087 0621 00       		.byte	0
 2088 0622 06       		.uleb128 0x6
 2089 0623 70000000 		.4byte	.LASF61
 2090 0627 01       		.byte	0x1
 2091 0628 8804     		.2byte	0x488
 2092 062a 00000000 		.4byte	.LFB30
 2093 062e 28000000 		.4byte	.LFE30-.LFB30
 2094 0632 01       		.uleb128 0x1
 2095 0633 9C       		.byte	0x9c
 2096 0634 6B060000 		.4byte	0x66b
ARM GAS  C:\Users\g\AppData\Local\Temp\ccGu2P49.s 			page 63


 2097 0638 09       		.uleb128 0x9
 2098 0639 17020000 		.4byte	.LASF59
 2099 063d 01       		.byte	0x1
 2100 063e 8804     		.2byte	0x488
 2101 0640 77000000 		.4byte	0x77
 2102 0644 0C040000 		.4byte	.LLST33
 2103 0648 07       		.uleb128 0x7
 2104 0649 FD040000 		.4byte	.LASF18
 2105 064d 01       		.byte	0x1
 2106 064e 8A04     		.2byte	0x48a
 2107 0650 6B000000 		.4byte	0x6b
 2108 0654 38040000 		.4byte	.LLST34
 2109 0658 08       		.uleb128 0x8
 2110 0659 08000000 		.4byte	.LVL67
 2111 065d EB080000 		.4byte	0x8eb
 2112 0661 08       		.uleb128 0x8
 2113 0662 1E000000 		.4byte	.LVL69
 2114 0666 F6080000 		.4byte	0x8f6
 2115 066a 00       		.byte	0
 2116 066b 06       		.uleb128 0x6
 2117 066c A5030000 		.4byte	.LASF62
 2118 0670 01       		.byte	0x1
 2119 0671 A804     		.2byte	0x4a8
 2120 0673 00000000 		.4byte	.LFB31
 2121 0677 24000000 		.4byte	.LFE31-.LFB31
 2122 067b 01       		.uleb128 0x1
 2123 067c 9C       		.byte	0x9c
 2124 067d B4060000 		.4byte	0x6b4
 2125 0681 09       		.uleb128 0x9
 2126 0682 17020000 		.4byte	.LASF59
 2127 0686 01       		.byte	0x1
 2128 0687 A804     		.2byte	0x4a8
 2129 0689 77000000 		.4byte	0x77
 2130 068d 4B040000 		.4byte	.LLST35
 2131 0691 07       		.uleb128 0x7
 2132 0692 FD040000 		.4byte	.LASF18
 2133 0696 01       		.byte	0x1
 2134 0697 AA04     		.2byte	0x4aa
 2135 0699 6B000000 		.4byte	0x6b
 2136 069d 77040000 		.4byte	.LLST36
 2137 06a1 08       		.uleb128 0x8
 2138 06a2 08000000 		.4byte	.LVL71
 2139 06a6 EB080000 		.4byte	0x8eb
 2140 06aa 08       		.uleb128 0x8
 2141 06ab 1E000000 		.4byte	.LVL73
 2142 06af F6080000 		.4byte	0x8f6
 2143 06b3 00       		.byte	0
 2144 06b4 06       		.uleb128 0x6
 2145 06b5 13040000 		.4byte	.LASF63
 2146 06b9 01       		.byte	0x1
 2147 06ba C904     		.2byte	0x4c9
 2148 06bc 00000000 		.4byte	.LFB32
 2149 06c0 24000000 		.4byte	.LFE32-.LFB32
 2150 06c4 01       		.uleb128 0x1
 2151 06c5 9C       		.byte	0x9c
 2152 06c6 FD060000 		.4byte	0x6fd
 2153 06ca 09       		.uleb128 0x9
ARM GAS  C:\Users\g\AppData\Local\Temp\ccGu2P49.s 			page 64


 2154 06cb 17020000 		.4byte	.LASF59
 2155 06cf 01       		.byte	0x1
 2156 06d0 C904     		.2byte	0x4c9
 2157 06d2 77000000 		.4byte	0x77
 2158 06d6 8A040000 		.4byte	.LLST37
 2159 06da 07       		.uleb128 0x7
 2160 06db FD040000 		.4byte	.LASF18
 2161 06df 01       		.byte	0x1
 2162 06e0 CB04     		.2byte	0x4cb
 2163 06e2 6B000000 		.4byte	0x6b
 2164 06e6 B6040000 		.4byte	.LLST38
 2165 06ea 08       		.uleb128 0x8
 2166 06eb 08000000 		.4byte	.LVL75
 2167 06ef EB080000 		.4byte	0x8eb
 2168 06f3 08       		.uleb128 0x8
 2169 06f4 1E000000 		.4byte	.LVL77
 2170 06f8 F6080000 		.4byte	0x8f6
 2171 06fc 00       		.byte	0
 2172 06fd 06       		.uleb128 0x6
 2173 06fe 03020000 		.4byte	.LASF64
 2174 0702 01       		.byte	0x1
 2175 0703 F104     		.2byte	0x4f1
 2176 0705 00000000 		.4byte	.LFB33
 2177 0709 1C000000 		.4byte	.LFE33-.LFB33
 2178 070d 01       		.uleb128 0x1
 2179 070e 9C       		.byte	0x9c
 2180 070f 56070000 		.4byte	0x756
 2181 0713 09       		.uleb128 0x9
 2182 0714 23020000 		.4byte	.LASF35
 2183 0718 01       		.byte	0x1
 2184 0719 F104     		.2byte	0x4f1
 2185 071b 77000000 		.4byte	0x77
 2186 071f C9040000 		.4byte	.LLST39
 2187 0723 09       		.uleb128 0x9
 2188 0724 4F020000 		.4byte	.LASF65
 2189 0728 01       		.byte	0x1
 2190 0729 F104     		.2byte	0x4f1
 2191 072b 77000000 		.4byte	0x77
 2192 072f F5040000 		.4byte	.LLST40
 2193 0733 07       		.uleb128 0x7
 2194 0734 FD040000 		.4byte	.LASF18
 2195 0738 01       		.byte	0x1
 2196 0739 F304     		.2byte	0x4f3
 2197 073b 6B000000 		.4byte	0x6b
 2198 073f 21050000 		.4byte	.LLST41
 2199 0743 08       		.uleb128 0x8
 2200 0744 0A000000 		.4byte	.LVL79
 2201 0748 EB080000 		.4byte	0x8eb
 2202 074c 08       		.uleb128 0x8
 2203 074d 14000000 		.4byte	.LVL81
 2204 0751 F6080000 		.4byte	0x8f6
 2205 0755 00       		.byte	0
 2206 0756 0B       		.uleb128 0xb
 2207 0757 F8020000 		.4byte	.LASF66
 2208 075b 01       		.byte	0x1
 2209 075c B1       		.byte	0xb1
 2210 075d 00000000 		.4byte	.LFB1
ARM GAS  C:\Users\g\AppData\Local\Temp\ccGu2P49.s 			page 65


 2211 0761 24000000 		.4byte	.LFE1-.LFB1
 2212 0765 01       		.uleb128 0x1
 2213 0766 9C       		.byte	0x9c
 2214 0767 A1070000 		.4byte	0x7a1
 2215 076b 0C       		.uleb128 0xc
 2216 076c FD040000 		.4byte	.LASF18
 2217 0770 01       		.byte	0x1
 2218 0771 B3       		.byte	0xb3
 2219 0772 6B000000 		.4byte	0x6b
 2220 0776 34050000 		.4byte	.LLST42
 2221 077a 08       		.uleb128 0x8
 2222 077b 06000000 		.4byte	.LVL83
 2223 077f EB080000 		.4byte	0x8eb
 2224 0783 08       		.uleb128 0x8
 2225 0784 14000000 		.4byte	.LVL84
 2226 0788 F6080000 		.4byte	0x8f6
 2227 078c 0D       		.uleb128 0xd
 2228 078d 1C000000 		.4byte	.LVL85
 2229 0791 FD060000 		.4byte	0x6fd
 2230 0795 0E       		.uleb128 0xe
 2231 0796 01       		.uleb128 0x1
 2232 0797 51       		.byte	0x51
 2233 0798 01       		.uleb128 0x1
 2234 0799 48       		.byte	0x48
 2235 079a 0E       		.uleb128 0xe
 2236 079b 01       		.uleb128 0x1
 2237 079c 50       		.byte	0x50
 2238 079d 01       		.uleb128 0x1
 2239 079e 31       		.byte	0x31
 2240 079f 00       		.byte	0
 2241 07a0 00       		.byte	0
 2242 07a1 0A       		.uleb128 0xa
 2243 07a2 24030000 		.4byte	.LASF67
 2244 07a6 01       		.byte	0x1
 2245 07a7 0E05     		.2byte	0x50e
 2246 07a9 77000000 		.4byte	0x77
 2247 07ad 00000000 		.4byte	.LFB34
 2248 07b1 14000000 		.4byte	.LFE34-.LFB34
 2249 07b5 01       		.uleb128 0x1
 2250 07b6 9C       		.byte	0x9c
 2251 07b7 06       		.uleb128 0x6
 2252 07b8 B1000000 		.4byte	.LASF68
 2253 07bc 01       		.byte	0x1
 2254 07bd 2705     		.2byte	0x527
 2255 07bf 00000000 		.4byte	.LFB35
 2256 07c3 0C000000 		.4byte	.LFE35-.LFB35
 2257 07c7 01       		.uleb128 0x1
 2258 07c8 9C       		.byte	0x9c
 2259 07c9 DC070000 		.4byte	0x7dc
 2260 07cd 0F       		.uleb128 0xf
 2261 07ce E5030000 		.4byte	.LASF69
 2262 07d2 01       		.byte	0x1
 2263 07d3 2705     		.2byte	0x527
 2264 07d5 77000000 		.4byte	0x77
 2265 07d9 01       		.uleb128 0x1
 2266 07da 50       		.byte	0x50
 2267 07db 00       		.byte	0
ARM GAS  C:\Users\g\AppData\Local\Temp\ccGu2P49.s 			page 66


 2268 07dc 0B       		.uleb128 0xb
 2269 07dd 8D030000 		.4byte	.LASF70
 2270 07e1 01       		.byte	0x1
 2271 07e2 26       		.byte	0x26
 2272 07e3 00000000 		.4byte	.LFB0
 2273 07e7 54000000 		.4byte	.LFE0-.LFB0
 2274 07eb 01       		.uleb128 0x1
 2275 07ec 9C       		.byte	0x9c
 2276 07ed 3C080000 		.4byte	0x83c
 2277 07f1 10       		.uleb128 0x10
 2278 07f2 1A000000 		.4byte	.LVL87
 2279 07f6 58030000 		.4byte	0x358
 2280 07fa 04080000 		.4byte	0x804
 2281 07fe 0E       		.uleb128 0xe
 2282 07ff 01       		.uleb128 0x1
 2283 0800 50       		.byte	0x50
 2284 0801 01       		.uleb128 0x1
 2285 0802 30       		.byte	0x30
 2286 0803 00       		.byte	0
 2287 0804 10       		.uleb128 0x10
 2288 0805 32000000 		.4byte	.LVL88
 2289 0809 B7070000 		.4byte	0x7b7
 2290 080d 17080000 		.4byte	0x817
 2291 0811 0E       		.uleb128 0xe
 2292 0812 01       		.uleb128 0x1
 2293 0813 50       		.byte	0x50
 2294 0814 01       		.uleb128 0x1
 2295 0815 31       		.byte	0x31
 2296 0816 00       		.byte	0
 2297 0817 10       		.uleb128 0x10
 2298 0818 40000000 		.4byte	.LVL89
 2299 081c DE030000 		.4byte	0x3de
 2300 0820 2C080000 		.4byte	0x82c
 2301 0824 0E       		.uleb128 0xe
 2302 0825 01       		.uleb128 0x1
 2303 0826 50       		.byte	0x50
 2304 0827 03       		.uleb128 0x3
 2305 0828 0A       		.byte	0xa
 2306 0829 0010     		.2byte	0x1000
 2307 082b 00       		.byte	0
 2308 082c 0D       		.uleb128 0xd
 2309 082d 46000000 		.4byte	.LVL90
 2310 0831 EA040000 		.4byte	0x4ea
 2311 0835 0E       		.uleb128 0xe
 2312 0836 01       		.uleb128 0x1
 2313 0837 50       		.byte	0x50
 2314 0838 01       		.uleb128 0x1
 2315 0839 31       		.byte	0x31
 2316 083a 00       		.byte	0
 2317 083b 00       		.byte	0
 2318 083c 0B       		.uleb128 0xb
 2319 083d C6010000 		.4byte	.LASF71
 2320 0841 01       		.byte	0x1
 2321 0842 E6       		.byte	0xe6
 2322 0843 00000000 		.4byte	.LFB2
 2323 0847 20000000 		.4byte	.LFE2-.LFB2
 2324 084b 01       		.uleb128 0x1
ARM GAS  C:\Users\g\AppData\Local\Temp\ccGu2P49.s 			page 67


 2325 084c 9C       		.byte	0x9c
 2326 084d 64080000 		.4byte	0x864
 2327 0851 08       		.uleb128 0x8
 2328 0852 0E000000 		.4byte	.LVL91
 2329 0856 DC070000 		.4byte	0x7dc
 2330 085a 08       		.uleb128 0x8
 2331 085b 18000000 		.4byte	.LVL92
 2332 085f 56070000 		.4byte	0x756
 2333 0863 00       		.byte	0
 2334 0864 0A       		.uleb128 0xa
 2335 0865 25040000 		.4byte	.LASF72
 2336 0869 01       		.byte	0x1
 2337 086a 3E05     		.2byte	0x53e
 2338 086c 77000000 		.4byte	0x77
 2339 0870 00000000 		.4byte	.LFB36
 2340 0874 0C000000 		.4byte	.LFE36-.LFB36
 2341 0878 01       		.uleb128 0x1
 2342 0879 9C       		.byte	0x9c
 2343 087a 0A       		.uleb128 0xa
 2344 087b B9020000 		.4byte	.LASF73
 2345 087f 01       		.byte	0x1
 2346 0880 5505     		.2byte	0x555
 2347 0882 77000000 		.4byte	0x77
 2348 0886 00000000 		.4byte	.LFB37
 2349 088a 0C000000 		.4byte	.LFE37-.LFB37
 2350 088e 01       		.uleb128 0x1
 2351 088f 9C       		.byte	0x9c
 2352 0890 06       		.uleb128 0x6
 2353 0891 4F050000 		.4byte	.LASF74
 2354 0895 01       		.byte	0x1
 2355 0896 6C05     		.2byte	0x56c
 2356 0898 00000000 		.4byte	.LFB38
 2357 089c 0C000000 		.4byte	.LFE38-.LFB38
 2358 08a0 01       		.uleb128 0x1
 2359 08a1 9C       		.byte	0x9c
 2360 08a2 B5080000 		.4byte	0x8b5
 2361 08a6 0F       		.uleb128 0xf
 2362 08a7 E5030000 		.4byte	.LASF69
 2363 08ab 01       		.byte	0x1
 2364 08ac 6C05     		.2byte	0x56c
 2365 08ae 77000000 		.4byte	0x77
 2366 08b2 01       		.uleb128 0x1
 2367 08b3 50       		.byte	0x50
 2368 08b4 00       		.byte	0
 2369 08b5 06       		.uleb128 0x6
 2370 08b6 6B030000 		.4byte	.LASF75
 2371 08ba 01       		.byte	0x1
 2372 08bb 8305     		.2byte	0x583
 2373 08bd 00000000 		.4byte	.LFB39
 2374 08c1 0C000000 		.4byte	.LFE39-.LFB39
 2375 08c5 01       		.uleb128 0x1
 2376 08c6 9C       		.byte	0x9c
 2377 08c7 DA080000 		.4byte	0x8da
 2378 08cb 0F       		.uleb128 0xf
 2379 08cc E5030000 		.4byte	.LASF69
 2380 08d0 01       		.byte	0x1
 2381 08d1 8305     		.2byte	0x583
ARM GAS  C:\Users\g\AppData\Local\Temp\ccGu2P49.s 			page 68


 2382 08d3 77000000 		.4byte	0x77
 2383 08d7 01       		.uleb128 0x1
 2384 08d8 50       		.byte	0x50
 2385 08d9 00       		.byte	0
 2386 08da 11       		.uleb128 0x11
 2387 08db 60010000 		.4byte	.LASF79
 2388 08df 01       		.byte	0x1
 2389 08e0 15       		.byte	0x15
 2390 08e1 6B000000 		.4byte	0x6b
 2391 08e5 05       		.uleb128 0x5
 2392 08e6 03       		.byte	0x3
 2393 08e7 00000000 		.4byte	VPWM_initVar
 2394 08eb 12       		.uleb128 0x12
 2395 08ec 72020000 		.4byte	.LASF80
 2396 08f0 03       		.byte	0x3
 2397 08f1 E3       		.byte	0xe3
 2398 08f2 6B000000 		.4byte	0x6b
 2399 08f6 13       		.uleb128 0x13
 2400 08f7 19000000 		.4byte	.LASF81
 2401 08fb 03       		.byte	0x3
 2402 08fc E4       		.byte	0xe4
 2403 08fd 14       		.uleb128 0x14
 2404 08fe 6B000000 		.4byte	0x6b
 2405 0902 00       		.byte	0
 2406 0903 00       		.byte	0
 2407              		.section	.debug_abbrev,"",%progbits
 2408              	.Ldebug_abbrev0:
 2409 0000 01       		.uleb128 0x1
 2410 0001 11       		.uleb128 0x11
 2411 0002 01       		.byte	0x1
 2412 0003 25       		.uleb128 0x25
 2413 0004 0E       		.uleb128 0xe
 2414 0005 13       		.uleb128 0x13
 2415 0006 0B       		.uleb128 0xb
 2416 0007 03       		.uleb128 0x3
 2417 0008 0E       		.uleb128 0xe
 2418 0009 1B       		.uleb128 0x1b
 2419 000a 0E       		.uleb128 0xe
 2420 000b 55       		.uleb128 0x55
 2421 000c 17       		.uleb128 0x17
 2422 000d 11       		.uleb128 0x11
 2423 000e 01       		.uleb128 0x1
 2424 000f 10       		.uleb128 0x10
 2425 0010 17       		.uleb128 0x17
 2426 0011 00       		.byte	0
 2427 0012 00       		.byte	0
 2428 0013 02       		.uleb128 0x2
 2429 0014 24       		.uleb128 0x24
 2430 0015 00       		.byte	0
 2431 0016 0B       		.uleb128 0xb
 2432 0017 0B       		.uleb128 0xb
 2433 0018 3E       		.uleb128 0x3e
 2434 0019 0B       		.uleb128 0xb
 2435 001a 03       		.uleb128 0x3
 2436 001b 0E       		.uleb128 0xe
 2437 001c 00       		.byte	0
 2438 001d 00       		.byte	0
ARM GAS  C:\Users\g\AppData\Local\Temp\ccGu2P49.s 			page 69


 2439 001e 03       		.uleb128 0x3
 2440 001f 24       		.uleb128 0x24
 2441 0020 00       		.byte	0
 2442 0021 0B       		.uleb128 0xb
 2443 0022 0B       		.uleb128 0xb
 2444 0023 3E       		.uleb128 0x3e
 2445 0024 0B       		.uleb128 0xb
 2446 0025 03       		.uleb128 0x3
 2447 0026 08       		.uleb128 0x8
 2448 0027 00       		.byte	0
 2449 0028 00       		.byte	0
 2450 0029 04       		.uleb128 0x4
 2451 002a 16       		.uleb128 0x16
 2452 002b 00       		.byte	0
 2453 002c 03       		.uleb128 0x3
 2454 002d 0E       		.uleb128 0xe
 2455 002e 3A       		.uleb128 0x3a
 2456 002f 0B       		.uleb128 0xb
 2457 0030 3B       		.uleb128 0x3b
 2458 0031 05       		.uleb128 0x5
 2459 0032 49       		.uleb128 0x49
 2460 0033 13       		.uleb128 0x13
 2461 0034 00       		.byte	0
 2462 0035 00       		.byte	0
 2463 0036 05       		.uleb128 0x5
 2464 0037 35       		.uleb128 0x35
 2465 0038 00       		.byte	0
 2466 0039 49       		.uleb128 0x49
 2467 003a 13       		.uleb128 0x13
 2468 003b 00       		.byte	0
 2469 003c 00       		.byte	0
 2470 003d 06       		.uleb128 0x6
 2471 003e 2E       		.uleb128 0x2e
 2472 003f 01       		.byte	0x1
 2473 0040 3F       		.uleb128 0x3f
 2474 0041 19       		.uleb128 0x19
 2475 0042 03       		.uleb128 0x3
 2476 0043 0E       		.uleb128 0xe
 2477 0044 3A       		.uleb128 0x3a
 2478 0045 0B       		.uleb128 0xb
 2479 0046 3B       		.uleb128 0x3b
 2480 0047 05       		.uleb128 0x5
 2481 0048 27       		.uleb128 0x27
 2482 0049 19       		.uleb128 0x19
 2483 004a 11       		.uleb128 0x11
 2484 004b 01       		.uleb128 0x1
 2485 004c 12       		.uleb128 0x12
 2486 004d 06       		.uleb128 0x6
 2487 004e 40       		.uleb128 0x40
 2488 004f 18       		.uleb128 0x18
 2489 0050 9742     		.uleb128 0x2117
 2490 0052 19       		.uleb128 0x19
 2491 0053 01       		.uleb128 0x1
 2492 0054 13       		.uleb128 0x13
 2493 0055 00       		.byte	0
 2494 0056 00       		.byte	0
 2495 0057 07       		.uleb128 0x7
ARM GAS  C:\Users\g\AppData\Local\Temp\ccGu2P49.s 			page 70


 2496 0058 34       		.uleb128 0x34
 2497 0059 00       		.byte	0
 2498 005a 03       		.uleb128 0x3
 2499 005b 0E       		.uleb128 0xe
 2500 005c 3A       		.uleb128 0x3a
 2501 005d 0B       		.uleb128 0xb
 2502 005e 3B       		.uleb128 0x3b
 2503 005f 05       		.uleb128 0x5
 2504 0060 49       		.uleb128 0x49
 2505 0061 13       		.uleb128 0x13
 2506 0062 02       		.uleb128 0x2
 2507 0063 17       		.uleb128 0x17
 2508 0064 00       		.byte	0
 2509 0065 00       		.byte	0
 2510 0066 08       		.uleb128 0x8
 2511 0067 898201   		.uleb128 0x4109
 2512 006a 00       		.byte	0
 2513 006b 11       		.uleb128 0x11
 2514 006c 01       		.uleb128 0x1
 2515 006d 31       		.uleb128 0x31
 2516 006e 13       		.uleb128 0x13
 2517 006f 00       		.byte	0
 2518 0070 00       		.byte	0
 2519 0071 09       		.uleb128 0x9
 2520 0072 05       		.uleb128 0x5
 2521 0073 00       		.byte	0
 2522 0074 03       		.uleb128 0x3
 2523 0075 0E       		.uleb128 0xe
 2524 0076 3A       		.uleb128 0x3a
 2525 0077 0B       		.uleb128 0xb
 2526 0078 3B       		.uleb128 0x3b
 2527 0079 05       		.uleb128 0x5
 2528 007a 49       		.uleb128 0x49
 2529 007b 13       		.uleb128 0x13
 2530 007c 02       		.uleb128 0x2
 2531 007d 17       		.uleb128 0x17
 2532 007e 00       		.byte	0
 2533 007f 00       		.byte	0
 2534 0080 0A       		.uleb128 0xa
 2535 0081 2E       		.uleb128 0x2e
 2536 0082 00       		.byte	0
 2537 0083 3F       		.uleb128 0x3f
 2538 0084 19       		.uleb128 0x19
 2539 0085 03       		.uleb128 0x3
 2540 0086 0E       		.uleb128 0xe
 2541 0087 3A       		.uleb128 0x3a
 2542 0088 0B       		.uleb128 0xb
 2543 0089 3B       		.uleb128 0x3b
 2544 008a 05       		.uleb128 0x5
 2545 008b 27       		.uleb128 0x27
 2546 008c 19       		.uleb128 0x19
 2547 008d 49       		.uleb128 0x49
 2548 008e 13       		.uleb128 0x13
 2549 008f 11       		.uleb128 0x11
 2550 0090 01       		.uleb128 0x1
 2551 0091 12       		.uleb128 0x12
 2552 0092 06       		.uleb128 0x6
ARM GAS  C:\Users\g\AppData\Local\Temp\ccGu2P49.s 			page 71


 2553 0093 40       		.uleb128 0x40
 2554 0094 18       		.uleb128 0x18
 2555 0095 9742     		.uleb128 0x2117
 2556 0097 19       		.uleb128 0x19
 2557 0098 00       		.byte	0
 2558 0099 00       		.byte	0
 2559 009a 0B       		.uleb128 0xb
 2560 009b 2E       		.uleb128 0x2e
 2561 009c 01       		.byte	0x1
 2562 009d 3F       		.uleb128 0x3f
 2563 009e 19       		.uleb128 0x19
 2564 009f 03       		.uleb128 0x3
 2565 00a0 0E       		.uleb128 0xe
 2566 00a1 3A       		.uleb128 0x3a
 2567 00a2 0B       		.uleb128 0xb
 2568 00a3 3B       		.uleb128 0x3b
 2569 00a4 0B       		.uleb128 0xb
 2570 00a5 27       		.uleb128 0x27
 2571 00a6 19       		.uleb128 0x19
 2572 00a7 11       		.uleb128 0x11
 2573 00a8 01       		.uleb128 0x1
 2574 00a9 12       		.uleb128 0x12
 2575 00aa 06       		.uleb128 0x6
 2576 00ab 40       		.uleb128 0x40
 2577 00ac 18       		.uleb128 0x18
 2578 00ad 9742     		.uleb128 0x2117
 2579 00af 19       		.uleb128 0x19
 2580 00b0 01       		.uleb128 0x1
 2581 00b1 13       		.uleb128 0x13
 2582 00b2 00       		.byte	0
 2583 00b3 00       		.byte	0
 2584 00b4 0C       		.uleb128 0xc
 2585 00b5 34       		.uleb128 0x34
 2586 00b6 00       		.byte	0
 2587 00b7 03       		.uleb128 0x3
 2588 00b8 0E       		.uleb128 0xe
 2589 00b9 3A       		.uleb128 0x3a
 2590 00ba 0B       		.uleb128 0xb
 2591 00bb 3B       		.uleb128 0x3b
 2592 00bc 0B       		.uleb128 0xb
 2593 00bd 49       		.uleb128 0x49
 2594 00be 13       		.uleb128 0x13
 2595 00bf 02       		.uleb128 0x2
 2596 00c0 17       		.uleb128 0x17
 2597 00c1 00       		.byte	0
 2598 00c2 00       		.byte	0
 2599 00c3 0D       		.uleb128 0xd
 2600 00c4 898201   		.uleb128 0x4109
 2601 00c7 01       		.byte	0x1
 2602 00c8 11       		.uleb128 0x11
 2603 00c9 01       		.uleb128 0x1
 2604 00ca 31       		.uleb128 0x31
 2605 00cb 13       		.uleb128 0x13
 2606 00cc 00       		.byte	0
 2607 00cd 00       		.byte	0
 2608 00ce 0E       		.uleb128 0xe
 2609 00cf 8A8201   		.uleb128 0x410a
ARM GAS  C:\Users\g\AppData\Local\Temp\ccGu2P49.s 			page 72


 2610 00d2 00       		.byte	0
 2611 00d3 02       		.uleb128 0x2
 2612 00d4 18       		.uleb128 0x18
 2613 00d5 9142     		.uleb128 0x2111
 2614 00d7 18       		.uleb128 0x18
 2615 00d8 00       		.byte	0
 2616 00d9 00       		.byte	0
 2617 00da 0F       		.uleb128 0xf
 2618 00db 05       		.uleb128 0x5
 2619 00dc 00       		.byte	0
 2620 00dd 03       		.uleb128 0x3
 2621 00de 0E       		.uleb128 0xe
 2622 00df 3A       		.uleb128 0x3a
 2623 00e0 0B       		.uleb128 0xb
 2624 00e1 3B       		.uleb128 0x3b
 2625 00e2 05       		.uleb128 0x5
 2626 00e3 49       		.uleb128 0x49
 2627 00e4 13       		.uleb128 0x13
 2628 00e5 02       		.uleb128 0x2
 2629 00e6 18       		.uleb128 0x18
 2630 00e7 00       		.byte	0
 2631 00e8 00       		.byte	0
 2632 00e9 10       		.uleb128 0x10
 2633 00ea 898201   		.uleb128 0x4109
 2634 00ed 01       		.byte	0x1
 2635 00ee 11       		.uleb128 0x11
 2636 00ef 01       		.uleb128 0x1
 2637 00f0 31       		.uleb128 0x31
 2638 00f1 13       		.uleb128 0x13
 2639 00f2 01       		.uleb128 0x1
 2640 00f3 13       		.uleb128 0x13
 2641 00f4 00       		.byte	0
 2642 00f5 00       		.byte	0
 2643 00f6 11       		.uleb128 0x11
 2644 00f7 34       		.uleb128 0x34
 2645 00f8 00       		.byte	0
 2646 00f9 03       		.uleb128 0x3
 2647 00fa 0E       		.uleb128 0xe
 2648 00fb 3A       		.uleb128 0x3a
 2649 00fc 0B       		.uleb128 0xb
 2650 00fd 3B       		.uleb128 0x3b
 2651 00fe 0B       		.uleb128 0xb
 2652 00ff 49       		.uleb128 0x49
 2653 0100 13       		.uleb128 0x13
 2654 0101 3F       		.uleb128 0x3f
 2655 0102 19       		.uleb128 0x19
 2656 0103 02       		.uleb128 0x2
 2657 0104 18       		.uleb128 0x18
 2658 0105 00       		.byte	0
 2659 0106 00       		.byte	0
 2660 0107 12       		.uleb128 0x12
 2661 0108 2E       		.uleb128 0x2e
 2662 0109 00       		.byte	0
 2663 010a 3F       		.uleb128 0x3f
 2664 010b 19       		.uleb128 0x19
 2665 010c 03       		.uleb128 0x3
 2666 010d 0E       		.uleb128 0xe
ARM GAS  C:\Users\g\AppData\Local\Temp\ccGu2P49.s 			page 73


 2667 010e 3A       		.uleb128 0x3a
 2668 010f 0B       		.uleb128 0xb
 2669 0110 3B       		.uleb128 0x3b
 2670 0111 0B       		.uleb128 0xb
 2671 0112 27       		.uleb128 0x27
 2672 0113 19       		.uleb128 0x19
 2673 0114 49       		.uleb128 0x49
 2674 0115 13       		.uleb128 0x13
 2675 0116 3C       		.uleb128 0x3c
 2676 0117 19       		.uleb128 0x19
 2677 0118 00       		.byte	0
 2678 0119 00       		.byte	0
 2679 011a 13       		.uleb128 0x13
 2680 011b 2E       		.uleb128 0x2e
 2681 011c 01       		.byte	0x1
 2682 011d 3F       		.uleb128 0x3f
 2683 011e 19       		.uleb128 0x19
 2684 011f 03       		.uleb128 0x3
 2685 0120 0E       		.uleb128 0xe
 2686 0121 3A       		.uleb128 0x3a
 2687 0122 0B       		.uleb128 0xb
 2688 0123 3B       		.uleb128 0x3b
 2689 0124 0B       		.uleb128 0xb
 2690 0125 27       		.uleb128 0x27
 2691 0126 19       		.uleb128 0x19
 2692 0127 3C       		.uleb128 0x3c
 2693 0128 19       		.uleb128 0x19
 2694 0129 00       		.byte	0
 2695 012a 00       		.byte	0
 2696 012b 14       		.uleb128 0x14
 2697 012c 05       		.uleb128 0x5
 2698 012d 00       		.byte	0
 2699 012e 49       		.uleb128 0x49
 2700 012f 13       		.uleb128 0x13
 2701 0130 00       		.byte	0
 2702 0131 00       		.byte	0
 2703 0132 00       		.byte	0
 2704              		.section	.debug_loc,"",%progbits
 2705              	.Ldebug_loc0:
 2706              	.LLST0:
 2707 0000 06000000 		.4byte	.LVL0
 2708 0004 13000000 		.4byte	.LVL1-1
 2709 0008 0100     		.2byte	0x1
 2710 000a 50       		.byte	0x50
 2711 000b 00000000 		.4byte	0
 2712 000f 00000000 		.4byte	0
 2713              	.LLST1:
 2714 0013 00000000 		.4byte	.LVL2
 2715 0017 07000000 		.4byte	.LVL3-1
 2716 001b 0100     		.2byte	0x1
 2717 001d 50       		.byte	0x50
 2718 001e 07000000 		.4byte	.LVL3-1
 2719 0022 16000000 		.4byte	.LVL4
 2720 0026 0100     		.2byte	0x1
 2721 0028 54       		.byte	0x54
 2722 0029 16000000 		.4byte	.LVL4
 2723 002d 28000000 		.4byte	.LFE4
ARM GAS  C:\Users\g\AppData\Local\Temp\ccGu2P49.s 			page 74


 2724 0031 0400     		.2byte	0x4
 2725 0033 F3       		.byte	0xf3
 2726 0034 01       		.uleb128 0x1
 2727 0035 50       		.byte	0x50
 2728 0036 9F       		.byte	0x9f
 2729 0037 00000000 		.4byte	0
 2730 003b 00000000 		.4byte	0
 2731              	.LLST2:
 2732 003f 08000000 		.4byte	.LVL3
 2733 0043 1B000000 		.4byte	.LVL5-1
 2734 0047 0100     		.2byte	0x1
 2735 0049 50       		.byte	0x50
 2736 004a 00000000 		.4byte	0
 2737 004e 00000000 		.4byte	0
 2738              	.LLST3:
 2739 0052 00000000 		.4byte	.LVL6
 2740 0056 07000000 		.4byte	.LVL7-1
 2741 005a 0100     		.2byte	0x1
 2742 005c 50       		.byte	0x50
 2743 005d 07000000 		.4byte	.LVL7-1
 2744 0061 16000000 		.4byte	.LVL8
 2745 0065 0100     		.2byte	0x1
 2746 0067 54       		.byte	0x54
 2747 0068 16000000 		.4byte	.LVL8
 2748 006c 28000000 		.4byte	.LFE5
 2749 0070 0400     		.2byte	0x4
 2750 0072 F3       		.byte	0xf3
 2751 0073 01       		.uleb128 0x1
 2752 0074 50       		.byte	0x50
 2753 0075 9F       		.byte	0x9f
 2754 0076 00000000 		.4byte	0
 2755 007a 00000000 		.4byte	0
 2756              	.LLST4:
 2757 007e 08000000 		.4byte	.LVL7
 2758 0082 1B000000 		.4byte	.LVL9-1
 2759 0086 0100     		.2byte	0x1
 2760 0088 50       		.byte	0x50
 2761 0089 00000000 		.4byte	0
 2762 008d 00000000 		.4byte	0
 2763              	.LLST5:
 2764 0091 00000000 		.4byte	.LVL10
 2765 0095 07000000 		.4byte	.LVL11-1
 2766 0099 0100     		.2byte	0x1
 2767 009b 50       		.byte	0x50
 2768 009c 07000000 		.4byte	.LVL11-1
 2769 00a0 16000000 		.4byte	.LVL12
 2770 00a4 0100     		.2byte	0x1
 2771 00a6 54       		.byte	0x54
 2772 00a7 16000000 		.4byte	.LVL12
 2773 00ab 28000000 		.4byte	.LFE6
 2774 00af 0400     		.2byte	0x4
 2775 00b1 F3       		.byte	0xf3
 2776 00b2 01       		.uleb128 0x1
 2777 00b3 50       		.byte	0x50
 2778 00b4 9F       		.byte	0x9f
 2779 00b5 00000000 		.4byte	0
 2780 00b9 00000000 		.4byte	0
ARM GAS  C:\Users\g\AppData\Local\Temp\ccGu2P49.s 			page 75


 2781              	.LLST6:
 2782 00bd 08000000 		.4byte	.LVL11
 2783 00c1 1B000000 		.4byte	.LVL13-1
 2784 00c5 0100     		.2byte	0x1
 2785 00c7 50       		.byte	0x50
 2786 00c8 00000000 		.4byte	0
 2787 00cc 00000000 		.4byte	0
 2788              	.LLST7:
 2789 00d0 00000000 		.4byte	.LVL14
 2790 00d4 07000000 		.4byte	.LVL15-1
 2791 00d8 0100     		.2byte	0x1
 2792 00da 50       		.byte	0x50
 2793 00db 07000000 		.4byte	.LVL15-1
 2794 00df 18000000 		.4byte	.LVL16
 2795 00e3 0100     		.2byte	0x1
 2796 00e5 54       		.byte	0x54
 2797 00e6 18000000 		.4byte	.LVL16
 2798 00ea 2C000000 		.4byte	.LFE7
 2799 00ee 0400     		.2byte	0x4
 2800 00f0 F3       		.byte	0xf3
 2801 00f1 01       		.uleb128 0x1
 2802 00f2 50       		.byte	0x50
 2803 00f3 9F       		.byte	0x9f
 2804 00f4 00000000 		.4byte	0
 2805 00f8 00000000 		.4byte	0
 2806              	.LLST8:
 2807 00fc 08000000 		.4byte	.LVL15
 2808 0100 21000000 		.4byte	.LVL17-1
 2809 0104 0100     		.2byte	0x1
 2810 0106 50       		.byte	0x50
 2811 0107 00000000 		.4byte	0
 2812 010b 00000000 		.4byte	0
 2813              	.LLST9:
 2814 010f 00000000 		.4byte	.LVL18
 2815 0113 04000000 		.4byte	.LVL19
 2816 0117 0100     		.2byte	0x1
 2817 0119 50       		.byte	0x50
 2818 011a 04000000 		.4byte	.LVL19
 2819 011e 10000000 		.4byte	.LFE8
 2820 0122 0400     		.2byte	0x4
 2821 0124 F3       		.byte	0xf3
 2822 0125 01       		.uleb128 0x1
 2823 0126 50       		.byte	0x50
 2824 0127 9F       		.byte	0x9f
 2825 0128 00000000 		.4byte	0
 2826 012c 00000000 		.4byte	0
 2827              	.LLST10:
 2828 0130 00000000 		.4byte	.LVL20
 2829 0134 07000000 		.4byte	.LVL21-1
 2830 0138 0100     		.2byte	0x1
 2831 013a 50       		.byte	0x50
 2832 013b 07000000 		.4byte	.LVL21-1
 2833 013f 18000000 		.4byte	.LVL22
 2834 0143 0100     		.2byte	0x1
 2835 0145 54       		.byte	0x54
 2836 0146 18000000 		.4byte	.LVL22
 2837 014a 28000000 		.4byte	.LFE9
ARM GAS  C:\Users\g\AppData\Local\Temp\ccGu2P49.s 			page 76


 2838 014e 0400     		.2byte	0x4
 2839 0150 F3       		.byte	0xf3
 2840 0151 01       		.uleb128 0x1
 2841 0152 50       		.byte	0x50
 2842 0153 9F       		.byte	0x9f
 2843 0154 00000000 		.4byte	0
 2844 0158 00000000 		.4byte	0
 2845              	.LLST11:
 2846 015c 08000000 		.4byte	.LVL21
 2847 0160 21000000 		.4byte	.LVL23-1
 2848 0164 0100     		.2byte	0x1
 2849 0166 50       		.byte	0x50
 2850 0167 00000000 		.4byte	0
 2851 016b 00000000 		.4byte	0
 2852              	.LLST12:
 2853 016f 00000000 		.4byte	.LVL24
 2854 0173 07000000 		.4byte	.LVL25-1
 2855 0177 0100     		.2byte	0x1
 2856 0179 50       		.byte	0x50
 2857 017a 07000000 		.4byte	.LVL25-1
 2858 017e 18000000 		.4byte	.LVL26
 2859 0182 0100     		.2byte	0x1
 2860 0184 54       		.byte	0x54
 2861 0185 18000000 		.4byte	.LVL26
 2862 0189 28000000 		.4byte	.LFE10
 2863 018d 0400     		.2byte	0x4
 2864 018f F3       		.byte	0xf3
 2865 0190 01       		.uleb128 0x1
 2866 0191 50       		.byte	0x50
 2867 0192 9F       		.byte	0x9f
 2868 0193 00000000 		.4byte	0
 2869 0197 00000000 		.4byte	0
 2870              	.LLST13:
 2871 019b 08000000 		.4byte	.LVL25
 2872 019f 21000000 		.4byte	.LVL27-1
 2873 01a3 0100     		.2byte	0x1
 2874 01a5 50       		.byte	0x50
 2875 01a6 00000000 		.4byte	0
 2876 01aa 00000000 		.4byte	0
 2877              	.LLST14:
 2878 01ae 00000000 		.4byte	.LVL28
 2879 01b2 07000000 		.4byte	.LVL29-1
 2880 01b6 0100     		.2byte	0x1
 2881 01b8 50       		.byte	0x50
 2882 01b9 07000000 		.4byte	.LVL29-1
 2883 01bd 16000000 		.4byte	.LVL30
 2884 01c1 0100     		.2byte	0x1
 2885 01c3 54       		.byte	0x54
 2886 01c4 16000000 		.4byte	.LVL30
 2887 01c8 2C000000 		.4byte	.LFE11
 2888 01cc 0400     		.2byte	0x4
 2889 01ce F3       		.byte	0xf3
 2890 01cf 01       		.uleb128 0x1
 2891 01d0 50       		.byte	0x50
 2892 01d1 9F       		.byte	0x9f
 2893 01d2 00000000 		.4byte	0
 2894 01d6 00000000 		.4byte	0
ARM GAS  C:\Users\g\AppData\Local\Temp\ccGu2P49.s 			page 77


 2895              	.LLST15:
 2896 01da 08000000 		.4byte	.LVL29
 2897 01de 1F000000 		.4byte	.LVL31-1
 2898 01e2 0100     		.2byte	0x1
 2899 01e4 50       		.byte	0x50
 2900 01e5 00000000 		.4byte	0
 2901 01e9 00000000 		.4byte	0
 2902              	.LLST16:
 2903 01ed 00000000 		.4byte	.LVL32
 2904 01f1 07000000 		.4byte	.LVL33-1
 2905 01f5 0100     		.2byte	0x1
 2906 01f7 50       		.byte	0x50
 2907 01f8 07000000 		.4byte	.LVL33-1
 2908 01fc 16000000 		.4byte	.LVL34
 2909 0200 0100     		.2byte	0x1
 2910 0202 54       		.byte	0x54
 2911 0203 16000000 		.4byte	.LVL34
 2912 0207 28000000 		.4byte	.LFE12
 2913 020b 0400     		.2byte	0x4
 2914 020d F3       		.byte	0xf3
 2915 020e 01       		.uleb128 0x1
 2916 020f 50       		.byte	0x50
 2917 0210 9F       		.byte	0x9f
 2918 0211 00000000 		.4byte	0
 2919 0215 00000000 		.4byte	0
 2920              	.LLST17:
 2921 0219 08000000 		.4byte	.LVL33
 2922 021d 1B000000 		.4byte	.LVL35-1
 2923 0221 0100     		.2byte	0x1
 2924 0223 50       		.byte	0x50
 2925 0224 00000000 		.4byte	0
 2926 0228 00000000 		.4byte	0
 2927              	.LLST18:
 2928 022c 00000000 		.4byte	.LVL36
 2929 0230 02000000 		.4byte	.LVL37
 2930 0234 0100     		.2byte	0x1
 2931 0236 50       		.byte	0x50
 2932 0237 02000000 		.4byte	.LVL37
 2933 023b 10000000 		.4byte	.LFE13
 2934 023f 0400     		.2byte	0x4
 2935 0241 F3       		.byte	0xf3
 2936 0242 01       		.uleb128 0x1
 2937 0243 50       		.byte	0x50
 2938 0244 9F       		.byte	0x9f
 2939 0245 00000000 		.4byte	0
 2940 0249 00000000 		.4byte	0
 2941              	.LLST19:
 2942 024d 00000000 		.4byte	.LVL38
 2943 0251 07000000 		.4byte	.LVL39-1
 2944 0255 0100     		.2byte	0x1
 2945 0257 50       		.byte	0x50
 2946 0258 07000000 		.4byte	.LVL39-1
 2947 025c 16000000 		.4byte	.LVL40
 2948 0260 0100     		.2byte	0x1
 2949 0262 54       		.byte	0x54
 2950 0263 16000000 		.4byte	.LVL40
 2951 0267 28000000 		.4byte	.LFE15
ARM GAS  C:\Users\g\AppData\Local\Temp\ccGu2P49.s 			page 78


 2952 026b 0400     		.2byte	0x4
 2953 026d F3       		.byte	0xf3
 2954 026e 01       		.uleb128 0x1
 2955 026f 50       		.byte	0x50
 2956 0270 9F       		.byte	0x9f
 2957 0271 00000000 		.4byte	0
 2958 0275 00000000 		.4byte	0
 2959              	.LLST20:
 2960 0279 08000000 		.4byte	.LVL39
 2961 027d 1B000000 		.4byte	.LVL41-1
 2962 0281 0100     		.2byte	0x1
 2963 0283 50       		.byte	0x50
 2964 0284 00000000 		.4byte	0
 2965 0288 00000000 		.4byte	0
 2966              	.LLST21:
 2967 028c 00000000 		.4byte	.LVL42
 2968 0290 02000000 		.4byte	.LVL43
 2969 0294 0100     		.2byte	0x1
 2970 0296 50       		.byte	0x50
 2971 0297 02000000 		.4byte	.LVL43
 2972 029b 10000000 		.4byte	.LFE16
 2973 029f 0400     		.2byte	0x4
 2974 02a1 F3       		.byte	0xf3
 2975 02a2 01       		.uleb128 0x1
 2976 02a3 50       		.byte	0x50
 2977 02a4 9F       		.byte	0x9f
 2978 02a5 00000000 		.4byte	0
 2979 02a9 00000000 		.4byte	0
 2980              	.LLST22:
 2981 02ad 00000000 		.4byte	.LVL44
 2982 02b1 07000000 		.4byte	.LVL45-1
 2983 02b5 0100     		.2byte	0x1
 2984 02b7 50       		.byte	0x50
 2985 02b8 07000000 		.4byte	.LVL45-1
 2986 02bc 16000000 		.4byte	.LVL46
 2987 02c0 0100     		.2byte	0x1
 2988 02c2 54       		.byte	0x54
 2989 02c3 16000000 		.4byte	.LVL46
 2990 02c7 24000000 		.4byte	.LFE18
 2991 02cb 0400     		.2byte	0x4
 2992 02cd F3       		.byte	0xf3
 2993 02ce 01       		.uleb128 0x1
 2994 02cf 50       		.byte	0x50
 2995 02d0 9F       		.byte	0x9f
 2996 02d1 00000000 		.4byte	0
 2997 02d5 00000000 		.4byte	0
 2998              	.LLST23:
 2999 02d9 08000000 		.4byte	.LVL45
 3000 02dd 1D000000 		.4byte	.LVL47-1
 3001 02e1 0100     		.2byte	0x1
 3002 02e3 50       		.byte	0x50
 3003 02e4 00000000 		.4byte	0
 3004 02e8 00000000 		.4byte	0
 3005              	.LLST24:
 3006 02ec 00000000 		.4byte	.LVL48
 3007 02f0 02000000 		.4byte	.LVL49
 3008 02f4 0100     		.2byte	0x1
ARM GAS  C:\Users\g\AppData\Local\Temp\ccGu2P49.s 			page 79


 3009 02f6 50       		.byte	0x50
 3010 02f7 02000000 		.4byte	.LVL49
 3011 02fb 10000000 		.4byte	.LFE19
 3012 02ff 0400     		.2byte	0x4
 3013 0301 F3       		.byte	0xf3
 3014 0302 01       		.uleb128 0x1
 3015 0303 50       		.byte	0x50
 3016 0304 9F       		.byte	0x9f
 3017 0305 00000000 		.4byte	0
 3018 0309 00000000 		.4byte	0
 3019              	.LLST25:
 3020 030d 00000000 		.4byte	.LVL50
 3021 0311 07000000 		.4byte	.LVL51-1
 3022 0315 0100     		.2byte	0x1
 3023 0317 50       		.byte	0x50
 3024 0318 07000000 		.4byte	.LVL51-1
 3025 031c 18000000 		.4byte	.LVL52
 3026 0320 0100     		.2byte	0x1
 3027 0322 54       		.byte	0x54
 3028 0323 18000000 		.4byte	.LVL52
 3029 0327 28000000 		.4byte	.LFE21
 3030 032b 0400     		.2byte	0x4
 3031 032d F3       		.byte	0xf3
 3032 032e 01       		.uleb128 0x1
 3033 032f 50       		.byte	0x50
 3034 0330 9F       		.byte	0x9f
 3035 0331 00000000 		.4byte	0
 3036 0335 00000000 		.4byte	0
 3037              	.LLST26:
 3038 0339 08000000 		.4byte	.LVL51
 3039 033d 21000000 		.4byte	.LVL53-1
 3040 0341 0100     		.2byte	0x1
 3041 0343 50       		.byte	0x50
 3042 0344 00000000 		.4byte	0
 3043 0348 00000000 		.4byte	0
 3044              	.LLST27:
 3045 034c 00000000 		.4byte	.LVL54
 3046 0350 02000000 		.4byte	.LVL55
 3047 0354 0100     		.2byte	0x1
 3048 0356 50       		.byte	0x50
 3049 0357 02000000 		.4byte	.LVL55
 3050 035b 10000000 		.4byte	.LFE22
 3051 035f 0400     		.2byte	0x4
 3052 0361 F3       		.byte	0xf3
 3053 0362 01       		.uleb128 0x1
 3054 0363 50       		.byte	0x50
 3055 0364 9F       		.byte	0x9f
 3056 0365 00000000 		.4byte	0
 3057 0369 00000000 		.4byte	0
 3058              	.LLST28:
 3059 036d 00000000 		.4byte	.LVL56
 3060 0371 02000000 		.4byte	.LVL57
 3061 0375 0100     		.2byte	0x1
 3062 0377 50       		.byte	0x50
 3063 0378 02000000 		.4byte	.LVL57
 3064 037c 10000000 		.4byte	.LFE24
 3065 0380 0400     		.2byte	0x4
ARM GAS  C:\Users\g\AppData\Local\Temp\ccGu2P49.s 			page 80


 3066 0382 F3       		.byte	0xf3
 3067 0383 01       		.uleb128 0x1
 3068 0384 50       		.byte	0x50
 3069 0385 9F       		.byte	0x9f
 3070 0386 00000000 		.4byte	0
 3071 038a 00000000 		.4byte	0
 3072              	.LLST29:
 3073 038e 00000000 		.4byte	.LVL58
 3074 0392 07000000 		.4byte	.LVL59-1
 3075 0396 0100     		.2byte	0x1
 3076 0398 50       		.byte	0x50
 3077 0399 07000000 		.4byte	.LVL59-1
 3078 039d 16000000 		.4byte	.LVL60
 3079 03a1 0100     		.2byte	0x1
 3080 03a3 54       		.byte	0x54
 3081 03a4 16000000 		.4byte	.LVL60
 3082 03a8 24000000 		.4byte	.LFE28
 3083 03ac 0400     		.2byte	0x4
 3084 03ae F3       		.byte	0xf3
 3085 03af 01       		.uleb128 0x1
 3086 03b0 50       		.byte	0x50
 3087 03b1 9F       		.byte	0x9f
 3088 03b2 00000000 		.4byte	0
 3089 03b6 00000000 		.4byte	0
 3090              	.LLST30:
 3091 03ba 08000000 		.4byte	.LVL59
 3092 03be 1B000000 		.4byte	.LVL61-1
 3093 03c2 0100     		.2byte	0x1
 3094 03c4 50       		.byte	0x50
 3095 03c5 00000000 		.4byte	0
 3096 03c9 00000000 		.4byte	0
 3097              	.LLST31:
 3098 03cd 00000000 		.4byte	.LVL62
 3099 03d1 07000000 		.4byte	.LVL63-1
 3100 03d5 0100     		.2byte	0x1
 3101 03d7 50       		.byte	0x50
 3102 03d8 07000000 		.4byte	.LVL63-1
 3103 03dc 16000000 		.4byte	.LVL64
 3104 03e0 0100     		.2byte	0x1
 3105 03e2 54       		.byte	0x54
 3106 03e3 16000000 		.4byte	.LVL64
 3107 03e7 24000000 		.4byte	.LFE29
 3108 03eb 0400     		.2byte	0x4
 3109 03ed F3       		.byte	0xf3
 3110 03ee 01       		.uleb128 0x1
 3111 03ef 50       		.byte	0x50
 3112 03f0 9F       		.byte	0x9f
 3113 03f1 00000000 		.4byte	0
 3114 03f5 00000000 		.4byte	0
 3115              	.LLST32:
 3116 03f9 08000000 		.4byte	.LVL63
 3117 03fd 1D000000 		.4byte	.LVL65-1
 3118 0401 0100     		.2byte	0x1
 3119 0403 50       		.byte	0x50
 3120 0404 00000000 		.4byte	0
 3121 0408 00000000 		.4byte	0
 3122              	.LLST33:
ARM GAS  C:\Users\g\AppData\Local\Temp\ccGu2P49.s 			page 81


 3123 040c 00000000 		.4byte	.LVL66
 3124 0410 07000000 		.4byte	.LVL67-1
 3125 0414 0100     		.2byte	0x1
 3126 0416 50       		.byte	0x50
 3127 0417 07000000 		.4byte	.LVL67-1
 3128 041b 16000000 		.4byte	.LVL68
 3129 041f 0100     		.2byte	0x1
 3130 0421 54       		.byte	0x54
 3131 0422 16000000 		.4byte	.LVL68
 3132 0426 28000000 		.4byte	.LFE30
 3133 042a 0400     		.2byte	0x4
 3134 042c F3       		.byte	0xf3
 3135 042d 01       		.uleb128 0x1
 3136 042e 50       		.byte	0x50
 3137 042f 9F       		.byte	0x9f
 3138 0430 00000000 		.4byte	0
 3139 0434 00000000 		.4byte	0
 3140              	.LLST34:
 3141 0438 08000000 		.4byte	.LVL67
 3142 043c 1D000000 		.4byte	.LVL69-1
 3143 0440 0100     		.2byte	0x1
 3144 0442 50       		.byte	0x50
 3145 0443 00000000 		.4byte	0
 3146 0447 00000000 		.4byte	0
 3147              	.LLST35:
 3148 044b 00000000 		.4byte	.LVL70
 3149 044f 07000000 		.4byte	.LVL71-1
 3150 0453 0100     		.2byte	0x1
 3151 0455 50       		.byte	0x50
 3152 0456 07000000 		.4byte	.LVL71-1
 3153 045a 16000000 		.4byte	.LVL72
 3154 045e 0100     		.2byte	0x1
 3155 0460 54       		.byte	0x54
 3156 0461 16000000 		.4byte	.LVL72
 3157 0465 24000000 		.4byte	.LFE31
 3158 0469 0400     		.2byte	0x4
 3159 046b F3       		.byte	0xf3
 3160 046c 01       		.uleb128 0x1
 3161 046d 50       		.byte	0x50
 3162 046e 9F       		.byte	0x9f
 3163 046f 00000000 		.4byte	0
 3164 0473 00000000 		.4byte	0
 3165              	.LLST36:
 3166 0477 08000000 		.4byte	.LVL71
 3167 047b 1D000000 		.4byte	.LVL73-1
 3168 047f 0100     		.2byte	0x1
 3169 0481 50       		.byte	0x50
 3170 0482 00000000 		.4byte	0
 3171 0486 00000000 		.4byte	0
 3172              	.LLST37:
 3173 048a 00000000 		.4byte	.LVL74
 3174 048e 07000000 		.4byte	.LVL75-1
 3175 0492 0100     		.2byte	0x1
 3176 0494 50       		.byte	0x50
 3177 0495 07000000 		.4byte	.LVL75-1
 3178 0499 16000000 		.4byte	.LVL76
 3179 049d 0100     		.2byte	0x1
ARM GAS  C:\Users\g\AppData\Local\Temp\ccGu2P49.s 			page 82


 3180 049f 54       		.byte	0x54
 3181 04a0 16000000 		.4byte	.LVL76
 3182 04a4 24000000 		.4byte	.LFE32
 3183 04a8 0400     		.2byte	0x4
 3184 04aa F3       		.byte	0xf3
 3185 04ab 01       		.uleb128 0x1
 3186 04ac 50       		.byte	0x50
 3187 04ad 9F       		.byte	0x9f
 3188 04ae 00000000 		.4byte	0
 3189 04b2 00000000 		.4byte	0
 3190              	.LLST38:
 3191 04b6 08000000 		.4byte	.LVL75
 3192 04ba 1D000000 		.4byte	.LVL77-1
 3193 04be 0100     		.2byte	0x1
 3194 04c0 50       		.byte	0x50
 3195 04c1 00000000 		.4byte	0
 3196 04c5 00000000 		.4byte	0
 3197              	.LLST39:
 3198 04c9 00000000 		.4byte	.LVL78
 3199 04cd 09000000 		.4byte	.LVL79-1
 3200 04d1 0100     		.2byte	0x1
 3201 04d3 50       		.byte	0x50
 3202 04d4 09000000 		.4byte	.LVL79-1
 3203 04d8 0C000000 		.4byte	.LVL80
 3204 04dc 0100     		.2byte	0x1
 3205 04de 54       		.byte	0x54
 3206 04df 0C000000 		.4byte	.LVL80
 3207 04e3 1C000000 		.4byte	.LFE33
 3208 04e7 0400     		.2byte	0x4
 3209 04e9 F3       		.byte	0xf3
 3210 04ea 01       		.uleb128 0x1
 3211 04eb 50       		.byte	0x50
 3212 04ec 9F       		.byte	0x9f
 3213 04ed 00000000 		.4byte	0
 3214 04f1 00000000 		.4byte	0
 3215              	.LLST40:
 3216 04f5 00000000 		.4byte	.LVL78
 3217 04f9 09000000 		.4byte	.LVL79-1
 3218 04fd 0100     		.2byte	0x1
 3219 04ff 51       		.byte	0x51
 3220 0500 09000000 		.4byte	.LVL79-1
 3221 0504 14000000 		.4byte	.LVL82
 3222 0508 0100     		.2byte	0x1
 3223 050a 55       		.byte	0x55
 3224 050b 14000000 		.4byte	.LVL82
 3225 050f 1C000000 		.4byte	.LFE33
 3226 0513 0400     		.2byte	0x4
 3227 0515 F3       		.byte	0xf3
 3228 0516 01       		.uleb128 0x1
 3229 0517 51       		.byte	0x51
 3230 0518 9F       		.byte	0x9f
 3231 0519 00000000 		.4byte	0
 3232 051d 00000000 		.4byte	0
 3233              	.LLST41:
 3234 0521 0A000000 		.4byte	.LVL79
 3235 0525 13000000 		.4byte	.LVL81-1
 3236 0529 0100     		.2byte	0x1
ARM GAS  C:\Users\g\AppData\Local\Temp\ccGu2P49.s 			page 83


 3237 052b 50       		.byte	0x50
 3238 052c 00000000 		.4byte	0
 3239 0530 00000000 		.4byte	0
 3240              	.LLST42:
 3241 0534 06000000 		.4byte	.LVL83
 3242 0538 13000000 		.4byte	.LVL84-1
 3243 053c 0100     		.2byte	0x1
 3244 053e 50       		.byte	0x50
 3245 053f 00000000 		.4byte	0
 3246 0543 00000000 		.4byte	0
 3247              		.section	.debug_aranges,"",%progbits
 3248 0000 54010000 		.4byte	0x154
 3249 0004 0200     		.2byte	0x2
 3250 0006 00000000 		.4byte	.Ldebug_info0
 3251 000a 04       		.byte	0x4
 3252 000b 00       		.byte	0
 3253 000c 0000     		.2byte	0
 3254 000e 0000     		.2byte	0
 3255 0010 00000000 		.4byte	.LFB3
 3256 0014 1C000000 		.4byte	.LFE3-.LFB3
 3257 0018 00000000 		.4byte	.LFB4
 3258 001c 28000000 		.4byte	.LFE4-.LFB4
 3259 0020 00000000 		.4byte	.LFB5
 3260 0024 28000000 		.4byte	.LFE5-.LFB5
 3261 0028 00000000 		.4byte	.LFB6
 3262 002c 28000000 		.4byte	.LFE6-.LFB6
 3263 0030 00000000 		.4byte	.LFB7
 3264 0034 2C000000 		.4byte	.LFE7-.LFB7
 3265 0038 00000000 		.4byte	.LFB8
 3266 003c 10000000 		.4byte	.LFE8-.LFB8
 3267 0040 00000000 		.4byte	.LFB9
 3268 0044 28000000 		.4byte	.LFE9-.LFB9
 3269 0048 00000000 		.4byte	.LFB10
 3270 004c 28000000 		.4byte	.LFE10-.LFB10
 3271 0050 00000000 		.4byte	.LFB11
 3272 0054 2C000000 		.4byte	.LFE11-.LFB11
 3273 0058 00000000 		.4byte	.LFB12
 3274 005c 28000000 		.4byte	.LFE12-.LFB12
 3275 0060 00000000 		.4byte	.LFB13
 3276 0064 10000000 		.4byte	.LFE13-.LFB13
 3277 0068 00000000 		.4byte	.LFB14
 3278 006c 10000000 		.4byte	.LFE14-.LFB14
 3279 0070 00000000 		.4byte	.LFB15
 3280 0074 28000000 		.4byte	.LFE15-.LFB15
 3281 0078 00000000 		.4byte	.LFB16
 3282 007c 10000000 		.4byte	.LFE16-.LFB16
 3283 0080 00000000 		.4byte	.LFB17
 3284 0084 10000000 		.4byte	.LFE17-.LFB17
 3285 0088 00000000 		.4byte	.LFB18
 3286 008c 24000000 		.4byte	.LFE18-.LFB18
 3287 0090 00000000 		.4byte	.LFB19
 3288 0094 10000000 		.4byte	.LFE19-.LFB19
 3289 0098 00000000 		.4byte	.LFB20
 3290 009c 10000000 		.4byte	.LFE20-.LFB20
 3291 00a0 00000000 		.4byte	.LFB21
 3292 00a4 28000000 		.4byte	.LFE21-.LFB21
 3293 00a8 00000000 		.4byte	.LFB22
ARM GAS  C:\Users\g\AppData\Local\Temp\ccGu2P49.s 			page 84


 3294 00ac 10000000 		.4byte	.LFE22-.LFB22
 3295 00b0 00000000 		.4byte	.LFB23
 3296 00b4 10000000 		.4byte	.LFE23-.LFB23
 3297 00b8 00000000 		.4byte	.LFB24
 3298 00bc 10000000 		.4byte	.LFE24-.LFB24
 3299 00c0 00000000 		.4byte	.LFB25
 3300 00c4 10000000 		.4byte	.LFE25-.LFB25
 3301 00c8 00000000 		.4byte	.LFB26
 3302 00cc 10000000 		.4byte	.LFE26-.LFB26
 3303 00d0 00000000 		.4byte	.LFB27
 3304 00d4 10000000 		.4byte	.LFE27-.LFB27
 3305 00d8 00000000 		.4byte	.LFB28
 3306 00dc 24000000 		.4byte	.LFE28-.LFB28
 3307 00e0 00000000 		.4byte	.LFB29
 3308 00e4 24000000 		.4byte	.LFE29-.LFB29
 3309 00e8 00000000 		.4byte	.LFB30
 3310 00ec 28000000 		.4byte	.LFE30-.LFB30
 3311 00f0 00000000 		.4byte	.LFB31
 3312 00f4 24000000 		.4byte	.LFE31-.LFB31
 3313 00f8 00000000 		.4byte	.LFB32
 3314 00fc 24000000 		.4byte	.LFE32-.LFB32
 3315 0100 00000000 		.4byte	.LFB33
 3316 0104 1C000000 		.4byte	.LFE33-.LFB33
 3317 0108 00000000 		.4byte	.LFB1
 3318 010c 24000000 		.4byte	.LFE1-.LFB1
 3319 0110 00000000 		.4byte	.LFB34
 3320 0114 14000000 		.4byte	.LFE34-.LFB34
 3321 0118 00000000 		.4byte	.LFB35
 3322 011c 0C000000 		.4byte	.LFE35-.LFB35
 3323 0120 00000000 		.4byte	.LFB0
 3324 0124 54000000 		.4byte	.LFE0-.LFB0
 3325 0128 00000000 		.4byte	.LFB2
 3326 012c 20000000 		.4byte	.LFE2-.LFB2
 3327 0130 00000000 		.4byte	.LFB36
 3328 0134 0C000000 		.4byte	.LFE36-.LFB36
 3329 0138 00000000 		.4byte	.LFB37
 3330 013c 0C000000 		.4byte	.LFE37-.LFB37
 3331 0140 00000000 		.4byte	.LFB38
 3332 0144 0C000000 		.4byte	.LFE38-.LFB38
 3333 0148 00000000 		.4byte	.LFB39
 3334 014c 0C000000 		.4byte	.LFE39-.LFB39
 3335 0150 00000000 		.4byte	0
 3336 0154 00000000 		.4byte	0
 3337              		.section	.debug_ranges,"",%progbits
 3338              	.Ldebug_ranges0:
 3339 0000 00000000 		.4byte	.LFB3
 3340 0004 1C000000 		.4byte	.LFE3
 3341 0008 00000000 		.4byte	.LFB4
 3342 000c 28000000 		.4byte	.LFE4
 3343 0010 00000000 		.4byte	.LFB5
 3344 0014 28000000 		.4byte	.LFE5
 3345 0018 00000000 		.4byte	.LFB6
 3346 001c 28000000 		.4byte	.LFE6
 3347 0020 00000000 		.4byte	.LFB7
 3348 0024 2C000000 		.4byte	.LFE7
 3349 0028 00000000 		.4byte	.LFB8
 3350 002c 10000000 		.4byte	.LFE8
ARM GAS  C:\Users\g\AppData\Local\Temp\ccGu2P49.s 			page 85


 3351 0030 00000000 		.4byte	.LFB9
 3352 0034 28000000 		.4byte	.LFE9
 3353 0038 00000000 		.4byte	.LFB10
 3354 003c 28000000 		.4byte	.LFE10
 3355 0040 00000000 		.4byte	.LFB11
 3356 0044 2C000000 		.4byte	.LFE11
 3357 0048 00000000 		.4byte	.LFB12
 3358 004c 28000000 		.4byte	.LFE12
 3359 0050 00000000 		.4byte	.LFB13
 3360 0054 10000000 		.4byte	.LFE13
 3361 0058 00000000 		.4byte	.LFB14
 3362 005c 10000000 		.4byte	.LFE14
 3363 0060 00000000 		.4byte	.LFB15
 3364 0064 28000000 		.4byte	.LFE15
 3365 0068 00000000 		.4byte	.LFB16
 3366 006c 10000000 		.4byte	.LFE16
 3367 0070 00000000 		.4byte	.LFB17
 3368 0074 10000000 		.4byte	.LFE17
 3369 0078 00000000 		.4byte	.LFB18
 3370 007c 24000000 		.4byte	.LFE18
 3371 0080 00000000 		.4byte	.LFB19
 3372 0084 10000000 		.4byte	.LFE19
 3373 0088 00000000 		.4byte	.LFB20
 3374 008c 10000000 		.4byte	.LFE20
 3375 0090 00000000 		.4byte	.LFB21
 3376 0094 28000000 		.4byte	.LFE21
 3377 0098 00000000 		.4byte	.LFB22
 3378 009c 10000000 		.4byte	.LFE22
 3379 00a0 00000000 		.4byte	.LFB23
 3380 00a4 10000000 		.4byte	.LFE23
 3381 00a8 00000000 		.4byte	.LFB24
 3382 00ac 10000000 		.4byte	.LFE24
 3383 00b0 00000000 		.4byte	.LFB25
 3384 00b4 10000000 		.4byte	.LFE25
 3385 00b8 00000000 		.4byte	.LFB26
 3386 00bc 10000000 		.4byte	.LFE26
 3387 00c0 00000000 		.4byte	.LFB27
 3388 00c4 10000000 		.4byte	.LFE27
 3389 00c8 00000000 		.4byte	.LFB28
 3390 00cc 24000000 		.4byte	.LFE28
 3391 00d0 00000000 		.4byte	.LFB29
 3392 00d4 24000000 		.4byte	.LFE29
 3393 00d8 00000000 		.4byte	.LFB30
 3394 00dc 28000000 		.4byte	.LFE30
 3395 00e0 00000000 		.4byte	.LFB31
 3396 00e4 24000000 		.4byte	.LFE31
 3397 00e8 00000000 		.4byte	.LFB32
 3398 00ec 24000000 		.4byte	.LFE32
 3399 00f0 00000000 		.4byte	.LFB33
 3400 00f4 1C000000 		.4byte	.LFE33
 3401 00f8 00000000 		.4byte	.LFB1
 3402 00fc 24000000 		.4byte	.LFE1
 3403 0100 00000000 		.4byte	.LFB34
 3404 0104 14000000 		.4byte	.LFE34
 3405 0108 00000000 		.4byte	.LFB35
 3406 010c 0C000000 		.4byte	.LFE35
 3407 0110 00000000 		.4byte	.LFB0
ARM GAS  C:\Users\g\AppData\Local\Temp\ccGu2P49.s 			page 86


 3408 0114 54000000 		.4byte	.LFE0
 3409 0118 00000000 		.4byte	.LFB2
 3410 011c 20000000 		.4byte	.LFE2
 3411 0120 00000000 		.4byte	.LFB36
 3412 0124 0C000000 		.4byte	.LFE36
 3413 0128 00000000 		.4byte	.LFB37
 3414 012c 0C000000 		.4byte	.LFE37
 3415 0130 00000000 		.4byte	.LFB38
 3416 0134 0C000000 		.4byte	.LFE38
 3417 0138 00000000 		.4byte	.LFB39
 3418 013c 0C000000 		.4byte	.LFE39
 3419 0140 00000000 		.4byte	0
 3420 0144 00000000 		.4byte	0
 3421              		.section	.debug_line,"",%progbits
 3422              	.Ldebug_line0:
 3423 0000 79030000 		.section	.debug_str,"MS",%progbits,1
 3423      02004E00 
 3423      00000201 
 3423      FB0E0D00 
 3423      01010101 
 3424              	.LASF37:
 3425 0000 636F756E 		.ascii	"count\000"
 3425      7400
 3426              	.LASF48:
 3427 0006 5650574D 		.ascii	"VPWM_ReadPeriodBuf\000"
 3427      5F526561 
 3427      64506572 
 3427      696F6442 
 3427      756600
 3428              	.LASF81:
 3429 0019 43794578 		.ascii	"CyExitCriticalSection\000"
 3429      69744372 
 3429      69746963 
 3429      616C5365 
 3429      6374696F 
 3430              	.LASF55:
 3431 002f 5650574D 		.ascii	"VPWM_ReadCompareBuf\000"
 3431      5F526561 
 3431      64436F6D 
 3431      70617265 
 3431      42756600 
 3432              	.LASF44:
 3433 0043 5650574D 		.ascii	"VPWM_SetCompareSwap\000"
 3433      5F536574 
 3433      436F6D70 
 3433      61726553 
 3433      77617000 
 3434              	.LASF34:
 3435 0057 5650574D 		.ascii	"VPWM_SetPWMInvert\000"
 3435      5F536574 
 3435      50574D49 
 3435      6E766572 
 3435      7400
 3436              	.LASF41:
 3437 0069 70657269 		.ascii	"period\000"
 3437      6F6400
 3438              	.LASF61:
ARM GAS  C:\Users\g\AppData\Local\Temp\ccGu2P49.s 			page 87


 3439 0070 5650574D 		.ascii	"VPWM_SetStartMode\000"
 3439      5F536574 
 3439      53746172 
 3439      744D6F64 
 3439      6500
 3440              	.LASF7:
 3441 0082 6C6F6E67 		.ascii	"long long unsigned int\000"
 3441      206C6F6E 
 3441      6720756E 
 3441      7369676E 
 3441      65642069 
 3442              	.LASF40:
 3443 0099 5650574D 		.ascii	"VPWM_WritePeriod\000"
 3443      5F577269 
 3443      74655065 
 3443      72696F64 
 3443      00
 3444              	.LASF21:
 3445 00aa 71644D6F 		.ascii	"qdMode\000"
 3445      646500
 3446              	.LASF68:
 3447 00b1 5650574D 		.ascii	"VPWM_SetInterruptMode\000"
 3447      5F536574 
 3447      496E7465 
 3447      72727570 
 3447      744D6F64 
 3448              	.LASF76:
 3449 00c7 474E5520 		.ascii	"GNU C 4.9.3 20150303 (release) [ARM/embedded-4_9-br"
 3449      4320342E 
 3449      392E3320 
 3449      32303135 
 3449      30333033 
 3450 00fa 616E6368 		.ascii	"anch revision 221220] -mcpu=cortex-m0 -mthumb -g -O"
 3450      20726576 
 3450      6973696F 
 3450      6E203232 
 3450      31323230 
 3451 012d 67202D73 		.ascii	"g -std=gnu99 -ffunction-sections -ffat-lto-objects\000"
 3451      74643D67 
 3451      6E753939 
 3451      202D6666 
 3451      756E6374 
 3452              	.LASF79:
 3453 0160 5650574D 		.ascii	"VPWM_initVar\000"
 3453      5F696E69 
 3453      74566172 
 3453      00
 3454              	.LASF6:
 3455 016d 6C6F6E67 		.ascii	"long long int\000"
 3455      206C6F6E 
 3455      6720696E 
 3455      7400
 3456              	.LASF0:
 3457 017b 7369676E 		.ascii	"signed char\000"
 3457      65642063 
 3457      68617200 
 3458              	.LASF32:
ARM GAS  C:\Users\g\AppData\Local\Temp\ccGu2P49.s 			page 88


 3459 0187 5650574D 		.ascii	"VPWM_SetPWMDeadTime\000"
 3459      5F536574 
 3459      50574D44 
 3459      65616454 
 3459      696D6500 
 3460              	.LASF22:
 3461 019b 5650574D 		.ascii	"VPWM_SetPrescaler\000"
 3461      5F536574 
 3461      50726573 
 3461      63616C65 
 3461      7200
 3462              	.LASF4:
 3463 01ad 6C6F6E67 		.ascii	"long int\000"
 3463      20696E74 
 3463      00
 3464              	.LASF16:
 3465 01b6 5650574D 		.ascii	"VPWM_Stop\000"
 3465      5F53746F 
 3465      7000
 3466              	.LASF9:
 3467 01c0 75696E74 		.ascii	"uint8\000"
 3467      3800
 3468              	.LASF71:
 3469 01c6 5650574D 		.ascii	"VPWM_Start\000"
 3469      5F537461 
 3469      727400
 3470              	.LASF12:
 3471 01d1 646F7562 		.ascii	"double\000"
 3471      6C6500
 3472              	.LASF56:
 3473 01d8 5650574D 		.ascii	"VPWM_ReadCapture\000"
 3473      5F526561 
 3473      64436170 
 3473      74757265 
 3473      00
 3474              	.LASF60:
 3475 01e9 5650574D 		.ascii	"VPWM_SetReloadMode\000"
 3475      5F536574 
 3475      52656C6F 
 3475      61644D6F 
 3475      646500
 3476              	.LASF10:
 3477 01fc 75696E74 		.ascii	"uint32\000"
 3477      333200
 3478              	.LASF64:
 3479 0203 5650574D 		.ascii	"VPWM_TriggerCommand\000"
 3479      5F547269 
 3479      67676572 
 3479      436F6D6D 
 3479      616E6400 
 3480              	.LASF59:
 3481 0217 74726967 		.ascii	"triggerMode\000"
 3481      6765724D 
 3481      6F646500 
 3482              	.LASF35:
 3483 0223 6D61736B 		.ascii	"mask\000"
 3483      00
ARM GAS  C:\Users\g\AppData\Local\Temp\ccGu2P49.s 			page 89


 3484              	.LASF33:
 3485 0228 64656164 		.ascii	"deadTime\000"
 3485      54696D65 
 3485      00
 3486              	.LASF8:
 3487 0231 756E7369 		.ascii	"unsigned int\000"
 3487      676E6564 
 3487      20696E74 
 3487      00
 3488              	.LASF52:
 3489 023e 5650574D 		.ascii	"VPWM_ReadCompare\000"
 3489      5F526561 
 3489      64436F6D 
 3489      70617265 
 3489      00
 3490              	.LASF65:
 3491 024f 636F6D6D 		.ascii	"command\000"
 3491      616E6400 
 3492              	.LASF5:
 3493 0257 6C6F6E67 		.ascii	"long unsigned int\000"
 3493      20756E73 
 3493      69676E65 
 3493      6420696E 
 3493      7400
 3494              	.LASF27:
 3495 0269 6D6F6465 		.ascii	"modeMask\000"
 3495      4D61736B 
 3495      00
 3496              	.LASF80:
 3497 0272 4379456E 		.ascii	"CyEnterCriticalSection\000"
 3497      74657243 
 3497      72697469 
 3497      63616C53 
 3497      65637469 
 3498              	.LASF3:
 3499 0289 73686F72 		.ascii	"short unsigned int\000"
 3499      7420756E 
 3499      7369676E 
 3499      65642069 
 3499      6E7400
 3500              	.LASF19:
 3501 029c 5650574D 		.ascii	"VPWM_SetQDMode\000"
 3501      5F536574 
 3501      51444D6F 
 3501      646500
 3502              	.LASF25:
 3503 02ab 6F6E6553 		.ascii	"oneShotEnable\000"
 3503      686F7445 
 3503      6E61626C 
 3503      6500
 3504              	.LASF73:
 3505 02b9 5650574D 		.ascii	"VPWM_GetInterruptSource\000"
 3505      5F476574 
 3505      496E7465 
 3505      72727570 
 3505      74536F75 
 3506              	.LASF42:
ARM GAS  C:\Users\g\AppData\Local\Temp\ccGu2P49.s 			page 90


 3507 02d1 5650574D 		.ascii	"VPWM_ReadCounter\000"
 3507      5F526561 
 3507      64436F75 
 3507      6E746572 
 3507      00
 3508              	.LASF14:
 3509 02e2 72656733 		.ascii	"reg32\000"
 3509      3200
 3510              	.LASF24:
 3511 02e8 5650574D 		.ascii	"VPWM_SetOneShot\000"
 3511      5F536574 
 3511      4F6E6553 
 3511      686F7400 
 3512              	.LASF66:
 3513 02f8 5650574D 		.ascii	"VPWM_Enable\000"
 3513      5F456E61 
 3513      626C6500 
 3514              	.LASF15:
 3515 0304 73697A65 		.ascii	"sizetype\000"
 3515      74797065 
 3515      00
 3516              	.LASF29:
 3517 030d 73796E63 		.ascii	"syncKillEnable\000"
 3517      4B696C6C 
 3517      456E6162 
 3517      6C6500
 3518              	.LASF51:
 3519 031c 636F6D70 		.ascii	"compare\000"
 3519      61726500 
 3520              	.LASF67:
 3521 0324 5650574D 		.ascii	"VPWM_ReadStatus\000"
 3521      5F526561 
 3521      64537461 
 3521      74757300 
 3522              	.LASF17:
 3523 0334 5650574D 		.ascii	"VPWM_SetMode\000"
 3523      5F536574 
 3523      4D6F6465 
 3523      00
 3524              	.LASF46:
 3525 0341 5650574D 		.ascii	"VPWM_WritePeriodBuf\000"
 3525      5F577269 
 3525      74655065 
 3525      72696F64 
 3525      42756600 
 3526              	.LASF30:
 3527 0355 5650574D 		.ascii	"VPWM_SetPWMStopOnKill\000"
 3527      5F536574 
 3527      50574D53 
 3527      746F704F 
 3527      6E4B696C 
 3528              	.LASF75:
 3529 036b 5650574D 		.ascii	"VPWM_SetInterrupt\000"
 3529      5F536574 
 3529      496E7465 
 3529      72727570 
 3529      7400
ARM GAS  C:\Users\g\AppData\Local\Temp\ccGu2P49.s 			page 91


 3530              	.LASF11:
 3531 037d 666C6F61 		.ascii	"float\000"
 3531      7400
 3532              	.LASF23:
 3533 0383 70726573 		.ascii	"prescaler\000"
 3533      63616C65 
 3533      7200
 3534              	.LASF70:
 3535 038d 5650574D 		.ascii	"VPWM_Init\000"
 3535      5F496E69 
 3535      7400
 3536              	.LASF1:
 3537 0397 756E7369 		.ascii	"unsigned char\000"
 3537      676E6564 
 3537      20636861 
 3537      7200
 3538              	.LASF62:
 3539 03a5 5650574D 		.ascii	"VPWM_SetStopMode\000"
 3539      5F536574 
 3539      53746F70 
 3539      4D6F6465 
 3539      00
 3540              	.LASF31:
 3541 03b6 73746F70 		.ascii	"stopOnKillEnable\000"
 3541      4F6E4B69 
 3541      6C6C456E 
 3541      61626C65 
 3541      00
 3542              	.LASF2:
 3543 03c7 73686F72 		.ascii	"short int\000"
 3543      7420696E 
 3543      7400
 3544              	.LASF57:
 3545 03d1 5650574D 		.ascii	"VPWM_ReadCaptureBuf\000"
 3545      5F526561 
 3545      64436170 
 3545      74757265 
 3545      42756600 
 3546              	.LASF69:
 3547 03e5 696E7465 		.ascii	"interruptMask\000"
 3547      72727570 
 3547      744D6173 
 3547      6B00
 3548              	.LASF77:
 3549 03f3 2E5C4765 		.ascii	".\\Generated_Source\\PSoC4\\VPWM.c\000"
 3549      6E657261 
 3549      7465645F 
 3549      536F7572 
 3549      63655C50 
 3550              	.LASF63:
 3551 0413 5650574D 		.ascii	"VPWM_SetCountMode\000"
 3551      5F536574 
 3551      436F756E 
 3551      744D6F64 
 3551      6500
 3552              	.LASF72:
 3553 0425 5650574D 		.ascii	"VPWM_GetInterruptSourceMasked\000"
ARM GAS  C:\Users\g\AppData\Local\Temp\ccGu2P49.s 			page 92


 3553      5F476574 
 3553      496E7465 
 3553      72727570 
 3553      74536F75 
 3554              	.LASF43:
 3555 0443 5650574D 		.ascii	"VPWM_ReadPeriod\000"
 3555      5F526561 
 3555      64506572 
 3555      696F6400 
 3556              	.LASF13:
 3557 0453 63686172 		.ascii	"char\000"
 3557      00
 3558              	.LASF20:
 3559 0458 6D6F6465 		.ascii	"mode\000"
 3559      00
 3560              	.LASF53:
 3561 045d 5650574D 		.ascii	"VPWM_WriteCompareBuf\000"
 3561      5F577269 
 3561      7465436F 
 3561      6D706172 
 3561      65427566 
 3562              	.LASF49:
 3563 0472 5650574D 		.ascii	"VPWM_SetPeriodSwap\000"
 3563      5F536574 
 3563      50657269 
 3563      6F645377 
 3563      617000
 3564              	.LASF38:
 3565 0485 5650574D 		.ascii	"VPWM_SetCounterMode\000"
 3565      5F536574 
 3565      436F756E 
 3565      7465724D 
 3565      6F646500 
 3566              	.LASF39:
 3567 0499 636F756E 		.ascii	"counterMode\000"
 3567      7465724D 
 3567      6F646500 
 3568              	.LASF50:
 3569 04a5 5650574D 		.ascii	"VPWM_WriteCompare\000"
 3569      5F577269 
 3569      7465436F 
 3569      6D706172 
 3569      6500
 3570              	.LASF54:
 3571 04b7 636F6D70 		.ascii	"compareBuf\000"
 3571      61726542 
 3571      756600
 3572              	.LASF78:
 3573 04c2 443A5C63 		.ascii	"D:\\code\\cypress\\controllers\\bldc.cydsn\000"
 3573      6F64655C 
 3573      63797072 
 3573      6573735C 
 3573      636F6E74 
 3574              	.LASF28:
 3575 04e9 5650574D 		.ascii	"VPWM_SetPWMSyncKill\000"
 3575      5F536574 
 3575      50574D53 
ARM GAS  C:\Users\g\AppData\Local\Temp\ccGu2P49.s 			page 93


 3575      796E634B 
 3575      696C6C00 
 3576              	.LASF18:
 3577 04fd 656E6162 		.ascii	"enableInterrupts\000"
 3577      6C65496E 
 3577      74657272 
 3577      75707473 
 3577      00
 3578              	.LASF26:
 3579 050e 5650574D 		.ascii	"VPWM_SetPWMMode\000"
 3579      5F536574 
 3579      50574D4D 
 3579      6F646500 
 3580              	.LASF58:
 3581 051e 5650574D 		.ascii	"VPWM_SetCaptureMode\000"
 3581      5F536574 
 3581      43617074 
 3581      7572654D 
 3581      6F646500 
 3582              	.LASF45:
 3583 0532 73776170 		.ascii	"swapEnable\000"
 3583      456E6162 
 3583      6C6500
 3584              	.LASF36:
 3585 053d 5650574D 		.ascii	"VPWM_WriteCounter\000"
 3585      5F577269 
 3585      7465436F 
 3585      756E7465 
 3585      7200
 3586              	.LASF74:
 3587 054f 5650574D 		.ascii	"VPWM_ClearInterrupt\000"
 3587      5F436C65 
 3587      6172496E 
 3587      74657272 
 3587      75707400 
 3588              	.LASF47:
 3589 0563 70657269 		.ascii	"periodBuf\000"
 3589      6F644275 
 3589      6600
 3590              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 4.9.3 20150303 (release) [ARM/embedded-4_9-br
